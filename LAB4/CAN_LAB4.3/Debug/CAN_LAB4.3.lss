
CAN_LAB4.3.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00002008  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00007624  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .exception    00000200  80009800  80009800  00009c00  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       0000075c  80009a00  80009a00  00009e00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .lalign       00000004  8000a15c  8000a15c  0000a55c  2**0
                  ALLOC
  6 .dalign       00000004  00000004  00000004  00000000  2**0
                  ALLOC
  7 .data         00000510  00000008  8000a160  0000a808  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .bss          00000358  00000518  00000518  00000000  2**2
                  ALLOC
  9 .heap         0000e790  00000870  00000870  00000000  2**0
                  ALLOC
 10 .comment      00000030  00000000  00000000  0000ad18  2**0
                  CONTENTS, READONLY
 11 .debug_aranges 00000e38  00000000  00000000  0000ad48  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubnames 00001a78  00000000  00000000  0000bb80  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_info   00021049  00000000  00000000  0000d5f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_abbrev 000055f4  00000000  00000000  0002e641  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_line   0000e6ef  00000000  00000000  00033c35  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  000021a8  00000000  00000000  00042324  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_str    0000437c  00000000  00000000  000444cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_loc    0000a225  00000000  00000000  00048848  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_macinfo 00a21516  00000000  00000000  00052a6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .stack        00001000  0000f000  0000f000  00000000  2**0
                  ALLOC
 21 .debug_ranges 00001060  00000000  00000000  00a73f88  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_start>:
80000000:	fe cf c2 f0 	sub	pc,pc,-15632

80000004 <_trampoline>:
80000004:	e0 8f 10 00 	bral	80002004 <program_start>
	...

80002004 <program_start>:
80002004:	fe cf e2 f4 	sub	pc,pc,-7436

Disassembly of section .text:

80002008 <adc_start>:
80002008:	30 28       	mov	r8,2
8000200a:	99 08       	st.w	r12[0x0],r8
8000200c:	5e fc       	retal	r12

8000200e <adc_enable>:
8000200e:	30 18       	mov	r8,1
80002010:	f0 0b 09 48 	lsl	r8,r8,r11
80002014:	99 48       	st.w	r12[0x10],r8
80002016:	5e fc       	retal	r12

80002018 <adc_check_eoc>:
80002018:	78 78       	ld.w	r8,r12[0x1c]
8000201a:	30 19       	mov	r9,1
8000201c:	f2 0b 09 49 	lsl	r9,r9,r11
80002020:	f3 e8 00 08 	and	r8,r9,r8
80002024:	5f 1c       	srne	r12
80002026:	5e fc       	retal	r12

80002028 <adc_get_value>:
80002028:	eb cd 40 e0 	pushm	r5-r7,lr
8000202c:	18 97       	mov	r7,r12
8000202e:	16 95       	mov	r5,r11
80002030:	ed db c0 10 	bfextu	r6,r11,0x0,0x10
80002034:	0c 9b       	mov	r11,r6
80002036:	0e 9c       	mov	r12,r7
80002038:	f0 1f 00 05 	mcall	8000204c <adc_get_value+0x24>
8000203c:	cf c0       	breq	80002034 <adc_get_value+0xc>
8000203e:	2d 07       	sub	r7,-48
80002040:	5c 75       	castu.h	r5
80002042:	ee 05 03 2c 	ld.w	r12,r7[r5<<0x2]
80002046:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000204a:	00 00       	add	r0,r0
8000204c:	80 00       	ld.sh	r0,r0[0x0]
8000204e:	20 18       	sub	r8,1

80002050 <rtc_is_busy>:
80002050:	78 0c       	ld.w	r12,r12[0x0]
80002052:	f9 dc c0 81 	bfextu	r12,r12,0x4,0x1
80002056:	5e fc       	retal	r12

80002058 <rtc_set_value>:
80002058:	eb cd 40 c0 	pushm	r6-r7,lr
8000205c:	18 97       	mov	r7,r12
8000205e:	16 96       	mov	r6,r11
80002060:	0e 9c       	mov	r12,r7
80002062:	f0 1f 00 06 	mcall	80002078 <rtc_set_value+0x20>
80002066:	cf d1       	brne	80002060 <rtc_set_value+0x8>
80002068:	8f 16       	st.w	r7[0x4],r6
8000206a:	0e 9c       	mov	r12,r7
8000206c:	f0 1f 00 03 	mcall	80002078 <rtc_set_value+0x20>
80002070:	cf d1       	brne	8000206a <rtc_set_value+0x12>
80002072:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002076:	00 00       	add	r0,r0
80002078:	80 00       	ld.sh	r0,r0[0x0]
8000207a:	20 50       	sub	r0,5

8000207c <rtc_enable>:
8000207c:	eb cd 40 80 	pushm	r7,lr
80002080:	18 97       	mov	r7,r12
80002082:	0e 9c       	mov	r12,r7
80002084:	f0 1f 00 06 	mcall	8000209c <rtc_enable+0x20>
80002088:	cf d1       	brne	80002082 <rtc_enable+0x6>
8000208a:	6e 08       	ld.w	r8,r7[0x0]
8000208c:	a1 a8       	sbr	r8,0x0
8000208e:	8f 08       	st.w	r7[0x0],r8
80002090:	0e 9c       	mov	r12,r7
80002092:	f0 1f 00 03 	mcall	8000209c <rtc_enable+0x20>
80002096:	cf d1       	brne	80002090 <rtc_enable+0x14>
80002098:	e3 cd 80 80 	ldm	sp++,r7,pc
8000209c:	80 00       	ld.sh	r0,r0[0x0]
8000209e:	20 50       	sub	r0,5

800020a0 <rtc_enable_interrupt>:
800020a0:	30 18       	mov	r8,1
800020a2:	99 48       	st.w	r12[0x10],r8
800020a4:	5e fc       	retal	r12
800020a6:	d7 03       	nop

800020a8 <rtc_set_top_value>:
800020a8:	eb cd 40 c0 	pushm	r6-r7,lr
800020ac:	18 97       	mov	r7,r12
800020ae:	16 96       	mov	r6,r11
800020b0:	0e 9c       	mov	r12,r7
800020b2:	f0 1f 00 06 	mcall	800020c8 <rtc_set_top_value+0x20>
800020b6:	cf d1       	brne	800020b0 <rtc_set_top_value+0x8>
800020b8:	8f 26       	st.w	r7[0x8],r6
800020ba:	0e 9c       	mov	r12,r7
800020bc:	f0 1f 00 03 	mcall	800020c8 <rtc_set_top_value+0x20>
800020c0:	cf d1       	brne	800020ba <rtc_set_top_value+0x12>
800020c2:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800020c6:	00 00       	add	r0,r0
800020c8:	80 00       	ld.sh	r0,r0[0x0]
800020ca:	20 50       	sub	r0,5

800020cc <rtc_clear_interrupt>:
800020cc:	e1 b8 00 00 	mfsr	r8,0x0
800020d0:	e6 18 00 01 	andh	r8,0x1,COH
800020d4:	c0 71       	brne	800020e2 <rtc_clear_interrupt+0x16>
800020d6:	d3 03       	ssrf	0x10
800020d8:	30 18       	mov	r8,1
800020da:	99 88       	st.w	r12[0x20],r8
800020dc:	78 78       	ld.w	r8,r12[0x1c]
800020de:	d5 03       	csrf	0x10
800020e0:	5e fc       	retal	r12
800020e2:	30 18       	mov	r8,1
800020e4:	99 88       	st.w	r12[0x20],r8
800020e6:	78 78       	ld.w	r8,r12[0x1c]
800020e8:	5e fc       	retal	r12
800020ea:	d7 03       	nop

800020ec <rtc_init>:
800020ec:	eb cd 40 e0 	pushm	r5-r7,lr
800020f0:	18 97       	mov	r7,r12
800020f2:	16 96       	mov	r6,r11
800020f4:	14 95       	mov	r5,r10
800020f6:	30 18       	mov	r8,1
800020f8:	f0 0b 18 00 	cp.b	r11,r8
800020fc:	5f b9       	srhi	r9
800020fe:	30 f8       	mov	r8,15
80002100:	f0 0a 18 00 	cp.b	r10,r8
80002104:	5f b8       	srhi	r8
80002106:	f3 e8 10 08 	or	r8,r9,r8
8000210a:	c0 30       	breq	80002110 <rtc_init+0x24>
8000210c:	e3 cf 80 e0 	ldm	sp++,r5-r7,pc,r12=0
80002110:	30 18       	mov	r8,1
80002112:	f0 0b 18 00 	cp.b	r11,r8
80002116:	c0 a1       	brne	8000212a <rtc_init+0x3e>
80002118:	fe 7c 0c 00 	mov	r12,-62464
8000211c:	f0 1f 00 0f 	mcall	80002158 <rtc_init+0x6c>
80002120:	30 0b       	mov	r11,0
80002122:	fe 7c 0c 00 	mov	r12,-62464
80002126:	f0 1f 00 0e 	mcall	8000215c <rtc_init+0x70>
8000212a:	0e 9c       	mov	r12,r7
8000212c:	f0 1f 00 0d 	mcall	80002160 <rtc_init+0x74>
80002130:	cf d1       	brne	8000212a <rtc_init+0x3e>
80002132:	a3 76       	lsl	r6,0x3
80002134:	b1 a6       	sbr	r6,0x10
80002136:	ed e5 10 85 	or	r5,r6,r5<<0x8
8000213a:	8f 05       	st.w	r7[0x0],r5
8000213c:	0e 9c       	mov	r12,r7
8000213e:	f0 1f 00 09 	mcall	80002160 <rtc_init+0x74>
80002142:	cf d1       	brne	8000213c <rtc_init+0x50>
80002144:	30 0b       	mov	r11,0
80002146:	0e 9c       	mov	r12,r7
80002148:	f0 1f 00 07 	mcall	80002164 <rtc_init+0x78>
8000214c:	3f fb       	mov	r11,-1
8000214e:	0e 9c       	mov	r12,r7
80002150:	f0 1f 00 06 	mcall	80002168 <rtc_init+0x7c>
80002154:	e3 cf 90 e0 	ldm	sp++,r5-r7,pc,r12=1
80002158:	80 00       	ld.sh	r0,r0[0x0]
8000215a:	3a 08       	mov	r8,-96
8000215c:	80 00       	ld.sh	r0,r0[0x0]
8000215e:	3a 34       	mov	r4,-93
80002160:	80 00       	ld.sh	r0,r0[0x0]
80002162:	20 50       	sub	r0,5
80002164:	80 00       	ld.sh	r0,r0[0x0]
80002166:	20 58       	sub	r8,5
80002168:	80 00       	ld.sh	r0,r0[0x0]
8000216a:	20 a8       	sub	r8,10

8000216c <ClearMessages>:
 *
 * Example:			ClearMessages(msg);
 ********************************************************************/
void ClearMessages(UINT8* Msg)
{
	Msg[0] = 0;
8000216c:	30 08       	mov	r8,0
8000216e:	b8 88       	st.b	r12[0x0],r8
	Msg[1] = 0;
80002170:	b8 98       	st.b	r12[0x1],r8
	Msg[2] = 0;
80002172:	b8 a8       	st.b	r12[0x2],r8
	Msg[3] = 0;
80002174:	b8 b8       	st.b	r12[0x3],r8
	Msg[4] = 0;
80002176:	b8 c8       	st.b	r12[0x4],r8
	Msg[5] = 0;
80002178:	b8 d8       	st.b	r12[0x5],r8
	Msg[6] = 0;
8000217a:	b8 e8       	st.b	r12[0x6],r8
	Msg[7] = 0;
8000217c:	b8 f8       	st.b	r12[0x7],r8
}
8000217e:	5e fc       	retal	r12

80002180 <config_dpi204>:
 *
 * Note:            None.
 *
 * Example:         config_dpi204();
 ********************************************************************/
void config_dpi204(void){
80002180:	eb cd 40 80 	pushm	r7,lr
80002184:	20 4d       	sub	sp,16
	.spck_delay   = 0,
	.trans_delay  = 0,
	.stay_act     = 1,
	.spi_mode     = 0,
	.modfdis      = 1
	};
80002186:	49 68       	lddpc	r8,800021dc <config_dpi204+0x5c>
80002188:	1a 97       	mov	r7,sp
8000218a:	f0 ea 00 00 	ld.d	r10,r8[0]
8000218e:	fa eb 00 00 	st.d	sp[0],r10
80002192:	f0 e8 00 08 	ld.d	r8,r8[8]
80002196:	fa e9 00 08 	st.d	sp[8],r8
	gpio_enable_module(DIP204_SPI_GPIO_MAP,
8000219a:	30 4b       	mov	r11,4
8000219c:	49 1c       	lddpc	r12,800021e0 <config_dpi204+0x60>
8000219e:	f0 1f 00 12 	mcall	800021e4 <config_dpi204+0x64>
	sizeof(DIP204_SPI_GPIO_MAP) / sizeof(DIP204_SPI_GPIO_MAP[0]));

	spi_initMaster(DIP204_SPI, &spiOptions2);
800021a2:	1a 9b       	mov	r11,sp
800021a4:	fe 7c 28 00 	mov	r12,-55296
800021a8:	f0 1f 00 10 	mcall	800021e8 <config_dpi204+0x68>
	spi_selectionMode(DIP204_SPI, 0, 0, 0);
800021ac:	30 09       	mov	r9,0
800021ae:	12 9a       	mov	r10,r9
800021b0:	12 9b       	mov	r11,r9
800021b2:	fe 7c 28 00 	mov	r12,-55296
800021b6:	f0 1f 00 0e 	mcall	800021ec <config_dpi204+0x6c>
	spi_enable(DIP204_SPI);
800021ba:	fe 7c 28 00 	mov	r12,-55296
800021be:	f0 1f 00 0d 	mcall	800021f0 <config_dpi204+0x70>
	spi_setupChipReg(DIP204_SPI, &spiOptions2, FOSC0);
800021c2:	e0 6a 1b 00 	mov	r10,6912
800021c6:	ea 1a 00 b7 	orh	r10,0xb7
800021ca:	1a 9b       	mov	r11,sp
800021cc:	fe 7c 28 00 	mov	r12,-55296
800021d0:	f0 1f 00 09 	mcall	800021f4 <config_dpi204+0x74>
}
800021d4:	2f cd       	sub	sp,-16
800021d6:	e3 cd 80 80 	ldm	sp++,r7,pc
800021da:	00 00       	add	r0,r0
800021dc:	80 00       	ld.sh	r0,r0[0x0]
800021de:	9a 30       	ld.sh	r0,sp[0x6]
800021e0:	80 00       	ld.sh	r0,r0[0x0]
800021e2:	9a 40       	ld.sh	r0,sp[0x8]
800021e4:	80 00       	ld.sh	r0,r0[0x0]
800021e6:	37 94       	mov	r4,121
800021e8:	80 00       	ld.sh	r0,r0[0x0]
800021ea:	3b 36       	mov	r6,-77
800021ec:	80 00       	ld.sh	r0,r0[0x0]
800021ee:	3b 6e       	mov	lr,-74
800021f0:	80 00       	ld.sh	r0,r0[0x0]
800021f2:	3c c4       	mov	r4,-52
800021f4:	80 00       	ld.sh	r0,r0[0x0]
800021f6:	3c 0c       	mov	r12,-64

800021f8 <mASSERT_CS>:
 *
 * Overview:		See the documentation for spi_selectchip in spi.h
 *
 * Note:            spi.h has to be included.
 ********************************************************************/
void mASSERT_CS(unsigned char channel){
800021f8:	d4 01       	pushm	lr
	spi_selectChip(SPARE_SPI,channel);
800021fa:	18 9b       	mov	r11,r12
800021fc:	fe 7c 24 00 	mov	r12,-56320
80002200:	f0 1f 00 02 	mcall	80002208 <mASSERT_CS+0x10>
}
80002204:	d8 02       	popm	pc
80002206:	00 00       	add	r0,r0
80002208:	80 00       	ld.sh	r0,r0[0x0]
8000220a:	3b 9a       	mov	r10,-71

8000220c <config_SPI_SPARE>:
 *
 * Note:            None.
 *
 * Example: 	    config_SPI_SPARE();
 ********************************************************************/
void config_SPI_SPARE(void){
8000220c:	eb cd 40 80 	pushm	r7,lr
80002210:	20 4d       	sub	sp,16
.spck_delay   = 0,
.trans_delay  = 0,
.stay_act     = 0,
.spi_mode     = 0,
.modfdis      = 1
};
80002212:	49 88       	lddpc	r8,80002270 <config_SPI_SPARE+0x64>
80002214:	1a 97       	mov	r7,sp
80002216:	f0 ea 00 00 	ld.d	r10,r8[0]
8000221a:	fa eb 00 00 	st.d	sp[0],r10
8000221e:	f0 e8 00 08 	ld.d	r8,r8[8]
80002222:	fa e9 00 08 	st.d	sp[8],r8

gpio_enable_module(SPARE_SPI_GPIO_MAP,
80002226:	30 4b       	mov	r11,4
80002228:	49 3c       	lddpc	r12,80002274 <config_SPI_SPARE+0x68>
8000222a:	f0 1f 00 14 	mcall	80002278 <config_SPI_SPARE+0x6c>
sizeof(SPARE_SPI_GPIO_MAP) / sizeof(SPARE_SPI_GPIO_MAP[0]));

spi_initMaster(SPARE_SPI,&spiOptions);
8000222e:	1a 9b       	mov	r11,sp
80002230:	fe 7c 24 00 	mov	r12,-56320
80002234:	f0 1f 00 12 	mcall	8000227c <config_SPI_SPARE+0x70>
spi_selectionMode(SPARE_SPI, 0, 0, 0);
80002238:	30 09       	mov	r9,0
8000223a:	12 9a       	mov	r10,r9
8000223c:	12 9b       	mov	r11,r9
8000223e:	fe 7c 24 00 	mov	r12,-56320
80002242:	f0 1f 00 10 	mcall	80002280 <config_SPI_SPARE+0x74>
spi_selectChip(SPARE_SPI,0);
80002246:	30 0b       	mov	r11,0
80002248:	fe 7c 24 00 	mov	r12,-56320
8000224c:	f0 1f 00 0e 	mcall	80002284 <config_SPI_SPARE+0x78>
spi_setupChipReg(SPARE_SPI, &spiOptions, FOSC0);
80002250:	e0 6a 1b 00 	mov	r10,6912
80002254:	ea 1a 00 b7 	orh	r10,0xb7
80002258:	1a 9b       	mov	r11,sp
8000225a:	fe 7c 24 00 	mov	r12,-56320
8000225e:	f0 1f 00 0b 	mcall	80002288 <config_SPI_SPARE+0x7c>
spi_enable(SPARE_SPI);
80002262:	fe 7c 24 00 	mov	r12,-56320
80002266:	f0 1f 00 0a 	mcall	8000228c <config_SPI_SPARE+0x80>
}
8000226a:	2f cd       	sub	sp,-16
8000226c:	e3 cd 80 80 	ldm	sp++,r7,pc
80002270:	80 00       	ld.sh	r0,r0[0x0]
80002272:	9a 20       	ld.sh	r0,sp[0x4]
80002274:	80 00       	ld.sh	r0,r0[0x0]
80002276:	9a 00       	ld.sh	r0,sp[0x0]
80002278:	80 00       	ld.sh	r0,r0[0x0]
8000227a:	37 94       	mov	r4,121
8000227c:	80 00       	ld.sh	r0,r0[0x0]
8000227e:	3b 36       	mov	r6,-77
80002280:	80 00       	ld.sh	r0,r0[0x0]
80002282:	3b 6e       	mov	lr,-74
80002284:	80 00       	ld.sh	r0,r0[0x0]
80002286:	3b 9a       	mov	r10,-71
80002288:	80 00       	ld.sh	r0,r0[0x0]
8000228a:	3c 0c       	mov	r12,-64
8000228c:	80 00       	ld.sh	r0,r0[0x0]
8000228e:	3c c4       	mov	r4,-52

80002290 <XferSPI_send>:
 *         			one data word to it. See the documentation for spi_write in spi.h
 *
 * Note:            spi.h has to be included.
 ********************************************************************/
PRIVATE UINT8 XferSPI_send( int Channel, UINT8 dat )
{
80002290:	d4 01       	pushm	lr
	spi_write(SPARE_SPI, dat);
80002292:	fe 7c 24 00 	mov	r12,-56320
80002296:	f0 1f 00 02 	mcall	8000229c <XferSPI_send+0xc>
	return 0;
}
8000229a:	d8 0a       	popm	pc,r12=0
8000229c:	80 00       	ld.sh	r0,r0[0x0]
8000229e:	3c ca       	mov	r10,-52

800022a0 <ReadStatus2515>:
 * Overview:		Reads status from MCP2515
 *
 * Note:            None.
 ********************************************************************/
PRIVATE UINT8 ReadStatus2515(int Channel)
{
800022a0:	d4 01       	pushm	lr
800022a2:	20 1d       	sub	sp,4
	unsigned short *spidatareadpointer_temp;
	unsigned short spidataread_temp;
	spidatareadpointer_temp=&spidataread_temp;

	spi_selectChip(SPARE_SPI,0);
800022a4:	30 0b       	mov	r11,0
800022a6:	fe 7c 24 00 	mov	r12,-56320
800022aa:	f0 1f 00 0e 	mcall	800022e0 <ReadStatus2515+0x40>

	spi_write(SPARE_SPI,CAN_RD_STATUS);
800022ae:	e0 6b 00 a0 	mov	r11,160
800022b2:	fe 7c 24 00 	mov	r12,-56320
800022b6:	f0 1f 00 0c 	mcall	800022e4 <ReadStatus2515+0x44>

	spi_write(SPARE_SPI,DUMMY_BYTE);
800022ba:	30 0b       	mov	r11,0
800022bc:	fe 7c 24 00 	mov	r12,-56320
800022c0:	f0 1f 00 09 	mcall	800022e4 <ReadStatus2515+0x44>
	spi_read(SPARE_SPI,spidatareadpointer_temp);
800022c4:	fa cb ff fe 	sub	r11,sp,-2
800022c8:	fe 7c 24 00 	mov	r12,-56320
800022cc:	f0 1f 00 07 	mcall	800022e8 <ReadStatus2515+0x48>

	spi_unselectChip(SPARE_SPI,0);
800022d0:	30 0b       	mov	r11,0
800022d2:	fe 7c 24 00 	mov	r12,-56320
800022d6:	f0 1f 00 06 	mcall	800022ec <ReadStatus2515+0x4c>

	return spidataread_temp;
}
800022da:	1b bc       	ld.ub	r12,sp[0x3]
800022dc:	2f fd       	sub	sp,-4
800022de:	d8 02       	popm	pc
800022e0:	80 00       	ld.sh	r0,r0[0x0]
800022e2:	3b 9a       	mov	r10,-71
800022e4:	80 00       	ld.sh	r0,r0[0x0]
800022e6:	3c ca       	mov	r10,-52
800022e8:	80 00       	ld.sh	r0,r0[0x0]
800022ea:	3c ee       	mov	lr,-50
800022ec:	80 00       	ld.sh	r0,r0[0x0]
800022ee:	3b e6       	mov	r6,-66

800022f0 <CANRxReady>:
 * Note:            None.
 *
 * Example:			CANRxReady(0);
 ********************************************************************/
inline Bool CANRxReady( int Channel )
{
800022f0:	d4 01       	pushm	lr
	return (ReadStatus2515(Channel)&0x3) != 0;
800022f2:	f0 1f 00 04 	mcall	80002300 <CANRxReady+0x10>
800022f6:	f9 dc c0 02 	bfextu	r12,r12,0x0,0x2
}
800022fa:	5f 1c       	srne	r12
800022fc:	d8 02       	popm	pc
800022fe:	00 00       	add	r0,r0
80002300:	80 00       	ld.sh	r0,r0[0x0]
80002302:	22 a0       	sub	r0,42

80002304 <CANTxReady>:
 * Note:            None.
 *
 * Example:			CANTxReady(0);
 ********************************************************************/
inline Bool CANTxReady( int Channel )
{
80002304:	d4 01       	pushm	lr
	return (ReadStatus2515(Channel)&0x04) == 0;
80002306:	f0 1f 00 04 	mcall	80002314 <CANTxReady+0x10>
8000230a:	ec 1c 00 04 	eorl	r12,0x4
}
8000230e:	f9 dc c0 41 	bfextu	r12,r12,0x2,0x1
80002312:	d8 02       	popm	pc
80002314:	80 00       	ld.sh	r0,r0[0x0]
80002316:	22 a0       	sub	r0,42

80002318 <mDEASSERT_CS>:
 *
 * Overview:		See the documentation for spi_unselectchip in spi.h
 *
 * Note:            spi.h has to be included.
 ********************************************************************/
void mDEASSERT_CS(unsigned char channel){
80002318:	d4 01       	pushm	lr
	spi_unselectChip(SPARE_SPI,channel);
8000231a:	18 9b       	mov	r11,r12
8000231c:	fe 7c 24 00 	mov	r12,-56320
80002320:	f0 1f 00 02 	mcall	80002328 <mDEASSERT_CS+0x10>
}
80002324:	d8 02       	popm	pc
80002326:	00 00       	add	r0,r0
80002328:	80 00       	ld.sh	r0,r0[0x0]
8000232a:	3b e6       	mov	r6,-66

8000232c <CAN2515ByteWrite>:
 * Note:            None.
 *
 * Example:         CANReset(0)
 ********************************************************************/
void CAN2515ByteWrite(int Channel, unsigned char addr, unsigned char value )
{
8000232c:	d4 21       	pushm	r4-r7,lr
8000232e:	18 97       	mov	r7,r12
80002330:	16 95       	mov	r5,r11
80002332:	14 94       	mov	r4,r10
	mASSERT_CS(Channel);
80002334:	18 96       	mov	r6,r12
80002336:	5c 56       	castu.b	r6
80002338:	0c 9c       	mov	r12,r6
8000233a:	f0 1f 00 0a 	mcall	80002360 <CAN2515ByteWrite+0x34>
	XferSPI_send(Channel, CAN_WRITE);
8000233e:	30 2b       	mov	r11,2
80002340:	0e 9c       	mov	r12,r7
80002342:	f0 1f 00 09 	mcall	80002364 <CAN2515ByteWrite+0x38>
	XferSPI_send(Channel, addr);
80002346:	0a 9b       	mov	r11,r5
80002348:	0e 9c       	mov	r12,r7
8000234a:	f0 1f 00 07 	mcall	80002364 <CAN2515ByteWrite+0x38>
	XferSPI_send(Channel, value);
8000234e:	08 9b       	mov	r11,r4
80002350:	0e 9c       	mov	r12,r7
80002352:	f0 1f 00 05 	mcall	80002364 <CAN2515ByteWrite+0x38>
	mDEASSERT_CS(Channel);
80002356:	0c 9c       	mov	r12,r6
80002358:	f0 1f 00 04 	mcall	80002368 <CAN2515ByteWrite+0x3c>
}
8000235c:	d8 22       	popm	r4-r7,pc
8000235e:	00 00       	add	r0,r0
80002360:	80 00       	ld.sh	r0,r0[0x0]
80002362:	21 f8       	sub	r8,31
80002364:	80 00       	ld.sh	r0,r0[0x0]
80002366:	22 90       	sub	r0,41
80002368:	80 00       	ld.sh	r0,r0[0x0]
8000236a:	23 18       	sub	r8,49

8000236c <CAN2515SetRXB1FiltersEx>:
 * Note:            None.
 *
 * Example:			CAN2515SetRXB0Filters(Channel, 0, Flt);
 ********************************************************************/
void CAN2515SetRXB1FiltersEx(int Channel, UINT32 Mask1, UINT32* pFlt2_5)
{ 
8000236c:	eb cd 40 e0 	pushm	r5-r7,lr
80002370:	18 97       	mov	r7,r12
80002372:	16 96       	mov	r6,r11
80002374:	14 95       	mov	r5,r10
	    //Set the mask associated with RXB1
	    CAN2515ByteWrite(Channel, RXM1EID0, Mask1);
80002376:	f5 db c0 08 	bfextu	r10,r11,0x0,0x8
8000237a:	32 7b       	mov	r11,39
8000237c:	f0 1f 00 50 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXM1EID8, Mask1 >> 8);
80002380:	f5 d6 c1 08 	bfextu	r10,r6,0x8,0x8
80002384:	32 6b       	mov	r11,38
80002386:	0e 9c       	mov	r12,r7
80002388:	f0 1f 00 4d 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXM1SIDL, ((Mask1 >> 13) & 0b11100000) | ((Mask1 >> 16) & 0b00000011));
8000238c:	f1 d6 c2 02 	bfextu	r8,r6,0x10,0x2
80002390:	ec 0a 16 0d 	lsr	r10,r6,0xd
80002394:	e2 1a 00 e0 	andl	r10,0xe0,COH
80002398:	10 4a       	or	r10,r8
8000239a:	32 5b       	mov	r11,37
8000239c:	0e 9c       	mov	r12,r7
8000239e:	f0 1f 00 48 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXM1SIDH, Mask1 >> 21);
800023a2:	f5 d6 c2 a8 	bfextu	r10,r6,0x15,0x8
800023a6:	32 4b       	mov	r11,36
800023a8:	0e 9c       	mov	r12,r7
800023aa:	f0 1f 00 45 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    
	    //Set the 4 filters associated with RXB1
	    CAN2515ByteWrite(Channel, RXF2EID0, *pFlt2_5);
800023ae:	0b ba       	ld.ub	r10,r5[0x3]
800023b0:	30 bb       	mov	r11,11
800023b2:	0e 9c       	mov	r12,r7
800023b4:	f0 1f 00 42 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF2EID8, *pFlt2_5 >> 8);
800023b8:	0b aa       	ld.ub	r10,r5[0x2]
800023ba:	30 ab       	mov	r11,10
800023bc:	0e 9c       	mov	r12,r7
800023be:	f0 1f 00 40 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF2SIDL, ((*pFlt2_5 >> 13) & 0b11100000) | 0b00001000 | ((*pFlt2_5 >> 16) & 0b00000011));
800023c2:	6a 08       	ld.w	r8,r5[0x0]
800023c4:	f0 0a 16 0d 	lsr	r10,r8,0xd
800023c8:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
800023cc:	e2 1a 00 e0 	andl	r10,0xe0,COH
800023d0:	f1 ea 10 0a 	or	r10,r8,r10
800023d4:	a3 ba       	sbr	r10,0x3
800023d6:	e2 1a 00 eb 	andl	r10,0xeb,COH
800023da:	30 9b       	mov	r11,9
800023dc:	0e 9c       	mov	r12,r7
800023de:	f0 1f 00 38 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF2SIDH, *pFlt2_5 >> 21);
800023e2:	0b 0a       	ld.w	r10,r5++
800023e4:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
800023e8:	30 8b       	mov	r11,8
800023ea:	0e 9c       	mov	r12,r7
800023ec:	f0 1f 00 34 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    
	    pFlt2_5++;
	    CAN2515ByteWrite(Channel, RXF3EID0, *pFlt2_5);
800023f0:	0b ba       	ld.ub	r10,r5[0x3]
800023f2:	31 3b       	mov	r11,19
800023f4:	0e 9c       	mov	r12,r7
800023f6:	f0 1f 00 32 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF3EID8, *pFlt2_5 >> 8);
800023fa:	0b aa       	ld.ub	r10,r5[0x2]
800023fc:	31 2b       	mov	r11,18
800023fe:	0e 9c       	mov	r12,r7
80002400:	f0 1f 00 2f 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF3SIDL, ((*pFlt2_5 >> 13) & 0b11100000) | 0b00001000 | ((*pFlt2_5 >> 16) & 0b00000011));
80002404:	6a 08       	ld.w	r8,r5[0x0]
80002406:	f0 0a 16 0d 	lsr	r10,r8,0xd
8000240a:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
8000240e:	e2 1a 00 e0 	andl	r10,0xe0,COH
80002412:	f1 ea 10 0a 	or	r10,r8,r10
80002416:	a3 ba       	sbr	r10,0x3
80002418:	e2 1a 00 eb 	andl	r10,0xeb,COH
8000241c:	31 1b       	mov	r11,17
8000241e:	0e 9c       	mov	r12,r7
80002420:	f0 1f 00 27 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF3SIDH, *pFlt2_5 >> 21);
80002424:	0b 0a       	ld.w	r10,r5++
80002426:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
8000242a:	31 0b       	mov	r11,16
8000242c:	0e 9c       	mov	r12,r7
8000242e:	f0 1f 00 24 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    
	    pFlt2_5++;
	    CAN2515ByteWrite(Channel, RXF4EID0, *pFlt2_5);
80002432:	0b ba       	ld.ub	r10,r5[0x3]
80002434:	31 7b       	mov	r11,23
80002436:	0e 9c       	mov	r12,r7
80002438:	f0 1f 00 21 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF4EID8, *pFlt2_5 >> 8);
8000243c:	0b aa       	ld.ub	r10,r5[0x2]
8000243e:	31 6b       	mov	r11,22
80002440:	0e 9c       	mov	r12,r7
80002442:	f0 1f 00 1f 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF4SIDL, ((*pFlt2_5 >> 13) & 0b11100000) | 0b00001000 | ((*pFlt2_5 >> 16) & 0b00000011));
80002446:	6a 08       	ld.w	r8,r5[0x0]
80002448:	f0 0a 16 0d 	lsr	r10,r8,0xd
8000244c:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002450:	e2 1a 00 e0 	andl	r10,0xe0,COH
80002454:	f1 ea 10 0a 	or	r10,r8,r10
80002458:	a3 ba       	sbr	r10,0x3
8000245a:	e2 1a 00 eb 	andl	r10,0xeb,COH
8000245e:	31 5b       	mov	r11,21
80002460:	0e 9c       	mov	r12,r7
80002462:	f0 1f 00 17 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF4SIDH, *pFlt2_5 >> 21);
80002466:	0b 0a       	ld.w	r10,r5++
80002468:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
8000246c:	31 4b       	mov	r11,20
8000246e:	0e 9c       	mov	r12,r7
80002470:	f0 1f 00 13 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    
	    pFlt2_5++;
	    CAN2515ByteWrite(Channel, RXF5EID0, *pFlt2_5);
80002474:	0b ba       	ld.ub	r10,r5[0x3]
80002476:	31 bb       	mov	r11,27
80002478:	0e 9c       	mov	r12,r7
8000247a:	f0 1f 00 11 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF5EID8, *pFlt2_5 >> 8);
8000247e:	0b aa       	ld.ub	r10,r5[0x2]
80002480:	31 ab       	mov	r11,26
80002482:	0e 9c       	mov	r12,r7
80002484:	f0 1f 00 0e 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF5SIDL, ((*pFlt2_5 >> 13) & 0b11100000) | 0b00001000 | ((*pFlt2_5 >> 16) & 0b00000011));
80002488:	6a 08       	ld.w	r8,r5[0x0]
8000248a:	f0 0a 16 0d 	lsr	r10,r8,0xd
8000248e:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002492:	e2 1a 00 e0 	andl	r10,0xe0,COH
80002496:	f1 ea 10 0a 	or	r10,r8,r10
8000249a:	a3 ba       	sbr	r10,0x3
8000249c:	e2 1a 00 eb 	andl	r10,0xeb,COH
800024a0:	31 9b       	mov	r11,25
800024a2:	0e 9c       	mov	r12,r7
800024a4:	f0 1f 00 06 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
	    CAN2515ByteWrite(Channel, RXF5SIDH, *pFlt2_5 >> 21);
800024a8:	6a 0a       	ld.w	r10,r5[0x0]
800024aa:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
800024ae:	31 8b       	mov	r11,24
800024b0:	0e 9c       	mov	r12,r7
800024b2:	f0 1f 00 03 	mcall	800024bc <CAN2515SetRXB1FiltersEx+0x150>
}
800024b6:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
800024ba:	00 00       	add	r0,r0
800024bc:	80 00       	ld.sh	r0,r0[0x0]
800024be:	23 2c       	sub	r12,50

800024c0 <CAN2515SetRXB0FiltersEx>:
 * Note:            None.
 *
 * Example:			CAN2515SetRXB0Filters(Channel, 0, Flt);
 ********************************************************************/
void CAN2515SetRXB0FiltersEx(int Channel, UINT32 Mask0, UINT32* pFlt0_1)
{	
800024c0:	eb cd 40 e0 	pushm	r5-r7,lr
800024c4:	18 97       	mov	r7,r12
800024c6:	16 96       	mov	r6,r11
800024c8:	14 95       	mov	r5,r10
	//Set the mask associated with RXB0
	CAN2515ByteWrite(Channel, RXM0EID0, Mask0);
800024ca:	f5 db c0 08 	bfextu	r10,r11,0x0,0x8
800024ce:	32 3b       	mov	r11,35
800024d0:	f0 1f 00 2f 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
	CAN2515ByteWrite(Channel, RXM0EID8, Mask0 >> 8);
800024d4:	f5 d6 c1 08 	bfextu	r10,r6,0x8,0x8
800024d8:	32 2b       	mov	r11,34
800024da:	0e 9c       	mov	r12,r7
800024dc:	f0 1f 00 2c 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
	CAN2515ByteWrite(Channel, RXM0SIDL, ((Mask0 >> 13) & 0b11100000) | ((Mask0 >> 16) & 0b00000011));
800024e0:	f1 d6 c2 02 	bfextu	r8,r6,0x10,0x2
800024e4:	ec 0a 16 0d 	lsr	r10,r6,0xd
800024e8:	e2 1a 00 e0 	andl	r10,0xe0,COH
800024ec:	10 4a       	or	r10,r8
800024ee:	32 1b       	mov	r11,33
800024f0:	0e 9c       	mov	r12,r7
800024f2:	f0 1f 00 27 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
	CAN2515ByteWrite(Channel, RXM0SIDH, Mask0 >> 21);
800024f6:	f5 d6 c2 a8 	bfextu	r10,r6,0x15,0x8
800024fa:	32 0b       	mov	r11,32
800024fc:	0e 9c       	mov	r12,r7
800024fe:	f0 1f 00 24 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
	    
	//Set the two filters associated with RXB0
	CAN2515ByteWrite(Channel, RXF0EID0, *pFlt0_1);
80002502:	0b ba       	ld.ub	r10,r5[0x3]
80002504:	30 3b       	mov	r11,3
80002506:	0e 9c       	mov	r12,r7
80002508:	f0 1f 00 21 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
	CAN2515ByteWrite(Channel, RXF0EID8, *pFlt0_1 >> 8);
8000250c:	0b aa       	ld.ub	r10,r5[0x2]
8000250e:	30 2b       	mov	r11,2
80002510:	0e 9c       	mov	r12,r7
80002512:	f0 1f 00 1f 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
	CAN2515ByteWrite(Channel, RXF0SIDL, ((*pFlt0_1 >> 13) & 0b11100000) | 0b00001000 | ((*pFlt0_1 >> 16) & 0b00000011));
80002516:	6a 08       	ld.w	r8,r5[0x0]
80002518:	f0 0a 16 0d 	lsr	r10,r8,0xd
8000251c:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002520:	e2 1a 00 e0 	andl	r10,0xe0,COH
80002524:	f1 ea 10 0a 	or	r10,r8,r10
80002528:	a3 ba       	sbr	r10,0x3
8000252a:	e2 1a 00 eb 	andl	r10,0xeb,COH
8000252e:	30 1b       	mov	r11,1
80002530:	0e 9c       	mov	r12,r7
80002532:	f0 1f 00 17 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
	CAN2515ByteWrite(Channel, RXF0SIDH, *pFlt0_1 >> 21);
80002536:	0b 0a       	ld.w	r10,r5++
80002538:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
8000253c:	30 0b       	mov	r11,0
8000253e:	0e 9c       	mov	r12,r7
80002540:	f0 1f 00 13 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
	    
	pFlt0_1++;
	CAN2515ByteWrite(Channel, RXF1EID0, *pFlt0_1);
80002544:	0b ba       	ld.ub	r10,r5[0x3]
80002546:	30 7b       	mov	r11,7
80002548:	0e 9c       	mov	r12,r7
8000254a:	f0 1f 00 11 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
	CAN2515ByteWrite(Channel, RXF1EID8, *pFlt0_1 >> 8);
8000254e:	0b aa       	ld.ub	r10,r5[0x2]
80002550:	30 6b       	mov	r11,6
80002552:	0e 9c       	mov	r12,r7
80002554:	f0 1f 00 0e 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
	CAN2515ByteWrite(Channel, RXF1SIDL, ((*pFlt0_1 >> 13) & 0b11100000) | 0b00001000 | ((*pFlt0_1 >> 16) & 0b00000011));
80002558:	6a 08       	ld.w	r8,r5[0x0]
8000255a:	f0 0a 16 0d 	lsr	r10,r8,0xd
8000255e:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002562:	e2 1a 00 e0 	andl	r10,0xe0,COH
80002566:	f1 ea 10 0a 	or	r10,r8,r10
8000256a:	a3 ba       	sbr	r10,0x3
8000256c:	e2 1a 00 eb 	andl	r10,0xeb,COH
80002570:	30 5b       	mov	r11,5
80002572:	0e 9c       	mov	r12,r7
80002574:	f0 1f 00 06 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
	CAN2515ByteWrite(Channel, RXF1SIDH, *pFlt0_1 >> 21);
80002578:	6a 0a       	ld.w	r10,r5[0x0]
8000257a:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
8000257e:	30 4b       	mov	r11,4
80002580:	0e 9c       	mov	r12,r7
80002582:	f0 1f 00 03 	mcall	8000258c <CAN2515SetRXB0FiltersEx+0xcc>
}
80002586:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000258a:	00 00       	add	r0,r0
8000258c:	80 00       	ld.sh	r0,r0[0x0]
8000258e:	23 2c       	sub	r12,50

80002590 <CANReset>:
 * Overview:		Sends a software reset commmand over spi port to MCP2515 chip
 *
 * Note:            None.
 ********************************************************************/
void CANReset(int Channel)
{
80002590:	eb cd 40 c0 	pushm	r6-r7,lr
80002594:	18 96       	mov	r6,r12
	mASSERT_CS(Channel);
80002596:	ef dc c0 08 	bfextu	r7,r12,0x0,0x8
8000259a:	0e 9c       	mov	r12,r7
8000259c:	f0 1f 00 06 	mcall	800025b4 <CANReset+0x24>
	XferSPI_send(Channel, CAN_RESET);
800025a0:	e0 6b 00 c0 	mov	r11,192
800025a4:	0c 9c       	mov	r12,r6
800025a6:	f0 1f 00 05 	mcall	800025b8 <CANReset+0x28>
	mDEASSERT_CS(Channel);
800025aa:	0e 9c       	mov	r12,r7
800025ac:	f0 1f 00 04 	mcall	800025bc <CANReset+0x2c>
}
800025b0:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800025b4:	80 00       	ld.sh	r0,r0[0x0]
800025b6:	21 f8       	sub	r8,31
800025b8:	80 00       	ld.sh	r0,r0[0x0]
800025ba:	22 90       	sub	r0,41
800025bc:	80 00       	ld.sh	r0,r0[0x0]
800025be:	23 18       	sub	r8,49

800025c0 <CAN2515ByteRead>:
 * Overview:		This function reads the value of a byte. It is used to read register values in e.g. the MCP2515 module
 *
 * Note:            None.
 ********************************************************************/
PRIVATE UINT8 CAN2515ByteRead(int Channel, unsigned char addr)
{
800025c0:	eb cd 40 e0 	pushm	r5-r7,lr
800025c4:	20 1d       	sub	sp,4
800025c6:	18 97       	mov	r7,r12
800025c8:	16 95       	mov	r5,r11
unsigned char tempdata;

	mASSERT_CS(Channel);
800025ca:	18 96       	mov	r6,r12
800025cc:	5c 56       	castu.b	r6
800025ce:	0c 9c       	mov	r12,r6
800025d0:	f0 1f 00 13 	mcall	8000261c <CAN2515ByteRead+0x5c>
	XferSPI_send(Channel, CAN_READ);
800025d4:	30 3b       	mov	r11,3
800025d6:	0e 9c       	mov	r12,r7
800025d8:	f0 1f 00 12 	mcall	80002620 <CAN2515ByteRead+0x60>
	XferSPI_send(Channel, addr);
800025dc:	0a 9b       	mov	r11,r5
800025de:	0e 9c       	mov	r12,r7
800025e0:	f0 1f 00 10 	mcall	80002620 <CAN2515ByteRead+0x60>
{
	unsigned short *spidatareadpointer_temp;
	unsigned short spidataread_temp;
	spidatareadpointer_temp=&spidataread_temp;

	spi_write(SPARE_SPI, DUMMY_BYTE);
800025e4:	30 0b       	mov	r11,0
800025e6:	fe 7c 24 00 	mov	r12,-56320
800025ea:	f0 1f 00 0f 	mcall	80002624 <CAN2515ByteRead+0x64>
	while(spi_readRegisterFullCheck(SPARE_SPI)==0){
800025ee:	fe 77 24 00 	mov	r7,-56320
800025f2:	c0 28       	rjmp	800025f6 <CAN2515ByteRead+0x36>
		asm("NOP;");
800025f4:	d7 03       	nop
	unsigned short *spidatareadpointer_temp;
	unsigned short spidataread_temp;
	spidatareadpointer_temp=&spidataread_temp;

	spi_write(SPARE_SPI, DUMMY_BYTE);
	while(spi_readRegisterFullCheck(SPARE_SPI)==0){
800025f6:	0e 9c       	mov	r12,r7
800025f8:	f0 1f 00 0c 	mcall	80002628 <CAN2515ByteRead+0x68>
800025fc:	cf c0       	breq	800025f4 <CAN2515ByteRead+0x34>
		asm("NOP;");
	}
	spi_read(SPARE_SPI,spidatareadpointer_temp);
800025fe:	fa cb ff fe 	sub	r11,sp,-2
80002602:	fe 7c 24 00 	mov	r12,-56320
80002606:	f0 1f 00 0a 	mcall	8000262c <CAN2515ByteRead+0x6c>
	return spidataread_temp;
8000260a:	1b b7       	ld.ub	r7,sp[0x3]

	mASSERT_CS(Channel);
	XferSPI_send(Channel, CAN_READ);
	XferSPI_send(Channel, addr);
	tempdata = XferSPI_receive(Channel,0);
	mDEASSERT_CS(Channel);
8000260c:	0c 9c       	mov	r12,r6
8000260e:	f0 1f 00 09 	mcall	80002630 <CAN2515ByteRead+0x70>

	return tempdata;
}
80002612:	0e 9c       	mov	r12,r7
80002614:	2f fd       	sub	sp,-4
80002616:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000261a:	00 00       	add	r0,r0
8000261c:	80 00       	ld.sh	r0,r0[0x0]
8000261e:	21 f8       	sub	r8,31
80002620:	80 00       	ld.sh	r0,r0[0x0]
80002622:	22 90       	sub	r0,41
80002624:	80 00       	ld.sh	r0,r0[0x0]
80002626:	3c ca       	mov	r10,-52
80002628:	80 00       	ld.sh	r0,r0[0x0]
8000262a:	3c e6       	mov	r6,-50
8000262c:	80 00       	ld.sh	r0,r0[0x0]
8000262e:	3c ee       	mov	lr,-50
80002630:	80 00       	ld.sh	r0,r0[0x0]
80002632:	23 18       	sub	r8,49

80002634 <CANEnable>:
 * Overview:		Sets the CAN bus speed and turns on the CAN controller.
 *
 * Note:            None.
 ********************************************************************/
void CANEnable( int Channel, int BusSpeed )
{
80002634:	eb cd 40 80 	pushm	r7,lr
80002638:	18 97       	mov	r7,r12
	// CNF1 -> 0x03 = 125kB. 0x01 = 250 kB, 0x00 = 500kB

	if (BusSpeed==10) // For 125 kB
8000263a:	58 ab       	cp.w	r11,10
8000263c:	c1 11       	brne	8000265e <CANEnable+0x2a>
	{
		CAN2515ByteWrite(Channel, CNF1,0x03); //used to be: BusSpeed
8000263e:	30 3a       	mov	r10,3
80002640:	32 ab       	mov	r11,42
80002642:	f0 1f 00 30 	mcall	80002700 <CANEnable+0xcc>
		CAN2515ByteWrite(Channel, CNF2,0xac); //used to be: BusSpeed
80002646:	e0 6a 00 ac 	mov	r10,172
8000264a:	32 9b       	mov	r11,41
8000264c:	0e 9c       	mov	r12,r7
8000264e:	f0 1f 00 2d 	mcall	80002700 <CANEnable+0xcc>
		CAN2515ByteWrite(Channel, CNF3,0x07); //used to be: BusSpeed
80002652:	30 7a       	mov	r10,7
80002654:	32 8b       	mov	r11,40
80002656:	0e 9c       	mov	r12,r7
80002658:	f0 1f 00 2a 	mcall	80002700 <CANEnable+0xcc>
8000265c:	c3 68       	rjmp	800026c8 <CANEnable+0x94>
	}
	else if (BusSpeed==7) // For 250 kB
8000265e:	58 7b       	cp.w	r11,7
80002660:	c1 11       	brne	80002682 <CANEnable+0x4e>
	{
		CAN2515ByteWrite(Channel, CNF1,0x01); //used to be: BusSpeed
80002662:	30 1a       	mov	r10,1
80002664:	32 ab       	mov	r11,42
80002666:	f0 1f 00 27 	mcall	80002700 <CANEnable+0xcc>
		CAN2515ByteWrite(Channel, CNF2,0xac); //used to be: BusSpeed
8000266a:	e0 6a 00 ac 	mov	r10,172
8000266e:	32 9b       	mov	r11,41
80002670:	0e 9c       	mov	r12,r7
80002672:	f0 1f 00 24 	mcall	80002700 <CANEnable+0xcc>
		CAN2515ByteWrite(Channel, CNF3,0x07); //used to be: BusSpeed
80002676:	30 7a       	mov	r10,7
80002678:	32 8b       	mov	r11,40
8000267a:	0e 9c       	mov	r12,r7
8000267c:	f0 1f 00 21 	mcall	80002700 <CANEnable+0xcc>
80002680:	c2 48       	rjmp	800026c8 <CANEnable+0x94>
	}
	else if(BusSpeed==5) // For 500 kB
80002682:	58 5b       	cp.w	r11,5
80002684:	c1 11       	brne	800026a6 <CANEnable+0x72>
	{
		CAN2515ByteWrite(Channel, CNF1,0x00); //used to be: BusSpeed
80002686:	30 0a       	mov	r10,0
80002688:	32 ab       	mov	r11,42
8000268a:	f0 1f 00 1e 	mcall	80002700 <CANEnable+0xcc>
		CAN2515ByteWrite(Channel, CNF2,0xac); //used to be: BusSpeed
8000268e:	e0 6a 00 ac 	mov	r10,172
80002692:	32 9b       	mov	r11,41
80002694:	0e 9c       	mov	r12,r7
80002696:	f0 1f 00 1b 	mcall	80002700 <CANEnable+0xcc>
		CAN2515ByteWrite(Channel, CNF3,0x07); //used to be: BusSpeed
8000269a:	30 7a       	mov	r10,7
8000269c:	32 8b       	mov	r11,40
8000269e:	0e 9c       	mov	r12,r7
800026a0:	f0 1f 00 18 	mcall	80002700 <CANEnable+0xcc>
800026a4:	c1 28       	rjmp	800026c8 <CANEnable+0x94>

	}
	else if (BusSpeed==1) // For 1000 kB
800026a6:	58 1b       	cp.w	r11,1
800026a8:	c1 01       	brne	800026c8 <CANEnable+0x94>
	{
		CAN2515ByteWrite(Channel, CNF1,0x00); //used to be: BusSpeed
800026aa:	30 0a       	mov	r10,0
800026ac:	32 ab       	mov	r11,42
800026ae:	f0 1f 00 15 	mcall	80002700 <CANEnable+0xcc>
		CAN2515ByteWrite(Channel, CNF2,0x91); //used to be: BusSpeed
800026b2:	e0 6a 00 91 	mov	r10,145
800026b6:	32 9b       	mov	r11,41
800026b8:	0e 9c       	mov	r12,r7
800026ba:	f0 1f 00 12 	mcall	80002700 <CANEnable+0xcc>
		CAN2515ByteWrite(Channel, CNF3,0x03); //used to be: BusSpeed
800026be:	30 3a       	mov	r10,3
800026c0:	32 8b       	mov	r11,40
800026c2:	0e 9c       	mov	r12,r7
800026c4:	f0 1f 00 0f 	mcall	80002700 <CANEnable+0xcc>
	}

	//Interrupt on RXB0 - CANINTE
	CAN2515ByteWrite(Channel, CANINTE,0x03); // Interrupts are on
800026c8:	30 3a       	mov	r10,3
800026ca:	32 bb       	mov	r11,43
800026cc:	0e 9c       	mov	r12,r7
800026ce:	f0 1f 00 0d 	mcall	80002700 <CANEnable+0xcc>

	//Set NORMAL mode
	CAN2515ByteWrite(Channel, CANCTRL,REQOP_NORMAL  | CLKOUT_ENABLED);
800026d2:	30 4a       	mov	r10,4
800026d4:	30 fb       	mov	r11,15
800026d6:	0e 9c       	mov	r12,r7
800026d8:	f0 1f 00 0a 	mcall	80002700 <CANEnable+0xcc>

	CAN2515ByteRead(Channel, CANSTAT); //dummy read to give 2515 time to switch to normal mode
800026dc:	30 eb       	mov	r11,14
800026de:	0e 9c       	mov	r12,r7
800026e0:	f0 1f 00 09 	mcall	80002704 <CANEnable+0xd0>

	if( (CAN2515ByteRead(Channel, CANSTAT) & 0xE0) != OPMODE_NORMAL )
800026e4:	30 eb       	mov	r11,14
800026e6:	0e 9c       	mov	r12,r7
800026e8:	f0 1f 00 07 	mcall	80002704 <CANEnable+0xd0>
800026ec:	e2 1c 00 e0 	andl	r12,0xe0,COH
800026f0:	c0 60       	breq	800026fc <CANEnable+0xc8>
		CAN2515ByteWrite(Channel, CANCTRL,REQOP_NORMAL | CLKOUT_ENABLED);
800026f2:	30 4a       	mov	r10,4
800026f4:	30 fb       	mov	r11,15
800026f6:	0e 9c       	mov	r12,r7
800026f8:	f0 1f 00 02 	mcall	80002700 <CANEnable+0xcc>
800026fc:	e3 cd 80 80 	ldm	sp++,r7,pc
80002700:	80 00       	ld.sh	r0,r0[0x0]
80002702:	23 2c       	sub	r12,50
80002704:	80 00       	ld.sh	r0,r0[0x0]
80002706:	25 c0       	sub	r0,92

80002708 <InitializeCANExtended>:
 * Note:            None.
 *
 * Example:         InitializeCAN(0,CAN_125kbps, 0, 0) (no filter)
 ********************************************************************/
void InitializeCANExtended( int Channel , int BusSpeed, UINT32 Mask, UINT32 Flt[6])
{
80002708:	d4 21       	pushm	r4-r7,lr
8000270a:	18 97       	mov	r7,r12
8000270c:	16 94       	mov	r4,r11
8000270e:	14 95       	mov	r5,r10
80002710:	12 96       	mov	r6,r9
	CANReset(Channel);
80002712:	f0 1f 00 0f 	mcall	8000274c <InitializeCANExtended+0x44>
	CAN2515ByteWrite(Channel, RXB0CTRL, 0x02<<5); //Receive only extended id messages to buffer 0
80002716:	34 0a       	mov	r10,64
80002718:	36 0b       	mov	r11,96
8000271a:	0e 9c       	mov	r12,r7
8000271c:	f0 1f 00 0d 	mcall	80002750 <InitializeCANExtended+0x48>
	CAN2515ByteWrite(Channel, RXB1CTRL, 0x02<<5); //Receive only extended id messages to buffer 1
80002720:	34 0a       	mov	r10,64
80002722:	37 0b       	mov	r11,112
80002724:	0e 9c       	mov	r12,r7
80002726:	f0 1f 00 0b 	mcall	80002750 <InitializeCANExtended+0x48>
	CAN2515SetRXB0FiltersEx(Channel, Mask, Flt);
8000272a:	0c 9a       	mov	r10,r6
8000272c:	0a 9b       	mov	r11,r5
8000272e:	0e 9c       	mov	r12,r7
80002730:	f0 1f 00 09 	mcall	80002754 <InitializeCANExtended+0x4c>
	CAN2515SetRXB1FiltersEx(Channel, Mask, &Flt[2]);
80002734:	ec ca ff f8 	sub	r10,r6,-8
80002738:	0a 9b       	mov	r11,r5
8000273a:	0e 9c       	mov	r12,r7
8000273c:	f0 1f 00 07 	mcall	80002758 <InitializeCANExtended+0x50>
	CANEnable(Channel, BusSpeed);
80002740:	08 9b       	mov	r11,r4
80002742:	0e 9c       	mov	r12,r7
80002744:	f0 1f 00 06 	mcall	8000275c <InitializeCANExtended+0x54>
}
80002748:	d8 22       	popm	r4-r7,pc
8000274a:	00 00       	add	r0,r0
8000274c:	80 00       	ld.sh	r0,r0[0x0]
8000274e:	25 90       	sub	r0,89
80002750:	80 00       	ld.sh	r0,r0[0x0]
80002752:	23 2c       	sub	r12,50
80002754:	80 00       	ld.sh	r0,r0[0x0]
80002756:	24 c0       	sub	r0,76
80002758:	80 00       	ld.sh	r0,r0[0x0]
8000275a:	23 6c       	sub	r12,54
8000275c:	80 00       	ld.sh	r0,r0[0x0]
8000275e:	26 34       	sub	r4,99

80002760 <CANSendMsg>:
					// Extended id
                    CANSendMsg( 0, 0x8ff, msg, 8, 0 );(no remote frame)
				    CANSendMsg( 0, 0x8ff, msg, 8, R );(remote frame)
 ********************************************************************/
Bool CANSendMsg( int Channel, UINT32 IdentifierS, UINT8* MsgS, UINT8 MsgSizeS, int r )
{
80002760:	eb cd 40 fe 	pushm	r1-r7,lr
80002764:	18 96       	mov	r6,r12
80002766:	16 93       	mov	r3,r11
80002768:	14 94       	mov	r4,r10
8000276a:	12 92       	mov	r2,r9
8000276c:	10 91       	mov	r1,r8
8000276e:	30 07       	mov	r7,0
	int WaitCntr = 0;

	// wait for TXB0 to get ready.  If not ready within XMIT_TIMEOUT ms,then return false
	while( CAN2515ByteRead( Channel, TXB0CTRL ) & 0x08 ) //TXREQ == 1
80002770:	33 05       	mov	r5,48
80002772:	c1 78       	rjmp	800027a0 <CANSendMsg+0x40>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002774:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002778:	f0 ca d1 20 	sub	r10,r8,-12000
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
8000277c:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002780:	14 38       	cp.w	r8,r10
80002782:	e0 88 00 08 	brls	80002792 <CANSendMsg+0x32>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002786:	12 38       	cp.w	r8,r9
80002788:	fe 98 ff fa 	brls	8000277c <CANSendMsg+0x1c>
8000278c:	12 3a       	cp.w	r10,r9
8000278e:	c7 63       	brcs	8000287a <CANSendMsg+0x11a>
80002790:	cf 6b       	rjmp	8000277c <CANSendMsg+0x1c>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002792:	12 38       	cp.w	r8,r9
80002794:	e0 8b 00 73 	brhi	8000287a <CANSendMsg+0x11a>
80002798:	12 3a       	cp.w	r10,r9
8000279a:	c7 03       	brcs	8000287a <CANSendMsg+0x11a>
8000279c:	cf 0b       	rjmp	8000277c <CANSendMsg+0x1c>
	{
		delay_ms( 1 );
		if( WaitCntr++ >= XMIT_TIMEOUT )
8000279e:	2f f7       	sub	r7,-1
Bool CANSendMsg( int Channel, UINT32 IdentifierS, UINT8* MsgS, UINT8 MsgSizeS, int r )
{
	int WaitCntr = 0;

	// wait for TXB0 to get ready.  If not ready within XMIT_TIMEOUT ms,then return false
	while( CAN2515ByteRead( Channel, TXB0CTRL ) & 0x08 ) //TXREQ == 1
800027a0:	0a 9b       	mov	r11,r5
800027a2:	0c 9c       	mov	r12,r6
800027a4:	f0 1f 00 38 	mcall	80002884 <CANSendMsg+0x124>
800027a8:	e2 1c 00 08 	andl	r12,0x8,COH
800027ac:	ce 41       	brne	80002774 <CANSendMsg+0x14>
	{
		delay_ms( 1 );
		if( WaitCntr++ >= XMIT_TIMEOUT )
			return FALSE;
	}
	if ((IdentifierS>>11)==0) // Standard id
800027ae:	e6 08 16 0b 	lsr	r8,r3,0xb
800027b2:	c1 01       	brne	800027d2 <CANSendMsg+0x72>
	{
		CAN2515ByteWrite(Channel, TXB0SIDH, (IdentifierS >> 3) & 0xff );    //Set TXB0 SIDH
800027b4:	f5 d3 c0 68 	bfextu	r10,r3,0x3,0x8
800027b8:	33 1b       	mov	r11,49
800027ba:	0c 9c       	mov	r12,r6
800027bc:	f0 1f 00 33 	mcall	80002888 <CANSendMsg+0x128>
		CAN2515ByteWrite(Channel, TXB0SIDL,((IdentifierS << 5) & 0xe0));    //Set TXB0 SIDL
800027c0:	e6 0a 15 05 	lsl	r10,r3,0x5
800027c4:	e2 1a 00 e0 	andl	r10,0xe0,COH
800027c8:	33 2b       	mov	r11,50
800027ca:	0c 9c       	mov	r12,r6
800027cc:	f0 1f 00 2f 	mcall	80002888 <CANSendMsg+0x128>
800027d0:	c2 18       	rjmp	80002812 <CANSendMsg+0xb2>
	}
	else // Extended id
	{
		CAN2515ByteWrite(Channel, TXB0SIDH, (IdentifierS >> 21) & 0xff );    //Set TXB0 SIDH
800027d2:	f5 d3 c2 a8 	bfextu	r10,r3,0x15,0x8
800027d6:	33 1b       	mov	r11,49
800027d8:	0c 9c       	mov	r12,r6
800027da:	f0 1f 00 2c 	mcall	80002888 <CANSendMsg+0x128>
		CAN2515ByteWrite(Channel, TXB0SIDL,(((IdentifierS >> 13)& 0xe0) | ((IdentifierS>>16) & 0x03) )| 0x08 ); //Set TXB0 SIDL
800027de:	e6 08 16 0d 	lsr	r8,r3,0xd
800027e2:	f5 d3 c2 02 	bfextu	r10,r3,0x10,0x2
800027e6:	e2 18 00 e0 	andl	r8,0xe0,COH
800027ea:	10 4a       	or	r10,r8
800027ec:	a3 ba       	sbr	r10,0x3
800027ee:	e2 1a 00 eb 	andl	r10,0xeb,COH
800027f2:	33 2b       	mov	r11,50
800027f4:	0c 9c       	mov	r12,r6
800027f6:	f0 1f 00 25 	mcall	80002888 <CANSendMsg+0x128>
		CAN2515ByteWrite(Channel, TXB0EID8, (IdentifierS>>8) & 0xff);
800027fa:	f5 d3 c1 08 	bfextu	r10,r3,0x8,0x8
800027fe:	33 3b       	mov	r11,51
80002800:	0c 9c       	mov	r12,r6
80002802:	f0 1f 00 22 	mcall	80002888 <CANSendMsg+0x128>
		CAN2515ByteWrite(Channel, TXB0EID0, (IdentifierS & 0xff));
80002806:	f5 d3 c0 08 	bfextu	r10,r3,0x0,0x8
8000280a:	33 4b       	mov	r11,52
8000280c:	0c 9c       	mov	r12,r6
8000280e:	f0 1f 00 1f 	mcall	80002888 <CANSendMsg+0x128>
80002812:	30 85       	mov	r5,8
80002814:	ea 02 18 00 	cp.b	r2,r5
80002818:	e4 05 17 80 	movls	r5,r2
8000281c:	f9 b5 0b 08 	movhi	r5,8
	}

	if( MsgSizeS > 8 )
		MsgSizeS = 8;

	if( r==82) //Remote frame
80002820:	e0 41 00 52 	cp.w	r1,82
80002824:	c1 01       	brne	80002844 <CANSendMsg+0xe4>
		{
			CAN2515ByteWrite(Channel, TXB0DLC, (MsgSizeS |=0x40));  //Set DLC
80002826:	a7 a5       	sbr	r5,0x6
80002828:	5c 55       	castu.b	r5
8000282a:	0a 9a       	mov	r10,r5
8000282c:	33 5b       	mov	r11,53
8000282e:	0c 9c       	mov	r12,r6
80002830:	f0 1f 00 16 	mcall	80002888 <CANSendMsg+0x128>
			dip204_set_cursor_position(17,4);
80002834:	30 4b       	mov	r11,4
80002836:	31 1c       	mov	r12,17
80002838:	f0 1f 00 15 	mcall	8000288c <CANSendMsg+0x12c>
			dip204_printf_string("Re F");
8000283c:	49 5c       	lddpc	r12,80002890 <CANSendMsg+0x130>
8000283e:	f0 1f 00 16 	mcall	80002894 <CANSendMsg+0x134>
80002842:	c0 68       	rjmp	8000284e <CANSendMsg+0xee>
		}
	else // No remote frame
		{
		CAN2515ByteWrite(Channel, TXB0DLC, MsgSizeS);  //Set DLC
80002844:	0a 9a       	mov	r10,r5
80002846:	33 5b       	mov	r11,53
80002848:	0c 9c       	mov	r12,r6
8000284a:	f0 1f 00 10 	mcall	80002888 <CANSendMsg+0x128>
		}

	int temp;
	for( temp = 0; temp < MsgSizeS; temp++ )
8000284e:	58 05       	cp.w	r5,0
80002850:	e0 8a 00 0e 	brle	8000286c <CANSendMsg+0x10c>
80002854:	30 07       	mov	r7,0
	  CAN2515ByteWrite( Channel, TXB0D0+temp, MsgS[temp] );
80002856:	0e 9b       	mov	r11,r7
80002858:	2c ab       	sub	r11,-54
8000285a:	e8 07 07 0a 	ld.ub	r10,r4[r7]
8000285e:	5c 5b       	castu.b	r11
80002860:	0c 9c       	mov	r12,r6
80002862:	f0 1f 00 0a 	mcall	80002888 <CANSendMsg+0x128>
		{
		CAN2515ByteWrite(Channel, TXB0DLC, MsgSizeS);  //Set DLC
		}

	int temp;
	for( temp = 0; temp < MsgSizeS; temp++ )
80002866:	2f f7       	sub	r7,-1
80002868:	0a 37       	cp.w	r7,r5
8000286a:	cf 65       	brlt	80002856 <CANSendMsg+0xf6>
	  CAN2515ByteWrite( Channel, TXB0D0+temp, MsgS[temp] );

	CAN2515ByteWrite( Channel, TXB0CTRL, 0x08 ); //Start Transmission.
8000286c:	30 8a       	mov	r10,8
8000286e:	33 0b       	mov	r11,48
80002870:	0c 9c       	mov	r12,r6
80002872:	f0 1f 00 06 	mcall	80002888 <CANSendMsg+0x128>
80002876:	e3 cf 90 fe 	ldm	sp++,r1-r7,pc,r12=1

	// wait for TXB0 to get ready.  If not ready within XMIT_TIMEOUT ms,then return false
	while( CAN2515ByteRead( Channel, TXB0CTRL ) & 0x08 ) //TXREQ == 1
	{
		delay_ms( 1 );
		if( WaitCntr++ >= XMIT_TIMEOUT )
8000287a:	e0 47 00 64 	cp.w	r7,100
8000287e:	c9 01       	brne	8000279e <CANSendMsg+0x3e>
80002880:	e3 cf 80 fe 	ldm	sp++,r1-r7,pc,r12=0
80002884:	80 00       	ld.sh	r0,r0[0x0]
80002886:	25 c0       	sub	r0,92
80002888:	80 00       	ld.sh	r0,r0[0x0]
8000288a:	23 2c       	sub	r12,50
8000288c:	80 00       	ld.sh	r0,r0[0x0]
8000288e:	34 30       	mov	r0,67
80002890:	80 00       	ld.sh	r0,r0[0x0]
80002892:	9a 74       	ld.sh	r4,sp[0xe]
80002894:	80 00       	ld.sh	r0,r0[0x0]
80002896:	33 98       	mov	r8,57

80002898 <CANGetMsg>:
 * Note:            None.
 *
 * Example:         CANGetMsg(0, &Ident, msg, &mSize );
 ********************************************************************/
Bool CANGetMsg( int Channel, UINT32* pIdentifier, UINT8* Msg, UINT8* pMsgSize )
{
80002898:	d4 31       	pushm	r0-r7,lr
8000289a:	18 95       	mov	r5,r12
8000289c:	16 92       	mov	r2,r11
8000289e:	14 93       	mov	r3,r10
800028a0:	12 94       	mov	r4,r9
        int temp;
        UINT8 loc, S1, S2, S3, S4;

        temp = ReadStatus2515(Channel);
800028a2:	f0 1f 00 4c 	mcall	800029d0 <CANGetMsg+0x138>

        if( (temp & 3) == 0 )
800028a6:	f9 dc c0 02 	bfextu	r12,r12,0x0,0x2
800028aa:	e0 80 00 91 	breq	800029cc <CANGetMsg+0x134>
            return FALSE;
        temp&=0x03;
        if(temp==1){
800028ae:	58 1c       	cp.w	r12,1
800028b0:	c0 31       	brne	800028b6 <CANGetMsg+0x1e>
800028b2:	36 16       	mov	r6,97
800028b4:	c0 58       	rjmp	800028be <CANGetMsg+0x26>
            loc=0x61;
        }
        else if (temp==2){
800028b6:	58 2c       	cp.w	r12,2
800028b8:	e0 81 00 8a 	brne	800029cc <CANGetMsg+0x134>
800028bc:	37 16       	mov	r6,113
        }
        else{
            return FALSE;
        }

        S1=CAN2515ByteRead(Channel, loc);
800028be:	0c 9b       	mov	r11,r6
800028c0:	0a 9c       	mov	r12,r5
800028c2:	f0 1f 00 45 	mcall	800029d4 <CANGetMsg+0x13c>
800028c6:	18 91       	mov	r1,r12
        S2=CAN2515ByteRead(Channel, loc+1);
800028c8:	ec cb ff ff 	sub	r11,r6,-1
800028cc:	5c 5b       	castu.b	r11
800028ce:	0a 9c       	mov	r12,r5
800028d0:	f0 1f 00 41 	mcall	800029d4 <CANGetMsg+0x13c>
800028d4:	18 97       	mov	r7,r12
        S3=CAN2515ByteRead(Channel, loc+2);
800028d6:	ec cb ff fe 	sub	r11,r6,-2
800028da:	5c 5b       	castu.b	r11
800028dc:	0a 9c       	mov	r12,r5
800028de:	f0 1f 00 3e 	mcall	800029d4 <CANGetMsg+0x13c>
800028e2:	18 90       	mov	r0,r12
        S4=CAN2515ByteRead(Channel, loc+3);
800028e4:	ec cb ff fd 	sub	r11,r6,-3
800028e8:	5c 5b       	castu.b	r11
800028ea:	0a 9c       	mov	r12,r5
800028ec:	f0 1f 00 3a 	mcall	800029d4 <CANGetMsg+0x13c>

        if (((S2>>3)&0x01)==0) //format the 11 bit identifier
800028f0:	f1 d7 c0 68 	bfextu	r8,r7,0x3,0x8
800028f4:	f3 d8 c0 01 	bfextu	r9,r8,0x0,0x1
800028f8:	c0 71       	brne	80002906 <CANGetMsg+0x6e>
        {
            *pIdentifier = S1<<3 | S2>>5;
800028fa:	ef d7 c0 a8 	bfextu	r7,r7,0x5,0x8
800028fe:	ef e1 10 31 	or	r1,r7,r1<<0x3
80002902:	85 01       	st.w	r2[0x0],r1
80002904:	c0 e8       	rjmp	80002920 <CANGetMsg+0x88>

        }
        else if (((S2>>3)&0x01)==1) //format the 29 bit identifier
        {
            *pIdentifier =  (S1<<21 |((S2>>3 & 0x1c)|(S2&0x03))<<16 | S3 <<8 |  S4);
80002906:	a9 60       	lsl	r0,0x8
80002908:	e1 e1 11 51 	or	r1,r0,r1<<0x15
8000290c:	e3 ec 10 0c 	or	r12,r1,r12
80002910:	e2 18 00 1c 	andl	r8,0x1c,COH
80002914:	ef d7 c0 02 	bfextu	r7,r7,0x0,0x2
80002918:	0e 48       	or	r8,r7
8000291a:	f9 e8 11 0c 	or	r12,r12,r8<<0x10
8000291e:	85 0c       	st.w	r2[0x0],r12
        }

        *pMsgSize = CAN2515ByteRead(Channel, loc+4) & 0x0F; //Data Length
80002920:	ec cb ff fc 	sub	r11,r6,-4
80002924:	5c 5b       	castu.b	r11
80002926:	0a 9c       	mov	r12,r5
80002928:	f0 1f 00 2b 	mcall	800029d4 <CANGetMsg+0x13c>
8000292c:	f9 dc c0 04 	bfextu	r12,r12,0x0,0x4
80002930:	a8 8c       	st.b	r4[0x0],r12

        if(*pMsgSize>8)
80002932:	30 88       	mov	r8,8
80002934:	f0 0c 18 00 	cp.b	r12,r8
80002938:	e0 88 00 07 	brls	80002946 <CANGetMsg+0xae>
            *pMsgSize = 8;
8000293c:	a8 88       	st.b	r4[0x0],r8
8000293e:	2f b6       	sub	r6,-5
80002940:	5c 56       	castu.b	r6
80002942:	30 07       	mov	r7,0
80002944:	c0 58       	rjmp	8000294e <CANGetMsg+0xb6>

        for( temp = 0; temp < *pMsgSize; temp++ ){
80002946:	58 0c       	cp.w	r12,0
80002948:	fe 99 ff fb 	brgt	8000293e <CANGetMsg+0xa6>
8000294c:	c0 e8       	rjmp	80002968 <CANGetMsg+0xd0>
            Msg[temp] = CAN2515ByteRead(Channel, loc+5+temp);
8000294e:	0c 9b       	mov	r11,r6
80002950:	0a 9c       	mov	r12,r5
80002952:	f0 1f 00 21 	mcall	800029d4 <CANGetMsg+0x13c>
80002956:	e6 07 0b 0c 	st.b	r3[r7],r12
        *pMsgSize = CAN2515ByteRead(Channel, loc+4) & 0x0F; //Data Length

        if(*pMsgSize>8)
            *pMsgSize = 8;

        for( temp = 0; temp < *pMsgSize; temp++ ){
8000295a:	2f f7       	sub	r7,-1
8000295c:	2f f6       	sub	r6,-1
8000295e:	5c 56       	castu.b	r6
80002960:	09 88       	ld.ub	r8,r4[0x0]
80002962:	0e 38       	cp.w	r8,r7
80002964:	fe 99 ff f5 	brgt	8000294e <CANGetMsg+0xb6>

        // Here the RXRTR bit is check to see if a remote frame was received.
        // Here is the identifier of the remote frame being set. When a remote frame messages with the same identifier as defined here the
        //node will respond with a user predefined message.
        //UINT8 RemoteFrameId=User defined;
        if ( ((CAN2515ByteRead( Channel, RXB0CTRL ) & 0x08) || (CAN2515ByteRead( Channel, RXB1CTRL ) & 0x08)) && *pIdentifier==RemoteFrameId)
80002968:	36 0b       	mov	r11,96
8000296a:	0a 9c       	mov	r12,r5
8000296c:	f0 1f 00 1a 	mcall	800029d4 <CANGetMsg+0x13c>
80002970:	e2 1c 00 08 	andl	r12,0x8,COH
80002974:	c0 81       	brne	80002984 <CANGetMsg+0xec>
80002976:	37 0b       	mov	r11,112
80002978:	0a 9c       	mov	r12,r5
8000297a:	f0 1f 00 17 	mcall	800029d4 <CANGetMsg+0x13c>
8000297e:	e2 1c 00 08 	andl	r12,0x8,COH
80002982:	c1 a0       	breq	800029b6 <CANGetMsg+0x11e>
80002984:	64 08       	ld.w	r8,r2[0x0]
80002986:	58 18       	cp.w	r8,1
80002988:	c1 71       	brne	800029b6 <CANGetMsg+0x11e>
                    {
                    Msg[0] = 0;
8000298a:	30 08       	mov	r8,0
8000298c:	a6 88       	st.b	r3[0x0],r8
                    Msg[1] = 1;
8000298e:	30 18       	mov	r8,1
80002990:	a6 98       	st.b	r3[0x1],r8
                    Msg[2] = 2;
80002992:	30 28       	mov	r8,2
80002994:	a6 a8       	st.b	r3[0x2],r8
                    Msg[3] = 3;
80002996:	30 38       	mov	r8,3
80002998:	a6 b8       	st.b	r3[0x3],r8

                    CANSendMsg( Channel,*pIdentifier, Msg, 4, 0 );
8000299a:	30 08       	mov	r8,0
8000299c:	30 49       	mov	r9,4
8000299e:	06 9a       	mov	r10,r3
800029a0:	64 0b       	ld.w	r11,r2[0x0]
800029a2:	0a 9c       	mov	r12,r5
800029a4:	f0 1f 00 0d 	mcall	800029d8 <CANGetMsg+0x140>
                    dip204_set_cursor_position(17,4);
800029a8:	30 4b       	mov	r11,4
800029aa:	31 1c       	mov	r12,17
800029ac:	f0 1f 00 0c 	mcall	800029dc <CANGetMsg+0x144>
                    dip204_printf_string("Re F");
800029b0:	48 cc       	lddpc	r12,800029e0 <CANGetMsg+0x148>
800029b2:	f0 1f 00 0d 	mcall	800029e4 <CANGetMsg+0x14c>
                }

        //clear CANINTF RX01F_RESET=0x00. To be able to receive new messages
        CAN2515ByteWrite(0,CANINTF,RX0IF_RESET);
800029b6:	30 0a       	mov	r10,0
800029b8:	32 cb       	mov	r11,44
800029ba:	14 9c       	mov	r12,r10
800029bc:	f0 1f 00 0b 	mcall	800029e8 <CANGetMsg+0x150>
        CAN2515ByteWrite(0,CANINTF,RX1IF_RESET);
800029c0:	30 0a       	mov	r10,0
800029c2:	32 cb       	mov	r11,44
800029c4:	14 9c       	mov	r12,r10
800029c6:	f0 1f 00 09 	mcall	800029e8 <CANGetMsg+0x150>
800029ca:	da 3a       	popm	r0-r7,pc,r12=1

    return TRUE;
800029cc:	d8 3a       	popm	r0-r7,pc,r12=0
800029ce:	00 00       	add	r0,r0
800029d0:	80 00       	ld.sh	r0,r0[0x0]
800029d2:	22 a0       	sub	r0,42
800029d4:	80 00       	ld.sh	r0,r0[0x0]
800029d6:	25 c0       	sub	r0,92
800029d8:	80 00       	ld.sh	r0,r0[0x0]
800029da:	27 60       	sub	r0,118
800029dc:	80 00       	ld.sh	r0,r0[0x0]
800029de:	34 30       	mov	r0,67
800029e0:	80 00       	ld.sh	r0,r0[0x0]
800029e2:	9a 74       	ld.sh	r4,sp[0xe]
800029e4:	80 00       	ld.sh	r0,r0[0x0]
800029e6:	33 98       	mov	r8,57
800029e8:	80 00       	ld.sh	r0,r0[0x0]
800029ea:	23 2c       	sub	r12,50

800029ec <nodeCount>:
	printDisp.ownLight = readLight;
	printDisp.ownTemp = readTemp;
}

void nodeCount(void)
{
800029ec:	48 98       	lddpc	r8,80002a10 <nodeCount+0x24>
	
	printDisp.ownLight = readLight;
	printDisp.ownTemp = readTemp;
}

void nodeCount(void)
800029ee:	f0 cb ff 6a 	sub	r11,r8,-150
800029f2:	30 0a       	mov	r10,0
	UINT8 nodes = 0;

	// 15 addresses available
	for(int j = 0; j < 15 ; ++j)
	{
		ids = sendFrame[j].ID;
800029f4:	90 09       	ld.sh	r9,r8[0x0]
		//If there was a node found at the j'th bit 1 is added to l
		if(ids != 0)
800029f6:	58 09       	cp.w	r9,0
800029f8:	c0 30       	breq	800029fe <nodeCount+0x12>
		{
			++nodes;
800029fa:	2f fa       	sub	r10,-1
800029fc:	5c 5a       	castu.b	r10
800029fe:	2f 68       	sub	r8,-10
{
	// Count nodes by iterating over addresses 
	UINT8 nodes = 0;

	// 15 addresses available
	for(int j = 0; j < 15 ; ++j)
80002a00:	16 38       	cp.w	r8,r11
80002a02:	cf 91       	brne	800029f4 <nodeCount+0x8>
80002a04:	48 48       	lddpc	r8,80002a14 <nodeCount+0x28>
80002a06:	b0 09       	st.h	r8[0x0],r9
		{
			++nodes;
		}
	}
	
	printDisp.nodes = nodes;	
80002a08:	48 48       	lddpc	r8,80002a18 <nodeCount+0x2c>
80002a0a:	b0 0a       	st.h	r8[0x0],r10
}
80002a0c:	5e fc       	retal	r12
80002a0e:	00 00       	add	r0,r0
80002a10:	00 00       	add	r0,r0
80002a12:	07 cc       	ld.ub	r12,r3[0x4]
80002a14:	00 00       	add	r0,r0
80002a16:	06 7c       	tst	r12,r3
80002a18:	00 00       	add	r0,r0
80002a1a:	07 be       	ld.ub	lr,r3[0x3]

80002a1c <receiveMsg>:
	dip204_init(100,1);
	dip204_clear_display();
}

void receiveMsg(void)
{
80002a1c:	d4 01       	pushm	lr
	//Clear memory contents
	ClearMessages(msg);
80002a1e:	49 1c       	lddpc	r12,80002a60 <receiveMsg+0x44>
80002a20:	f0 1f 00 11 	mcall	80002a64 <receiveMsg+0x48>
	
	//Read any message available
	if(CANRxReady(0))
80002a24:	30 0c       	mov	r12,0
80002a26:	f0 1f 00 11 	mcall	80002a68 <receiveMsg+0x4c>
80002a2a:	c1 90       	breq	80002a5c <receiveMsg+0x40>
	{
		if( CANGetMsg(0, &Ident, msg, &mSize )) // Gets message and returns //TRUE if message received.
80002a2c:	49 09       	lddpc	r9,80002a6c <receiveMsg+0x50>
80002a2e:	48 da       	lddpc	r10,80002a60 <receiveMsg+0x44>
80002a30:	49 0b       	lddpc	r11,80002a70 <receiveMsg+0x54>
80002a32:	30 0c       	mov	r12,0
80002a34:	f0 1f 00 10 	mcall	80002a74 <receiveMsg+0x58>
80002a38:	c1 20       	breq	80002a5c <receiveMsg+0x40>
		{
			//Adding received ID to struct
			tempFrame[0x00F & Ident].ID = Ident;
80002a3a:	48 e8       	lddpc	r8,80002a70 <receiveMsg+0x54>
80002a3c:	70 08       	ld.w	r8,r8[0x0]
80002a3e:	f3 d8 c0 04 	bfextu	r9,r8,0x0,0x4
80002a42:	f2 09 00 29 	add	r9,r9,r9<<0x2
80002a46:	48 da       	lddpc	r10,80002a78 <receiveMsg+0x5c>
80002a48:	f4 09 00 19 	add	r9,r10,r9<<0x1
80002a4c:	12 b8       	st.h	r9++,r8
80002a4e:	48 58       	lddpc	r8,80002a60 <receiveMsg+0x44>
	config_dpi204();
	dip204_init(100,1);
	dip204_clear_display();
}

void receiveMsg(void)
80002a50:	f0 cb ff f8 	sub	r11,r8,-8
		
			//Adding frame to the struct
			for(int i = 0; i < 8; ++i)
			{
				//Adding received message to struct
				tempFrame[0x00F & Ident].mssg[i] = msg[i];
80002a54:	11 3a       	ld.ub	r10,r8++
80002a56:	12 ca       	st.b	r9++,r10
		{
			//Adding received ID to struct
			tempFrame[0x00F & Ident].ID = Ident;
		
			//Adding frame to the struct
			for(int i = 0; i < 8; ++i)
80002a58:	16 38       	cp.w	r8,r11
80002a5a:	cf d1       	brne	80002a54 <receiveMsg+0x38>
80002a5c:	d8 02       	popm	pc
80002a5e:	00 00       	add	r0,r0
80002a60:	00 00       	add	r0,r0
80002a62:	07 14       	ld.sh	r4,r3++
80002a64:	80 00       	ld.sh	r0,r0[0x0]
80002a66:	21 6c       	sub	r12,22
80002a68:	80 00       	ld.sh	r0,r0[0x0]
80002a6a:	22 f0       	sub	r0,47
80002a6c:	00 00       	add	r0,r0
80002a6e:	07 ca       	ld.ub	r10,r3[0x4]
80002a70:	00 00       	add	r0,r0
80002a72:	08 64       	and	r4,r4
80002a74:	80 00       	ld.sh	r0,r0[0x0]
80002a76:	28 98       	sub	r8,-119
80002a78:	00 00       	add	r0,r0
80002a7a:	06 7e       	tst	lr,r3

80002a7c <initBoard>:
	dip204_set_cursor_position(4, 4);
	dip204_printf_string("%d",  printDisp.night);
	dip204_hide_cursor();
}
void initBoard(void)
{
80002a7c:	d4 01       	pushm	lr
80002a7e:	4a e8       	lddpc	r8,80002b34 <initBoard+0xb8>
	dip204_printf_string("%d",  printDisp.averLight);
	dip204_set_cursor_position(4, 4);
	dip204_printf_string("%d",  printDisp.night);
	dip204_hide_cursor();
}
void initBoard(void)
80002a80:	f0 ca ff 6a 	sub	r10,r8,-150
{
	for(int i = 0; i < 15; ++i)
	{
		emptyStruct[i].ID = 0;
80002a84:	30 09       	mov	r9,0
80002a86:	b0 09       	st.h	r8[0x0],r9
80002a88:	2f 68       	sub	r8,-10
	dip204_printf_string("%d",  printDisp.night);
	dip204_hide_cursor();
}
void initBoard(void)
{
	for(int i = 0; i < 15; ++i)
80002a8a:	14 38       	cp.w	r8,r10
80002a8c:	cf d1       	brne	80002a86 <initBoard+0xa>
	{
		emptyStruct[i].ID = 0;
	}

	//Enable ADC channels
	adc_enable( &AVR32_ADC, ADC_TEMPERATURE_CHANNEL );
80002a8e:	30 0b       	mov	r11,0
80002a90:	fe 7c 3c 00 	mov	r12,-50176
80002a94:	f0 1f 00 29 	mcall	80002b38 <initBoard+0xbc>
	adc_enable( &AVR32_ADC, ADC_LIGHT_CHANNEL );
80002a98:	30 2b       	mov	r11,2
80002a9a:	fe 7c 3c 00 	mov	r12,-50176
80002a9e:	f0 1f 00 27 	mcall	80002b38 <initBoard+0xbc>

	//spidatareadpointer=&spidataread;
	pm_switch_to_osc0(&AVR32_PM, FOSC0, OSC0_STARTUP);
80002aa2:	30 3a       	mov	r10,3
80002aa4:	e0 6b 1b 00 	mov	r11,6912
80002aa8:	ea 1b 00 b7 	orh	r11,0xb7
80002aac:	fe 7c 0c 00 	mov	r12,-62464
80002ab0:	f0 1f 00 23 	mcall	80002b3c <initBoard+0xc0>
	
	// Configures the MCP2515 SPI  communication.
	config_SPI_SPARE();
80002ab4:	f0 1f 00 23 	mcall	80002b40 <initBoard+0xc4>

	// Enables receive interrupts.
	Disable_global_interrupt();
80002ab8:	d3 03       	ssrf	0x10
	INTC_init_interrupts();
80002aba:	f0 1f 00 23 	mcall	80002b44 <initBoard+0xc8>
	// Register the RTC interrupt handler to the interrupt controller.
	INTC_register_interrupt(&interrupt, AVR32_RTC_IRQ, AVR32_INTC_INT0);
80002abe:	30 0a       	mov	r10,0
80002ac0:	32 8b       	mov	r11,40
80002ac2:	4a 2c       	lddpc	r12,80002b48 <initBoard+0xcc>
80002ac4:	f0 1f 00 22 	mcall	80002b4c <initBoard+0xd0>
	rtc_init(&AVR32_RTC, RTC_OSC_32KHZ, 14);
80002ac8:	30 ea       	mov	r10,14
80002aca:	30 1b       	mov	r11,1
80002acc:	fe 7c 0d 00 	mov	r12,-62208
80002ad0:	f0 1f 00 20 	mcall	80002b50 <initBoard+0xd4>
	// Set top value to 0 to generate an interrupt every seconds */
	rtc_set_top_value(&AVR32_RTC, 0);
80002ad4:	30 0b       	mov	r11,0
80002ad6:	fe 7c 0d 00 	mov	r12,-62208
80002ada:	f0 1f 00 1f 	mcall	80002b54 <initBoard+0xd8>
	// Enable the interrupts
	rtc_enable_interrupt(&AVR32_RTC);
80002ade:	fe 7c 0d 00 	mov	r12,-62208
80002ae2:	f0 1f 00 1e 	mcall	80002b58 <initBoard+0xdc>
	// Enable the RTC
	rtc_enable(&AVR32_RTC);
80002ae6:	fe 7c 0d 00 	mov	r12,-62208
80002aea:	f0 1f 00 1d 	mcall	80002b5c <initBoard+0xe0>
	
	// Button interrupt
	INTC_register_interrupt(&but_interrupt, (AVR32_GPIO_IRQ_0+Switch1/8), AVR32_INTC_INT0);
80002aee:	30 0a       	mov	r10,0
80002af0:	34 bb       	mov	r11,75
80002af2:	49 cc       	lddpc	r12,80002b60 <initBoard+0xe4>
80002af4:	f0 1f 00 16 	mcall	80002b4c <initBoard+0xd0>
	gpio_enable_pin_glitch_filter(Switch1);
80002af8:	35 8c       	mov	r12,88
80002afa:	f0 1f 00 1b 	mcall	80002b64 <initBoard+0xe8>
	gpio_enable_pin_interrupt(Switch1, GPIO_FALLING_EDGE);
80002afe:	30 2b       	mov	r11,2
80002b00:	35 8c       	mov	r12,88
80002b02:	f0 1f 00 1a 	mcall	80002b68 <initBoard+0xec>
	
	// Receive interrupt
	INTC_register_interrupt(&RX_interrupt, (AVR32_GPIO_IRQ_0+RX/8), AVR32_INTC_INT0);
80002b06:	30 0a       	mov	r10,0
80002b08:	34 3b       	mov	r11,67
80002b0a:	49 9c       	lddpc	r12,80002b6c <initBoard+0xf0>
80002b0c:	f0 1f 00 10 	mcall	80002b4c <initBoard+0xd0>
	gpio_enable_pin_glitch_filter(RX);
80002b10:	31 dc       	mov	r12,29
80002b12:	f0 1f 00 15 	mcall	80002b64 <initBoard+0xe8>
	gpio_enable_pin_interrupt(RX, GPIO_RISING_EDGE);
80002b16:	30 1b       	mov	r11,1
80002b18:	31 dc       	mov	r12,29
80002b1a:	f0 1f 00 14 	mcall	80002b68 <initBoard+0xec>
	
	Enable_global_interrupt();
80002b1e:	d5 03       	csrf	0x10
	// Delay to let the Oscillator get started
	delay_init(FOSC0);
	
	// Initializes the display
	config_dpi204();
80002b20:	f0 1f 00 14 	mcall	80002b70 <initBoard+0xf4>
	dip204_init(100,1);
80002b24:	30 1b       	mov	r11,1
80002b26:	36 4c       	mov	r12,100
80002b28:	f0 1f 00 13 	mcall	80002b74 <initBoard+0xf8>
	dip204_clear_display();
80002b2c:	f0 1f 00 13 	mcall	80002b78 <initBoard+0xfc>
}
80002b30:	d8 02       	popm	pc
80002b32:	00 00       	add	r0,r0
80002b34:	00 00       	add	r0,r0
80002b36:	07 28       	ld.uh	r8,r3++
80002b38:	80 00       	ld.sh	r0,r0[0x0]
80002b3a:	20 0e       	sub	lr,0
80002b3c:	80 00       	ld.sh	r0,r0[0x0]
80002b3e:	3a 5c       	mov	r12,-91
80002b40:	80 00       	ld.sh	r0,r0[0x0]
80002b42:	22 0c       	sub	r12,32
80002b44:	80 00       	ld.sh	r0,r0[0x0]
80002b46:	38 f0       	mov	r0,-113
80002b48:	80 00       	ld.sh	r0,r0[0x0]
80002b4a:	2c 84       	sub	r4,-56
80002b4c:	80 00       	ld.sh	r0,r0[0x0]
80002b4e:	38 70       	mov	r0,-121
80002b50:	80 00       	ld.sh	r0,r0[0x0]
80002b52:	20 ec       	sub	r12,14
80002b54:	80 00       	ld.sh	r0,r0[0x0]
80002b56:	20 a8       	sub	r8,10
80002b58:	80 00       	ld.sh	r0,r0[0x0]
80002b5a:	20 a0       	sub	r0,10
80002b5c:	80 00       	ld.sh	r0,r0[0x0]
80002b5e:	20 7c       	sub	r12,7
80002b60:	80 00       	ld.sh	r0,r0[0x0]
80002b62:	2f e0       	sub	r0,-2
80002b64:	80 00       	ld.sh	r0,r0[0x0]
80002b66:	37 fc       	mov	r12,127
80002b68:	80 00       	ld.sh	r0,r0[0x0]
80002b6a:	38 12       	mov	r2,-127
80002b6c:	80 00       	ld.sh	r0,r0[0x0]
80002b6e:	2f c4       	sub	r4,-4
80002b70:	80 00       	ld.sh	r0,r0[0x0]
80002b72:	21 80       	sub	r0,24
80002b74:	80 00       	ld.sh	r0,r0[0x0]
80002b76:	35 18       	mov	r8,81
80002b78:	80 00       	ld.sh	r0,r0[0x0]
80002b7a:	34 bc       	mov	r12,75

80002b7c <printLCD>:
		}
}


void printLCD(void)
{
80002b7c:	eb cd 40 c0 	pushm	r6-r7,lr
	dip204_clear_display();
80002b80:	f0 1f 00 35 	mcall	80002c54 <printLCD+0xd8>
	dip204_set_cursor_position(1, 1);
80002b84:	30 1b       	mov	r11,1
80002b86:	16 9c       	mov	r12,r11
80002b88:	f0 1f 00 34 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("Active nodes:");
80002b8c:	4b 4c       	lddpc	r12,80002c5c <printLCD+0xe0>
80002b8e:	f0 1f 00 35 	mcall	80002c60 <printLCD+0xe4>
	dip204_set_cursor_position(1, 3);
80002b92:	30 3b       	mov	r11,3
80002b94:	30 1c       	mov	r12,1
80002b96:	f0 1f 00 31 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("O T:");
80002b9a:	4b 3c       	lddpc	r12,80002c64 <printLCD+0xe8>
80002b9c:	f0 1f 00 31 	mcall	80002c60 <printLCD+0xe4>
	dip204_set_cursor_position(1, 4);
80002ba0:	30 4b       	mov	r11,4
80002ba2:	30 1c       	mov	r12,1
80002ba4:	f0 1f 00 2d 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("N:");
80002ba8:	4b 0c       	lddpc	r12,80002c68 <printLCD+0xec>
80002baa:	f0 1f 00 2e 	mcall	80002c60 <printLCD+0xe4>
	dip204_set_cursor_position(10, 3); 
80002bae:	30 3b       	mov	r11,3
80002bb0:	30 ac       	mov	r12,10
80002bb2:	f0 1f 00 2a 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("A T:");
80002bb6:	4a ec       	lddpc	r12,80002c6c <printLCD+0xf0>
80002bb8:	f0 1f 00 2a 	mcall	80002c60 <printLCD+0xe4>
	dip204_set_cursor_position(1, 2);
80002bbc:	30 2b       	mov	r11,2
80002bbe:	30 1c       	mov	r12,1
80002bc0:	f0 1f 00 26 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("O L:");
80002bc4:	4a bc       	lddpc	r12,80002c70 <printLCD+0xf4>
80002bc6:	f0 1f 00 27 	mcall	80002c60 <printLCD+0xe4>
	dip204_set_cursor_position(10, 2);
80002bca:	30 2b       	mov	r11,2
80002bcc:	30 ac       	mov	r12,10
80002bce:	f0 1f 00 23 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("A L:");
80002bd2:	4a 9c       	lddpc	r12,80002c74 <printLCD+0xf8>
80002bd4:	f0 1f 00 23 	mcall	80002c60 <printLCD+0xe4>
	dip204_set_cursor_position(15, 1);
80002bd8:	30 1b       	mov	r11,1
80002bda:	30 fc       	mov	r12,15
80002bdc:	f0 1f 00 1f 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("%d", printDisp.nodes);
80002be0:	4a 67       	lddpc	r7,80002c78 <printLCD+0xfc>
80002be2:	4a 76       	lddpc	r6,80002c7c <printLCD+0x100>
80002be4:	8c 88       	ld.uh	r8,r6[0x0]
80002be6:	1a d8       	st.w	--sp,r8
80002be8:	0e 9c       	mov	r12,r7
80002bea:	f0 1f 00 1e 	mcall	80002c60 <printLCD+0xe4>
	dip204_set_cursor_position(6, 2);
80002bee:	30 2b       	mov	r11,2
80002bf0:	30 6c       	mov	r12,6
80002bf2:	f0 1f 00 1a 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("%d", printDisp.ownLight);
80002bf6:	8c 98       	ld.uh	r8,r6[0x2]
80002bf8:	1a d8       	st.w	--sp,r8
80002bfa:	0e 9c       	mov	r12,r7
80002bfc:	f0 1f 00 19 	mcall	80002c60 <printLCD+0xe4>
	dip204_set_cursor_position(6, 3);
80002c00:	30 3b       	mov	r11,3
80002c02:	30 6c       	mov	r12,6
80002c04:	f0 1f 00 15 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("%d", printDisp.ownTemp);
80002c08:	8c a8       	ld.uh	r8,r6[0x4]
80002c0a:	1a d8       	st.w	--sp,r8
80002c0c:	0e 9c       	mov	r12,r7
80002c0e:	f0 1f 00 15 	mcall	80002c60 <printLCD+0xe4>
	dip204_set_cursor_position(15, 3);
80002c12:	30 3b       	mov	r11,3
80002c14:	30 fc       	mov	r12,15
80002c16:	f0 1f 00 11 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("%d",  printDisp.averTemp);
80002c1a:	8c c8       	ld.uh	r8,r6[0x8]
80002c1c:	1a d8       	st.w	--sp,r8
80002c1e:	0e 9c       	mov	r12,r7
80002c20:	f0 1f 00 10 	mcall	80002c60 <printLCD+0xe4>
	dip204_set_cursor_position(15, 2);
80002c24:	30 2b       	mov	r11,2
80002c26:	30 fc       	mov	r12,15
80002c28:	f0 1f 00 0c 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("%d",  printDisp.averLight);
80002c2c:	8c b8       	ld.uh	r8,r6[0x6]
80002c2e:	1a d8       	st.w	--sp,r8
80002c30:	0e 9c       	mov	r12,r7
80002c32:	f0 1f 00 0c 	mcall	80002c60 <printLCD+0xe4>
	dip204_set_cursor_position(4, 4);
80002c36:	30 4b       	mov	r11,4
80002c38:	16 9c       	mov	r12,r11
80002c3a:	f0 1f 00 08 	mcall	80002c58 <printLCD+0xdc>
	dip204_printf_string("%d",  printDisp.night);
80002c3e:	8c d8       	ld.uh	r8,r6[0xa]
80002c40:	1a d8       	st.w	--sp,r8
80002c42:	0e 9c       	mov	r12,r7
80002c44:	f0 1f 00 07 	mcall	80002c60 <printLCD+0xe4>
	dip204_hide_cursor();
80002c48:	f0 1f 00 0e 	mcall	80002c80 <printLCD+0x104>
80002c4c:	2f ad       	sub	sp,-24
}
80002c4e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002c52:	00 00       	add	r0,r0
80002c54:	80 00       	ld.sh	r0,r0[0x0]
80002c56:	34 bc       	mov	r12,75
80002c58:	80 00       	ld.sh	r0,r0[0x0]
80002c5a:	34 30       	mov	r0,67
80002c5c:	80 00       	ld.sh	r0,r0[0x0]
80002c5e:	9a 7c       	ld.sh	r12,sp[0xe]
80002c60:	80 00       	ld.sh	r0,r0[0x0]
80002c62:	33 98       	mov	r8,57
80002c64:	80 00       	ld.sh	r0,r0[0x0]
80002c66:	9a 8c       	ld.uh	r12,sp[0x0]
80002c68:	80 00       	ld.sh	r0,r0[0x0]
80002c6a:	9a 94       	ld.uh	r4,sp[0x2]
80002c6c:	80 00       	ld.sh	r0,r0[0x0]
80002c6e:	9a 98       	ld.uh	r8,sp[0x2]
80002c70:	80 00       	ld.sh	r0,r0[0x0]
80002c72:	9a a0       	ld.uh	r0,sp[0x4]
80002c74:	80 00       	ld.sh	r0,r0[0x0]
80002c76:	9a a8       	ld.uh	r8,sp[0x4]
80002c78:	80 00       	ld.sh	r0,r0[0x0]
80002c7a:	9a b0       	ld.uh	r0,sp[0x6]
80002c7c:	00 00       	add	r0,r0
80002c7e:	07 be       	ld.ub	lr,r3[0x3]
80002c80:	80 00       	ld.sh	r0,r0[0x0]
80002c82:	34 8c       	mov	r12,72

80002c84 <interrupt>:
}

void printLCD(void);

__attribute__((__interrupt__)) static void interrupt(void)
{	
80002c84:	eb cd 40 f8 	pushm	r3-r7,lr
80002c88:	4b e6       	lddpc	r6,80002d80 <interrupt+0xfc>
80002c8a:	30 07       	mov	r7,0
	// Send message every second on rtc interrupt
	for(int i = 0; i < 15; ++i)
	{
		sendFrame[i] = tempFrame[i];
80002c8c:	4b e4       	lddpc	r4,80002d84 <interrupt+0x100>
80002c8e:	30 a5       	mov	r5,10
		tempFrame[i] = emptyStruct[i];
80002c90:	4b e3       	lddpc	r3,80002d88 <interrupt+0x104>
__attribute__((__interrupt__)) static void interrupt(void)
{	
	// Send message every second on rtc interrupt
	for(int i = 0; i < 15; ++i)
	{
		sendFrame[i] = tempFrame[i];
80002c92:	0a 9a       	mov	r10,r5
80002c94:	0c 9b       	mov	r11,r6
80002c96:	e8 07 00 0c 	add	r12,r4,r7
80002c9a:	f0 1f 00 3d 	mcall	80002d8c <interrupt+0x108>
		tempFrame[i] = emptyStruct[i];
80002c9e:	0a 9a       	mov	r10,r5
80002ca0:	e6 07 00 0b 	add	r11,r3,r7
80002ca4:	0c 9c       	mov	r12,r6
80002ca6:	f0 1f 00 3a 	mcall	80002d8c <interrupt+0x108>
80002caa:	2f 66       	sub	r6,-10
80002cac:	2f 67       	sub	r7,-10
void printLCD(void);

__attribute__((__interrupt__)) static void interrupt(void)
{	
	// Send message every second on rtc interrupt
	for(int i = 0; i < 15; ++i)
80002cae:	e0 47 00 96 	cp.w	r7,150
80002cb2:	cf 01       	brne	80002c92 <interrupt+0xe>
		sendFrame[i] = tempFrame[i];
		tempFrame[i] = emptyStruct[i];
	}
	
	//Send message
	if(CANTxReady(0))
80002cb4:	30 0c       	mov	r12,0
80002cb6:	f0 1f 00 37 	mcall	80002d90 <interrupt+0x10c>
80002cba:	c1 00       	breq	80002cda <interrupt+0x56>
	{
		CANSendMsg(0, ownId, sendFrame[0x00F & ownId].mssg, 8, 0);
80002cbc:	4b 68       	lddpc	r8,80002d94 <interrupt+0x110>
80002cbe:	90 8b       	ld.uh	r11,r8[0x0]
80002cc0:	f5 db c0 04 	bfextu	r10,r11,0x0,0x4
80002cc4:	f4 0a 00 2a 	add	r10,r10,r10<<0x2
80002cc8:	4a f8       	lddpc	r8,80002d84 <interrupt+0x100>
80002cca:	f0 0a 00 1a 	add	r10,r8,r10<<0x1
80002cce:	30 08       	mov	r8,0
80002cd0:	30 89       	mov	r9,8
80002cd2:	2f ea       	sub	r10,-2
80002cd4:	10 9c       	mov	r12,r8
80002cd6:	f0 1f 00 31 	mcall	80002d98 <interrupt+0x114>
	}
	
	printLCD();
80002cda:	f0 1f 00 31 	mcall	80002d9c <interrupt+0x118>
	printDisp = emptyDisplay;
80002cde:	30 ca       	mov	r10,12
80002ce0:	4b 0b       	lddpc	r11,80002da0 <interrupt+0x11c>
80002ce2:	4b 1c       	lddpc	r12,80002da4 <interrupt+0x120>
80002ce4:	f0 1f 00 2a 	mcall	80002d8c <interrupt+0x108>
	
	if (warmWarn == 1){
80002ce8:	4b 08       	lddpc	r8,80002da8 <interrupt+0x124>
80002cea:	70 08       	ld.w	r8,r8[0x0]
80002cec:	58 18       	cp.w	r8,1
80002cee:	c1 21       	brne	80002d12 <interrupt+0x8e>
		static int led_state = 0;
		if (led_state == 0) {
80002cf0:	4a f8       	lddpc	r8,80002dac <interrupt+0x128>
80002cf2:	70 08       	ld.w	r8,r8[0x0]
80002cf4:	58 08       	cp.w	r8,0
80002cf6:	c0 81       	brne	80002d06 <interrupt+0x82>
			LED_On(16);
80002cf8:	31 0c       	mov	r12,16
80002cfa:	f0 1f 00 2e 	mcall	80002db0 <interrupt+0x12c>
			led_state = 1;
80002cfe:	30 19       	mov	r9,1
80002d00:	4a b8       	lddpc	r8,80002dac <interrupt+0x128>
80002d02:	91 09       	st.w	r8[0x0],r9
80002d04:	c0 78       	rjmp	80002d12 <interrupt+0x8e>
		}
		else {
			LED_Off(16);
80002d06:	31 0c       	mov	r12,16
80002d08:	f0 1f 00 2b 	mcall	80002db4 <interrupt+0x130>
			led_state = 0;
80002d0c:	30 09       	mov	r9,0
80002d0e:	4a 88       	lddpc	r8,80002dac <interrupt+0x128>
80002d10:	91 09       	st.w	r8[0x0],r9
		}
	}
	if (emergency == 1){
80002d12:	4a a8       	lddpc	r8,80002db8 <interrupt+0x134>
80002d14:	70 08       	ld.w	r8,r8[0x0]
80002d16:	58 18       	cp.w	r8,1
80002d18:	c1 81       	brne	80002d48 <interrupt+0xc4>
		static int led_state = 0;
		if (led_state == 0) {
80002d1a:	4a 98       	lddpc	r8,80002dbc <interrupt+0x138>
80002d1c:	70 08       	ld.w	r8,r8[0x0]
80002d1e:	58 08       	cp.w	r8,0
80002d20:	c0 b1       	brne	80002d36 <interrupt+0xb2>
			LED_On(16);
80002d22:	31 0c       	mov	r12,16
80002d24:	f0 1f 00 23 	mcall	80002db0 <interrupt+0x12c>
			LED_On(64);
80002d28:	34 0c       	mov	r12,64
80002d2a:	f0 1f 00 22 	mcall	80002db0 <interrupt+0x12c>
			led_state = 1;
80002d2e:	30 19       	mov	r9,1
80002d30:	4a 38       	lddpc	r8,80002dbc <interrupt+0x138>
80002d32:	91 09       	st.w	r8[0x0],r9
80002d34:	c0 a8       	rjmp	80002d48 <interrupt+0xc4>
		}
		else {
			LED_Off(16);
80002d36:	31 0c       	mov	r12,16
80002d38:	f0 1f 00 1f 	mcall	80002db4 <interrupt+0x130>
			LED_Off(64);
80002d3c:	34 0c       	mov	r12,64
80002d3e:	f0 1f 00 1e 	mcall	80002db4 <interrupt+0x130>
			led_state = 0;
80002d42:	30 09       	mov	r9,0
80002d44:	49 e8       	lddpc	r8,80002dbc <interrupt+0x138>
80002d46:	91 09       	st.w	r8[0x0],r9
		}
	}
	if (faulty == 1)
80002d48:	49 e8       	lddpc	r8,80002dc0 <interrupt+0x13c>
80002d4a:	70 08       	ld.w	r8,r8[0x0]
80002d4c:	58 18       	cp.w	r8,1
80002d4e:	c1 21       	brne	80002d72 <interrupt+0xee>
	{
		static int led_state = 0;
		if (led_state == 0) {
80002d50:	49 d8       	lddpc	r8,80002dc4 <interrupt+0x140>
80002d52:	70 08       	ld.w	r8,r8[0x0]
80002d54:	58 08       	cp.w	r8,0
80002d56:	c0 81       	brne	80002d66 <interrupt+0xe2>
			LED_On(LED3);
80002d58:	30 8c       	mov	r12,8
80002d5a:	f0 1f 00 16 	mcall	80002db0 <interrupt+0x12c>
			led_state = 1;
80002d5e:	30 19       	mov	r9,1
80002d60:	49 98       	lddpc	r8,80002dc4 <interrupt+0x140>
80002d62:	91 09       	st.w	r8[0x0],r9
80002d64:	c0 78       	rjmp	80002d72 <interrupt+0xee>
		}
		else {
			LED_Off(LED3);
80002d66:	30 8c       	mov	r12,8
80002d68:	f0 1f 00 13 	mcall	80002db4 <interrupt+0x130>
			led_state = 0;
80002d6c:	30 09       	mov	r9,0
80002d6e:	49 68       	lddpc	r8,80002dc4 <interrupt+0x140>
80002d70:	91 09       	st.w	r8[0x0],r9
		}
	}
	
	rtc_clear_interrupt(&AVR32_RTC);
80002d72:	fe 7c 0d 00 	mov	r12,-62208
80002d76:	f0 1f 00 15 	mcall	80002dc8 <interrupt+0x144>
}
80002d7a:	e3 cd 40 f8 	ldm	sp++,r3-r7,lr
80002d7e:	d6 03       	rete
80002d80:	00 00       	add	r0,r0
80002d82:	06 7e       	tst	lr,r3
80002d84:	00 00       	add	r0,r0
80002d86:	07 cc       	ld.ub	r12,r3[0x4]
80002d88:	00 00       	add	r0,r0
80002d8a:	07 28       	ld.uh	r8,r3++
80002d8c:	80 00       	ld.sh	r0,r0[0x0]
80002d8e:	40 74       	lddsp	r4,sp[0x1c]
80002d90:	80 00       	ld.sh	r0,r0[0x0]
80002d92:	23 04       	sub	r4,48
80002d94:	00 00       	add	r0,r0
80002d96:	00 08       	add	r8,r0
80002d98:	80 00       	ld.sh	r0,r0[0x0]
80002d9a:	27 60       	sub	r0,118
80002d9c:	80 00       	ld.sh	r0,r0[0x0]
80002d9e:	2b 7c       	sub	r12,-73
80002da0:	00 00       	add	r0,r0
80002da2:	07 1c       	ld.sh	r12,r3++
80002da4:	00 00       	add	r0,r0
80002da6:	07 be       	ld.ub	lr,r3[0x3]
80002da8:	00 00       	add	r0,r0
80002daa:	05 24       	ld.uh	r4,r2++
80002dac:	00 00       	add	r0,r0
80002dae:	05 18       	ld.sh	r8,r2++
80002db0:	80 00       	ld.sh	r0,r0[0x0]
80002db2:	32 04       	mov	r4,32
80002db4:	80 00       	ld.sh	r0,r0[0x0]
80002db6:	32 54       	mov	r4,37
80002db8:	00 00       	add	r0,r0
80002dba:	05 30       	ld.ub	r0,r2++
80002dbc:	00 00       	add	r0,r0
80002dbe:	05 28       	ld.uh	r8,r2++
80002dc0:	00 00       	add	r0,r0
80002dc2:	05 1c       	ld.sh	r12,r2++
80002dc4:	00 00       	add	r0,r0
80002dc6:	05 2c       	ld.uh	r12,r2++
80002dc8:	80 00       	ld.sh	r0,r0[0x0]
80002dca:	20 cc       	sub	r12,12

80002dcc <average>:
}



void average(void)
{
80002dcc:	d4 31       	pushm	r0-r7,lr
80002dce:	20 9d       	sub	sp,36
	UINT16 night = 0;
	UINT16 warm = 0;	
	UINT16 cold = 0;
	UINT16 lighttot= 0; 
	UINT16 tempertot = 0;
	UINT16 actNodes = printDisp.nodes;
80002dd0:	4f 28       	lddpc	r8,80002f98 <average+0x1cc>
80002dd2:	90 05       	ld.sh	r5,r8[0x0]
80002dd4:	4f 24       	lddpc	r4,80002f9c <average+0x1d0>
80002dd6:	e8 c7 ff fc 	sub	r7,r4,-4
	gpio_clear_pin_interrupt_flag(RX);
}



void average(void)
80002dda:	e8 c1 ff 66 	sub	r1,r4,-154
80002dde:	0e 98       	mov	r8,r7
80002de0:	30 09       	mov	r9,0
80002de2:	12 9a       	mov	r10,r9
	UINT16 warningNode = 0;
	
	//Calculating total light and temp received
	for(int i = 0; i < 15; ++i)
	{
		lighttot += ((((UINT16)sendFrame[i].mssg[2]) << 8 ) | sendFrame[i].mssg[3]);
80002de4:	11 8c       	ld.ub	r12,r8[0x0]
80002de6:	11 9b       	ld.ub	r11,r8[0x1]
80002de8:	f7 ec 10 8b 	or	r11,r11,r12<<0x8
80002dec:	16 0a       	add	r10,r11
80002dee:	5c 8a       	casts.h	r10
		tempertot += ((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]);
80002df0:	f1 3c ff fe 	ld.ub	r12,r8[-2]
80002df4:	f1 3b ff ff 	ld.ub	r11,r8[-1]
80002df8:	f7 ec 10 8b 	or	r11,r11,r12<<0x8
80002dfc:	16 09       	add	r9,r11
80002dfe:	5c 89       	casts.h	r9
80002e00:	2f 68       	sub	r8,-10
	UINT16 tempertot = 0;
	UINT16 actNodes = printDisp.nodes;
	UINT16 warningNode = 0;
	
	//Calculating total light and temp received
	for(int i = 0; i < 15; ++i)
80002e02:	02 38       	cp.w	r8,r1
80002e04:	cf 01       	brne	80002de4 <average+0x18>
80002e06:	4e 62       	lddpc	r2,80002f9c <average+0x1d0>
80002e08:	e4 c3 ff fb 	sub	r3,r2,-5
80002e0c:	2f d2       	sub	r2,-3
80002e0e:	0e 96       	mov	r6,r7
80002e10:	30 08       	mov	r8,0
80002e12:	50 58       	stdsp	sp[0x14],r8
80002e14:	50 78       	stdsp	sp[0x1c],r8
80002e16:	50 68       	stdsp	sp[0x18],r8
		tempertot += ((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]);
	}
	
	for(int i = 0; i < 15; ++i)
	{
		if(((((UINT16)sendFrame[i].mssg[2]) << 8 ) | sendFrame[i].mssg[3]) < ((lighttot/actNodes)/2) && ((((UINT16)sendFrame[i].mssg[2]) << 8 ) | sendFrame[i].mssg[3]) != 0)
80002e18:	5c 7a       	castu.h	r10
80002e1a:	50 4a       	stdsp	sp[0x10],r10
		{
			++night;
		}
		if(((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]) < ((tempertot/actNodes)*0.85) && ((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]) != 0)
80002e1c:	e1 d9 c0 10 	bfextu	r0,r9,0x0,0x10
			sendFrame[i].mssg[0] = 0;
			sendFrame[i].mssg[1] = 0;
			sendFrame[i].mssg[2] = 0;
			sendFrame[i].mssg[3] = 0;
			--actNodes;
			faulty = 1;
80002e20:	50 87       	stdsp	sp[0x20],r7
		tempertot += ((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]);
	}
	
	for(int i = 0; i < 15; ++i)
	{
		if(((((UINT16)sendFrame[i].mssg[2]) << 8 ) | sendFrame[i].mssg[3]) < ((lighttot/actNodes)/2) && ((((UINT16)sendFrame[i].mssg[2]) << 8 ) | sendFrame[i].mssg[3]) != 0)
80002e22:	0d 89       	ld.ub	r9,r6[0x0]
80002e24:	07 88       	ld.ub	r8,r3[0x0]
80002e26:	f1 e9 10 88 	or	r8,r8,r9<<0x8
80002e2a:	f7 d5 c0 10 	bfextu	r11,r5,0x0,0x10
80002e2e:	40 49       	lddsp	r9,sp[0x10]
80002e30:	f2 0b 0d 0a 	divu	r10,r9,r11
80002e34:	f3 da c0 2f 	bfextu	r9,r10,0x1,0xf
80002e38:	12 38       	cp.w	r8,r9
80002e3a:	c0 74       	brge	80002e48 <average+0x7c>
80002e3c:	58 08       	cp.w	r8,0
80002e3e:	c0 50       	breq	80002e48 <average+0x7c>
		{
			++night;
80002e40:	40 68       	lddsp	r8,sp[0x18]
80002e42:	2f f8       	sub	r8,-1
80002e44:	5c 88       	casts.h	r8
80002e46:	50 68       	stdsp	sp[0x18],r8
		}
		if(((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]) < ((tempertot/actNodes)*0.85) && ((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]) != 0)
80002e48:	09 a7       	ld.ub	r7,r4[0x2]
80002e4a:	05 88       	ld.ub	r8,r2[0x0]
80002e4c:	f1 e7 10 87 	or	r7,r8,r7<<0x8
80002e50:	0e 9c       	mov	r12,r7
80002e52:	f0 1f 00 54 	mcall	80002fa0 <average+0x1d4>
80002e56:	fa eb 00 00 	st.d	sp[0],r10
80002e5a:	f3 d5 c0 10 	bfextu	r9,r5,0x0,0x10
80002e5e:	e0 09 0d 08 	divu	r8,r0,r9
80002e62:	f9 d8 c0 10 	bfextu	r12,r8,0x0,0x10
80002e66:	f0 1f 00 4f 	mcall	80002fa0 <average+0x1d4>
80002e6a:	fa eb 00 08 	st.d	sp[8],r10
80002e6e:	e0 68 33 33 	mov	r8,13107
80002e72:	ea 18 33 33 	orh	r8,0x3333
80002e76:	e0 69 33 33 	mov	r9,13107
80002e7a:	ea 19 3f eb 	orh	r9,0x3feb
80002e7e:	f0 1f 00 4a 	mcall	80002fa4 <average+0x1d8>
80002e82:	14 98       	mov	r8,r10
80002e84:	16 99       	mov	r9,r11
80002e86:	fa ea 00 00 	ld.d	r10,sp[0]
80002e8a:	f0 1f 00 48 	mcall	80002fa8 <average+0x1dc>
80002e8e:	c0 70       	breq	80002e9c <average+0xd0>
80002e90:	58 07       	cp.w	r7,0
80002e92:	c0 50       	breq	80002e9c <average+0xd0>
		{
			++warm;
80002e94:	40 78       	lddsp	r8,sp[0x1c]
80002e96:	2f f8       	sub	r8,-1
80002e98:	5c 88       	casts.h	r8
80002e9a:	50 78       	stdsp	sp[0x1c],r8
		}
		if(((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]) > ((tempertot/actNodes)*1.50) && ((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]) != 0)
80002e9c:	30 08       	mov	r8,0
80002e9e:	fc 19 3f f8 	movh	r9,0x3ff8
80002ea2:	fa ea 00 08 	ld.d	r10,sp[8]
80002ea6:	f0 1f 00 40 	mcall	80002fa4 <average+0x1d8>
80002eaa:	fa e8 00 00 	ld.d	r8,sp[0]
80002eae:	f0 1f 00 3f 	mcall	80002fa8 <average+0x1dc>
80002eb2:	c1 10       	breq	80002ed4 <average+0x108>
80002eb4:	58 07       	cp.w	r7,0
80002eb6:	c0 f0       	breq	80002ed4 <average+0x108>
		{
			++cold;
80002eb8:	40 58       	lddsp	r8,sp[0x14]
80002eba:	2f f8       	sub	r8,-1
80002ebc:	5c 88       	casts.h	r8
80002ebe:	50 58       	stdsp	sp[0x14],r8
			sendFrame[i].mssg[0] = 0;
80002ec0:	30 08       	mov	r8,0
80002ec2:	a8 a8       	st.b	r4[0x2],r8
			sendFrame[i].mssg[1] = 0;
80002ec4:	a4 88       	st.b	r2[0x0],r8
			sendFrame[i].mssg[2] = 0;
80002ec6:	ac 88       	st.b	r6[0x0],r8
			sendFrame[i].mssg[3] = 0;
80002ec8:	a6 88       	st.b	r3[0x0],r8
			--actNodes;
80002eca:	20 15       	sub	r5,1
80002ecc:	5c 85       	casts.h	r5
			faulty = 1;
80002ece:	30 18       	mov	r8,1
80002ed0:	4b 79       	lddpc	r9,80002fac <average+0x1e0>
80002ed2:	93 08       	st.w	r9[0x0],r8
80002ed4:	2f 66       	sub	r6,-10
80002ed6:	2f 64       	sub	r4,-10
80002ed8:	2f 63       	sub	r3,-10
80002eda:	2f 62       	sub	r2,-10
	{
		lighttot += ((((UINT16)sendFrame[i].mssg[2]) << 8 ) | sendFrame[i].mssg[3]);
		tempertot += ((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]);
	}
	
	for(int i = 0; i < 15; ++i)
80002edc:	0c 31       	cp.w	r1,r6
80002ede:	ca 21       	brne	80002e22 <average+0x56>
80002ee0:	40 87       	lddsp	r7,sp[0x20]
80002ee2:	30 08       	mov	r8,0
80002ee4:	10 99       	mov	r9,r8
	lighttot = 0;
	tempertot = 0;
	//Calculating total light and temp received
	for(int i = 0; i < 15; ++i)
	{
		lighttot += ((((UINT16)sendFrame[i].mssg[2]) << 8 ) | sendFrame[i].mssg[3]);
80002ee6:	0f 8b       	ld.ub	r11,r7[0x0]
80002ee8:	0f 9a       	ld.ub	r10,r7[0x1]
80002eea:	f5 eb 10 8a 	or	r10,r10,r11<<0x8
80002eee:	14 09       	add	r9,r10
80002ef0:	5c 89       	casts.h	r9
		tempertot += ((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]);
80002ef2:	ef 3b ff fe 	ld.ub	r11,r7[-2]
80002ef6:	ef 3a ff ff 	ld.ub	r10,r7[-1]
80002efa:	f5 eb 10 8a 	or	r10,r10,r11<<0x8
80002efe:	14 08       	add	r8,r10
80002f00:	5c 88       	casts.h	r8
80002f02:	2f 67       	sub	r7,-10
		}
	}
	lighttot = 0;
	tempertot = 0;
	//Calculating total light and temp received
	for(int i = 0; i < 15; ++i)
80002f04:	0e 31       	cp.w	r1,r7
80002f06:	cf 01       	brne	80002ee6 <average+0x11a>
	{
		lighttot += ((((UINT16)sendFrame[i].mssg[2]) << 8 ) | sendFrame[i].mssg[3]);
		tempertot += ((((UINT16)sendFrame[i].mssg[0]) << 8 ) | sendFrame[i].mssg[1]);
	}

	printDisp.averLight = lighttot/actNodes;
80002f08:	4a 4a       	lddpc	r10,80002f98 <average+0x1cc>
80002f0a:	ef d9 c0 10 	bfextu	r7,r9,0x0,0x10
80002f0e:	5c 75       	castu.h	r5
80002f10:	ee 05 0d 06 	divu	r6,r7,r5
80002f14:	b4 36       	st.h	r10[0x6],r6
	printDisp.averTemp	= tempertot/actNodes;
80002f16:	5c 78       	castu.h	r8
80002f18:	f0 05 0d 04 	divu	r4,r8,r5
80002f1c:	b4 44       	st.h	r10[0x8],r4
	printDisp.night = night;
80002f1e:	40 68       	lddsp	r8,sp[0x18]
80002f20:	b4 58       	st.h	r10[0xa],r8

		if (night == 0 && cold == 0)
80002f22:	10 99       	mov	r9,r8
80002f24:	40 58       	lddsp	r8,sp[0x14]
80002f26:	10 49       	or	r9,r8
80002f28:	30 08       	mov	r8,0
80002f2a:	f0 09 19 00 	cp.h	r9,r8
80002f2e:	c0 a1       	brne	80002f42 <average+0x176>
		{
			LED_Display(1);
80002f30:	30 1c       	mov	r12,1
80002f32:	f0 1f 00 20 	mcall	80002fb0 <average+0x1e4>
			warmWarn = 0;
80002f36:	30 08       	mov	r8,0
80002f38:	49 f9       	lddpc	r9,80002fb4 <average+0x1e8>
80002f3a:	93 08       	st.w	r9[0x0],r8
			faulty = 0;
80002f3c:	49 c9       	lddpc	r9,80002fac <average+0x1e0>
80002f3e:	93 08       	st.w	r9[0x0],r8
80002f40:	c1 a8       	rjmp	80002f74 <average+0x1a8>
		}

		else if(warm == 1)
80002f42:	30 18       	mov	r8,1
80002f44:	40 79       	lddsp	r9,sp[0x1c]
80002f46:	f0 09 19 00 	cp.h	r9,r8
80002f4a:	c0 71       	brne	80002f58 <average+0x18c>
		{
			warmWarn = 1;
80002f4c:	30 1c       	mov	r12,1
80002f4e:	49 a8       	lddpc	r8,80002fb4 <average+0x1e8>
80002f50:	91 0c       	st.w	r8[0x0],r12
			LED_Off(1);
80002f52:	f0 1f 00 1a 	mcall	80002fb8 <average+0x1ec>
80002f56:	c0 f8       	rjmp	80002f74 <average+0x1a8>
			
		}
		else if(warm == 2 && emergAck == 0)
80002f58:	30 28       	mov	r8,2
80002f5a:	40 79       	lddsp	r9,sp[0x1c]
80002f5c:	f0 09 19 00 	cp.h	r9,r8
80002f60:	c0 a1       	brne	80002f74 <average+0x1a8>
80002f62:	49 78       	lddpc	r8,80002fbc <average+0x1f0>
80002f64:	70 08       	ld.w	r8,r8[0x0]
80002f66:	58 08       	cp.w	r8,0
80002f68:	c0 61       	brne	80002f74 <average+0x1a8>
		{
			emergency = 1;
80002f6a:	30 1c       	mov	r12,1
80002f6c:	49 58       	lddpc	r8,80002fc0 <average+0x1f4>
80002f6e:	91 0c       	st.w	r8[0x0],r12
			LED_Off(1);
80002f70:	f0 1f 00 12 	mcall	80002fb8 <average+0x1ec>
		}
		
		if (emergency == 1)
80002f74:	49 38       	lddpc	r8,80002fc0 <average+0x1f4>
80002f76:	70 08       	ld.w	r8,r8[0x0]
80002f78:	58 18       	cp.w	r8,1
80002f7a:	c0 c1       	brne	80002f92 <average+0x1c6>
		{
		
			if(emergAck == 1)
80002f7c:	49 08       	lddpc	r8,80002fbc <average+0x1f0>
80002f7e:	70 08       	ld.w	r8,r8[0x0]
80002f80:	58 18       	cp.w	r8,1
80002f82:	c0 81       	brne	80002f92 <average+0x1c6>
			{
				if(night < 1)
80002f84:	40 68       	lddsp	r8,sp[0x18]
80002f86:	58 08       	cp.w	r8,0
80002f88:	c0 51       	brne	80002f92 <average+0x1c6>
				{
					emergency = 0;
80002f8a:	48 e9       	lddpc	r9,80002fc0 <average+0x1f4>
80002f8c:	93 08       	st.w	r9[0x0],r8
					emergAck = 0;
80002f8e:	48 c9       	lddpc	r9,80002fbc <average+0x1f0>
80002f90:	93 08       	st.w	r9[0x0],r8
				}
			}
			
		}
}
80002f92:	2f 7d       	sub	sp,-36
80002f94:	d8 32       	popm	r0-r7,pc
80002f96:	00 00       	add	r0,r0
80002f98:	00 00       	add	r0,r0
80002f9a:	07 be       	ld.ub	lr,r3[0x3]
80002f9c:	00 00       	add	r0,r0
80002f9e:	07 cc       	ld.ub	r12,r3[0x4]
80002fa0:	80 00       	ld.sh	r0,r0[0x0]
80002fa2:	3f 2c       	mov	r12,-14
80002fa4:	80 00       	ld.sh	r0,r0[0x0]
80002fa6:	3d 50       	mov	r0,-43
80002fa8:	80 00       	ld.sh	r0,r0[0x0]
80002faa:	40 0c       	lddsp	r12,sp[0x0]
80002fac:	00 00       	add	r0,r0
80002fae:	05 1c       	ld.sh	r12,r2++
80002fb0:	80 00       	ld.sh	r0,r0[0x0]
80002fb2:	31 60       	mov	r0,22
80002fb4:	00 00       	add	r0,r0
80002fb6:	05 24       	ld.uh	r4,r2++
80002fb8:	80 00       	ld.sh	r0,r0[0x0]
80002fba:	32 54       	mov	r4,37
80002fbc:	00 00       	add	r0,r0
80002fbe:	05 20       	ld.uh	r0,r2++
80002fc0:	00 00       	add	r0,r0
80002fc2:	05 30       	ld.ub	r0,r2++

80002fc4 <RX_interrupt>:
	
}


__attribute__((__interrupt__)) void RX_interrupt(void)
{
80002fc4:	d4 01       	pushm	lr

	LED_Toggle(LED2);
80002fc6:	30 4c       	mov	r12,4
80002fc8:	f0 1f 00 04 	mcall	80002fd8 <RX_interrupt+0x14>
	gpio_clear_pin_interrupt_flag(RX);
80002fcc:	31 dc       	mov	r12,29
80002fce:	f0 1f 00 04 	mcall	80002fdc <RX_interrupt+0x18>
}
80002fd2:	d4 02       	popm	lr
80002fd4:	d6 03       	rete
80002fd6:	00 00       	add	r0,r0
80002fd8:	80 00       	ld.sh	r0,r0[0x0]
80002fda:	31 b4       	mov	r4,27
80002fdc:	80 00       	ld.sh	r0,r0[0x0]
80002fde:	38 58       	mov	r8,-123

80002fe0 <but_interrupt>:
	
	rtc_clear_interrupt(&AVR32_RTC);
}

__attribute__((__interrupt__)) void but_interrupt(void)
{
80002fe0:	d4 01       	pushm	lr

	if (emergency == 1)
80002fe2:	48 78       	lddpc	r8,80002ffc <but_interrupt+0x1c>
80002fe4:	70 08       	ld.w	r8,r8[0x0]
80002fe6:	58 18       	cp.w	r8,1
80002fe8:	c0 41       	brne	80002ff0 <but_interrupt+0x10>
	{
		emergAck = 1;
80002fea:	30 19       	mov	r9,1
80002fec:	48 58       	lddpc	r8,80003000 <but_interrupt+0x20>
80002fee:	91 09       	st.w	r8[0x0],r9
	}
	gpio_clear_pin_interrupt_flag(Switch1);
80002ff0:	35 8c       	mov	r12,88
80002ff2:	f0 1f 00 05 	mcall	80003004 <but_interrupt+0x24>
	
}
80002ff6:	d4 02       	popm	lr
80002ff8:	d6 03       	rete
80002ffa:	00 00       	add	r0,r0
80002ffc:	00 00       	add	r0,r0
80002ffe:	05 30       	ld.ub	r0,r2++
80003000:	00 00       	add	r0,r0
80003002:	05 20       	ld.uh	r0,r2++
80003004:	80 00       	ld.sh	r0,r0[0x0]
80003006:	38 58       	mov	r8,-123

80003008 <readADC>:
}printDisp;

struct display emptyDisplay;

void readADC(void)
{
80003008:	eb cd 40 c0 	pushm	r6-r7,lr
	// Reads values of pot, light and temperature
	UINT32 readLight, readTemp;
	UINT16 lightMSB, lightLSB, tempMSB, tempLSB;
	
	//Reading ADC channels
	readLight = adc_get_value(&AVR32_ADC, ADC_LIGHT_CHANNEL);
8000300c:	30 2b       	mov	r11,2
8000300e:	fe 7c 3c 00 	mov	r12,-50176
80003012:	f0 1f 00 19 	mcall	80003074 <readADC+0x6c>
80003016:	18 97       	mov	r7,r12
	readTemp = adc_get_value(&AVR32_ADC, ADC_TEMPERATURE_CHANNEL);
80003018:	30 0b       	mov	r11,0
8000301a:	fe 7c 3c 00 	mov	r12,-50176
8000301e:	f0 1f 00 16 	mcall	80003074 <readADC+0x6c>
		
	//Setting MSB and LSB for the ADC channels, to be able to send over CAN
	lightMSB = (readLight >> 8) & 0x00000003;
	lightLSB = readLight & 0x000000FF;
80003022:	0e 9b       	mov	r11,r7

	tempMSB = (readTemp >> 8) & 0x00000003;
	tempLSB = readTemp & 0x000000FF;
80003024:	f5 dc b0 10 	bfexts	r10,r12,0x0,0x10
	
	//Adding measurements to struct
	tempFrame[0x00F & ownId].mssg[0] = tempMSB;
80003028:	49 48       	lddpc	r8,80003078 <readADC+0x70>
8000302a:	90 89       	ld.uh	r9,r8[0x0]
8000302c:	f3 d9 c0 04 	bfextu	r9,r9,0x0,0x4
80003030:	49 3e       	lddpc	lr,8000307c <readADC+0x74>
80003032:	f2 06 15 02 	lsl	r6,r9,0x2
80003036:	ec 09 00 08 	add	r8,r6,r9
8000303a:	fc 08 00 18 	add	r8,lr,r8<<0x1
8000303e:	f9 dc c1 02 	bfextu	r12,r12,0x8,0x2
80003042:	b0 ac       	st.b	r8[0x2],r12
	tempFrame[0x00F & ownId].mssg[1] = tempLSB;
80003044:	b0 ba       	st.b	r8[0x3],r10
	tempFrame[0x00F & ownId].mssg[2] = lightMSB;
80003046:	10 9e       	mov	lr,r8
80003048:	ef d7 c1 02 	bfextu	r7,r7,0x8,0x2
8000304c:	b0 c7       	st.b	r8[0x4],r7
	tempFrame[0x00F & ownId].mssg[3] = lightLSB;
8000304e:	b0 db       	st.b	r8[0x5],r11
	tempFrame[0x00F & ownId].mssg[4] = 0;
80003050:	f0 cc ff fc 	sub	r12,r8,-4
80003054:	30 09       	mov	r9,0
80003056:	b8 a9       	st.b	r12[0x2],r9
	tempFrame[0x00F & ownId].mssg[5] = 0;
80003058:	f0 cc ff fb 	sub	r12,r8,-5
8000305c:	b8 a9       	st.b	r12[0x2],r9
	tempFrame[0x00F & ownId].mssg[6] = 0;
8000305e:	f0 cc ff fa 	sub	r12,r8,-6
80003062:	b8 a9       	st.b	r12[0x2],r9
	tempFrame[0x00F & ownId].mssg[7] = 0;
80003064:	2f 98       	sub	r8,-7
80003066:	b0 a9       	st.b	r8[0x2],r9
	
	printDisp.ownLight = readLight;
80003068:	48 68       	lddpc	r8,80003080 <readADC+0x78>
8000306a:	b0 1b       	st.h	r8[0x2],r11
	printDisp.ownTemp = readTemp;
8000306c:	b0 2a       	st.h	r8[0x4],r10
}
8000306e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003072:	00 00       	add	r0,r0
80003074:	80 00       	ld.sh	r0,r0[0x0]
80003076:	20 28       	sub	r8,2
80003078:	00 00       	add	r0,r0
8000307a:	00 08       	add	r8,r0
8000307c:	00 00       	add	r0,r0
8000307e:	06 7e       	tst	lr,r3
80003080:	00 00       	add	r0,r0
80003082:	07 be       	ld.ub	lr,r3[0x3]

80003084 <main>:
	
	}
}

int main(void) 
{
80003084:	eb cd 40 fe 	pushm	r1-r7,lr
80003088:	20 3d       	sub	sp,12
	initBoard();
8000308a:	f0 1f 00 2b 	mcall	80003134 <main+0xb0>

	//Filtering incoming messages
	UINT16 Mask = 0xFFF0; 
	UINT16 flt = 0x1200;
	UINT16 Flt[] = {flt,flt,flt,flt,flt,flt};
8000308e:	e0 68 12 00 	mov	r8,4608
80003092:	ba 08       	st.h	sp[0x0],r8
80003094:	ba 18       	st.h	sp[0x2],r8
80003096:	ba 28       	st.h	sp[0x4],r8
80003098:	ba 38       	st.h	sp[0x6],r8
8000309a:	ba 48       	st.h	sp[0x8],r8
8000309c:	ba 58       	st.h	sp[0xa],r8
		
	InitializeCANExtended(0, CAN_250kbps, Mask, Flt);
8000309e:	1a 99       	mov	r9,sp
800030a0:	e0 6a ff f0 	mov	r10,65520
800030a4:	30 7b       	mov	r11,7
800030a6:	30 0c       	mov	r12,0
800030a8:	f0 1f 00 24 	mcall	80003138 <main+0xb4>

	while(1)
	{

		adc_start(&AVR32_ADC);
800030ac:	fe 74 3c 00 	mov	r4,-50176

		//If the dongle is connected to a bus
		if(CANRxReady(0) || CANTxReady(0))
800030b0:	30 05       	mov	r5,0
			
		}
		// If the dongle isn't connected
		else
		{
 			readADC();
800030b2:	4a 33       	lddpc	r3,8000313c <main+0xb8>
		}
	
	}
}

int main(void) 
800030b4:	e6 c6 ff 60 	sub	r6,r3,-160
		else
		{
 			readADC();
			for(int j = 0; j < 16 ; ++j)
			{
				sendFrame[j].ID = 0;
800030b8:	30 07       	mov	r7,0
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800030ba:	e0 61 1b 00 	mov	r1,6912
800030be:	ea 11 00 b7 	orh	r1,0xb7

		//If the dongle is connected to a bus
		if(CANRxReady(0) || CANTxReady(0))
		{
			// Setting own id.
			sendFrame[0x00F & ownId].ID = ownId;
800030c2:	4a 02       	lddpc	r2,80003140 <main+0xbc>
	InitializeCANExtended(0, CAN_250kbps, Mask, Flt);

	while(1)
	{

		adc_start(&AVR32_ADC);
800030c4:	08 9c       	mov	r12,r4
800030c6:	f0 1f 00 20 	mcall	80003144 <main+0xc0>

		//If the dongle is connected to a bus
		if(CANRxReady(0) || CANTxReady(0))
800030ca:	0a 9c       	mov	r12,r5
800030cc:	f0 1f 00 1f 	mcall	80003148 <main+0xc4>
800030d0:	c0 51       	brne	800030da <main+0x56>
800030d2:	0a 9c       	mov	r12,r5
800030d4:	f0 1f 00 1e 	mcall	8000314c <main+0xc8>
800030d8:	c1 10       	breq	800030fa <main+0x76>
		{
			// Setting own id.
			sendFrame[0x00F & ownId].ID = ownId;
800030da:	84 08       	ld.sh	r8,r2[0x0]
800030dc:	f3 d8 c0 04 	bfextu	r9,r8,0x0,0x4
800030e0:	f2 09 00 29 	add	r9,r9,r9<<0x2
800030e4:	e6 09 0a 18 	st.h	r3[r9<<0x1],r8
			
			receiveMsg();
800030e8:	f0 1f 00 1a 	mcall	80003150 <main+0xcc>
			readADC();
800030ec:	f0 1f 00 1a 	mcall	80003154 <main+0xd0>
			nodeCount();
800030f0:	f0 1f 00 1a 	mcall	80003158 <main+0xd4>
			average();
800030f4:	f0 1f 00 1a 	mcall	8000315c <main+0xd8>
	{

		adc_start(&AVR32_ADC);

		//If the dongle is connected to a bus
		if(CANRxReady(0) || CANTxReady(0))
800030f8:	ce 6b       	rjmp	800030c4 <main+0x40>
			
		}
		// If the dongle isn't connected
		else
		{
 			readADC();
800030fa:	f0 1f 00 17 	mcall	80003154 <main+0xd0>
800030fe:	06 98       	mov	r8,r3
			for(int j = 0; j < 16 ; ++j)
			{
				sendFrame[j].ID = 0;
80003100:	b0 07       	st.h	r8[0x0],r7
80003102:	2f 68       	sub	r8,-10
		}
		// If the dongle isn't connected
		else
		{
 			readADC();
			for(int j = 0; j < 16 ; ++j)
80003104:	0c 38       	cp.w	r8,r6
80003106:	cf d1       	brne	80003100 <main+0x7c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80003108:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
8000310c:	f0 01 00 0a 	add	r10,r8,r1
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80003110:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80003114:	14 38       	cp.w	r8,r10
80003116:	e0 88 00 08 	brls	80003126 <main+0xa2>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
8000311a:	12 38       	cp.w	r8,r9
8000311c:	fe 98 ff fa 	brls	80003110 <main+0x8c>
80003120:	12 3a       	cp.w	r10,r9
80003122:	cd 13       	brcs	800030c4 <main+0x40>
80003124:	cf 6b       	rjmp	80003110 <main+0x8c>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80003126:	12 38       	cp.w	r8,r9
80003128:	fe 9b ff ce 	brhi	800030c4 <main+0x40>
8000312c:	12 3a       	cp.w	r10,r9
8000312e:	cc b3       	brcs	800030c4 <main+0x40>
80003130:	cf 0b       	rjmp	80003110 <main+0x8c>
80003132:	00 00       	add	r0,r0
80003134:	80 00       	ld.sh	r0,r0[0x0]
80003136:	2a 7c       	sub	r12,-89
80003138:	80 00       	ld.sh	r0,r0[0x0]
8000313a:	27 08       	sub	r8,112
8000313c:	00 00       	add	r0,r0
8000313e:	07 cc       	ld.ub	r12,r3[0x4]
80003140:	00 00       	add	r0,r0
80003142:	00 08       	add	r8,r0
80003144:	80 00       	ld.sh	r0,r0[0x0]
80003146:	20 08       	sub	r8,0
80003148:	80 00       	ld.sh	r0,r0[0x0]
8000314a:	22 f0       	sub	r0,47
8000314c:	80 00       	ld.sh	r0,r0[0x0]
8000314e:	23 04       	sub	r4,48
80003150:	80 00       	ld.sh	r0,r0[0x0]
80003152:	2a 1c       	sub	r12,-95
80003154:	80 00       	ld.sh	r0,r0[0x0]
80003156:	30 08       	mov	r8,0
80003158:	80 00       	ld.sh	r0,r0[0x0]
8000315a:	29 ec       	sub	r12,-98
8000315c:	80 00       	ld.sh	r0,r0[0x0]
8000315e:	2d cc       	sub	r12,-36

80003160 <LED_Display>:
80003160:	f9 dc c0 08 	bfextu	r12,r12,0x0,0x8
80003164:	49 28       	lddpc	r8,800031ac <LED_Display+0x4c>
80003166:	91 0c       	st.w	r8[0x0],r12
80003168:	49 28       	lddpc	r8,800031b0 <LED_Display+0x50>
8000316a:	f0 c9 ff 80 	sub	r9,r8,-128
8000316e:	12 38       	cp.w	r8,r9
80003170:	5e 2c       	reths	r12
80003172:	10 9b       	mov	r11,r8
80003174:	2f c8       	sub	r8,-4
80003176:	f6 cb ff 7c 	sub	r11,r11,-132
8000317a:	f0 f9 ff fc 	ld.w	r9,r8[-4]
8000317e:	a9 69       	lsl	r9,0x8
80003180:	e0 29 f0 00 	sub	r9,61440
80003184:	f5 dc c0 01 	bfextu	r10,r12,0x0,0x1
80003188:	f1 fa 10 00 	ld.wne	r10,r8[0x0]
8000318c:	f3 fa 1a 16 	st.wne	r9[0x58],r10
80003190:	f1 fa 00 00 	ld.weq	r10,r8[0x0]
80003194:	f3 fa 0a 15 	st.weq	r9[0x54],r10
80003198:	70 0a       	ld.w	r10,r8[0x0]
8000319a:	f3 4a 00 44 	st.w	r9[68],r10
8000319e:	70 0a       	ld.w	r10,r8[0x0]
800031a0:	93 1a       	st.w	r9[0x4],r10
800031a2:	2f 08       	sub	r8,-16
800031a4:	16 38       	cp.w	r8,r11
800031a6:	5e 0c       	reteq	r12
800031a8:	a1 9c       	lsr	r12,0x1
800031aa:	ce 8b       	rjmp	8000317a <LED_Display+0x1a>
800031ac:	00 00       	add	r0,r0
800031ae:	00 0c       	add	r12,r0
800031b0:	80 00       	ld.sh	r0,r0[0x0]
800031b2:	9a b4       	ld.uh	r4,sp[0x6]

800031b4 <LED_Toggle>:
800031b4:	f9 dc c0 08 	bfextu	r12,r12,0x0,0x8
800031b8:	49 18       	lddpc	r8,800031fc <LED_Toggle+0x48>
800031ba:	70 09       	ld.w	r9,r8[0x0]
800031bc:	f9 e9 20 09 	eor	r9,r12,r9
800031c0:	91 09       	st.w	r8[0x0],r9
800031c2:	58 0c       	cp.w	r12,0
800031c4:	5e 0c       	reteq	r12
800031c6:	48 f8       	lddpc	r8,80003200 <LED_Toggle+0x4c>
800031c8:	21 08       	sub	r8,16
800031ca:	18 9a       	mov	r10,r12
800031cc:	5c 9a       	brev	r10
800031ce:	f4 0a 12 00 	clz	r10,r10
800031d2:	2f fa       	sub	r10,-1
800031d4:	f4 09 15 04 	lsl	r9,r10,0x4
800031d8:	12 08       	add	r8,r9
800031da:	70 09       	ld.w	r9,r8[0x0]
800031dc:	a9 69       	lsl	r9,0x8
800031de:	e0 29 f0 00 	sub	r9,61440
800031e2:	70 1b       	ld.w	r11,r8[0x4]
800031e4:	f3 4b 00 5c 	st.w	r9[92],r11
800031e8:	70 1b       	ld.w	r11,r8[0x4]
800031ea:	f3 4b 00 44 	st.w	r9[68],r11
800031ee:	70 1b       	ld.w	r11,r8[0x4]
800031f0:	93 1b       	st.w	r9[0x4],r11
800031f2:	f8 0a 0a 4c 	lsr	r12,r12,r10
800031f6:	ce a1       	brne	800031ca <LED_Toggle+0x16>
800031f8:	5e fc       	retal	r12
800031fa:	00 00       	add	r0,r0
800031fc:	00 00       	add	r0,r0
800031fe:	00 0c       	add	r12,r0
80003200:	80 00       	ld.sh	r0,r0[0x0]
80003202:	9a b4       	ld.uh	r4,sp[0x6]

80003204 <LED_On>:
80003204:	f9 dc c0 08 	bfextu	r12,r12,0x0,0x8
80003208:	49 18       	lddpc	r8,8000324c <LED_On+0x48>
8000320a:	70 09       	ld.w	r9,r8[0x0]
8000320c:	f9 e9 10 09 	or	r9,r12,r9
80003210:	91 09       	st.w	r8[0x0],r9
80003212:	58 0c       	cp.w	r12,0
80003214:	5e 0c       	reteq	r12
80003216:	48 f8       	lddpc	r8,80003250 <LED_On+0x4c>
80003218:	21 08       	sub	r8,16
8000321a:	18 9a       	mov	r10,r12
8000321c:	5c 9a       	brev	r10
8000321e:	f4 0a 12 00 	clz	r10,r10
80003222:	2f fa       	sub	r10,-1
80003224:	f4 09 15 04 	lsl	r9,r10,0x4
80003228:	12 08       	add	r8,r9
8000322a:	70 09       	ld.w	r9,r8[0x0]
8000322c:	a9 69       	lsl	r9,0x8
8000322e:	e0 29 f0 00 	sub	r9,61440
80003232:	70 1b       	ld.w	r11,r8[0x4]
80003234:	f3 4b 00 58 	st.w	r9[88],r11
80003238:	70 1b       	ld.w	r11,r8[0x4]
8000323a:	f3 4b 00 44 	st.w	r9[68],r11
8000323e:	70 1b       	ld.w	r11,r8[0x4]
80003240:	93 1b       	st.w	r9[0x4],r11
80003242:	f8 0a 0a 4c 	lsr	r12,r12,r10
80003246:	ce a1       	brne	8000321a <LED_On+0x16>
80003248:	5e fc       	retal	r12
8000324a:	00 00       	add	r0,r0
8000324c:	00 00       	add	r0,r0
8000324e:	00 0c       	add	r12,r0
80003250:	80 00       	ld.sh	r0,r0[0x0]
80003252:	9a b4       	ld.uh	r4,sp[0x6]

80003254 <LED_Off>:
80003254:	f9 dc c0 08 	bfextu	r12,r12,0x0,0x8
80003258:	49 28       	lddpc	r8,800032a0 <LED_Off+0x4c>
8000325a:	70 09       	ld.w	r9,r8[0x0]
8000325c:	f8 0a 11 ff 	rsub	r10,r12,-1
80003260:	f5 e9 00 09 	and	r9,r10,r9
80003264:	91 09       	st.w	r8[0x0],r9
80003266:	58 0c       	cp.w	r12,0
80003268:	5e 0c       	reteq	r12
8000326a:	48 f8       	lddpc	r8,800032a4 <LED_Off+0x50>
8000326c:	21 08       	sub	r8,16
8000326e:	18 9a       	mov	r10,r12
80003270:	5c 9a       	brev	r10
80003272:	f4 0a 12 00 	clz	r10,r10
80003276:	2f fa       	sub	r10,-1
80003278:	f4 09 15 04 	lsl	r9,r10,0x4
8000327c:	12 08       	add	r8,r9
8000327e:	70 09       	ld.w	r9,r8[0x0]
80003280:	a9 69       	lsl	r9,0x8
80003282:	e0 29 f0 00 	sub	r9,61440
80003286:	70 1b       	ld.w	r11,r8[0x4]
80003288:	f3 4b 00 54 	st.w	r9[84],r11
8000328c:	70 1b       	ld.w	r11,r8[0x4]
8000328e:	f3 4b 00 44 	st.w	r9[68],r11
80003292:	70 1b       	ld.w	r11,r8[0x4]
80003294:	93 1b       	st.w	r9[0x4],r11
80003296:	f8 0a 0a 4c 	lsr	r12,r12,r10
8000329a:	ce a1       	brne	8000326e <LED_Off+0x1a>
8000329c:	5e fc       	retal	r12
8000329e:	00 00       	add	r0,r0
800032a0:	00 00       	add	r0,r0
800032a2:	00 0c       	add	r12,r0
800032a4:	80 00       	ld.sh	r0,r0[0x0]
800032a6:	9a b4       	ld.uh	r4,sp[0x6]

800032a8 <dip204_select>:
800032a8:	d4 01       	pushm	lr
800032aa:	30 2b       	mov	r11,2
800032ac:	fe 7c 28 00 	mov	r12,-55296
800032b0:	f0 1f 00 02 	mcall	800032b8 <dip204_select+0x10>
800032b4:	d8 02       	popm	pc
800032b6:	00 00       	add	r0,r0
800032b8:	80 00       	ld.sh	r0,r0[0x0]
800032ba:	3b 9a       	mov	r10,-71

800032bc <dip204_write_byte>:
800032bc:	eb cd 40 80 	pushm	r7,lr
800032c0:	f8 c8 ff f8 	sub	r8,r12,-8
800032c4:	30 69       	mov	r9,6
800032c6:	f2 08 18 00 	cp.b	r8,r9
800032ca:	e0 8b 00 0f 	brhi	800032e8 <dip204_write_byte+0x2c>
800032ce:	30 19       	mov	r9,1
800032d0:	f2 08 09 48 	lsl	r8,r9,r8
800032d4:	e2 18 00 55 	andl	r8,0x55,COH
800032d8:	c0 80       	breq	800032e8 <dip204_write_byte+0x2c>
800032da:	18 9b       	mov	r11,r12
800032dc:	fe 7c 28 00 	mov	r12,-55296
800032e0:	f0 1f 00 0c 	mcall	80003310 <dip204_write_byte+0x54>
800032e4:	e3 cd 80 80 	ldm	sp++,r7,pc
800032e8:	5c 9c       	brev	r12
800032ea:	f8 07 16 18 	lsr	r7,r12,0x18
800032ee:	0e 9b       	mov	r11,r7
800032f0:	e2 1b 00 f0 	andl	r11,0xf0,COH
800032f4:	fe 7c 28 00 	mov	r12,-55296
800032f8:	f0 1f 00 06 	mcall	80003310 <dip204_write_byte+0x54>
800032fc:	ee 0b 15 04 	lsl	r11,r7,0x4
80003300:	e2 1b 00 f0 	andl	r11,0xf0,COH
80003304:	fe 7c 28 00 	mov	r12,-55296
80003308:	f0 1f 00 02 	mcall	80003310 <dip204_write_byte+0x54>
8000330c:	e3 cd 80 80 	ldm	sp++,r7,pc
80003310:	80 00       	ld.sh	r0,r0[0x0]
80003312:	3c ca       	mov	r10,-52

80003314 <dip204_read_byte>:
80003314:	eb cd 40 c0 	pushm	r6-r7,lr
80003318:	20 1d       	sub	sp,4
8000331a:	18 96       	mov	r6,r12
8000331c:	fa c7 ff fc 	sub	r7,sp,-4
80003320:	30 08       	mov	r8,0
80003322:	0e e8       	st.h	--r7,r8
80003324:	30 0b       	mov	r11,0
80003326:	fe 7c 28 00 	mov	r12,-55296
8000332a:	f0 1f 00 08 	mcall	80003348 <dip204_read_byte+0x34>
8000332e:	0e 9b       	mov	r11,r7
80003330:	fe 7c 28 00 	mov	r12,-55296
80003334:	f0 1f 00 06 	mcall	8000334c <dip204_read_byte+0x38>
80003338:	1b b8       	ld.ub	r8,sp[0x3]
8000333a:	5c 98       	brev	r8
8000333c:	b9 88       	lsr	r8,0x18
8000333e:	ac 88       	st.b	r6[0x0],r8
80003340:	2f fd       	sub	sp,-4
80003342:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003346:	00 00       	add	r0,r0
80003348:	80 00       	ld.sh	r0,r0[0x0]
8000334a:	3c ca       	mov	r10,-52
8000334c:	80 00       	ld.sh	r0,r0[0x0]
8000334e:	3c ee       	mov	lr,-50

80003350 <dip204_wait_busy>:
80003350:	eb cd 40 c0 	pushm	r6-r7,lr
80003354:	20 1d       	sub	sp,4
80003356:	fa c7 ff fc 	sub	r7,sp,-4
8000335a:	30 08       	mov	r8,0
8000335c:	0e f8       	st.b	--r7,r8
8000335e:	e0 6c 00 fc 	mov	r12,252
80003362:	f0 1f 00 07 	mcall	8000337c <dip204_wait_busy+0x2c>
80003366:	30 06       	mov	r6,0
80003368:	0e 9c       	mov	r12,r7
8000336a:	f0 1f 00 06 	mcall	80003380 <dip204_wait_busy+0x30>
8000336e:	1b b8       	ld.ub	r8,sp[0x3]
80003370:	ec 08 18 00 	cp.b	r8,r6
80003374:	cf a5       	brlt	80003368 <dip204_wait_busy+0x18>
80003376:	2f fd       	sub	sp,-4
80003378:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000337c:	80 00       	ld.sh	r0,r0[0x0]
8000337e:	32 bc       	mov	r12,43
80003380:	80 00       	ld.sh	r0,r0[0x0]
80003382:	33 14       	mov	r4,49

80003384 <dip204_unselect>:
80003384:	d4 01       	pushm	lr
80003386:	30 2b       	mov	r11,2
80003388:	fe 7c 28 00 	mov	r12,-55296
8000338c:	f0 1f 00 02 	mcall	80003394 <dip204_unselect+0x10>
80003390:	d8 02       	popm	pc
80003392:	00 00       	add	r0,r0
80003394:	80 00       	ld.sh	r0,r0[0x0]
80003396:	3b e6       	mov	r6,-66

80003398 <dip204_printf_string>:
80003398:	d4 21       	pushm	r4-r7,lr
8000339a:	20 6d       	sub	sp,24
8000339c:	fa ca ff d4 	sub	r10,sp,-44
800033a0:	18 9b       	mov	r11,r12
800033a2:	1a 9c       	mov	r12,sp
800033a4:	f0 1f 00 1e 	mcall	8000341c <dip204_printf_string+0x84>
800033a8:	5c 5c       	castu.b	r12
800033aa:	31 38       	mov	r8,19
800033ac:	f0 0c 18 00 	cp.b	r12,r8
800033b0:	e0 8b 00 0e 	brhi	800033cc <dip204_printf_string+0x34>
800033b4:	30 0a       	mov	r10,0
800033b6:	31 49       	mov	r9,20
800033b8:	fa c8 ff e8 	sub	r8,sp,-24
800033bc:	18 08       	add	r8,r12
800033be:	f1 6a ff e8 	st.b	r8[-24],r10
800033c2:	2f fc       	sub	r12,-1
800033c4:	5c 5c       	castu.b	r12
800033c6:	f2 0c 18 00 	cp.b	r12,r9
800033ca:	cf 71       	brne	800033b8 <dip204_printf_string+0x20>
800033cc:	f0 1f 00 15 	mcall	80003420 <dip204_printf_string+0x88>
800033d0:	30 08       	mov	r8,0
800033d2:	1b 89       	ld.ub	r9,sp[0x0]
800033d4:	f0 09 18 00 	cp.b	r9,r8
800033d8:	c1 e0       	breq	80003414 <dip204_printf_string+0x7c>
800033da:	30 06       	mov	r6,0
800033dc:	0c 97       	mov	r7,r6
800033de:	e0 64 00 fa 	mov	r4,250
800033e2:	10 95       	mov	r5,r8
800033e4:	08 9c       	mov	r12,r4
800033e6:	f0 1f 00 10 	mcall	80003424 <dip204_printf_string+0x8c>
800033ea:	fa c8 ff e8 	sub	r8,sp,-24
800033ee:	f0 06 00 06 	add	r6,r8,r6
800033f2:	ed 3c ff e8 	ld.ub	r12,r6[-24]
800033f6:	f0 1f 00 0c 	mcall	80003424 <dip204_printf_string+0x8c>
800033fa:	2f f7       	sub	r7,-1
800033fc:	5c 57       	castu.b	r7
800033fe:	f0 1f 00 0b 	mcall	80003428 <dip204_printf_string+0x90>
80003402:	0e 96       	mov	r6,r7
80003404:	fa c8 ff e8 	sub	r8,sp,-24
80003408:	0e 08       	add	r8,r7
8000340a:	f1 38 ff e8 	ld.ub	r8,r8[-24]
8000340e:	ea 08 18 00 	cp.b	r8,r5
80003412:	ce 91       	brne	800033e4 <dip204_printf_string+0x4c>
80003414:	f0 1f 00 06 	mcall	8000342c <dip204_printf_string+0x94>
80003418:	2f ad       	sub	sp,-24
8000341a:	d8 22       	popm	r4-r7,pc
8000341c:	80 00       	ld.sh	r0,r0[0x0]
8000341e:	41 e8       	lddsp	r8,sp[0x78]
80003420:	80 00       	ld.sh	r0,r0[0x0]
80003422:	32 a8       	mov	r8,42
80003424:	80 00       	ld.sh	r0,r0[0x0]
80003426:	32 bc       	mov	r12,43
80003428:	80 00       	ld.sh	r0,r0[0x0]
8000342a:	33 50       	mov	r0,53
8000342c:	80 00       	ld.sh	r0,r0[0x0]
8000342e:	33 84       	mov	r4,56

80003430 <dip204_set_cursor_position>:
80003430:	eb cd 40 c0 	pushm	r6-r7,lr
80003434:	18 96       	mov	r6,r12
80003436:	16 97       	mov	r7,r11
80003438:	f0 1f 00 11 	mcall	8000347c <dip204_set_cursor_position+0x4c>
8000343c:	31 48       	mov	r8,20
8000343e:	f0 06 18 00 	cp.b	r6,r8
80003442:	5f 89       	srls	r9
80003444:	30 48       	mov	r8,4
80003446:	f0 07 18 00 	cp.b	r7,r8
8000344a:	5f 88       	srls	r8
8000344c:	f3 e8 00 08 	and	r8,r9,r8
80003450:	c0 31       	brne	80003456 <dip204_set_cursor_position+0x26>
80003452:	30 06       	mov	r6,0
80003454:	c0 68       	rjmp	80003460 <dip204_set_cursor_position+0x30>
80003456:	28 16       	sub	r6,-127
80003458:	20 17       	sub	r7,1
8000345a:	a5 77       	lsl	r7,0x5
8000345c:	0e 06       	add	r6,r7
8000345e:	5c 56       	castu.b	r6
80003460:	e0 6c 00 f8 	mov	r12,248
80003464:	f0 1f 00 07 	mcall	80003480 <dip204_set_cursor_position+0x50>
80003468:	0c 9c       	mov	r12,r6
8000346a:	f0 1f 00 06 	mcall	80003480 <dip204_set_cursor_position+0x50>
8000346e:	f0 1f 00 06 	mcall	80003484 <dip204_set_cursor_position+0x54>
80003472:	f0 1f 00 06 	mcall	80003488 <dip204_set_cursor_position+0x58>
80003476:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000347a:	00 00       	add	r0,r0
8000347c:	80 00       	ld.sh	r0,r0[0x0]
8000347e:	32 a8       	mov	r8,42
80003480:	80 00       	ld.sh	r0,r0[0x0]
80003482:	32 bc       	mov	r12,43
80003484:	80 00       	ld.sh	r0,r0[0x0]
80003486:	33 50       	mov	r0,53
80003488:	80 00       	ld.sh	r0,r0[0x0]
8000348a:	33 84       	mov	r4,56

8000348c <dip204_hide_cursor>:
8000348c:	d4 01       	pushm	lr
8000348e:	f0 1f 00 08 	mcall	800034ac <dip204_hide_cursor+0x20>
80003492:	e0 6c 00 f8 	mov	r12,248
80003496:	f0 1f 00 07 	mcall	800034b0 <dip204_hide_cursor+0x24>
8000349a:	30 cc       	mov	r12,12
8000349c:	f0 1f 00 05 	mcall	800034b0 <dip204_hide_cursor+0x24>
800034a0:	f0 1f 00 05 	mcall	800034b4 <dip204_hide_cursor+0x28>
800034a4:	f0 1f 00 05 	mcall	800034b8 <dip204_hide_cursor+0x2c>
800034a8:	d8 02       	popm	pc
800034aa:	00 00       	add	r0,r0
800034ac:	80 00       	ld.sh	r0,r0[0x0]
800034ae:	32 a8       	mov	r8,42
800034b0:	80 00       	ld.sh	r0,r0[0x0]
800034b2:	32 bc       	mov	r12,43
800034b4:	80 00       	ld.sh	r0,r0[0x0]
800034b6:	33 50       	mov	r0,53
800034b8:	80 00       	ld.sh	r0,r0[0x0]
800034ba:	33 84       	mov	r4,56

800034bc <dip204_clear_display>:
800034bc:	d4 01       	pushm	lr
800034be:	f0 1f 00 13 	mcall	80003508 <dip204_clear_display+0x4c>
800034c2:	e0 6c 00 f8 	mov	r12,248
800034c6:	f0 1f 00 12 	mcall	8000350c <dip204_clear_display+0x50>
800034ca:	30 1c       	mov	r12,1
800034cc:	f0 1f 00 10 	mcall	8000350c <dip204_clear_display+0x50>
800034d0:	e1 b8 00 42 	mfsr	r8,0x108
800034d4:	e0 69 bb 80 	mov	r9,48000
800034d8:	f0 09 00 0a 	add	r10,r8,r9
800034dc:	e1 b9 00 42 	mfsr	r9,0x108
800034e0:	14 38       	cp.w	r8,r10
800034e2:	e0 88 00 08 	brls	800034f2 <dip204_clear_display+0x36>
800034e6:	12 38       	cp.w	r8,r9
800034e8:	fe 98 ff fa 	brls	800034dc <dip204_clear_display+0x20>
800034ec:	12 3a       	cp.w	r10,r9
800034ee:	c0 73       	brcs	800034fc <dip204_clear_display+0x40>
800034f0:	cf 6b       	rjmp	800034dc <dip204_clear_display+0x20>
800034f2:	12 38       	cp.w	r8,r9
800034f4:	e0 8b 00 04 	brhi	800034fc <dip204_clear_display+0x40>
800034f8:	12 3a       	cp.w	r10,r9
800034fa:	cf 12       	brcc	800034dc <dip204_clear_display+0x20>
800034fc:	f0 1f 00 05 	mcall	80003510 <dip204_clear_display+0x54>
80003500:	f0 1f 00 05 	mcall	80003514 <dip204_clear_display+0x58>
80003504:	d8 02       	popm	pc
80003506:	00 00       	add	r0,r0
80003508:	80 00       	ld.sh	r0,r0[0x0]
8000350a:	32 a8       	mov	r8,42
8000350c:	80 00       	ld.sh	r0,r0[0x0]
8000350e:	32 bc       	mov	r12,43
80003510:	80 00       	ld.sh	r0,r0[0x0]
80003512:	33 50       	mov	r0,53
80003514:	80 00       	ld.sh	r0,r0[0x0]
80003516:	33 84       	mov	r4,56

80003518 <dip204_init>:
80003518:	eb cd 40 80 	pushm	r7,lr
8000351c:	20 4d       	sub	sp,16
8000351e:	16 97       	mov	r7,r11
80003520:	58 1c       	cp.w	r12,1
80003522:	c3 01       	brne	80003582 <dip204_init+0x6a>
80003524:	30 69       	mov	r9,6
80003526:	4f a8       	lddpc	r8,8000370c <dip204_init+0x1f4>
80003528:	91 09       	st.w	r8[0x0],r9
8000352a:	30 2b       	mov	r11,2
8000352c:	33 2c       	mov	r12,50
8000352e:	f0 1f 00 79 	mcall	80003710 <dip204_init+0x1f8>
80003532:	30 08       	mov	r8,0
80003534:	50 18       	stdsp	sp[0x4],r8
80003536:	50 08       	stdsp	sp[0x0],r8
80003538:	50 38       	stdsp	sp[0xc],r8
8000353a:	50 28       	stdsp	sp[0x8],r8
8000353c:	1a 9c       	mov	r12,sp
8000353e:	f0 1f 00 76 	mcall	80003714 <dip204_init+0x1fc>
80003542:	58 07       	cp.w	r7,0
80003544:	f9 b7 01 31 	movne	r7,49
80003548:	f9 b7 00 01 	moveq	r7,1
8000354c:	4f 38       	lddpc	r8,80003718 <dip204_init+0x200>
8000354e:	b0 07       	st.h	r8[0x0],r7
80003550:	4f 3b       	lddpc	r11,8000371c <dip204_init+0x204>
80003552:	76 08       	ld.w	r8,r11[0x0]
80003554:	e0 18 fc ff 	andl	r8,0xfcff
80003558:	ab a8       	sbr	r8,0xa
8000355a:	30 89       	mov	r9,8
8000355c:	f1 d9 d0 04 	bfins	r8,r9,0x0,0x4
80003560:	97 08       	st.w	r11[0x0],r8
80003562:	97 17       	st.w	r11[0x4],r7
80003564:	33 28       	mov	r8,50
80003566:	97 28       	st.w	r11[0x8],r8
80003568:	30 08       	mov	r8,0
8000356a:	97 48       	st.w	r11[0x10],r8
8000356c:	4e 87       	lddpc	r7,8000370c <dip204_init+0x1f4>
8000356e:	6e 0c       	ld.w	r12,r7[0x0]
80003570:	f0 1f 00 6c 	mcall	80003720 <dip204_init+0x208>
80003574:	6e 08       	ld.w	r8,r7[0x0]
80003576:	30 1c       	mov	r12,1
80003578:	f8 08 09 4c 	lsl	r12,r12,r8
8000357c:	f0 1f 00 6a 	mcall	80003724 <dip204_init+0x20c>
80003580:	c0 a8       	rjmp	80003594 <dip204_init+0x7c>
80003582:	58 0b       	cp.w	r11,0
80003584:	c0 50       	breq	8000358e <dip204_init+0x76>
80003586:	33 2c       	mov	r12,50
80003588:	f0 1f 00 68 	mcall	80003728 <dip204_init+0x210>
8000358c:	c0 48       	rjmp	80003594 <dip204_init+0x7c>
8000358e:	33 2c       	mov	r12,50
80003590:	f0 1f 00 67 	mcall	8000372c <dip204_init+0x214>
80003594:	e1 b8 00 42 	mfsr	r8,0x108
80003598:	e2 79 a9 80 	mov	r9,240000
8000359c:	f0 09 00 0a 	add	r10,r8,r9
800035a0:	e1 b9 00 42 	mfsr	r9,0x108
800035a4:	14 38       	cp.w	r8,r10
800035a6:	e0 88 00 08 	brls	800035b6 <dip204_init+0x9e>
800035aa:	12 38       	cp.w	r8,r9
800035ac:	fe 98 ff fa 	brls	800035a0 <dip204_init+0x88>
800035b0:	12 3a       	cp.w	r10,r9
800035b2:	c6 e3       	brcs	8000368e <dip204_init+0x176>
800035b4:	cf 6b       	rjmp	800035a0 <dip204_init+0x88>
800035b6:	12 38       	cp.w	r8,r9
800035b8:	e0 8b 00 6b 	brhi	8000368e <dip204_init+0x176>
800035bc:	12 3a       	cp.w	r10,r9
800035be:	c6 83       	brcs	8000368e <dip204_init+0x176>
800035c0:	cf 0b       	rjmp	800035a0 <dip204_init+0x88>
800035c2:	e1 b9 00 42 	mfsr	r9,0x108
800035c6:	14 38       	cp.w	r8,r10
800035c8:	e0 88 00 08 	brls	800035d8 <dip204_init+0xc0>
800035cc:	12 38       	cp.w	r8,r9
800035ce:	fe 98 ff fa 	brls	800035c2 <dip204_init+0xaa>
800035d2:	12 3a       	cp.w	r10,r9
800035d4:	c6 b3       	brcs	800036aa <dip204_init+0x192>
800035d6:	cf 6b       	rjmp	800035c2 <dip204_init+0xaa>
800035d8:	12 38       	cp.w	r8,r9
800035da:	e0 8b 00 68 	brhi	800036aa <dip204_init+0x192>
800035de:	12 3a       	cp.w	r10,r9
800035e0:	c6 53       	brcs	800036aa <dip204_init+0x192>
800035e2:	cf 0b       	rjmp	800035c2 <dip204_init+0xaa>
800035e4:	e1 b9 00 42 	mfsr	r9,0x108
800035e8:	14 38       	cp.w	r8,r10
800035ea:	e0 88 00 08 	brls	800035fa <dip204_init+0xe2>
800035ee:	12 38       	cp.w	r8,r9
800035f0:	fe 98 ff fa 	brls	800035e4 <dip204_init+0xcc>
800035f4:	12 3a       	cp.w	r10,r9
800035f6:	c6 23       	brcs	800036ba <dip204_init+0x1a2>
800035f8:	cf 6b       	rjmp	800035e4 <dip204_init+0xcc>
800035fa:	12 38       	cp.w	r8,r9
800035fc:	e0 8b 00 5f 	brhi	800036ba <dip204_init+0x1a2>
80003600:	12 3a       	cp.w	r10,r9
80003602:	c5 c3       	brcs	800036ba <dip204_init+0x1a2>
80003604:	cf 0b       	rjmp	800035e4 <dip204_init+0xcc>
80003606:	e1 b9 00 42 	mfsr	r9,0x108
8000360a:	14 38       	cp.w	r8,r10
8000360c:	e0 88 00 08 	brls	8000361c <dip204_init+0x104>
80003610:	12 38       	cp.w	r8,r9
80003612:	fe 98 ff fa 	brls	80003606 <dip204_init+0xee>
80003616:	12 3a       	cp.w	r10,r9
80003618:	c5 93       	brcs	800036ca <dip204_init+0x1b2>
8000361a:	cf 6b       	rjmp	80003606 <dip204_init+0xee>
8000361c:	12 38       	cp.w	r8,r9
8000361e:	e0 8b 00 56 	brhi	800036ca <dip204_init+0x1b2>
80003622:	12 3a       	cp.w	r10,r9
80003624:	c5 33       	brcs	800036ca <dip204_init+0x1b2>
80003626:	cf 0b       	rjmp	80003606 <dip204_init+0xee>
80003628:	e1 b9 00 42 	mfsr	r9,0x108
8000362c:	14 38       	cp.w	r8,r10
8000362e:	e0 88 00 08 	brls	8000363e <dip204_init+0x126>
80003632:	12 38       	cp.w	r8,r9
80003634:	fe 98 ff fa 	brls	80003628 <dip204_init+0x110>
80003638:	12 3a       	cp.w	r10,r9
8000363a:	c5 03       	brcs	800036da <dip204_init+0x1c2>
8000363c:	cf 6b       	rjmp	80003628 <dip204_init+0x110>
8000363e:	12 38       	cp.w	r8,r9
80003640:	e0 8b 00 4d 	brhi	800036da <dip204_init+0x1c2>
80003644:	12 3a       	cp.w	r10,r9
80003646:	c4 a3       	brcs	800036da <dip204_init+0x1c2>
80003648:	cf 0b       	rjmp	80003628 <dip204_init+0x110>
8000364a:	e1 b9 00 42 	mfsr	r9,0x108
8000364e:	14 38       	cp.w	r8,r10
80003650:	e0 88 00 08 	brls	80003660 <dip204_init+0x148>
80003654:	12 38       	cp.w	r8,r9
80003656:	fe 98 ff fa 	brls	8000364a <dip204_init+0x132>
8000365a:	12 3a       	cp.w	r10,r9
8000365c:	c4 93       	brcs	800036ee <dip204_init+0x1d6>
8000365e:	cf 6b       	rjmp	8000364a <dip204_init+0x132>
80003660:	12 38       	cp.w	r8,r9
80003662:	e0 8b 00 46 	brhi	800036ee <dip204_init+0x1d6>
80003666:	12 3a       	cp.w	r10,r9
80003668:	c4 33       	brcs	800036ee <dip204_init+0x1d6>
8000366a:	cf 0b       	rjmp	8000364a <dip204_init+0x132>
8000366c:	e1 b9 00 42 	mfsr	r9,0x108
80003670:	14 38       	cp.w	r8,r10
80003672:	e0 88 00 08 	brls	80003682 <dip204_init+0x16a>
80003676:	12 38       	cp.w	r8,r9
80003678:	fe 98 ff fa 	brls	8000366c <dip204_init+0x154>
8000367c:	12 3a       	cp.w	r10,r9
8000367e:	c4 03       	brcs	800036fe <dip204_init+0x1e6>
80003680:	cf 6b       	rjmp	8000366c <dip204_init+0x154>
80003682:	12 38       	cp.w	r8,r9
80003684:	e0 8b 00 3d 	brhi	800036fe <dip204_init+0x1e6>
80003688:	12 3a       	cp.w	r10,r9
8000368a:	c3 a3       	brcs	800036fe <dip204_init+0x1e6>
8000368c:	cf 0b       	rjmp	8000366c <dip204_init+0x154>
8000368e:	f0 1f 00 29 	mcall	80003730 <dip204_init+0x218>
80003692:	e0 6c 00 f8 	mov	r12,248
80003696:	f0 1f 00 28 	mcall	80003734 <dip204_init+0x21c>
8000369a:	33 4c       	mov	r12,52
8000369c:	f0 1f 00 26 	mcall	80003734 <dip204_init+0x21c>
800036a0:	e1 b8 00 42 	mfsr	r8,0x108
800036a4:	f0 ca d1 20 	sub	r10,r8,-12000
800036a8:	c8 db       	rjmp	800035c2 <dip204_init+0xaa>
800036aa:	30 9c       	mov	r12,9
800036ac:	f0 1f 00 22 	mcall	80003734 <dip204_init+0x21c>
800036b0:	e1 b8 00 42 	mfsr	r8,0x108
800036b4:	f0 ca d1 20 	sub	r10,r8,-12000
800036b8:	c9 6b       	rjmp	800035e4 <dip204_init+0xcc>
800036ba:	33 0c       	mov	r12,48
800036bc:	f0 1f 00 1e 	mcall	80003734 <dip204_init+0x21c>
800036c0:	e1 b8 00 42 	mfsr	r8,0x108
800036c4:	f0 ca d1 20 	sub	r10,r8,-12000
800036c8:	c9 fb       	rjmp	80003606 <dip204_init+0xee>
800036ca:	30 fc       	mov	r12,15
800036cc:	f0 1f 00 1a 	mcall	80003734 <dip204_init+0x21c>
800036d0:	e1 b8 00 42 	mfsr	r8,0x108
800036d4:	f0 ca d1 20 	sub	r10,r8,-12000
800036d8:	ca 8b       	rjmp	80003628 <dip204_init+0x110>
800036da:	30 1c       	mov	r12,1
800036dc:	f0 1f 00 16 	mcall	80003734 <dip204_init+0x21c>
800036e0:	e1 b8 00 42 	mfsr	r8,0x108
800036e4:	e0 69 ea 60 	mov	r9,60000
800036e8:	f0 09 00 0a 	add	r10,r8,r9
800036ec:	ca fb       	rjmp	8000364a <dip204_init+0x132>
800036ee:	30 6c       	mov	r12,6
800036f0:	f0 1f 00 11 	mcall	80003734 <dip204_init+0x21c>
800036f4:	e1 b8 00 42 	mfsr	r8,0x108
800036f8:	f0 ca d1 20 	sub	r10,r8,-12000
800036fc:	cb 8b       	rjmp	8000366c <dip204_init+0x154>
800036fe:	f0 1f 00 0f 	mcall	80003738 <dip204_init+0x220>
80003702:	f0 1f 00 0f 	mcall	8000373c <dip204_init+0x224>
80003706:	2f cd       	sub	sp,-16
80003708:	e3 cd 80 80 	ldm	sp++,r7,pc
8000370c:	00 00       	add	r0,r0
8000370e:	00 10       	sub	r0,r0
80003710:	80 00       	ld.sh	r0,r0[0x0]
80003712:	37 40       	mov	r0,116
80003714:	80 00       	ld.sh	r0,r0[0x0]
80003716:	3a d0       	mov	r0,-83
80003718:	00 00       	add	r0,r0
8000371a:	05 54       	ld.sh	r4,--r2
8000371c:	00 00       	add	r0,r0
8000371e:	05 34       	ld.ub	r4,r2++
80003720:	80 00       	ld.sh	r0,r0[0x0]
80003722:	3a 88       	mov	r8,-88
80003724:	80 00       	ld.sh	r0,r0[0x0]
80003726:	3a be       	mov	lr,-85
80003728:	80 00       	ld.sh	r0,r0[0x0]
8000372a:	37 e0       	mov	r0,126
8000372c:	80 00       	ld.sh	r0,r0[0x0]
8000372e:	37 c4       	mov	r4,124
80003730:	80 00       	ld.sh	r0,r0[0x0]
80003732:	32 a8       	mov	r8,42
80003734:	80 00       	ld.sh	r0,r0[0x0]
80003736:	32 bc       	mov	r12,43
80003738:	80 00       	ld.sh	r0,r0[0x0]
8000373a:	33 50       	mov	r0,53
8000373c:	80 00       	ld.sh	r0,r0[0x0]
8000373e:	33 84       	mov	r4,56

80003740 <gpio_enable_module_pin>:
80003740:	f8 08 16 05 	lsr	r8,r12,0x5
80003744:	a9 68       	lsl	r8,0x8
80003746:	e0 28 f0 00 	sub	r8,61440
8000374a:	58 1b       	cp.w	r11,1
8000374c:	c0 d0       	breq	80003766 <gpio_enable_module_pin+0x26>
8000374e:	c0 63       	brcs	8000375a <gpio_enable_module_pin+0x1a>
80003750:	58 2b       	cp.w	r11,2
80003752:	c1 00       	breq	80003772 <gpio_enable_module_pin+0x32>
80003754:	58 3b       	cp.w	r11,3
80003756:	c1 40       	breq	8000377e <gpio_enable_module_pin+0x3e>
80003758:	5e ff       	retal	1
8000375a:	30 19       	mov	r9,1
8000375c:	f2 0c 09 49 	lsl	r9,r9,r12
80003760:	91 69       	st.w	r8[0x18],r9
80003762:	91 a9       	st.w	r8[0x28],r9
80003764:	c1 28       	rjmp	80003788 <gpio_enable_module_pin+0x48>
80003766:	30 19       	mov	r9,1
80003768:	f2 0c 09 49 	lsl	r9,r9,r12
8000376c:	91 59       	st.w	r8[0x14],r9
8000376e:	91 a9       	st.w	r8[0x28],r9
80003770:	c0 c8       	rjmp	80003788 <gpio_enable_module_pin+0x48>
80003772:	30 19       	mov	r9,1
80003774:	f2 0c 09 49 	lsl	r9,r9,r12
80003778:	91 69       	st.w	r8[0x18],r9
8000377a:	91 99       	st.w	r8[0x24],r9
8000377c:	c0 68       	rjmp	80003788 <gpio_enable_module_pin+0x48>
8000377e:	30 19       	mov	r9,1
80003780:	f2 0c 09 49 	lsl	r9,r9,r12
80003784:	91 59       	st.w	r8[0x14],r9
80003786:	91 99       	st.w	r8[0x24],r9
80003788:	30 19       	mov	r9,1
8000378a:	f2 0c 09 4c 	lsl	r12,r9,r12
8000378e:	91 2c       	st.w	r8[0x8],r12
80003790:	5e fd       	retal	0
80003792:	d7 03       	nop

80003794 <gpio_enable_module>:
80003794:	d4 21       	pushm	r4-r7,lr
80003796:	18 97       	mov	r7,r12
80003798:	16 94       	mov	r4,r11
8000379a:	58 0b       	cp.w	r11,0
8000379c:	c0 31       	brne	800037a2 <gpio_enable_module+0xe>
8000379e:	30 05       	mov	r5,0
800037a0:	c0 d8       	rjmp	800037ba <gpio_enable_module+0x26>
800037a2:	30 06       	mov	r6,0
800037a4:	0c 95       	mov	r5,r6
800037a6:	6e 1b       	ld.w	r11,r7[0x4]
800037a8:	6e 0c       	ld.w	r12,r7[0x0]
800037aa:	f0 1f 00 06 	mcall	800037c0 <gpio_enable_module+0x2c>
800037ae:	18 45       	or	r5,r12
800037b0:	2f 87       	sub	r7,-8
800037b2:	2f f6       	sub	r6,-1
800037b4:	0c 34       	cp.w	r4,r6
800037b6:	fe 9b ff f8 	brhi	800037a6 <gpio_enable_module+0x12>
800037ba:	0a 9c       	mov	r12,r5
800037bc:	d8 22       	popm	r4-r7,pc
800037be:	00 00       	add	r0,r0
800037c0:	80 00       	ld.sh	r0,r0[0x0]
800037c2:	37 40       	mov	r0,116

800037c4 <gpio_set_gpio_pin>:
800037c4:	f8 08 16 05 	lsr	r8,r12,0x5
800037c8:	a9 68       	lsl	r8,0x8
800037ca:	e0 28 f0 00 	sub	r8,61440
800037ce:	30 19       	mov	r9,1
800037d0:	f2 0c 09 4c 	lsl	r12,r9,r12
800037d4:	f1 4c 00 54 	st.w	r8[84],r12
800037d8:	f1 4c 00 44 	st.w	r8[68],r12
800037dc:	91 1c       	st.w	r8[0x4],r12
800037de:	5e fc       	retal	r12

800037e0 <gpio_clr_gpio_pin>:
800037e0:	f8 08 16 05 	lsr	r8,r12,0x5
800037e4:	a9 68       	lsl	r8,0x8
800037e6:	e0 28 f0 00 	sub	r8,61440
800037ea:	30 19       	mov	r9,1
800037ec:	f2 0c 09 4c 	lsl	r12,r9,r12
800037f0:	f1 4c 00 58 	st.w	r8[88],r12
800037f4:	f1 4c 00 44 	st.w	r8[68],r12
800037f8:	91 1c       	st.w	r8[0x4],r12
800037fa:	5e fc       	retal	r12

800037fc <gpio_enable_pin_glitch_filter>:
800037fc:	f8 08 16 05 	lsr	r8,r12,0x5
80003800:	a9 68       	lsl	r8,0x8
80003802:	e0 28 f0 00 	sub	r8,61440
80003806:	30 19       	mov	r9,1
80003808:	f2 0c 09 4c 	lsl	r12,r9,r12
8000380c:	f1 4c 00 c4 	st.w	r8[196],r12
80003810:	5e fc       	retal	r12

80003812 <gpio_enable_pin_interrupt>:
80003812:	f8 08 16 05 	lsr	r8,r12,0x5
80003816:	a9 68       	lsl	r8,0x8
80003818:	e0 28 f0 00 	sub	r8,61440
8000381c:	30 19       	mov	r9,1
8000381e:	f2 0c 09 4c 	lsl	r12,r9,r12
80003822:	f1 4c 00 c4 	st.w	r8[196],r12
80003826:	12 3b       	cp.w	r11,r9
80003828:	c0 a0       	breq	8000383c <gpio_enable_pin_interrupt+0x2a>
8000382a:	c0 43       	brcs	80003832 <gpio_enable_pin_interrupt+0x20>
8000382c:	58 2b       	cp.w	r11,2
8000382e:	c1 11       	brne	80003850 <gpio_enable_pin_interrupt+0x3e>
80003830:	c0 b8       	rjmp	80003846 <gpio_enable_pin_interrupt+0x34>
80003832:	f1 4c 00 a8 	st.w	r8[168],r12
80003836:	f1 4c 00 b8 	st.w	r8[184],r12
8000383a:	c0 c8       	rjmp	80003852 <gpio_enable_pin_interrupt+0x40>
8000383c:	f1 4c 00 a4 	st.w	r8[164],r12
80003840:	f1 4c 00 b8 	st.w	r8[184],r12
80003844:	c0 78       	rjmp	80003852 <gpio_enable_pin_interrupt+0x40>
80003846:	f1 4c 00 a8 	st.w	r8[168],r12
8000384a:	f1 4c 00 b4 	st.w	r8[180],r12
8000384e:	c0 28       	rjmp	80003852 <gpio_enable_pin_interrupt+0x40>
80003850:	5e ff       	retal	1
80003852:	f1 4c 00 94 	st.w	r8[148],r12
80003856:	5e fd       	retal	0

80003858 <gpio_clear_pin_interrupt_flag>:
80003858:	f8 08 16 05 	lsr	r8,r12,0x5
8000385c:	a9 68       	lsl	r8,0x8
8000385e:	e0 28 f0 00 	sub	r8,61440
80003862:	30 19       	mov	r9,1
80003864:	f2 0c 09 4c 	lsl	r12,r9,r12
80003868:	f1 4c 00 d8 	st.w	r8[216],r12
8000386c:	5e fc       	retal	r12

8000386e <_unhandled_interrupt>:
8000386e:	c0 08       	rjmp	8000386e <_unhandled_interrupt>

80003870 <INTC_register_interrupt>:
80003870:	f6 08 16 05 	lsr	r8,r11,0x5
80003874:	49 99       	lddpc	r9,800038d8 <INTC_register_interrupt+0x68>
80003876:	f2 08 00 39 	add	r9,r9,r8<<0x3
8000387a:	f7 db c0 05 	bfextu	r11,r11,0x0,0x5
8000387e:	72 19       	ld.w	r9,r9[0x4]
80003880:	f2 0b 09 2c 	st.w	r9[r11<<0x2],r12
80003884:	58 0a       	cp.w	r10,0
80003886:	c0 91       	brne	80003898 <INTC_register_interrupt+0x28>
80003888:	49 59       	lddpc	r9,800038dc <INTC_register_interrupt+0x6c>
8000388a:	49 6a       	lddpc	r10,800038e0 <INTC_register_interrupt+0x70>
8000388c:	12 1a       	sub	r10,r9
8000388e:	fe 79 08 00 	mov	r9,-63488
80003892:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
80003896:	5e fc       	retal	r12
80003898:	58 1a       	cp.w	r10,1
8000389a:	c0 a1       	brne	800038ae <INTC_register_interrupt+0x3e>
8000389c:	49 09       	lddpc	r9,800038dc <INTC_register_interrupt+0x6c>
8000389e:	49 2a       	lddpc	r10,800038e4 <INTC_register_interrupt+0x74>
800038a0:	12 1a       	sub	r10,r9
800038a2:	bf aa       	sbr	r10,0x1e
800038a4:	fe 79 08 00 	mov	r9,-63488
800038a8:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800038ac:	5e fc       	retal	r12
800038ae:	58 2a       	cp.w	r10,2
800038b0:	c0 a1       	brne	800038c4 <INTC_register_interrupt+0x54>
800038b2:	48 b9       	lddpc	r9,800038dc <INTC_register_interrupt+0x6c>
800038b4:	48 da       	lddpc	r10,800038e8 <INTC_register_interrupt+0x78>
800038b6:	12 1a       	sub	r10,r9
800038b8:	bf ba       	sbr	r10,0x1f
800038ba:	fe 79 08 00 	mov	r9,-63488
800038be:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800038c2:	5e fc       	retal	r12
800038c4:	48 69       	lddpc	r9,800038dc <INTC_register_interrupt+0x6c>
800038c6:	48 aa       	lddpc	r10,800038ec <INTC_register_interrupt+0x7c>
800038c8:	12 1a       	sub	r10,r9
800038ca:	ea 1a c0 00 	orh	r10,0xc000
800038ce:	fe 79 08 00 	mov	r9,-63488
800038d2:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800038d6:	5e fc       	retal	r12
800038d8:	80 00       	ld.sh	r0,r0[0x0]
800038da:	9b 34       	st.w	sp[0xc],r4
800038dc:	80 00       	ld.sh	r0,r0[0x0]
800038de:	98 00       	ld.sh	r0,r12[0x0]
800038e0:	80 00       	ld.sh	r0,r0[0x0]
800038e2:	99 04       	st.w	r12[0x0],r4
800038e4:	80 00       	ld.sh	r0,r0[0x0]
800038e6:	99 12       	st.w	r12[0x4],r2
800038e8:	80 00       	ld.sh	r0,r0[0x0]
800038ea:	99 20       	st.w	r12[0x8],r0
800038ec:	80 00       	ld.sh	r0,r0[0x0]
800038ee:	99 2e       	st.w	r12[0x8],lr

800038f0 <INTC_init_interrupts>:
800038f0:	d4 21       	pushm	r4-r7,lr
800038f2:	49 18       	lddpc	r8,80003934 <INTC_init_interrupts+0x44>
800038f4:	e3 b8 00 01 	mtsr	0x4,r8
800038f8:	49 0e       	lddpc	lr,80003938 <INTC_init_interrupts+0x48>
800038fa:	30 07       	mov	r7,0
800038fc:	0e 94       	mov	r4,r7
800038fe:	49 0c       	lddpc	r12,8000393c <INTC_init_interrupts+0x4c>
80003900:	49 05       	lddpc	r5,80003940 <INTC_init_interrupts+0x50>
80003902:	10 15       	sub	r5,r8
80003904:	fe 76 08 00 	mov	r6,-63488
80003908:	c1 08       	rjmp	80003928 <INTC_init_interrupts+0x38>
8000390a:	08 98       	mov	r8,r4
8000390c:	7c 1b       	ld.w	r11,lr[0x4]
8000390e:	7c 0a       	ld.w	r10,lr[0x0]
80003910:	f6 08 09 2c 	st.w	r11[r8<<0x2],r12
80003914:	2f f8       	sub	r8,-1
80003916:	10 3a       	cp.w	r10,r8
80003918:	fe 9b ff fc 	brhi	80003910 <INTC_init_interrupts+0x20>
8000391c:	ec 07 09 25 	st.w	r6[r7<<0x2],r5
80003920:	2f f7       	sub	r7,-1
80003922:	2f 8e       	sub	lr,-8
80003924:	59 47       	cp.w	r7,20
80003926:	c0 50       	breq	80003930 <INTC_init_interrupts+0x40>
80003928:	7c 08       	ld.w	r8,lr[0x0]
8000392a:	58 08       	cp.w	r8,0
8000392c:	ce f1       	brne	8000390a <INTC_init_interrupts+0x1a>
8000392e:	cf 7b       	rjmp	8000391c <INTC_init_interrupts+0x2c>
80003930:	d8 22       	popm	r4-r7,pc
80003932:	00 00       	add	r0,r0
80003934:	80 00       	ld.sh	r0,r0[0x0]
80003936:	98 00       	ld.sh	r0,r12[0x0]
80003938:	80 00       	ld.sh	r0,r0[0x0]
8000393a:	9b 34       	st.w	sp[0xc],r4
8000393c:	80 00       	ld.sh	r0,r0[0x0]
8000393e:	38 6e       	mov	lr,-122
80003940:	80 00       	ld.sh	r0,r0[0x0]
80003942:	99 04       	st.w	r12[0x0],r4

80003944 <_get_interrupt_handler>:
80003944:	fe 78 08 00 	mov	r8,-63488
80003948:	e0 69 00 83 	mov	r9,131
8000394c:	f2 0c 01 0c 	sub	r12,r9,r12
80003950:	f0 0c 03 29 	ld.w	r9,r8[r12<<0x2]
80003954:	f2 ca ff c0 	sub	r10,r9,-64
80003958:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
8000395c:	58 08       	cp.w	r8,0
8000395e:	c0 21       	brne	80003962 <_get_interrupt_handler+0x1e>
80003960:	5e fd       	retal	0
80003962:	f0 08 12 00 	clz	r8,r8
80003966:	48 5a       	lddpc	r10,80003978 <_get_interrupt_handler+0x34>
80003968:	f4 09 00 39 	add	r9,r10,r9<<0x3
8000396c:	f0 08 11 1f 	rsub	r8,r8,31
80003970:	72 19       	ld.w	r9,r9[0x4]
80003972:	f2 08 03 2c 	ld.w	r12,r9[r8<<0x2]
80003976:	5e fc       	retal	r12
80003978:	80 00       	ld.sh	r0,r0[0x0]
8000397a:	9b 34       	st.w	sp[0xc],r4

8000397c <pm_set_osc0_mode>:
8000397c:	78 a8       	ld.w	r8,r12[0x28]
8000397e:	f1 db d0 03 	bfins	r8,r11,0x0,0x3
80003982:	99 a8       	st.w	r12[0x28],r8
80003984:	5e fc       	retal	r12
80003986:	d7 03       	nop

80003988 <pm_enable_osc0_crystal>:
80003988:	d4 01       	pushm	lr
8000398a:	ec 5b bb 9f 	cp.w	r11,899999
8000398e:	e0 8b 00 04 	brhi	80003996 <pm_enable_osc0_crystal+0xe>
80003992:	30 4b       	mov	r11,4
80003994:	c1 38       	rjmp	800039ba <pm_enable_osc0_crystal+0x32>
80003996:	e0 68 c6 bf 	mov	r8,50879
8000399a:	ea 18 00 2d 	orh	r8,0x2d
8000399e:	10 3b       	cp.w	r11,r8
800039a0:	e0 8b 00 04 	brhi	800039a8 <pm_enable_osc0_crystal+0x20>
800039a4:	30 5b       	mov	r11,5
800039a6:	c0 a8       	rjmp	800039ba <pm_enable_osc0_crystal+0x32>
800039a8:	e0 68 12 00 	mov	r8,4608
800039ac:	ea 18 00 7a 	orh	r8,0x7a
800039b0:	10 3b       	cp.w	r11,r8
800039b2:	f9 bb 03 06 	movlo	r11,6
800039b6:	f9 bb 02 07 	movhs	r11,7
800039ba:	f0 1f 00 02 	mcall	800039c0 <pm_enable_osc0_crystal+0x38>
800039be:	d8 02       	popm	pc
800039c0:	80 00       	ld.sh	r0,r0[0x0]
800039c2:	39 7c       	mov	r12,-105

800039c4 <pm_enable_clk0_no_wait>:
800039c4:	78 a8       	ld.w	r8,r12[0x28]
800039c6:	f1 db d1 03 	bfins	r8,r11,0x8,0x3
800039ca:	99 a8       	st.w	r12[0x28],r8
800039cc:	78 08       	ld.w	r8,r12[0x0]
800039ce:	a3 a8       	sbr	r8,0x2
800039d0:	99 08       	st.w	r12[0x0],r8
800039d2:	5e fc       	retal	r12

800039d4 <pm_wait_for_clk0_ready>:
800039d4:	79 58       	ld.w	r8,r12[0x54]
800039d6:	e2 18 00 80 	andl	r8,0x80,COH
800039da:	cf d0       	breq	800039d4 <pm_wait_for_clk0_ready>
800039dc:	5e fc       	retal	r12
800039de:	d7 03       	nop

800039e0 <pm_enable_clk0>:
800039e0:	eb cd 40 80 	pushm	r7,lr
800039e4:	18 97       	mov	r7,r12
800039e6:	f0 1f 00 04 	mcall	800039f4 <pm_enable_clk0+0x14>
800039ea:	0e 9c       	mov	r12,r7
800039ec:	f0 1f 00 03 	mcall	800039f8 <pm_enable_clk0+0x18>
800039f0:	e3 cd 80 80 	ldm	sp++,r7,pc
800039f4:	80 00       	ld.sh	r0,r0[0x0]
800039f6:	39 c4       	mov	r4,-100
800039f8:	80 00       	ld.sh	r0,r0[0x0]
800039fa:	39 d4       	mov	r4,-99

800039fc <pm_set_osc32_mode>:
800039fc:	78 c8       	ld.w	r8,r12[0x30]
800039fe:	f1 db d1 03 	bfins	r8,r11,0x8,0x3
80003a02:	99 c8       	st.w	r12[0x30],r8
80003a04:	5e fc       	retal	r12
80003a06:	d7 03       	nop

80003a08 <pm_enable_osc32_crystal>:
80003a08:	d4 01       	pushm	lr
80003a0a:	30 1b       	mov	r11,1
80003a0c:	f0 1f 00 02 	mcall	80003a14 <pm_enable_osc32_crystal+0xc>
80003a10:	d8 02       	popm	pc
80003a12:	00 00       	add	r0,r0
80003a14:	80 00       	ld.sh	r0,r0[0x0]
80003a16:	39 fc       	mov	r12,-97

80003a18 <pm_enable_clk32_no_wait>:
80003a18:	78 c8       	ld.w	r8,r12[0x30]
80003a1a:	30 19       	mov	r9,1
80003a1c:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80003a20:	f1 db d2 03 	bfins	r8,r11,0x10,0x3
80003a24:	99 c8       	st.w	r12[0x30],r8
80003a26:	5e fc       	retal	r12

80003a28 <pm_wait_for_clk32_ready>:
80003a28:	79 58       	ld.w	r8,r12[0x54]
80003a2a:	e2 18 02 00 	andl	r8,0x200,COH
80003a2e:	cf d0       	breq	80003a28 <pm_wait_for_clk32_ready>
80003a30:	5e fc       	retal	r12
80003a32:	d7 03       	nop

80003a34 <pm_enable_clk32>:
80003a34:	eb cd 40 80 	pushm	r7,lr
80003a38:	18 97       	mov	r7,r12
80003a3a:	f0 1f 00 04 	mcall	80003a48 <pm_enable_clk32+0x14>
80003a3e:	0e 9c       	mov	r12,r7
80003a40:	f0 1f 00 03 	mcall	80003a4c <pm_enable_clk32+0x18>
80003a44:	e3 cd 80 80 	ldm	sp++,r7,pc
80003a48:	80 00       	ld.sh	r0,r0[0x0]
80003a4a:	3a 18       	mov	r8,-95
80003a4c:	80 00       	ld.sh	r0,r0[0x0]
80003a4e:	3a 28       	mov	r8,-94

80003a50 <pm_switch_to_clock>:
80003a50:	78 08       	ld.w	r8,r12[0x0]
80003a52:	f1 db d0 02 	bfins	r8,r11,0x0,0x2
80003a56:	99 08       	st.w	r12[0x0],r8
80003a58:	5e fc       	retal	r12
80003a5a:	d7 03       	nop

80003a5c <pm_switch_to_osc0>:
80003a5c:	eb cd 40 c0 	pushm	r6-r7,lr
80003a60:	18 97       	mov	r7,r12
80003a62:	14 96       	mov	r6,r10
80003a64:	f0 1f 00 06 	mcall	80003a7c <pm_switch_to_osc0+0x20>
80003a68:	0c 9b       	mov	r11,r6
80003a6a:	0e 9c       	mov	r12,r7
80003a6c:	f0 1f 00 05 	mcall	80003a80 <pm_switch_to_osc0+0x24>
80003a70:	30 1b       	mov	r11,1
80003a72:	0e 9c       	mov	r12,r7
80003a74:	f0 1f 00 04 	mcall	80003a84 <pm_switch_to_osc0+0x28>
80003a78:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003a7c:	80 00       	ld.sh	r0,r0[0x0]
80003a7e:	39 88       	mov	r8,-104
80003a80:	80 00       	ld.sh	r0,r0[0x0]
80003a82:	39 e0       	mov	r0,-98
80003a84:	80 00       	ld.sh	r0,r0[0x0]
80003a86:	3a 50       	mov	r0,-91

80003a88 <pwm_channel_init>:
80003a88:	58 0b       	cp.w	r11,0
80003a8a:	c1 90       	breq	80003abc <pwm_channel_init+0x34>
80003a8c:	58 6c       	cp.w	r12,6
80003a8e:	e0 8b 00 17 	brhi	80003abc <pwm_channel_init+0x34>
80003a92:	76 0a       	ld.w	r10,r11[0x0]
80003a94:	fe 78 30 00 	mov	r8,-53248
80003a98:	f8 c9 ff f0 	sub	r9,r12,-16
80003a9c:	a5 79       	lsl	r9,0x5
80003a9e:	f0 09 00 09 	add	r9,r8,r9
80003aa2:	93 0a       	st.w	r9[0x0],r10
80003aa4:	76 19       	ld.w	r9,r11[0x4]
80003aa6:	a5 7c       	lsl	r12,0x5
80003aa8:	f0 0c 00 0c 	add	r12,r8,r12
80003aac:	f8 c8 fd fc 	sub	r8,r12,-516
80003ab0:	91 09       	st.w	r8[0x0],r9
80003ab2:	76 28       	ld.w	r8,r11[0x8]
80003ab4:	f8 cc fd f8 	sub	r12,r12,-520
80003ab8:	99 08       	st.w	r12[0x0],r8
80003aba:	5e fd       	retal	0
80003abc:	5e ff       	retal	1

80003abe <pwm_start_channels>:
80003abe:	18 98       	mov	r8,r12
80003ac0:	e0 18 ff 80 	andl	r8,0xff80
80003ac4:	c0 20       	breq	80003ac8 <pwm_start_channels+0xa>
80003ac6:	5e ff       	retal	1
80003ac8:	fe 78 30 00 	mov	r8,-53248
80003acc:	91 1c       	st.w	r8[0x4],r12
80003ace:	5e fd       	retal	0

80003ad0 <pwm_init>:
80003ad0:	e1 b8 00 00 	mfsr	r8,0x0
80003ad4:	58 0c       	cp.w	r12,0
80003ad6:	c0 21       	brne	80003ada <pwm_init+0xa>
80003ad8:	5e ff       	retal	1
80003ada:	e6 18 00 01 	andh	r8,0x1,COH
80003ade:	c0 91       	brne	80003af0 <pwm_init+0x20>
80003ae0:	d3 03       	ssrf	0x10
80003ae2:	fe 78 30 00 	mov	r8,-53248
80003ae6:	37 f9       	mov	r9,127
80003ae8:	91 59       	st.w	r8[0x14],r9
80003aea:	70 78       	ld.w	r8,r8[0x1c]
80003aec:	d5 03       	csrf	0x10
80003aee:	c0 68       	rjmp	80003afa <pwm_init+0x2a>
80003af0:	fe 78 30 00 	mov	r8,-53248
80003af4:	37 f9       	mov	r9,127
80003af6:	91 59       	st.w	r8[0x14],r9
80003af8:	70 78       	ld.w	r8,r8[0x1c]
80003afa:	78 08       	ld.w	r8,r12[0x0]
80003afc:	78 39       	ld.w	r9,r12[0xc]
80003afe:	a9 69       	lsl	r9,0x8
80003b00:	f3 e8 11 09 	or	r9,r9,r8<<0x10
80003b04:	78 18       	ld.w	r8,r12[0x4]
80003b06:	10 49       	or	r9,r8
80003b08:	78 28       	ld.w	r8,r12[0x8]
80003b0a:	f3 e8 11 89 	or	r9,r9,r8<<0x18
80003b0e:	fe 78 30 00 	mov	r8,-53248
80003b12:	91 09       	st.w	r8[0x0],r9
80003b14:	5e fd       	retal	0

80003b16 <getBaudDiv>:
80003b16:	f8 c8 00 01 	sub	r8,r12,1
80003b1a:	f0 0b 00 0b 	add	r11,r8,r11
80003b1e:	f6 0c 0d 0a 	divu	r10,r11,r12
80003b22:	14 9c       	mov	r12,r10
80003b24:	f4 c8 00 01 	sub	r8,r10,1
80003b28:	e0 48 00 fe 	cp.w	r8,254
80003b2c:	e0 88 00 03 	brls	80003b32 <getBaudDiv+0x1c>
80003b30:	5e fe       	retal	-1
80003b32:	5c 8c       	casts.h	r12
80003b34:	5e fc       	retal	r12

80003b36 <spi_initMaster>:
80003b36:	f7 39 00 0d 	ld.ub	r9,r11[13]
80003b3a:	30 18       	mov	r8,1
80003b3c:	f0 09 18 00 	cp.b	r9,r8
80003b40:	e0 88 00 04 	brls	80003b48 <spi_initMaster+0x12>
80003b44:	30 2c       	mov	r12,2
80003b46:	5e fc       	retal	r12
80003b48:	e0 68 00 80 	mov	r8,128
80003b4c:	99 08       	st.w	r12[0x0],r8
80003b4e:	78 18       	ld.w	r8,r12[0x4]
80003b50:	30 19       	mov	r9,1
80003b52:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80003b56:	f7 39 00 0d 	ld.ub	r9,r11[13]
80003b5a:	f1 d9 d0 81 	bfins	r8,r9,0x4,0x1
80003b5e:	30 09       	mov	r9,0
80003b60:	f1 d9 d0 e1 	bfins	r8,r9,0x7,0x1
80003b64:	30 fa       	mov	r10,15
80003b66:	f1 da d2 04 	bfins	r8,r10,0x10,0x4
80003b6a:	99 18       	st.w	r12[0x4],r8
80003b6c:	5e f9       	retal	r9

80003b6e <spi_selectionMode>:
80003b6e:	d4 01       	pushm	lr
80003b70:	30 18       	mov	r8,1
80003b72:	f0 0b 18 00 	cp.b	r11,r8
80003b76:	5f be       	srhi	lr
80003b78:	f0 0a 18 00 	cp.b	r10,r8
80003b7c:	5f b8       	srhi	r8
80003b7e:	fd e8 10 08 	or	r8,lr,r8
80003b82:	c0 30       	breq	80003b88 <spi_selectionMode+0x1a>
80003b84:	30 2c       	mov	r12,2
80003b86:	d8 02       	popm	pc
80003b88:	78 18       	ld.w	r8,r12[0x4]
80003b8a:	f1 db d0 21 	bfins	r8,r11,0x1,0x1
80003b8e:	f1 da d0 41 	bfins	r8,r10,0x2,0x1
80003b92:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
80003b96:	99 18       	st.w	r12[0x4],r8
80003b98:	d8 0a       	popm	pc,r12=0

80003b9a <spi_selectChip>:
80003b9a:	78 18       	ld.w	r8,r12[0x4]
80003b9c:	ea 18 00 0f 	orh	r8,0xf
80003ba0:	99 18       	st.w	r12[0x4],r8
80003ba2:	78 18       	ld.w	r8,r12[0x4]
80003ba4:	e2 18 00 04 	andl	r8,0x4,COH
80003ba8:	c0 f0       	breq	80003bc6 <spi_selectChip+0x2c>
80003baa:	30 e8       	mov	r8,14
80003bac:	f0 0b 18 00 	cp.b	r11,r8
80003bb0:	e0 8b 00 19 	brhi	80003be2 <spi_selectChip+0x48>
80003bb4:	78 18       	ld.w	r8,r12[0x4]
80003bb6:	b1 6b       	lsl	r11,0x10
80003bb8:	ea 1b ff f0 	orh	r11,0xfff0
80003bbc:	e8 1b ff ff 	orl	r11,0xffff
80003bc0:	10 6b       	and	r11,r8
80003bc2:	99 1b       	st.w	r12[0x4],r11
80003bc4:	5e fd       	retal	0
80003bc6:	30 38       	mov	r8,3
80003bc8:	f0 0b 18 00 	cp.b	r11,r8
80003bcc:	e0 8b 00 0b 	brhi	80003be2 <spi_selectChip+0x48>
80003bd0:	78 18       	ld.w	r8,r12[0x4]
80003bd2:	2f 0b       	sub	r11,-16
80003bd4:	30 19       	mov	r9,1
80003bd6:	f2 0b 09 4b 	lsl	r11,r9,r11
80003bda:	5c db       	com	r11
80003bdc:	10 6b       	and	r11,r8
80003bde:	99 1b       	st.w	r12[0x4],r11
80003be0:	5e fd       	retal	0
80003be2:	30 2c       	mov	r12,2
80003be4:	5e fc       	retal	r12

80003be6 <spi_unselectChip>:
80003be6:	e0 68 3a 98 	mov	r8,15000
80003bea:	c0 58       	rjmp	80003bf4 <spi_unselectChip+0xe>
80003bec:	58 08       	cp.w	r8,0
80003bee:	c0 21       	brne	80003bf2 <spi_unselectChip+0xc>
80003bf0:	5e ff       	retal	1
80003bf2:	20 18       	sub	r8,1
80003bf4:	78 49       	ld.w	r9,r12[0x10]
80003bf6:	e2 19 02 00 	andl	r9,0x200,COH
80003bfa:	cf 90       	breq	80003bec <spi_unselectChip+0x6>
80003bfc:	78 18       	ld.w	r8,r12[0x4]
80003bfe:	ea 18 00 0f 	orh	r8,0xf
80003c02:	99 18       	st.w	r12[0x4],r8
80003c04:	fc 18 01 00 	movh	r8,0x100
80003c08:	99 08       	st.w	r12[0x0],r8
80003c0a:	5e fd       	retal	0

80003c0c <spi_setupChipReg>:
80003c0c:	eb cd 40 f8 	pushm	r3-r7,lr
80003c10:	18 95       	mov	r5,r12
80003c12:	16 97       	mov	r7,r11
80003c14:	f7 36 00 0c 	ld.ub	r6,r11[12]
80003c18:	30 38       	mov	r8,3
80003c1a:	f0 06 18 00 	cp.b	r6,r8
80003c1e:	e0 8b 00 4d 	brhi	80003cb8 <spi_setupChipReg+0xac>
80003c22:	f7 34 00 0b 	ld.ub	r4,r11[11]
80003c26:	30 18       	mov	r8,1
80003c28:	f0 04 18 00 	cp.b	r4,r8
80003c2c:	e0 8b 00 46 	brhi	80003cb8 <spi_setupChipReg+0xac>
80003c30:	f7 33 00 08 	ld.ub	r3,r11[8]
80003c34:	30 78       	mov	r8,7
80003c36:	f0 03 18 00 	cp.b	r3,r8
80003c3a:	e0 88 00 3f 	brls	80003cb8 <spi_setupChipReg+0xac>
80003c3e:	31 08       	mov	r8,16
80003c40:	f0 03 18 00 	cp.b	r3,r8
80003c44:	e0 8b 00 3a 	brhi	80003cb8 <spi_setupChipReg+0xac>
80003c48:	14 9b       	mov	r11,r10
80003c4a:	6e 1c       	ld.w	r12,r7[0x4]
80003c4c:	f0 1f 00 1d 	mcall	80003cc0 <spi_setupChipReg+0xb4>
80003c50:	c3 45       	brlt	80003cb8 <spi_setupChipReg+0xac>
80003c52:	30 08       	mov	r8,0
80003c54:	ec 09 16 01 	lsr	r9,r6,0x1
80003c58:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80003c5c:	ec 16 00 01 	eorl	r6,0x1
80003c60:	f1 d6 d0 21 	bfins	r8,r6,0x1,0x1
80003c64:	f1 d4 d0 61 	bfins	r8,r4,0x3,0x1
80003c68:	20 83       	sub	r3,8
80003c6a:	f1 d3 d0 84 	bfins	r8,r3,0x4,0x4
80003c6e:	f1 dc d1 08 	bfins	r8,r12,0x8,0x8
80003c72:	ef 39 00 09 	ld.ub	r9,r7[9]
80003c76:	f1 d9 d2 08 	bfins	r8,r9,0x10,0x8
80003c7a:	ef 39 00 0a 	ld.ub	r9,r7[10]
80003c7e:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
80003c82:	0f 89       	ld.ub	r9,r7[0x0]
80003c84:	30 1a       	mov	r10,1
80003c86:	f4 09 18 00 	cp.b	r9,r10
80003c8a:	c0 e0       	breq	80003ca6 <spi_setupChipReg+0x9a>
80003c8c:	c0 a3       	brcs	80003ca0 <spi_setupChipReg+0x94>
80003c8e:	30 2a       	mov	r10,2
80003c90:	f4 09 18 00 	cp.b	r9,r10
80003c94:	c0 c0       	breq	80003cac <spi_setupChipReg+0xa0>
80003c96:	30 3a       	mov	r10,3
80003c98:	f4 09 18 00 	cp.b	r9,r10
80003c9c:	c0 e1       	brne	80003cb8 <spi_setupChipReg+0xac>
80003c9e:	c0 a8       	rjmp	80003cb2 <spi_setupChipReg+0xa6>
80003ca0:	8b c8       	st.w	r5[0x30],r8
80003ca2:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80003ca6:	8b d8       	st.w	r5[0x34],r8
80003ca8:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80003cac:	8b e8       	st.w	r5[0x38],r8
80003cae:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80003cb2:	8b f8       	st.w	r5[0x3c],r8
80003cb4:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80003cb8:	30 2c       	mov	r12,2
80003cba:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80003cbe:	00 00       	add	r0,r0
80003cc0:	80 00       	ld.sh	r0,r0[0x0]
80003cc2:	3b 16       	mov	r6,-79

80003cc4 <spi_enable>:
80003cc4:	30 18       	mov	r8,1
80003cc6:	99 08       	st.w	r12[0x0],r8
80003cc8:	5e fc       	retal	r12

80003cca <spi_write>:
80003cca:	e0 68 3a 98 	mov	r8,15000
80003cce:	c0 58       	rjmp	80003cd8 <spi_write+0xe>
80003cd0:	58 08       	cp.w	r8,0
80003cd2:	c0 21       	brne	80003cd6 <spi_write+0xc>
80003cd4:	5e ff       	retal	1
80003cd6:	20 18       	sub	r8,1
80003cd8:	78 49       	ld.w	r9,r12[0x10]
80003cda:	e2 19 00 02 	andl	r9,0x2,COH
80003cde:	cf 90       	breq	80003cd0 <spi_write+0x6>
80003ce0:	5c 7b       	castu.h	r11
80003ce2:	99 3b       	st.w	r12[0xc],r11
80003ce4:	5e fd       	retal	0

80003ce6 <spi_readRegisterFullCheck>:
80003ce6:	78 4c       	ld.w	r12,r12[0x10]
80003ce8:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
80003cec:	5e fc       	retal	r12

80003cee <spi_read>:
80003cee:	e0 68 3a 98 	mov	r8,15000
80003cf2:	c0 58       	rjmp	80003cfc <spi_read+0xe>
80003cf4:	58 08       	cp.w	r8,0
80003cf6:	c0 21       	brne	80003cfa <spi_read+0xc>
80003cf8:	5e ff       	retal	1
80003cfa:	20 18       	sub	r8,1
80003cfc:	78 49       	ld.w	r9,r12[0x10]
80003cfe:	e2 19 02 01 	andl	r9,0x201,COH
80003d02:	e0 49 02 01 	cp.w	r9,513
80003d06:	cf 71       	brne	80003cf4 <spi_read+0x6>
80003d08:	78 28       	ld.w	r8,r12[0x8]
80003d0a:	b6 08       	st.h	r11[0x0],r8
80003d0c:	5e fd       	retal	0
80003d0e:	d7 03       	nop

80003d10 <_stext>:
80003d10:	e0 7d 00 00 	mov	sp,65536
80003d14:	fe c0 a5 14 	sub	r0,pc,-23276
80003d18:	e3 b0 00 01 	mtsr	0x4,r0
80003d1c:	d5 53       	csrf	0x15
80003d1e:	30 80       	mov	r0,8
80003d20:	e0 61 05 18 	mov	r1,1304
80003d24:	02 30       	cp.w	r0,r1
80003d26:	c0 72       	brcc	80003d34 <idata_load_loop_end>
80003d28:	fe c2 9b c8 	sub	r2,pc,-25656

80003d2c <idata_load_loop>:
80003d2c:	a5 05       	ld.d	r4,r2++
80003d2e:	a1 24       	st.d	r0++,r4
80003d30:	02 30       	cp.w	r0,r1
80003d32:	cf d3       	brcs	80003d2c <idata_load_loop>

80003d34 <idata_load_loop_end>:
80003d34:	e0 60 05 18 	mov	r0,1304
80003d38:	e0 61 08 70 	mov	r1,2160
80003d3c:	02 30       	cp.w	r0,r1
80003d3e:	c0 62       	brcc	80003d4a <udata_clear_loop_end>
80003d40:	30 02       	mov	r2,0
80003d42:	30 03       	mov	r3,0

80003d44 <udata_clear_loop>:
80003d44:	a1 22       	st.d	r0++,r2
80003d46:	02 30       	cp.w	r0,r1
80003d48:	cf e3       	brcs	80003d44 <udata_clear_loop>

80003d4a <udata_clear_loop_end>:
80003d4a:	fe cf 0c c6 	sub	pc,pc,3270
80003d4e:	d7 03       	nop

80003d50 <__avr32_f64_mul>:
80003d50:	f5 eb 10 1c 	or	r12,r10,r11<<0x1
80003d54:	e0 80 00 dc 	breq	80003f0c <__avr32_f64_mul_op1_zero>
80003d58:	d4 21       	pushm	r4-r7,lr
80003d5a:	f7 e9 20 0e 	eor	lr,r11,r9
80003d5e:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
80003d62:	30 15       	mov	r5,1
80003d64:	c4 30       	breq	80003dea <__avr32_f64_mul_op1_subnormal>
80003d66:	ab 6b       	lsl	r11,0xa
80003d68:	f7 ea 13 6b 	or	r11,r11,r10>>0x16
80003d6c:	ab 6a       	lsl	r10,0xa
80003d6e:	f7 d5 d3 c2 	bfins	r11,r5,0x1e,0x2
80003d72:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80003d76:	c5 c0       	breq	80003e2e <__avr32_f64_mul_op2_subnormal>
80003d78:	a1 78       	lsl	r8,0x1
80003d7a:	5c f9       	rol	r9
80003d7c:	f3 d5 d2 ab 	bfins	r9,r5,0x15,0xb
80003d80:	e0 47 07 ff 	cp.w	r7,2047
80003d84:	c7 70       	breq	80003e72 <__avr32_f64_mul_op_nan_or_inf>
80003d86:	e0 46 07 ff 	cp.w	r6,2047
80003d8a:	c7 40       	breq	80003e72 <__avr32_f64_mul_op_nan_or_inf>
80003d8c:	ee 06 00 0c 	add	r12,r7,r6
80003d90:	e0 2c 03 fe 	sub	r12,1022
80003d94:	f6 08 06 44 	mulu.d	r4,r11,r8
80003d98:	f4 09 07 44 	macu.d	r4,r10,r9
80003d9c:	f4 08 06 46 	mulu.d	r6,r10,r8
80003da0:	f6 09 06 4a 	mulu.d	r10,r11,r9
80003da4:	08 07       	add	r7,r4
80003da6:	f4 05 00 4a 	adc	r10,r10,r5
80003daa:	5c 0b       	acr	r11
80003dac:	ed bb 00 14 	bld	r11,0x14
80003db0:	c0 50       	breq	80003dba <__avr32_f64_mul+0x6a>
80003db2:	a1 77       	lsl	r7,0x1
80003db4:	5c fa       	rol	r10
80003db6:	5c fb       	rol	r11
80003db8:	20 1c       	sub	r12,1
80003dba:	58 0c       	cp.w	r12,0
80003dbc:	e0 8a 00 6f 	brle	80003e9a <__avr32_f64_mul_res_subnormal>
80003dc0:	e0 4c 07 ff 	cp.w	r12,2047
80003dc4:	e0 84 00 9c 	brge	80003efc <__avr32_f64_mul_res_inf>
80003dc8:	f7 dc d2 8b 	bfins	r11,r12,0x14,0xb
80003dcc:	ed ea 11 f6 	or	r6,r6,r10<<0x1f
80003dd0:	ef e6 12 17 	or	r7,r7,r6>>0x1
80003dd4:	ee 17 80 00 	eorh	r7,0x8000
80003dd8:	f1 b7 04 20 	satu	r7,0x1
80003ddc:	0e 0a       	add	r10,r7
80003dde:	5c 0b       	acr	r11
80003de0:	ed be 00 1f 	bld	lr,0x1f
80003de4:	ef bb 00 1f 	bst	r11,0x1f
80003de8:	d8 22       	popm	r4-r7,pc

80003dea <__avr32_f64_mul_op1_subnormal>:
80003dea:	e4 1b 00 0f 	andh	r11,0xf
80003dee:	f4 0c 12 00 	clz	r12,r10
80003df2:	f6 06 12 00 	clz	r6,r11
80003df6:	f7 bc 03 e1 	sublo	r12,-31
80003dfa:	f8 06 17 30 	movlo	r6,r12
80003dfe:	f7 b6 02 01 	subhs	r6,1
80003e02:	e0 46 00 20 	cp.w	r6,32
80003e06:	c0 d4       	brge	80003e20 <__avr32_f64_mul_op1_subnormal+0x36>
80003e08:	ec 0c 11 20 	rsub	r12,r6,32
80003e0c:	f6 06 09 4b 	lsl	r11,r11,r6
80003e10:	f4 0c 0a 4c 	lsr	r12,r10,r12
80003e14:	18 4b       	or	r11,r12
80003e16:	f4 06 09 4a 	lsl	r10,r10,r6
80003e1a:	20 b6       	sub	r6,11
80003e1c:	0c 17       	sub	r7,r6
80003e1e:	ca ab       	rjmp	80003d72 <__avr32_f64_mul+0x22>
80003e20:	f4 06 09 4b 	lsl	r11,r10,r6
80003e24:	c6 40       	breq	80003eec <__avr32_f64_mul_res_zero>
80003e26:	30 0a       	mov	r10,0
80003e28:	20 b6       	sub	r6,11
80003e2a:	0c 17       	sub	r7,r6
80003e2c:	ca 3b       	rjmp	80003d72 <__avr32_f64_mul+0x22>

80003e2e <__avr32_f64_mul_op2_subnormal>:
80003e2e:	e4 19 00 0f 	andh	r9,0xf
80003e32:	f0 0c 12 00 	clz	r12,r8
80003e36:	f2 05 12 00 	clz	r5,r9
80003e3a:	f7 bc 03 ea 	sublo	r12,-22
80003e3e:	f8 05 17 30 	movlo	r5,r12
80003e42:	f7 b5 02 0a 	subhs	r5,10
80003e46:	e0 45 00 20 	cp.w	r5,32
80003e4a:	c0 d4       	brge	80003e64 <__avr32_f64_mul_op2_subnormal+0x36>
80003e4c:	ea 0c 11 20 	rsub	r12,r5,32
80003e50:	f2 05 09 49 	lsl	r9,r9,r5
80003e54:	f0 0c 0a 4c 	lsr	r12,r8,r12
80003e58:	18 49       	or	r9,r12
80003e5a:	f0 05 09 48 	lsl	r8,r8,r5
80003e5e:	20 25       	sub	r5,2
80003e60:	0a 16       	sub	r6,r5
80003e62:	c8 fb       	rjmp	80003d80 <__avr32_f64_mul+0x30>
80003e64:	f0 05 09 49 	lsl	r9,r8,r5
80003e68:	c4 20       	breq	80003eec <__avr32_f64_mul_res_zero>
80003e6a:	30 08       	mov	r8,0
80003e6c:	20 25       	sub	r5,2
80003e6e:	0a 16       	sub	r6,r5
80003e70:	c8 8b       	rjmp	80003d80 <__avr32_f64_mul+0x30>

80003e72 <__avr32_f64_mul_op_nan_or_inf>:
80003e72:	e4 19 00 0f 	andh	r9,0xf
80003e76:	e4 1b 00 0f 	andh	r11,0xf
80003e7a:	14 4b       	or	r11,r10
80003e7c:	10 49       	or	r9,r8
80003e7e:	e0 47 07 ff 	cp.w	r7,2047
80003e82:	c0 91       	brne	80003e94 <__avr32_f64_mul_op1_not_naninf>
80003e84:	58 0b       	cp.w	r11,0
80003e86:	c3 81       	brne	80003ef6 <__avr32_f64_mul_res_nan>
80003e88:	e0 46 07 ff 	cp.w	r6,2047
80003e8c:	c3 81       	brne	80003efc <__avr32_f64_mul_res_inf>
80003e8e:	58 09       	cp.w	r9,0
80003e90:	c3 60       	breq	80003efc <__avr32_f64_mul_res_inf>
80003e92:	c3 28       	rjmp	80003ef6 <__avr32_f64_mul_res_nan>

80003e94 <__avr32_f64_mul_op1_not_naninf>:
80003e94:	58 09       	cp.w	r9,0
80003e96:	c3 30       	breq	80003efc <__avr32_f64_mul_res_inf>
80003e98:	c2 f8       	rjmp	80003ef6 <__avr32_f64_mul_res_nan>

80003e9a <__avr32_f64_mul_res_subnormal>:
80003e9a:	5c 3c       	neg	r12
80003e9c:	2f fc       	sub	r12,-1
80003e9e:	f1 bc 04 c0 	satu	r12,0x6
80003ea2:	e0 4c 00 20 	cp.w	r12,32
80003ea6:	c1 14       	brge	80003ec8 <__avr32_f64_mul_res_subnormal+0x2e>
80003ea8:	f8 08 11 20 	rsub	r8,r12,32
80003eac:	0e 46       	or	r6,r7
80003eae:	ee 0c 0a 47 	lsr	r7,r7,r12
80003eb2:	f4 08 09 49 	lsl	r9,r10,r8
80003eb6:	12 47       	or	r7,r9
80003eb8:	f4 0c 0a 4a 	lsr	r10,r10,r12
80003ebc:	f6 08 09 49 	lsl	r9,r11,r8
80003ec0:	12 4a       	or	r10,r9
80003ec2:	f6 0c 0a 4b 	lsr	r11,r11,r12
80003ec6:	c8 3b       	rjmp	80003dcc <__avr32_f64_mul+0x7c>
80003ec8:	f8 08 11 20 	rsub	r8,r12,32
80003ecc:	f9 b9 00 00 	moveq	r9,0
80003ed0:	c0 30       	breq	80003ed6 <__avr32_f64_mul_res_subnormal+0x3c>
80003ed2:	f6 08 09 49 	lsl	r9,r11,r8
80003ed6:	0e 46       	or	r6,r7
80003ed8:	ed ea 10 16 	or	r6,r6,r10<<0x1
80003edc:	f4 0c 0a 4a 	lsr	r10,r10,r12
80003ee0:	f3 ea 10 07 	or	r7,r9,r10
80003ee4:	f6 0c 0a 4a 	lsr	r10,r11,r12
80003ee8:	30 0b       	mov	r11,0
80003eea:	c7 1b       	rjmp	80003dcc <__avr32_f64_mul+0x7c>

80003eec <__avr32_f64_mul_res_zero>:
80003eec:	1c 9b       	mov	r11,lr
80003eee:	e6 1b 80 00 	andh	r11,0x8000,COH
80003ef2:	30 0a       	mov	r10,0
80003ef4:	d8 22       	popm	r4-r7,pc

80003ef6 <__avr32_f64_mul_res_nan>:
80003ef6:	3f fb       	mov	r11,-1
80003ef8:	3f fa       	mov	r10,-1
80003efa:	d8 22       	popm	r4-r7,pc

80003efc <__avr32_f64_mul_res_inf>:
80003efc:	f0 6b 00 00 	mov	r11,-1048576
80003f00:	ed be 00 1f 	bld	lr,0x1f
80003f04:	ef bb 00 1f 	bst	r11,0x1f
80003f08:	30 0a       	mov	r10,0
80003f0a:	d8 22       	popm	r4-r7,pc

80003f0c <__avr32_f64_mul_op1_zero>:
80003f0c:	f7 e9 20 0b 	eor	r11,r11,r9
80003f10:	e6 1b 80 00 	andh	r11,0x8000,COH
80003f14:	f9 d9 c2 8b 	bfextu	r12,r9,0x14,0xb
80003f18:	e0 4c 07 ff 	cp.w	r12,2047
80003f1c:	5e 1c       	retne	r12
80003f1e:	3f fa       	mov	r10,-1
80003f20:	3f fb       	mov	r11,-1
80003f22:	5e fc       	retal	r12

80003f24 <__avr32_u32_to_f64>:
80003f24:	f8 cb 00 00 	sub	r11,r12,0
80003f28:	30 0c       	mov	r12,0
80003f2a:	c0 38       	rjmp	80003f30 <__avr32_s32_to_f64+0x4>

80003f2c <__avr32_s32_to_f64>:
80003f2c:	18 9b       	mov	r11,r12
80003f2e:	5c 4b       	abs	r11
80003f30:	30 0a       	mov	r10,0
80003f32:	5e 0b       	reteq	r11
80003f34:	d4 01       	pushm	lr
80003f36:	e0 69 04 1e 	mov	r9,1054
80003f3a:	f6 08 12 00 	clz	r8,r11
80003f3e:	c1 70       	breq	80003f6c <__avr32_s32_to_f64+0x40>
80003f40:	c0 c3       	brcs	80003f58 <__avr32_s32_to_f64+0x2c>
80003f42:	f0 0e 11 20 	rsub	lr,r8,32
80003f46:	f6 08 09 4b 	lsl	r11,r11,r8
80003f4a:	f4 0e 0a 4e 	lsr	lr,r10,lr
80003f4e:	1c 4b       	or	r11,lr
80003f50:	f4 08 09 4a 	lsl	r10,r10,r8
80003f54:	10 19       	sub	r9,r8
80003f56:	c0 b8       	rjmp	80003f6c <__avr32_s32_to_f64+0x40>
80003f58:	f4 08 12 00 	clz	r8,r10
80003f5c:	f9 b8 03 00 	movlo	r8,0
80003f60:	f7 b8 02 e0 	subhs	r8,-32
80003f64:	f4 08 09 4b 	lsl	r11,r10,r8
80003f68:	30 0a       	mov	r10,0
80003f6a:	10 19       	sub	r9,r8
80003f6c:	58 09       	cp.w	r9,0
80003f6e:	e0 89 00 30 	brgt	80003fce <__avr32_s32_to_f64+0xa2>
80003f72:	5c 39       	neg	r9
80003f74:	2f f9       	sub	r9,-1
80003f76:	e0 49 00 36 	cp.w	r9,54
80003f7a:	c0 43       	brcs	80003f82 <__avr32_s32_to_f64+0x56>
80003f7c:	30 0b       	mov	r11,0
80003f7e:	30 0a       	mov	r10,0
80003f80:	c2 68       	rjmp	80003fcc <__avr32_s32_to_f64+0xa0>
80003f82:	2f 69       	sub	r9,-10
80003f84:	f2 08 11 20 	rsub	r8,r9,32
80003f88:	e0 49 00 20 	cp.w	r9,32
80003f8c:	c0 b2       	brcc	80003fa2 <__avr32_s32_to_f64+0x76>
80003f8e:	f4 08 09 4e 	lsl	lr,r10,r8
80003f92:	f6 08 09 48 	lsl	r8,r11,r8
80003f96:	f4 09 0a 4a 	lsr	r10,r10,r9
80003f9a:	f6 09 0a 4b 	lsr	r11,r11,r9
80003f9e:	10 4b       	or	r11,r8
80003fa0:	c0 88       	rjmp	80003fb0 <__avr32_s32_to_f64+0x84>
80003fa2:	f6 08 09 4e 	lsl	lr,r11,r8
80003fa6:	14 4e       	or	lr,r10
80003fa8:	16 9a       	mov	r10,r11
80003faa:	30 0b       	mov	r11,0
80003fac:	f4 09 0a 4a 	lsr	r10,r10,r9
80003fb0:	ed ba 00 00 	bld	r10,0x0
80003fb4:	c0 92       	brcc	80003fc6 <__avr32_s32_to_f64+0x9a>
80003fb6:	1c 7e       	tst	lr,lr
80003fb8:	c0 41       	brne	80003fc0 <__avr32_s32_to_f64+0x94>
80003fba:	ed ba 00 01 	bld	r10,0x1
80003fbe:	c0 42       	brcc	80003fc6 <__avr32_s32_to_f64+0x9a>
80003fc0:	2f fa       	sub	r10,-1
80003fc2:	f7 bb 02 ff 	subhs	r11,-1
80003fc6:	5c fc       	rol	r12
80003fc8:	5d 0b       	ror	r11
80003fca:	5d 0a       	ror	r10
80003fcc:	d8 02       	popm	pc
80003fce:	e0 68 03 ff 	mov	r8,1023
80003fd2:	ed ba 00 0b 	bld	r10,0xb
80003fd6:	f7 b8 00 ff 	subeq	r8,-1
80003fda:	10 0a       	add	r10,r8
80003fdc:	5c 0b       	acr	r11
80003fde:	f7 b9 03 fe 	sublo	r9,-2
80003fe2:	e0 49 07 ff 	cp.w	r9,2047
80003fe6:	c0 55       	brlt	80003ff0 <__avr32_s32_to_f64+0xc4>
80003fe8:	30 0a       	mov	r10,0
80003fea:	fc 1b ff e0 	movh	r11,0xffe0
80003fee:	c0 c8       	rjmp	80004006 <__floatsidf_return_op1>
80003ff0:	ed bb 00 1f 	bld	r11,0x1f
80003ff4:	f7 b9 01 01 	subne	r9,1
80003ff8:	ab 9a       	lsr	r10,0xb
80003ffa:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80003ffe:	a1 7b       	lsl	r11,0x1
80004000:	ab 9b       	lsr	r11,0xb
80004002:	f7 e9 11 5b 	or	r11,r11,r9<<0x15

80004006 <__floatsidf_return_op1>:
80004006:	a1 7c       	lsl	r12,0x1
80004008:	5d 0b       	ror	r11
8000400a:	d8 02       	popm	pc

8000400c <__avr32_f64_cmp_lt>:
8000400c:	1a de       	st.w	--sp,lr
8000400e:	1a d7       	st.w	--sp,r7
80004010:	a1 7b       	lsl	r11,0x1
80004012:	5f 3c       	srlo	r12
80004014:	a1 79       	lsl	r9,0x1
80004016:	5f 37       	srlo	r7
80004018:	5c fc       	rol	r12
8000401a:	fc 1e ff e0 	movh	lr,0xffe0
8000401e:	58 0a       	cp.w	r10,0
80004020:	fc 0b 13 00 	cpc	r11,lr
80004024:	e0 8b 00 1d 	brhi	8000405e <__avr32_f64_cmp_lt+0x52>
80004028:	58 08       	cp.w	r8,0
8000402a:	fc 09 13 00 	cpc	r9,lr
8000402e:	e0 8b 00 18 	brhi	8000405e <__avr32_f64_cmp_lt+0x52>
80004032:	58 0b       	cp.w	r11,0
80004034:	f5 ba 00 00 	subfeq	r10,0
80004038:	c1 50       	breq	80004062 <__avr32_f64_cmp_lt+0x56>
8000403a:	1b 07       	ld.w	r7,sp++
8000403c:	1b 0e       	ld.w	lr,sp++
8000403e:	58 3c       	cp.w	r12,3
80004040:	c0 a0       	breq	80004054 <__avr32_f64_cmp_lt+0x48>
80004042:	58 1c       	cp.w	r12,1
80004044:	c0 33       	brcs	8000404a <__avr32_f64_cmp_lt+0x3e>
80004046:	5e 0d       	reteq	0
80004048:	5e 1f       	retne	1
8000404a:	10 3a       	cp.w	r10,r8
8000404c:	f2 0b 13 00 	cpc	r11,r9
80004050:	5e 2d       	reths	0
80004052:	5e 3f       	retlo	1
80004054:	14 38       	cp.w	r8,r10
80004056:	f6 09 13 00 	cpc	r9,r11
8000405a:	5e 2d       	reths	0
8000405c:	5e 3f       	retlo	1
8000405e:	1b 07       	ld.w	r7,sp++
80004060:	d8 0a       	popm	pc,r12=0
80004062:	58 17       	cp.w	r7,1
80004064:	5f 1c       	srne	r12
80004066:	58 09       	cp.w	r9,0
80004068:	f5 b8 00 00 	subfeq	r8,0
8000406c:	1b 07       	ld.w	r7,sp++
8000406e:	1b 0e       	ld.w	lr,sp++
80004070:	5e 0d       	reteq	0
80004072:	5e fc       	retal	r12

80004074 <memcpy>:
80004074:	58 8a       	cp.w	r10,8
80004076:	c2 f5       	brlt	800040d4 <memcpy+0x60>
80004078:	f9 eb 10 09 	or	r9,r12,r11
8000407c:	e2 19 00 03 	andl	r9,0x3,COH
80004080:	e0 81 00 97 	brne	800041ae <memcpy+0x13a>
80004084:	e0 4a 00 20 	cp.w	r10,32
80004088:	c3 b4       	brge	800040fe <memcpy+0x8a>
8000408a:	f4 08 14 02 	asr	r8,r10,0x2
8000408e:	f0 09 11 08 	rsub	r9,r8,8
80004092:	fe 09 00 2f 	add	pc,pc,r9<<0x2
80004096:	76 69       	ld.w	r9,r11[0x18]
80004098:	99 69       	st.w	r12[0x18],r9
8000409a:	76 59       	ld.w	r9,r11[0x14]
8000409c:	99 59       	st.w	r12[0x14],r9
8000409e:	76 49       	ld.w	r9,r11[0x10]
800040a0:	99 49       	st.w	r12[0x10],r9
800040a2:	76 39       	ld.w	r9,r11[0xc]
800040a4:	99 39       	st.w	r12[0xc],r9
800040a6:	76 29       	ld.w	r9,r11[0x8]
800040a8:	99 29       	st.w	r12[0x8],r9
800040aa:	76 19       	ld.w	r9,r11[0x4]
800040ac:	99 19       	st.w	r12[0x4],r9
800040ae:	76 09       	ld.w	r9,r11[0x0]
800040b0:	99 09       	st.w	r12[0x0],r9
800040b2:	f6 08 00 2b 	add	r11,r11,r8<<0x2
800040b6:	f8 08 00 28 	add	r8,r12,r8<<0x2
800040ba:	e0 1a 00 03 	andl	r10,0x3
800040be:	f4 0a 11 04 	rsub	r10,r10,4
800040c2:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
800040c6:	17 a9       	ld.ub	r9,r11[0x2]
800040c8:	b0 a9       	st.b	r8[0x2],r9
800040ca:	17 99       	ld.ub	r9,r11[0x1]
800040cc:	b0 99       	st.b	r8[0x1],r9
800040ce:	17 89       	ld.ub	r9,r11[0x0]
800040d0:	b0 89       	st.b	r8[0x0],r9
800040d2:	5e fc       	retal	r12
800040d4:	f4 0a 11 09 	rsub	r10,r10,9
800040d8:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
800040dc:	17 f9       	ld.ub	r9,r11[0x7]
800040de:	b8 f9       	st.b	r12[0x7],r9
800040e0:	17 e9       	ld.ub	r9,r11[0x6]
800040e2:	b8 e9       	st.b	r12[0x6],r9
800040e4:	17 d9       	ld.ub	r9,r11[0x5]
800040e6:	b8 d9       	st.b	r12[0x5],r9
800040e8:	17 c9       	ld.ub	r9,r11[0x4]
800040ea:	b8 c9       	st.b	r12[0x4],r9
800040ec:	17 b9       	ld.ub	r9,r11[0x3]
800040ee:	b8 b9       	st.b	r12[0x3],r9
800040f0:	17 a9       	ld.ub	r9,r11[0x2]
800040f2:	b8 a9       	st.b	r12[0x2],r9
800040f4:	17 99       	ld.ub	r9,r11[0x1]
800040f6:	b8 99       	st.b	r12[0x1],r9
800040f8:	17 89       	ld.ub	r9,r11[0x0]
800040fa:	b8 89       	st.b	r12[0x0],r9
800040fc:	5e fc       	retal	r12
800040fe:	eb cd 40 c0 	pushm	r6-r7,lr
80004102:	18 99       	mov	r9,r12
80004104:	22 0a       	sub	r10,32
80004106:	b7 07       	ld.d	r6,r11++
80004108:	b3 26       	st.d	r9++,r6
8000410a:	b7 07       	ld.d	r6,r11++
8000410c:	b3 26       	st.d	r9++,r6
8000410e:	b7 07       	ld.d	r6,r11++
80004110:	b3 26       	st.d	r9++,r6
80004112:	b7 07       	ld.d	r6,r11++
80004114:	b3 26       	st.d	r9++,r6
80004116:	22 0a       	sub	r10,32
80004118:	cf 74       	brge	80004106 <memcpy+0x92>
8000411a:	2f 0a       	sub	r10,-16
8000411c:	c0 65       	brlt	80004128 <memcpy+0xb4>
8000411e:	b7 07       	ld.d	r6,r11++
80004120:	b3 26       	st.d	r9++,r6
80004122:	b7 07       	ld.d	r6,r11++
80004124:	b3 26       	st.d	r9++,r6
80004126:	21 0a       	sub	r10,16
80004128:	5c 3a       	neg	r10
8000412a:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
8000412e:	d7 03       	nop
80004130:	d7 03       	nop
80004132:	f7 36 00 0e 	ld.ub	r6,r11[14]
80004136:	f3 66 00 0e 	st.b	r9[14],r6
8000413a:	f7 36 00 0d 	ld.ub	r6,r11[13]
8000413e:	f3 66 00 0d 	st.b	r9[13],r6
80004142:	f7 36 00 0c 	ld.ub	r6,r11[12]
80004146:	f3 66 00 0c 	st.b	r9[12],r6
8000414a:	f7 36 00 0b 	ld.ub	r6,r11[11]
8000414e:	f3 66 00 0b 	st.b	r9[11],r6
80004152:	f7 36 00 0a 	ld.ub	r6,r11[10]
80004156:	f3 66 00 0a 	st.b	r9[10],r6
8000415a:	f7 36 00 09 	ld.ub	r6,r11[9]
8000415e:	f3 66 00 09 	st.b	r9[9],r6
80004162:	f7 36 00 08 	ld.ub	r6,r11[8]
80004166:	f3 66 00 08 	st.b	r9[8],r6
8000416a:	f7 36 00 07 	ld.ub	r6,r11[7]
8000416e:	f3 66 00 07 	st.b	r9[7],r6
80004172:	f7 36 00 06 	ld.ub	r6,r11[6]
80004176:	f3 66 00 06 	st.b	r9[6],r6
8000417a:	f7 36 00 05 	ld.ub	r6,r11[5]
8000417e:	f3 66 00 05 	st.b	r9[5],r6
80004182:	f7 36 00 04 	ld.ub	r6,r11[4]
80004186:	f3 66 00 04 	st.b	r9[4],r6
8000418a:	f7 36 00 03 	ld.ub	r6,r11[3]
8000418e:	f3 66 00 03 	st.b	r9[3],r6
80004192:	f7 36 00 02 	ld.ub	r6,r11[2]
80004196:	f3 66 00 02 	st.b	r9[2],r6
8000419a:	f7 36 00 01 	ld.ub	r6,r11[1]
8000419e:	f3 66 00 01 	st.b	r9[1],r6
800041a2:	f7 36 00 00 	ld.ub	r6,r11[0]
800041a6:	f3 66 00 00 	st.b	r9[0],r6
800041aa:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800041ae:	20 1a       	sub	r10,1
800041b0:	f6 0a 07 09 	ld.ub	r9,r11[r10]
800041b4:	f8 0a 0b 09 	st.b	r12[r10],r9
800041b8:	cf b1       	brne	800041ae <memcpy+0x13a>
800041ba:	5e fc       	retal	r12

800041bc <_vsprintf_r>:
800041bc:	d4 01       	pushm	lr
800041be:	21 7d       	sub	sp,92
800041c0:	e0 68 ff ff 	mov	r8,65535
800041c4:	ea 18 7f ff 	orh	r8,0x7fff
800041c8:	50 58       	stdsp	sp[0x14],r8
800041ca:	50 28       	stdsp	sp[0x8],r8
800041cc:	e0 68 02 08 	mov	r8,520
800041d0:	ba 68       	st.h	sp[0xc],r8
800041d2:	3f f8       	mov	r8,-1
800041d4:	50 4b       	stdsp	sp[0x10],r11
800041d6:	50 0b       	stdsp	sp[0x0],r11
800041d8:	ba 78       	st.h	sp[0xe],r8
800041da:	1a 9b       	mov	r11,sp
800041dc:	ca 8d       	rcall	8000452c <_vfprintf_r>
800041de:	30 09       	mov	r9,0
800041e0:	40 08       	lddsp	r8,sp[0x0]
800041e2:	b0 89       	st.b	r8[0x0],r9
800041e4:	2e 9d       	sub	sp,-92
800041e6:	d8 02       	popm	pc

800041e8 <vsprintf>:
800041e8:	d4 01       	pushm	lr
800041ea:	e0 68 01 04 	mov	r8,260
800041ee:	14 99       	mov	r9,r10
800041f0:	16 9a       	mov	r10,r11
800041f2:	18 9b       	mov	r11,r12
800041f4:	70 0c       	ld.w	r12,r8[0x0]
800041f6:	ce 3f       	rcall	800041bc <_vsprintf_r>
800041f8:	d8 02       	popm	pc
800041fa:	d7 03       	nop

800041fc <get_arg>:
800041fc:	d4 31       	pushm	r0-r7,lr
800041fe:	20 8d       	sub	sp,32
80004200:	fa c4 ff bc 	sub	r4,sp,-68
80004204:	50 4b       	stdsp	sp[0x10],r11
80004206:	68 2e       	ld.w	lr,r4[0x8]
80004208:	50 58       	stdsp	sp[0x14],r8
8000420a:	12 96       	mov	r6,r9
8000420c:	7c 0b       	ld.w	r11,lr[0x0]
8000420e:	70 05       	ld.w	r5,r8[0x0]
80004210:	50 6e       	stdsp	sp[0x18],lr
80004212:	58 0b       	cp.w	r11,0
80004214:	f4 0b 17 00 	moveq	r11,r10
80004218:	68 03       	ld.w	r3,r4[0x0]
8000421a:	68 11       	ld.w	r1,r4[0x4]
8000421c:	40 49       	lddsp	r9,sp[0x10]
8000421e:	30 08       	mov	r8,0
80004220:	c2 89       	rjmp	80004470 <get_arg+0x274>
80004222:	2f fb       	sub	r11,-1
80004224:	32 5c       	mov	r12,37
80004226:	17 8a       	ld.ub	r10,r11[0x0]
80004228:	f8 0a 18 00 	cp.b	r10,r12
8000422c:	5f 1e       	srne	lr
8000422e:	f0 0a 18 00 	cp.b	r10,r8
80004232:	5f 1c       	srne	r12
80004234:	fd ec 00 0c 	and	r12,lr,r12
80004238:	f0 0c 18 00 	cp.b	r12,r8
8000423c:	cf 31       	brne	80004222 <get_arg+0x26>
8000423e:	58 0a       	cp.w	r10,0
80004240:	e0 80 01 25 	breq	8000448a <get_arg+0x28e>
80004244:	30 0c       	mov	r12,0
80004246:	3f fa       	mov	r10,-1
80004248:	18 90       	mov	r0,r12
8000424a:	50 3a       	stdsp	sp[0xc],r10
8000424c:	18 94       	mov	r4,r12
8000424e:	18 92       	mov	r2,r12
80004250:	f8 0c 00 3c 	add	r12,r12,r12<<0x3
80004254:	16 97       	mov	r7,r11
80004256:	50 7c       	stdsp	sp[0x1c],r12
80004258:	fe cc a3 a8 	sub	r12,pc,-23640
8000425c:	0f 3a       	ld.ub	r10,r7++
8000425e:	f8 0a 07 0e 	ld.ub	lr,r12[r10]
80004262:	40 7c       	lddsp	r12,sp[0x1c]
80004264:	1c 0c       	add	r12,lr
80004266:	fe ce a4 7e 	sub	lr,pc,-23426
8000426a:	fc 0c 07 0e 	ld.ub	lr,lr[r12]
8000426e:	20 1e       	sub	lr,1
80004270:	50 0e       	stdsp	sp[0x0],lr
80004272:	fe ce a4 f6 	sub	lr,pc,-23306
80004276:	fc 0c 07 0c 	ld.ub	r12,lr[r12]
8000427a:	50 7c       	stdsp	sp[0x1c],r12
8000427c:	40 0c       	lddsp	r12,sp[0x0]
8000427e:	58 7c       	cp.w	r12,7
80004280:	e0 8b 00 f1 	brhi	80004462 <get_arg+0x266>
80004284:	fe ce a6 a8 	sub	lr,pc,-22872
80004288:	fc 0c 03 2f 	ld.w	pc,lr[r12<<0x2]
8000428c:	36 8b       	mov	r11,104
8000428e:	f6 0a 18 00 	cp.b	r10,r11
80004292:	e0 80 00 e8 	breq	80004462 <get_arg+0x266>
80004296:	37 1b       	mov	r11,113
80004298:	f6 0a 18 00 	cp.b	r10,r11
8000429c:	c0 70       	breq	800042aa <get_arg+0xae>
8000429e:	34 cb       	mov	r11,76
800042a0:	f6 0a 18 00 	cp.b	r10,r11
800042a4:	c0 51       	brne	800042ae <get_arg+0xb2>
800042a6:	a3 b4       	sbr	r4,0x3
800042a8:	cd d8       	rjmp	80004462 <get_arg+0x266>
800042aa:	a5 b4       	sbr	r4,0x5
800042ac:	cd b8       	rjmp	80004462 <get_arg+0x266>
800042ae:	08 9a       	mov	r10,r4
800042b0:	0e 9b       	mov	r11,r7
800042b2:	a5 aa       	sbr	r10,0x4
800042b4:	17 3c       	ld.ub	r12,r11++
800042b6:	a5 b4       	sbr	r4,0x5
800042b8:	36 ce       	mov	lr,108
800042ba:	fc 0c 18 00 	cp.b	r12,lr
800042be:	e0 80 00 d3 	breq	80004464 <get_arg+0x268>
800042c2:	14 94       	mov	r4,r10
800042c4:	cc f8       	rjmp	80004462 <get_arg+0x266>
800042c6:	eb d5 c0 05 	bfextu	r5,r5,0x0,0x5
800042ca:	36 7c       	mov	r12,103
800042cc:	f8 0a 18 00 	cp.b	r10,r12
800042d0:	e0 8b 00 27 	brhi	8000431e <get_arg+0x122>
800042d4:	36 5b       	mov	r11,101
800042d6:	f6 0a 18 00 	cp.b	r10,r11
800042da:	c4 82       	brcc	8000436a <get_arg+0x16e>
800042dc:	34 fb       	mov	r11,79
800042de:	f6 0a 18 00 	cp.b	r10,r11
800042e2:	c4 80       	breq	80004372 <get_arg+0x176>
800042e4:	e0 8b 00 0c 	brhi	800042fc <get_arg+0x100>
800042e8:	34 5b       	mov	r11,69
800042ea:	f6 0a 18 00 	cp.b	r10,r11
800042ee:	c3 e0       	breq	8000436a <get_arg+0x16e>
800042f0:	34 7b       	mov	r11,71
800042f2:	f6 0a 18 00 	cp.b	r10,r11
800042f6:	c3 a0       	breq	8000436a <get_arg+0x16e>
800042f8:	34 4b       	mov	r11,68
800042fa:	c0 88       	rjmp	8000430a <get_arg+0x10e>
800042fc:	35 8b       	mov	r11,88
800042fe:	f6 0a 18 00 	cp.b	r10,r11
80004302:	c2 c0       	breq	8000435a <get_arg+0x15e>
80004304:	e0 8b 00 07 	brhi	80004312 <get_arg+0x116>
80004308:	35 5b       	mov	r11,85
8000430a:	f6 0a 18 00 	cp.b	r10,r11
8000430e:	c3 51       	brne	80004378 <get_arg+0x17c>
80004310:	c3 18       	rjmp	80004372 <get_arg+0x176>
80004312:	36 3b       	mov	r11,99
80004314:	f6 0a 18 00 	cp.b	r10,r11
80004318:	c2 f0       	breq	80004376 <get_arg+0x17a>
8000431a:	36 4b       	mov	r11,100
8000431c:	c0 e8       	rjmp	80004338 <get_arg+0x13c>
8000431e:	37 0b       	mov	r11,112
80004320:	f6 0a 18 00 	cp.b	r10,r11
80004324:	c2 50       	breq	8000436e <get_arg+0x172>
80004326:	e0 8b 00 0d 	brhi	80004340 <get_arg+0x144>
8000432a:	36 eb       	mov	r11,110
8000432c:	f6 0a 18 00 	cp.b	r10,r11
80004330:	c1 f0       	breq	8000436e <get_arg+0x172>
80004332:	e0 8b 00 14 	brhi	8000435a <get_arg+0x15e>
80004336:	36 9b       	mov	r11,105
80004338:	f6 0a 18 00 	cp.b	r10,r11
8000433c:	c1 e1       	brne	80004378 <get_arg+0x17c>
8000433e:	c0 e8       	rjmp	8000435a <get_arg+0x15e>
80004340:	37 5b       	mov	r11,117
80004342:	f6 0a 18 00 	cp.b	r10,r11
80004346:	c0 a0       	breq	8000435a <get_arg+0x15e>
80004348:	37 8b       	mov	r11,120
8000434a:	f6 0a 18 00 	cp.b	r10,r11
8000434e:	c0 60       	breq	8000435a <get_arg+0x15e>
80004350:	37 3b       	mov	r11,115
80004352:	f6 0a 18 00 	cp.b	r10,r11
80004356:	c1 11       	brne	80004378 <get_arg+0x17c>
80004358:	c0 b8       	rjmp	8000436e <get_arg+0x172>
8000435a:	ed b4 00 04 	bld	r4,0x4
8000435e:	c0 a0       	breq	80004372 <get_arg+0x176>
80004360:	ed b4 00 05 	bld	r4,0x5
80004364:	c0 91       	brne	80004376 <get_arg+0x17a>
80004366:	30 20       	mov	r0,2
80004368:	c0 88       	rjmp	80004378 <get_arg+0x17c>
8000436a:	30 40       	mov	r0,4
8000436c:	c0 68       	rjmp	80004378 <get_arg+0x17c>
8000436e:	30 30       	mov	r0,3
80004370:	c0 48       	rjmp	80004378 <get_arg+0x17c>
80004372:	30 10       	mov	r0,1
80004374:	c0 28       	rjmp	80004378 <get_arg+0x17c>
80004376:	30 00       	mov	r0,0
80004378:	40 3b       	lddsp	r11,sp[0xc]
8000437a:	5b fb       	cp.w	r11,-1
8000437c:	c0 40       	breq	80004384 <get_arg+0x188>
8000437e:	e2 0b 09 20 	st.w	r1[r11<<0x2],r0
80004382:	c7 08       	rjmp	80004462 <get_arg+0x266>
80004384:	58 60       	cp.w	r0,6
80004386:	e0 8b 00 6e 	brhi	80004462 <get_arg+0x266>
8000438a:	6c 0a       	ld.w	r10,r6[0x0]
8000438c:	ea cc ff ff 	sub	r12,r5,-1
80004390:	fe ce a7 94 	sub	lr,pc,-22636
80004394:	fc 00 03 2f 	ld.w	pc,lr[r0<<0x2]
80004398:	f4 cb ff f8 	sub	r11,r10,-8
8000439c:	8d 0b       	st.w	r6[0x0],r11
8000439e:	f4 ea 00 00 	ld.d	r10,r10[0]
800043a2:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
800043a6:	c0 f8       	rjmp	800043c4 <get_arg+0x1c8>
800043a8:	f4 cb ff fc 	sub	r11,r10,-4
800043ac:	8d 0b       	st.w	r6[0x0],r11
800043ae:	74 0a       	ld.w	r10,r10[0x0]
800043b0:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
800043b4:	c0 88       	rjmp	800043c4 <get_arg+0x1c8>
800043b6:	f4 cb ff f8 	sub	r11,r10,-8
800043ba:	8d 0b       	st.w	r6[0x0],r11
800043bc:	f4 ea 00 00 	ld.d	r10,r10[0]
800043c0:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
800043c4:	0e 9b       	mov	r11,r7
800043c6:	18 95       	mov	r5,r12
800043c8:	c4 e8       	rjmp	80004464 <get_arg+0x268>
800043ca:	62 0a       	ld.w	r10,r1[0x0]
800043cc:	5b fa       	cp.w	r10,-1
800043ce:	c0 b1       	brne	800043e4 <get_arg+0x1e8>
800043d0:	50 19       	stdsp	sp[0x4],r9
800043d2:	50 28       	stdsp	sp[0x8],r8
800043d4:	e0 6a 00 80 	mov	r10,128
800043d8:	30 0b       	mov	r11,0
800043da:	02 9c       	mov	r12,r1
800043dc:	e0 a0 1d 78 	rcall	80007ecc <memset>
800043e0:	40 28       	lddsp	r8,sp[0x8]
800043e2:	40 19       	lddsp	r9,sp[0x4]
800043e4:	e4 cc 00 01 	sub	r12,r2,1
800043e8:	0e 9b       	mov	r11,r7
800043ea:	50 3c       	stdsp	sp[0xc],r12
800043ec:	f2 0c 0c 49 	max	r9,r9,r12
800043f0:	c3 a8       	rjmp	80004464 <get_arg+0x268>
800043f2:	62 0a       	ld.w	r10,r1[0x0]
800043f4:	5b fa       	cp.w	r10,-1
800043f6:	c0 b1       	brne	8000440c <get_arg+0x210>
800043f8:	50 19       	stdsp	sp[0x4],r9
800043fa:	50 28       	stdsp	sp[0x8],r8
800043fc:	e0 6a 00 80 	mov	r10,128
80004400:	30 0b       	mov	r11,0
80004402:	02 9c       	mov	r12,r1
80004404:	e0 a0 1d 64 	rcall	80007ecc <memset>
80004408:	40 28       	lddsp	r8,sp[0x8]
8000440a:	40 19       	lddsp	r9,sp[0x4]
8000440c:	20 12       	sub	r2,1
8000440e:	30 0a       	mov	r10,0
80004410:	0e 9b       	mov	r11,r7
80004412:	e2 02 09 2a 	st.w	r1[r2<<0x2],r10
80004416:	f2 02 0c 49 	max	r9,r9,r2
8000441a:	c2 58       	rjmp	80004464 <get_arg+0x268>
8000441c:	16 97       	mov	r7,r11
8000441e:	6c 0a       	ld.w	r10,r6[0x0]
80004420:	f4 cb ff fc 	sub	r11,r10,-4
80004424:	8d 0b       	st.w	r6[0x0],r11
80004426:	74 0a       	ld.w	r10,r10[0x0]
80004428:	0e 9b       	mov	r11,r7
8000442a:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
8000442e:	2f f5       	sub	r5,-1
80004430:	c1 a8       	rjmp	80004464 <get_arg+0x268>
80004432:	f4 c2 00 30 	sub	r2,r10,48
80004436:	c0 68       	rjmp	80004442 <get_arg+0x246>
80004438:	e4 02 00 22 	add	r2,r2,r2<<0x2
8000443c:	2f f7       	sub	r7,-1
8000443e:	f4 02 00 12 	add	r2,r10,r2<<0x1
80004442:	0f 8a       	ld.ub	r10,r7[0x0]
80004444:	58 0a       	cp.w	r10,0
80004446:	c0 e0       	breq	80004462 <get_arg+0x266>
80004448:	23 0a       	sub	r10,48
8000444a:	58 9a       	cp.w	r10,9
8000444c:	fe 98 ff f6 	brls	80004438 <get_arg+0x23c>
80004450:	c0 98       	rjmp	80004462 <get_arg+0x266>
80004452:	2f f7       	sub	r7,-1
80004454:	0f 8a       	ld.ub	r10,r7[0x0]
80004456:	58 0a       	cp.w	r10,0
80004458:	c0 50       	breq	80004462 <get_arg+0x266>
8000445a:	23 0a       	sub	r10,48
8000445c:	58 9a       	cp.w	r10,9
8000445e:	fe 98 ff fa 	brls	80004452 <get_arg+0x256>
80004462:	0e 9b       	mov	r11,r7
80004464:	40 7c       	lddsp	r12,sp[0x1c]
80004466:	30 ba       	mov	r10,11
80004468:	f4 0c 18 00 	cp.b	r12,r10
8000446c:	fe 91 fe f2 	brne	80004250 <get_arg+0x54>
80004470:	40 42       	lddsp	r2,sp[0x10]
80004472:	17 8c       	ld.ub	r12,r11[0x0]
80004474:	0a 32       	cp.w	r2,r5
80004476:	5f 4a       	srge	r10
80004478:	f0 0c 18 00 	cp.b	r12,r8
8000447c:	5f 1c       	srne	r12
8000447e:	f9 ea 00 0a 	and	r10,r12,r10
80004482:	f0 0a 18 00 	cp.b	r10,r8
80004486:	fe 91 fe cf 	brne	80004224 <get_arg+0x28>
8000448a:	30 08       	mov	r8,0
8000448c:	40 4e       	lddsp	lr,sp[0x10]
8000448e:	17 8a       	ld.ub	r10,r11[0x0]
80004490:	e2 05 00 21 	add	r1,r1,r5<<0x2
80004494:	f0 0a 18 00 	cp.b	r10,r8
80004498:	fc 09 17 10 	movne	r9,lr
8000449c:	e6 05 00 38 	add	r8,r3,r5<<0x3
800044a0:	06 9e       	mov	lr,r3
800044a2:	c2 a8       	rjmp	800044f6 <get_arg+0x2fa>
800044a4:	62 0a       	ld.w	r10,r1[0x0]
800044a6:	58 3a       	cp.w	r10,3
800044a8:	c1 e0       	breq	800044e4 <get_arg+0x2e8>
800044aa:	e0 89 00 07 	brgt	800044b8 <get_arg+0x2bc>
800044ae:	58 1a       	cp.w	r10,1
800044b0:	c1 a0       	breq	800044e4 <get_arg+0x2e8>
800044b2:	58 2a       	cp.w	r10,2
800044b4:	c1 81       	brne	800044e4 <get_arg+0x2e8>
800044b6:	c0 58       	rjmp	800044c0 <get_arg+0x2c4>
800044b8:	58 5a       	cp.w	r10,5
800044ba:	c0 c0       	breq	800044d2 <get_arg+0x2d6>
800044bc:	c0 b5       	brlt	800044d2 <get_arg+0x2d6>
800044be:	c1 38       	rjmp	800044e4 <get_arg+0x2e8>
800044c0:	6c 0a       	ld.w	r10,r6[0x0]
800044c2:	f4 cc ff f8 	sub	r12,r10,-8
800044c6:	8d 0c       	st.w	r6[0x0],r12
800044c8:	f4 e2 00 00 	ld.d	r2,r10[0]
800044cc:	f0 e3 00 00 	st.d	r8[0],r2
800044d0:	c1 08       	rjmp	800044f0 <get_arg+0x2f4>
800044d2:	6c 0a       	ld.w	r10,r6[0x0]
800044d4:	f4 cc ff f8 	sub	r12,r10,-8
800044d8:	8d 0c       	st.w	r6[0x0],r12
800044da:	f4 e2 00 00 	ld.d	r2,r10[0]
800044de:	f0 e3 00 00 	st.d	r8[0],r2
800044e2:	c0 78       	rjmp	800044f0 <get_arg+0x2f4>
800044e4:	6c 0a       	ld.w	r10,r6[0x0]
800044e6:	f4 cc ff fc 	sub	r12,r10,-4
800044ea:	8d 0c       	st.w	r6[0x0],r12
800044ec:	74 0a       	ld.w	r10,r10[0x0]
800044ee:	91 0a       	st.w	r8[0x0],r10
800044f0:	2f f5       	sub	r5,-1
800044f2:	2f 88       	sub	r8,-8
800044f4:	2f c1       	sub	r1,-4
800044f6:	12 35       	cp.w	r5,r9
800044f8:	fe 9a ff d6 	brle	800044a4 <get_arg+0x2a8>
800044fc:	1c 93       	mov	r3,lr
800044fe:	40 52       	lddsp	r2,sp[0x14]
80004500:	40 6e       	lddsp	lr,sp[0x18]
80004502:	85 05       	st.w	r2[0x0],r5
80004504:	9d 0b       	st.w	lr[0x0],r11
80004506:	40 4b       	lddsp	r11,sp[0x10]
80004508:	e6 0b 00 3c 	add	r12,r3,r11<<0x3
8000450c:	2f 8d       	sub	sp,-32
8000450e:	d8 32       	popm	r0-r7,pc

80004510 <__sprint_r>:
80004510:	d4 21       	pushm	r4-r7,lr
80004512:	14 97       	mov	r7,r10
80004514:	74 28       	ld.w	r8,r10[0x8]
80004516:	58 08       	cp.w	r8,0
80004518:	c0 41       	brne	80004520 <__sprint_r+0x10>
8000451a:	95 18       	st.w	r10[0x4],r8
8000451c:	10 9c       	mov	r12,r8
8000451e:	d8 22       	popm	r4-r7,pc
80004520:	e0 a0 18 b4 	rcall	80007688 <__sfvwrite_r>
80004524:	30 08       	mov	r8,0
80004526:	8f 18       	st.w	r7[0x4],r8
80004528:	8f 28       	st.w	r7[0x8],r8
8000452a:	d8 22       	popm	r4-r7,pc

8000452c <_vfprintf_r>:
8000452c:	d4 31       	pushm	r0-r7,lr
8000452e:	fa cd 06 bc 	sub	sp,sp,1724
80004532:	51 09       	stdsp	sp[0x40],r9
80004534:	16 91       	mov	r1,r11
80004536:	14 97       	mov	r7,r10
80004538:	18 95       	mov	r5,r12
8000453a:	e0 a0 1a 1d 	rcall	80007974 <_localeconv_r>
8000453e:	78 0c       	ld.w	r12,r12[0x0]
80004540:	50 cc       	stdsp	sp[0x30],r12
80004542:	58 05       	cp.w	r5,0
80004544:	c0 70       	breq	80004552 <_vfprintf_r+0x26>
80004546:	6a 68       	ld.w	r8,r5[0x18]
80004548:	58 08       	cp.w	r8,0
8000454a:	c0 41       	brne	80004552 <_vfprintf_r+0x26>
8000454c:	0a 9c       	mov	r12,r5
8000454e:	e0 a0 17 3d 	rcall	800073c8 <__sinit>
80004552:	fe c8 a5 92 	sub	r8,pc,-23150
80004556:	10 31       	cp.w	r1,r8
80004558:	c0 31       	brne	8000455e <_vfprintf_r+0x32>
8000455a:	6a 01       	ld.w	r1,r5[0x0]
8000455c:	c0 c8       	rjmp	80004574 <_vfprintf_r+0x48>
8000455e:	fe c8 a5 7e 	sub	r8,pc,-23170
80004562:	10 31       	cp.w	r1,r8
80004564:	c0 31       	brne	8000456a <_vfprintf_r+0x3e>
80004566:	6a 11       	ld.w	r1,r5[0x4]
80004568:	c0 68       	rjmp	80004574 <_vfprintf_r+0x48>
8000456a:	fe c8 a5 6a 	sub	r8,pc,-23190
8000456e:	10 31       	cp.w	r1,r8
80004570:	eb f1 00 02 	ld.weq	r1,r5[0x8]
80004574:	82 68       	ld.sh	r8,r1[0xc]
80004576:	ed b8 00 03 	bld	r8,0x3
8000457a:	c0 41       	brne	80004582 <_vfprintf_r+0x56>
8000457c:	62 48       	ld.w	r8,r1[0x10]
8000457e:	58 08       	cp.w	r8,0
80004580:	c0 71       	brne	8000458e <_vfprintf_r+0x62>
80004582:	02 9b       	mov	r11,r1
80004584:	0a 9c       	mov	r12,r5
80004586:	e0 a0 0f 5d 	rcall	80006440 <__swsetup_r>
8000458a:	e0 81 0f 54 	brne	80006432 <_vfprintf_r+0x1f06>
8000458e:	82 68       	ld.sh	r8,r1[0xc]
80004590:	10 99       	mov	r9,r8
80004592:	e2 19 00 1a 	andl	r9,0x1a,COH
80004596:	58 a9       	cp.w	r9,10
80004598:	c3 c1       	brne	80004610 <_vfprintf_r+0xe4>
8000459a:	82 79       	ld.sh	r9,r1[0xe]
8000459c:	30 0a       	mov	r10,0
8000459e:	f4 09 19 00 	cp.h	r9,r10
800045a2:	c3 75       	brlt	80004610 <_vfprintf_r+0xe4>
800045a4:	a1 d8       	cbr	r8,0x1
800045a6:	fb 58 05 d0 	st.h	sp[1488],r8
800045aa:	62 88       	ld.w	r8,r1[0x20]
800045ac:	fb 48 05 e4 	st.w	sp[1508],r8
800045b0:	62 a8       	ld.w	r8,r1[0x28]
800045b2:	fb 48 05 ec 	st.w	sp[1516],r8
800045b6:	fa c8 ff bc 	sub	r8,sp,-68
800045ba:	fb 48 05 d4 	st.w	sp[1492],r8
800045be:	fb 48 05 c4 	st.w	sp[1476],r8
800045c2:	e0 68 04 00 	mov	r8,1024
800045c6:	fb 48 05 d8 	st.w	sp[1496],r8
800045ca:	fb 48 05 cc 	st.w	sp[1484],r8
800045ce:	30 08       	mov	r8,0
800045d0:	fb 59 05 d2 	st.h	sp[1490],r9
800045d4:	0e 9a       	mov	r10,r7
800045d6:	41 09       	lddsp	r9,sp[0x40]
800045d8:	fa c7 fa 3c 	sub	r7,sp,-1476
800045dc:	fb 48 05 dc 	st.w	sp[1500],r8
800045e0:	0a 9c       	mov	r12,r5
800045e2:	0e 9b       	mov	r11,r7
800045e4:	ca 4f       	rcall	8000452c <_vfprintf_r>
800045e6:	50 bc       	stdsp	sp[0x2c],r12
800045e8:	c0 95       	brlt	800045fa <_vfprintf_r+0xce>
800045ea:	0e 9b       	mov	r11,r7
800045ec:	0a 9c       	mov	r12,r5
800045ee:	e0 a0 16 15 	rcall	80007218 <_fflush_r>
800045f2:	40 be       	lddsp	lr,sp[0x2c]
800045f4:	f9 be 01 ff 	movne	lr,-1
800045f8:	50 be       	stdsp	sp[0x2c],lr
800045fa:	fb 08 05 d0 	ld.sh	r8,sp[1488]
800045fe:	ed b8 00 06 	bld	r8,0x6
80004602:	e0 81 0f 1a 	brne	80006436 <_vfprintf_r+0x1f0a>
80004606:	82 68       	ld.sh	r8,r1[0xc]
80004608:	a7 a8       	sbr	r8,0x6
8000460a:	a2 68       	st.h	r1[0xc],r8
8000460c:	e0 8f 0f 15 	bral	80006436 <_vfprintf_r+0x1f0a>
80004610:	30 08       	mov	r8,0
80004612:	fb 48 06 b4 	st.w	sp[1716],r8
80004616:	fb 48 06 90 	st.w	sp[1680],r8
8000461a:	fb 48 06 8c 	st.w	sp[1676],r8
8000461e:	fb 48 06 b0 	st.w	sp[1712],r8
80004622:	30 08       	mov	r8,0
80004624:	30 09       	mov	r9,0
80004626:	50 a7       	stdsp	sp[0x28],r7
80004628:	50 78       	stdsp	sp[0x1c],r8
8000462a:	fa c3 f9 e0 	sub	r3,sp,-1568
8000462e:	3f f8       	mov	r8,-1
80004630:	50 59       	stdsp	sp[0x14],r9
80004632:	fb 43 06 88 	st.w	sp[1672],r3
80004636:	fb 48 05 44 	st.w	sp[1348],r8
8000463a:	12 9c       	mov	r12,r9
8000463c:	50 69       	stdsp	sp[0x18],r9
8000463e:	50 d9       	stdsp	sp[0x34],r9
80004640:	50 e9       	stdsp	sp[0x38],r9
80004642:	50 b9       	stdsp	sp[0x2c],r9
80004644:	12 97       	mov	r7,r9
80004646:	0a 94       	mov	r4,r5
80004648:	40 a2       	lddsp	r2,sp[0x28]
8000464a:	32 5a       	mov	r10,37
8000464c:	30 08       	mov	r8,0
8000464e:	c0 28       	rjmp	80004652 <_vfprintf_r+0x126>
80004650:	2f f2       	sub	r2,-1
80004652:	05 89       	ld.ub	r9,r2[0x0]
80004654:	f0 09 18 00 	cp.b	r9,r8
80004658:	5f 1b       	srne	r11
8000465a:	f4 09 18 00 	cp.b	r9,r10
8000465e:	5f 19       	srne	r9
80004660:	f3 eb 00 0b 	and	r11,r9,r11
80004664:	f0 0b 18 00 	cp.b	r11,r8
80004668:	cf 41       	brne	80004650 <_vfprintf_r+0x124>
8000466a:	40 ab       	lddsp	r11,sp[0x28]
8000466c:	e4 0b 01 06 	sub	r6,r2,r11
80004670:	c1 e0       	breq	800046ac <_vfprintf_r+0x180>
80004672:	fa f8 06 90 	ld.w	r8,sp[1680]
80004676:	0c 08       	add	r8,r6
80004678:	87 0b       	st.w	r3[0x0],r11
8000467a:	fb 48 06 90 	st.w	sp[1680],r8
8000467e:	87 16       	st.w	r3[0x4],r6
80004680:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004684:	2f f8       	sub	r8,-1
80004686:	fb 48 06 8c 	st.w	sp[1676],r8
8000468a:	58 78       	cp.w	r8,7
8000468c:	e0 89 00 04 	brgt	80004694 <_vfprintf_r+0x168>
80004690:	2f 83       	sub	r3,-8
80004692:	c0 a8       	rjmp	800046a6 <_vfprintf_r+0x17a>
80004694:	fa ca f9 78 	sub	r10,sp,-1672
80004698:	02 9b       	mov	r11,r1
8000469a:	08 9c       	mov	r12,r4
8000469c:	c3 af       	rcall	80004510 <__sprint_r>
8000469e:	e0 81 0e c6 	brne	8000642a <_vfprintf_r+0x1efe>
800046a2:	fa c3 f9 e0 	sub	r3,sp,-1568
800046a6:	40 ba       	lddsp	r10,sp[0x2c]
800046a8:	0c 0a       	add	r10,r6
800046aa:	50 ba       	stdsp	sp[0x2c],r10
800046ac:	05 89       	ld.ub	r9,r2[0x0]
800046ae:	30 08       	mov	r8,0
800046b0:	f0 09 18 00 	cp.b	r9,r8
800046b4:	e0 80 0e aa 	breq	80006408 <_vfprintf_r+0x1edc>
800046b8:	30 09       	mov	r9,0
800046ba:	fb 68 06 bb 	st.b	sp[1723],r8
800046be:	0e 96       	mov	r6,r7
800046c0:	e4 c8 ff ff 	sub	r8,r2,-1
800046c4:	3f fe       	mov	lr,-1
800046c6:	50 93       	stdsp	sp[0x24],r3
800046c8:	50 41       	stdsp	sp[0x10],r1
800046ca:	0e 93       	mov	r3,r7
800046cc:	04 91       	mov	r1,r2
800046ce:	50 89       	stdsp	sp[0x20],r9
800046d0:	50 a8       	stdsp	sp[0x28],r8
800046d2:	50 2e       	stdsp	sp[0x8],lr
800046d4:	50 39       	stdsp	sp[0xc],r9
800046d6:	12 95       	mov	r5,r9
800046d8:	12 90       	mov	r0,r9
800046da:	10 97       	mov	r7,r8
800046dc:	08 92       	mov	r2,r4
800046de:	c0 78       	rjmp	800046ec <_vfprintf_r+0x1c0>
800046e0:	3f fc       	mov	r12,-1
800046e2:	08 97       	mov	r7,r4
800046e4:	50 2c       	stdsp	sp[0x8],r12
800046e6:	c0 38       	rjmp	800046ec <_vfprintf_r+0x1c0>
800046e8:	30 0b       	mov	r11,0
800046ea:	50 3b       	stdsp	sp[0xc],r11
800046ec:	0f 38       	ld.ub	r8,r7++
800046ee:	c0 28       	rjmp	800046f2 <_vfprintf_r+0x1c6>
800046f0:	12 90       	mov	r0,r9
800046f2:	f0 c9 00 20 	sub	r9,r8,32
800046f6:	e0 49 00 58 	cp.w	r9,88
800046fa:	e0 8b 0a 30 	brhi	80005b5a <_vfprintf_r+0x162e>
800046fe:	fe ca aa e6 	sub	r10,pc,-21786
80004702:	f4 09 03 2f 	ld.w	pc,r10[r9<<0x2]
80004706:	50 a7       	stdsp	sp[0x28],r7
80004708:	50 80       	stdsp	sp[0x20],r0
8000470a:	0c 97       	mov	r7,r6
8000470c:	04 94       	mov	r4,r2
8000470e:	06 96       	mov	r6,r3
80004710:	02 92       	mov	r2,r1
80004712:	fe c9 a8 be 	sub	r9,pc,-22338
80004716:	40 93       	lddsp	r3,sp[0x24]
80004718:	10 90       	mov	r0,r8
8000471a:	40 41       	lddsp	r1,sp[0x10]
8000471c:	50 d9       	stdsp	sp[0x34],r9
8000471e:	e0 8f 08 8e 	bral	8000583a <_vfprintf_r+0x130e>
80004722:	30 08       	mov	r8,0
80004724:	fb 39 06 bb 	ld.ub	r9,sp[1723]
80004728:	f0 09 18 00 	cp.b	r9,r8
8000472c:	ce 01       	brne	800046ec <_vfprintf_r+0x1c0>
8000472e:	32 08       	mov	r8,32
80004730:	c6 e8       	rjmp	8000480c <_vfprintf_r+0x2e0>
80004732:	a1 a5       	sbr	r5,0x0
80004734:	cd cb       	rjmp	800046ec <_vfprintf_r+0x1c0>
80004736:	0f 89       	ld.ub	r9,r7[0x0]
80004738:	f2 c8 00 30 	sub	r8,r9,48
8000473c:	58 98       	cp.w	r8,9
8000473e:	e0 8b 00 1d 	brhi	80004778 <_vfprintf_r+0x24c>
80004742:	ee c8 ff ff 	sub	r8,r7,-1
80004746:	30 0b       	mov	r11,0
80004748:	23 09       	sub	r9,48
8000474a:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
8000474e:	f2 0b 00 1b 	add	r11,r9,r11<<0x1
80004752:	11 39       	ld.ub	r9,r8++
80004754:	f2 ca 00 30 	sub	r10,r9,48
80004758:	58 9a       	cp.w	r10,9
8000475a:	fe 98 ff f7 	brls	80004748 <_vfprintf_r+0x21c>
8000475e:	e0 49 00 24 	cp.w	r9,36
80004762:	cc 31       	brne	800046e8 <_vfprintf_r+0x1bc>
80004764:	e0 4b 00 20 	cp.w	r11,32
80004768:	e0 89 0e 60 	brgt	80006428 <_vfprintf_r+0x1efc>
8000476c:	20 1b       	sub	r11,1
8000476e:	fa f9 06 b4 	ld.w	r9,sp[1716]
80004772:	12 3b       	cp.w	r11,r9
80004774:	c0 95       	brlt	80004786 <_vfprintf_r+0x25a>
80004776:	c1 08       	rjmp	80004796 <_vfprintf_r+0x26a>
80004778:	fa f9 06 b4 	ld.w	r9,sp[1716]
8000477c:	ec ca ff ff 	sub	r10,r6,-1
80004780:	12 36       	cp.w	r6,r9
80004782:	c1 f5       	brlt	800047c0 <_vfprintf_r+0x294>
80004784:	c2 68       	rjmp	800047d0 <_vfprintf_r+0x2a4>
80004786:	fa ce f9 44 	sub	lr,sp,-1724
8000478a:	10 97       	mov	r7,r8
8000478c:	fc 0b 00 3b 	add	r11,lr,r11<<0x3
80004790:	f6 f0 fd 88 	ld.w	r0,r11[-632]
80004794:	c3 58       	rjmp	800047fe <_vfprintf_r+0x2d2>
80004796:	10 97       	mov	r7,r8
80004798:	fa c8 f9 50 	sub	r8,sp,-1712
8000479c:	1a d8       	st.w	--sp,r8
8000479e:	fa c8 fa b8 	sub	r8,sp,-1352
800047a2:	1a d8       	st.w	--sp,r8
800047a4:	fa c8 fb b4 	sub	r8,sp,-1100
800047a8:	02 9a       	mov	r10,r1
800047aa:	1a d8       	st.w	--sp,r8
800047ac:	04 9c       	mov	r12,r2
800047ae:	fa c8 f9 40 	sub	r8,sp,-1728
800047b2:	fa c9 ff b4 	sub	r9,sp,-76
800047b6:	fe b0 fd 23 	rcall	800041fc <get_arg>
800047ba:	2f dd       	sub	sp,-12
800047bc:	78 00       	ld.w	r0,r12[0x0]
800047be:	c2 08       	rjmp	800047fe <_vfprintf_r+0x2d2>
800047c0:	fa cc f9 44 	sub	r12,sp,-1724
800047c4:	14 96       	mov	r6,r10
800047c6:	f8 03 00 38 	add	r8,r12,r3<<0x3
800047ca:	f0 f0 fd 88 	ld.w	r0,r8[-632]
800047ce:	c1 88       	rjmp	800047fe <_vfprintf_r+0x2d2>
800047d0:	41 08       	lddsp	r8,sp[0x40]
800047d2:	59 f9       	cp.w	r9,31
800047d4:	e0 89 00 11 	brgt	800047f6 <_vfprintf_r+0x2ca>
800047d8:	f0 cb ff fc 	sub	r11,r8,-4
800047dc:	51 0b       	stdsp	sp[0x40],r11
800047de:	70 00       	ld.w	r0,r8[0x0]
800047e0:	fa cb f9 44 	sub	r11,sp,-1724
800047e4:	f6 09 00 38 	add	r8,r11,r9<<0x3
800047e8:	f1 40 fd 88 	st.w	r8[-632],r0
800047ec:	2f f9       	sub	r9,-1
800047ee:	14 96       	mov	r6,r10
800047f0:	fb 49 06 b4 	st.w	sp[1716],r9
800047f4:	c0 58       	rjmp	800047fe <_vfprintf_r+0x2d2>
800047f6:	70 00       	ld.w	r0,r8[0x0]
800047f8:	14 96       	mov	r6,r10
800047fa:	2f c8       	sub	r8,-4
800047fc:	51 08       	stdsp	sp[0x40],r8
800047fe:	58 00       	cp.w	r0,0
80004800:	fe 94 ff 76 	brge	800046ec <_vfprintf_r+0x1c0>
80004804:	5c 30       	neg	r0
80004806:	a3 a5       	sbr	r5,0x2
80004808:	c7 2b       	rjmp	800046ec <_vfprintf_r+0x1c0>
8000480a:	32 b8       	mov	r8,43
8000480c:	fb 68 06 bb 	st.b	sp[1723],r8
80004810:	c6 eb       	rjmp	800046ec <_vfprintf_r+0x1c0>
80004812:	0f 38       	ld.ub	r8,r7++
80004814:	e0 48 00 2a 	cp.w	r8,42
80004818:	c0 30       	breq	8000481e <_vfprintf_r+0x2f2>
8000481a:	30 09       	mov	r9,0
8000481c:	c7 98       	rjmp	8000490e <_vfprintf_r+0x3e2>
8000481e:	0f 88       	ld.ub	r8,r7[0x0]
80004820:	f0 c9 00 30 	sub	r9,r8,48
80004824:	58 99       	cp.w	r9,9
80004826:	e0 8b 00 1f 	brhi	80004864 <_vfprintf_r+0x338>
8000482a:	ee c4 ff ff 	sub	r4,r7,-1
8000482e:	30 0b       	mov	r11,0
80004830:	23 08       	sub	r8,48
80004832:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
80004836:	f0 0b 00 1b 	add	r11,r8,r11<<0x1
8000483a:	09 38       	ld.ub	r8,r4++
8000483c:	f0 c9 00 30 	sub	r9,r8,48
80004840:	58 99       	cp.w	r9,9
80004842:	fe 98 ff f7 	brls	80004830 <_vfprintf_r+0x304>
80004846:	e0 48 00 24 	cp.w	r8,36
8000484a:	fe 91 ff 4f 	brne	800046e8 <_vfprintf_r+0x1bc>
8000484e:	e0 4b 00 20 	cp.w	r11,32
80004852:	e0 89 0d eb 	brgt	80006428 <_vfprintf_r+0x1efc>
80004856:	20 1b       	sub	r11,1
80004858:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000485c:	10 3b       	cp.w	r11,r8
8000485e:	c0 a5       	brlt	80004872 <_vfprintf_r+0x346>
80004860:	c1 18       	rjmp	80004882 <_vfprintf_r+0x356>
80004862:	d7 03       	nop
80004864:	fa fa 06 b4 	ld.w	r10,sp[1716]
80004868:	ec c9 ff ff 	sub	r9,r6,-1
8000486c:	14 36       	cp.w	r6,r10
8000486e:	c1 f5       	brlt	800048ac <_vfprintf_r+0x380>
80004870:	c2 88       	rjmp	800048c0 <_vfprintf_r+0x394>
80004872:	fa ca f9 44 	sub	r10,sp,-1724
80004876:	f4 0b 00 3b 	add	r11,r10,r11<<0x3
8000487a:	f6 fb fd 88 	ld.w	r11,r11[-632]
8000487e:	50 2b       	stdsp	sp[0x8],r11
80004880:	c3 c8       	rjmp	800048f8 <_vfprintf_r+0x3cc>
80004882:	fa c8 f9 50 	sub	r8,sp,-1712
80004886:	1a d8       	st.w	--sp,r8
80004888:	fa c8 fa b8 	sub	r8,sp,-1352
8000488c:	1a d8       	st.w	--sp,r8
8000488e:	fa c8 fb b4 	sub	r8,sp,-1100
80004892:	02 9a       	mov	r10,r1
80004894:	1a d8       	st.w	--sp,r8
80004896:	04 9c       	mov	r12,r2
80004898:	fa c8 f9 40 	sub	r8,sp,-1728
8000489c:	fa c9 ff b4 	sub	r9,sp,-76
800048a0:	fe b0 fc ae 	rcall	800041fc <get_arg>
800048a4:	2f dd       	sub	sp,-12
800048a6:	78 0c       	ld.w	r12,r12[0x0]
800048a8:	50 2c       	stdsp	sp[0x8],r12
800048aa:	c2 78       	rjmp	800048f8 <_vfprintf_r+0x3cc>
800048ac:	12 96       	mov	r6,r9
800048ae:	0e 94       	mov	r4,r7
800048b0:	fa c9 f9 44 	sub	r9,sp,-1724
800048b4:	f2 03 00 38 	add	r8,r9,r3<<0x3
800048b8:	f0 f8 fd 88 	ld.w	r8,r8[-632]
800048bc:	50 28       	stdsp	sp[0x8],r8
800048be:	c1 d8       	rjmp	800048f8 <_vfprintf_r+0x3cc>
800048c0:	41 08       	lddsp	r8,sp[0x40]
800048c2:	59 fa       	cp.w	r10,31
800048c4:	e0 89 00 14 	brgt	800048ec <_vfprintf_r+0x3c0>
800048c8:	f0 cb ff fc 	sub	r11,r8,-4
800048cc:	70 08       	ld.w	r8,r8[0x0]
800048ce:	51 0b       	stdsp	sp[0x40],r11
800048d0:	50 28       	stdsp	sp[0x8],r8
800048d2:	fa c6 f9 44 	sub	r6,sp,-1724
800048d6:	40 2e       	lddsp	lr,sp[0x8]
800048d8:	ec 0a 00 38 	add	r8,r6,r10<<0x3
800048dc:	f1 4e fd 88 	st.w	r8[-632],lr
800048e0:	2f fa       	sub	r10,-1
800048e2:	0e 94       	mov	r4,r7
800048e4:	fb 4a 06 b4 	st.w	sp[1716],r10
800048e8:	12 96       	mov	r6,r9
800048ea:	c0 78       	rjmp	800048f8 <_vfprintf_r+0x3cc>
800048ec:	70 0c       	ld.w	r12,r8[0x0]
800048ee:	0e 94       	mov	r4,r7
800048f0:	2f c8       	sub	r8,-4
800048f2:	50 2c       	stdsp	sp[0x8],r12
800048f4:	12 96       	mov	r6,r9
800048f6:	51 08       	stdsp	sp[0x40],r8
800048f8:	40 2b       	lddsp	r11,sp[0x8]
800048fa:	58 0b       	cp.w	r11,0
800048fc:	fe 95 fe f2 	brlt	800046e0 <_vfprintf_r+0x1b4>
80004900:	08 97       	mov	r7,r4
80004902:	cf 5a       	rjmp	800046ec <_vfprintf_r+0x1c0>
80004904:	f2 09 00 29 	add	r9,r9,r9<<0x2
80004908:	0f 38       	ld.ub	r8,r7++
8000490a:	f4 09 00 19 	add	r9,r10,r9<<0x1
8000490e:	f0 ca 00 30 	sub	r10,r8,48
80004912:	58 9a       	cp.w	r10,9
80004914:	fe 98 ff f8 	brls	80004904 <_vfprintf_r+0x3d8>
80004918:	3f fa       	mov	r10,-1
8000491a:	f2 0a 0c 49 	max	r9,r9,r10
8000491e:	50 29       	stdsp	sp[0x8],r9
80004920:	ce 9a       	rjmp	800046f2 <_vfprintf_r+0x1c6>
80004922:	a7 b5       	sbr	r5,0x7
80004924:	ce 4a       	rjmp	800046ec <_vfprintf_r+0x1c0>
80004926:	30 09       	mov	r9,0
80004928:	23 08       	sub	r8,48
8000492a:	f2 09 00 29 	add	r9,r9,r9<<0x2
8000492e:	f0 09 00 19 	add	r9,r8,r9<<0x1
80004932:	0f 38       	ld.ub	r8,r7++
80004934:	f0 ca 00 30 	sub	r10,r8,48
80004938:	58 9a       	cp.w	r10,9
8000493a:	fe 98 ff f7 	brls	80004928 <_vfprintf_r+0x3fc>
8000493e:	e0 48 00 24 	cp.w	r8,36
80004942:	fe 91 fe d7 	brne	800046f0 <_vfprintf_r+0x1c4>
80004946:	e0 49 00 20 	cp.w	r9,32
8000494a:	e0 89 0d 6f 	brgt	80006428 <_vfprintf_r+0x1efc>
8000494e:	f2 c3 00 01 	sub	r3,r9,1
80004952:	30 19       	mov	r9,1
80004954:	50 39       	stdsp	sp[0xc],r9
80004956:	cc ba       	rjmp	800046ec <_vfprintf_r+0x1c0>
80004958:	a3 b5       	sbr	r5,0x3
8000495a:	cc 9a       	rjmp	800046ec <_vfprintf_r+0x1c0>
8000495c:	a7 a5       	sbr	r5,0x6
8000495e:	cc 7a       	rjmp	800046ec <_vfprintf_r+0x1c0>
80004960:	0a 98       	mov	r8,r5
80004962:	a5 b5       	sbr	r5,0x5
80004964:	a5 a8       	sbr	r8,0x4
80004966:	0f 89       	ld.ub	r9,r7[0x0]
80004968:	36 ce       	mov	lr,108
8000496a:	fc 09 18 00 	cp.b	r9,lr
8000496e:	f7 b7 00 ff 	subeq	r7,-1
80004972:	f0 05 17 10 	movne	r5,r8
80004976:	cb ba       	rjmp	800046ec <_vfprintf_r+0x1c0>
80004978:	a5 b5       	sbr	r5,0x5
8000497a:	cb 9a       	rjmp	800046ec <_vfprintf_r+0x1c0>
8000497c:	50 a7       	stdsp	sp[0x28],r7
8000497e:	50 80       	stdsp	sp[0x20],r0
80004980:	0c 97       	mov	r7,r6
80004982:	10 90       	mov	r0,r8
80004984:	06 96       	mov	r6,r3
80004986:	04 94       	mov	r4,r2
80004988:	40 93       	lddsp	r3,sp[0x24]
8000498a:	02 92       	mov	r2,r1
8000498c:	0e 99       	mov	r9,r7
8000498e:	40 41       	lddsp	r1,sp[0x10]
80004990:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004994:	40 3c       	lddsp	r12,sp[0xc]
80004996:	58 0c       	cp.w	r12,0
80004998:	c1 d0       	breq	800049d2 <_vfprintf_r+0x4a6>
8000499a:	10 36       	cp.w	r6,r8
8000499c:	c0 64       	brge	800049a8 <_vfprintf_r+0x47c>
8000499e:	fa cb f9 44 	sub	r11,sp,-1724
800049a2:	f6 06 00 36 	add	r6,r11,r6<<0x3
800049a6:	c1 d8       	rjmp	800049e0 <_vfprintf_r+0x4b4>
800049a8:	fa c8 f9 50 	sub	r8,sp,-1712
800049ac:	1a d8       	st.w	--sp,r8
800049ae:	fa c8 fa b8 	sub	r8,sp,-1352
800049b2:	1a d8       	st.w	--sp,r8
800049b4:	fa c8 fb b4 	sub	r8,sp,-1100
800049b8:	1a d8       	st.w	--sp,r8
800049ba:	fa c8 f9 40 	sub	r8,sp,-1728
800049be:	fa c9 ff b4 	sub	r9,sp,-76
800049c2:	04 9a       	mov	r10,r2
800049c4:	0c 9b       	mov	r11,r6
800049c6:	08 9c       	mov	r12,r4
800049c8:	fe b0 fc 1a 	rcall	800041fc <get_arg>
800049cc:	2f dd       	sub	sp,-12
800049ce:	19 b8       	ld.ub	r8,r12[0x3]
800049d0:	c2 28       	rjmp	80004a14 <_vfprintf_r+0x4e8>
800049d2:	2f f7       	sub	r7,-1
800049d4:	10 39       	cp.w	r9,r8
800049d6:	c0 84       	brge	800049e6 <_vfprintf_r+0x4ba>
800049d8:	fa ca f9 44 	sub	r10,sp,-1724
800049dc:	f4 06 00 36 	add	r6,r10,r6<<0x3
800049e0:	ed 38 fd 8b 	ld.ub	r8,r6[-629]
800049e4:	c1 88       	rjmp	80004a14 <_vfprintf_r+0x4e8>
800049e6:	41 09       	lddsp	r9,sp[0x40]
800049e8:	59 f8       	cp.w	r8,31
800049ea:	e0 89 00 12 	brgt	80004a0e <_vfprintf_r+0x4e2>
800049ee:	f2 ca ff fc 	sub	r10,r9,-4
800049f2:	51 0a       	stdsp	sp[0x40],r10
800049f4:	72 09       	ld.w	r9,r9[0x0]
800049f6:	fa c6 f9 44 	sub	r6,sp,-1724
800049fa:	ec 08 00 3a 	add	r10,r6,r8<<0x3
800049fe:	2f f8       	sub	r8,-1
80004a00:	f5 49 fd 88 	st.w	r10[-632],r9
80004a04:	fb 48 06 b4 	st.w	sp[1716],r8
80004a08:	f1 d9 c0 08 	bfextu	r8,r9,0x0,0x8
80004a0c:	c0 48       	rjmp	80004a14 <_vfprintf_r+0x4e8>
80004a0e:	13 b8       	ld.ub	r8,r9[0x3]
80004a10:	2f c9       	sub	r9,-4
80004a12:	51 09       	stdsp	sp[0x40],r9
80004a14:	fb 68 06 60 	st.b	sp[1632],r8
80004a18:	30 0e       	mov	lr,0
80004a1a:	30 08       	mov	r8,0
80004a1c:	30 12       	mov	r2,1
80004a1e:	fb 68 06 bb 	st.b	sp[1723],r8
80004a22:	50 2e       	stdsp	sp[0x8],lr
80004a24:	e0 8f 08 ad 	bral	80005b7e <_vfprintf_r+0x1652>
80004a28:	50 a7       	stdsp	sp[0x28],r7
80004a2a:	50 80       	stdsp	sp[0x20],r0
80004a2c:	0c 97       	mov	r7,r6
80004a2e:	04 94       	mov	r4,r2
80004a30:	06 96       	mov	r6,r3
80004a32:	02 92       	mov	r2,r1
80004a34:	40 93       	lddsp	r3,sp[0x24]
80004a36:	10 90       	mov	r0,r8
80004a38:	40 41       	lddsp	r1,sp[0x10]
80004a3a:	a5 a5       	sbr	r5,0x4
80004a3c:	c0 a8       	rjmp	80004a50 <_vfprintf_r+0x524>
80004a3e:	50 a7       	stdsp	sp[0x28],r7
80004a40:	50 80       	stdsp	sp[0x20],r0
80004a42:	0c 97       	mov	r7,r6
80004a44:	04 94       	mov	r4,r2
80004a46:	06 96       	mov	r6,r3
80004a48:	02 92       	mov	r2,r1
80004a4a:	40 93       	lddsp	r3,sp[0x24]
80004a4c:	10 90       	mov	r0,r8
80004a4e:	40 41       	lddsp	r1,sp[0x10]
80004a50:	ed b5 00 05 	bld	r5,0x5
80004a54:	c5 11       	brne	80004af6 <_vfprintf_r+0x5ca>
80004a56:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004a5a:	40 3c       	lddsp	r12,sp[0xc]
80004a5c:	58 0c       	cp.w	r12,0
80004a5e:	c1 e0       	breq	80004a9a <_vfprintf_r+0x56e>
80004a60:	10 36       	cp.w	r6,r8
80004a62:	c0 64       	brge	80004a6e <_vfprintf_r+0x542>
80004a64:	fa cb f9 44 	sub	r11,sp,-1724
80004a68:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004a6c:	c2 08       	rjmp	80004aac <_vfprintf_r+0x580>
80004a6e:	fa c8 f9 50 	sub	r8,sp,-1712
80004a72:	1a d8       	st.w	--sp,r8
80004a74:	fa c8 fa b8 	sub	r8,sp,-1352
80004a78:	0c 9b       	mov	r11,r6
80004a7a:	1a d8       	st.w	--sp,r8
80004a7c:	fa c8 fb b4 	sub	r8,sp,-1100
80004a80:	1a d8       	st.w	--sp,r8
80004a82:	fa c9 ff b4 	sub	r9,sp,-76
80004a86:	fa c8 f9 40 	sub	r8,sp,-1728
80004a8a:	04 9a       	mov	r10,r2
80004a8c:	08 9c       	mov	r12,r4
80004a8e:	fe b0 fb b7 	rcall	800041fc <get_arg>
80004a92:	2f dd       	sub	sp,-12
80004a94:	78 1b       	ld.w	r11,r12[0x4]
80004a96:	78 09       	ld.w	r9,r12[0x0]
80004a98:	c2 b8       	rjmp	80004aee <_vfprintf_r+0x5c2>
80004a9a:	ee ca ff ff 	sub	r10,r7,-1
80004a9e:	10 37       	cp.w	r7,r8
80004aa0:	c0 b4       	brge	80004ab6 <_vfprintf_r+0x58a>
80004aa2:	fa c9 f9 44 	sub	r9,sp,-1724
80004aa6:	14 97       	mov	r7,r10
80004aa8:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004aac:	ec fb fd 8c 	ld.w	r11,r6[-628]
80004ab0:	ec f9 fd 88 	ld.w	r9,r6[-632]
80004ab4:	c1 d8       	rjmp	80004aee <_vfprintf_r+0x5c2>
80004ab6:	41 09       	lddsp	r9,sp[0x40]
80004ab8:	59 f8       	cp.w	r8,31
80004aba:	e0 89 00 14 	brgt	80004ae2 <_vfprintf_r+0x5b6>
80004abe:	f2 cb ff f8 	sub	r11,r9,-8
80004ac2:	51 0b       	stdsp	sp[0x40],r11
80004ac4:	fa c6 f9 44 	sub	r6,sp,-1724
80004ac8:	72 1b       	ld.w	r11,r9[0x4]
80004aca:	ec 08 00 3c 	add	r12,r6,r8<<0x3
80004ace:	72 09       	ld.w	r9,r9[0x0]
80004ad0:	f9 4b fd 8c 	st.w	r12[-628],r11
80004ad4:	f9 49 fd 88 	st.w	r12[-632],r9
80004ad8:	2f f8       	sub	r8,-1
80004ada:	14 97       	mov	r7,r10
80004adc:	fb 48 06 b4 	st.w	sp[1716],r8
80004ae0:	c0 78       	rjmp	80004aee <_vfprintf_r+0x5c2>
80004ae2:	f2 c8 ff f8 	sub	r8,r9,-8
80004ae6:	72 1b       	ld.w	r11,r9[0x4]
80004ae8:	14 97       	mov	r7,r10
80004aea:	51 08       	stdsp	sp[0x40],r8
80004aec:	72 09       	ld.w	r9,r9[0x0]
80004aee:	16 98       	mov	r8,r11
80004af0:	fa e9 00 00 	st.d	sp[0],r8
80004af4:	ca e8       	rjmp	80004c50 <_vfprintf_r+0x724>
80004af6:	ed b5 00 04 	bld	r5,0x4
80004afa:	c1 71       	brne	80004b28 <_vfprintf_r+0x5fc>
80004afc:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004b00:	40 3e       	lddsp	lr,sp[0xc]
80004b02:	58 0e       	cp.w	lr,0
80004b04:	c0 80       	breq	80004b14 <_vfprintf_r+0x5e8>
80004b06:	10 36       	cp.w	r6,r8
80004b08:	c6 94       	brge	80004bda <_vfprintf_r+0x6ae>
80004b0a:	fa cc f9 44 	sub	r12,sp,-1724
80004b0e:	f8 06 00 36 	add	r6,r12,r6<<0x3
80004b12:	c8 28       	rjmp	80004c16 <_vfprintf_r+0x6ea>
80004b14:	ee ca ff ff 	sub	r10,r7,-1
80004b18:	10 37       	cp.w	r7,r8
80004b1a:	e0 84 00 81 	brge	80004c1c <_vfprintf_r+0x6f0>
80004b1e:	fa cb f9 44 	sub	r11,sp,-1724
80004b22:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004b26:	c7 78       	rjmp	80004c14 <_vfprintf_r+0x6e8>
80004b28:	ed b5 00 06 	bld	r5,0x6
80004b2c:	c4 b1       	brne	80004bc2 <_vfprintf_r+0x696>
80004b2e:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004b32:	40 3c       	lddsp	r12,sp[0xc]
80004b34:	58 0c       	cp.w	r12,0
80004b36:	c1 d0       	breq	80004b70 <_vfprintf_r+0x644>
80004b38:	10 36       	cp.w	r6,r8
80004b3a:	c0 64       	brge	80004b46 <_vfprintf_r+0x61a>
80004b3c:	fa cb f9 44 	sub	r11,sp,-1724
80004b40:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004b44:	c1 f8       	rjmp	80004b82 <_vfprintf_r+0x656>
80004b46:	fa c8 f9 50 	sub	r8,sp,-1712
80004b4a:	1a d8       	st.w	--sp,r8
80004b4c:	fa c8 fa b8 	sub	r8,sp,-1352
80004b50:	1a d8       	st.w	--sp,r8
80004b52:	fa c8 fb b4 	sub	r8,sp,-1100
80004b56:	1a d8       	st.w	--sp,r8
80004b58:	fa c8 f9 40 	sub	r8,sp,-1728
80004b5c:	fa c9 ff b4 	sub	r9,sp,-76
80004b60:	04 9a       	mov	r10,r2
80004b62:	0c 9b       	mov	r11,r6
80004b64:	08 9c       	mov	r12,r4
80004b66:	fe b0 fb 4b 	rcall	800041fc <get_arg>
80004b6a:	2f dd       	sub	sp,-12
80004b6c:	98 18       	ld.sh	r8,r12[0x2]
80004b6e:	c2 68       	rjmp	80004bba <_vfprintf_r+0x68e>
80004b70:	ee ca ff ff 	sub	r10,r7,-1
80004b74:	10 37       	cp.w	r7,r8
80004b76:	c0 94       	brge	80004b88 <_vfprintf_r+0x65c>
80004b78:	fa c9 f9 44 	sub	r9,sp,-1724
80004b7c:	14 97       	mov	r7,r10
80004b7e:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004b82:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004b86:	c1 a8       	rjmp	80004bba <_vfprintf_r+0x68e>
80004b88:	41 09       	lddsp	r9,sp[0x40]
80004b8a:	59 f8       	cp.w	r8,31
80004b8c:	e0 89 00 13 	brgt	80004bb2 <_vfprintf_r+0x686>
80004b90:	f2 cb ff fc 	sub	r11,r9,-4
80004b94:	51 0b       	stdsp	sp[0x40],r11
80004b96:	72 09       	ld.w	r9,r9[0x0]
80004b98:	fa c6 f9 44 	sub	r6,sp,-1724
80004b9c:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004ba0:	2f f8       	sub	r8,-1
80004ba2:	f7 49 fd 88 	st.w	r11[-632],r9
80004ba6:	fb 48 06 b4 	st.w	sp[1716],r8
80004baa:	14 97       	mov	r7,r10
80004bac:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004bb0:	c0 58       	rjmp	80004bba <_vfprintf_r+0x68e>
80004bb2:	92 18       	ld.sh	r8,r9[0x2]
80004bb4:	14 97       	mov	r7,r10
80004bb6:	2f c9       	sub	r9,-4
80004bb8:	51 09       	stdsp	sp[0x40],r9
80004bba:	50 18       	stdsp	sp[0x4],r8
80004bbc:	bf 58       	asr	r8,0x1f
80004bbe:	50 08       	stdsp	sp[0x0],r8
80004bc0:	c4 88       	rjmp	80004c50 <_vfprintf_r+0x724>
80004bc2:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004bc6:	40 3c       	lddsp	r12,sp[0xc]
80004bc8:	58 0c       	cp.w	r12,0
80004bca:	c1 d0       	breq	80004c04 <_vfprintf_r+0x6d8>
80004bcc:	10 36       	cp.w	r6,r8
80004bce:	c0 64       	brge	80004bda <_vfprintf_r+0x6ae>
80004bd0:	fa cb f9 44 	sub	r11,sp,-1724
80004bd4:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004bd8:	c1 f8       	rjmp	80004c16 <_vfprintf_r+0x6ea>
80004bda:	fa c8 f9 50 	sub	r8,sp,-1712
80004bde:	1a d8       	st.w	--sp,r8
80004be0:	fa c8 fa b8 	sub	r8,sp,-1352
80004be4:	0c 9b       	mov	r11,r6
80004be6:	1a d8       	st.w	--sp,r8
80004be8:	fa c8 fb b4 	sub	r8,sp,-1100
80004bec:	04 9a       	mov	r10,r2
80004bee:	1a d8       	st.w	--sp,r8
80004bf0:	08 9c       	mov	r12,r4
80004bf2:	fa c8 f9 40 	sub	r8,sp,-1728
80004bf6:	fa c9 ff b4 	sub	r9,sp,-76
80004bfa:	fe b0 fb 01 	rcall	800041fc <get_arg>
80004bfe:	2f dd       	sub	sp,-12
80004c00:	78 0b       	ld.w	r11,r12[0x0]
80004c02:	c2 48       	rjmp	80004c4a <_vfprintf_r+0x71e>
80004c04:	ee ca ff ff 	sub	r10,r7,-1
80004c08:	10 37       	cp.w	r7,r8
80004c0a:	c0 94       	brge	80004c1c <_vfprintf_r+0x6f0>
80004c0c:	fa c9 f9 44 	sub	r9,sp,-1724
80004c10:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004c14:	14 97       	mov	r7,r10
80004c16:	ec fb fd 88 	ld.w	r11,r6[-632]
80004c1a:	c1 88       	rjmp	80004c4a <_vfprintf_r+0x71e>
80004c1c:	41 09       	lddsp	r9,sp[0x40]
80004c1e:	59 f8       	cp.w	r8,31
80004c20:	e0 89 00 11 	brgt	80004c42 <_vfprintf_r+0x716>
80004c24:	f2 cb ff fc 	sub	r11,r9,-4
80004c28:	51 0b       	stdsp	sp[0x40],r11
80004c2a:	fa c6 f9 44 	sub	r6,sp,-1724
80004c2e:	72 0b       	ld.w	r11,r9[0x0]
80004c30:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004c34:	f3 4b fd 88 	st.w	r9[-632],r11
80004c38:	2f f8       	sub	r8,-1
80004c3a:	14 97       	mov	r7,r10
80004c3c:	fb 48 06 b4 	st.w	sp[1716],r8
80004c40:	c0 58       	rjmp	80004c4a <_vfprintf_r+0x71e>
80004c42:	72 0b       	ld.w	r11,r9[0x0]
80004c44:	14 97       	mov	r7,r10
80004c46:	2f c9       	sub	r9,-4
80004c48:	51 09       	stdsp	sp[0x40],r9
80004c4a:	50 1b       	stdsp	sp[0x4],r11
80004c4c:	bf 5b       	asr	r11,0x1f
80004c4e:	50 0b       	stdsp	sp[0x0],r11
80004c50:	fa ea 00 00 	ld.d	r10,sp[0]
80004c54:	58 0a       	cp.w	r10,0
80004c56:	5c 2b       	cpc	r11
80004c58:	c0 e4       	brge	80004c74 <_vfprintf_r+0x748>
80004c5a:	30 08       	mov	r8,0
80004c5c:	fa ea 00 00 	ld.d	r10,sp[0]
80004c60:	30 09       	mov	r9,0
80004c62:	f0 0a 01 0a 	sub	r10,r8,r10
80004c66:	f2 0b 01 4b 	sbc	r11,r9,r11
80004c6a:	32 d8       	mov	r8,45
80004c6c:	fa eb 00 00 	st.d	sp[0],r10
80004c70:	fb 68 06 bb 	st.b	sp[1723],r8
80004c74:	30 18       	mov	r8,1
80004c76:	e0 8f 06 fa 	bral	80005a6a <_vfprintf_r+0x153e>
80004c7a:	50 a7       	stdsp	sp[0x28],r7
80004c7c:	50 80       	stdsp	sp[0x20],r0
80004c7e:	0c 97       	mov	r7,r6
80004c80:	04 94       	mov	r4,r2
80004c82:	06 96       	mov	r6,r3
80004c84:	02 92       	mov	r2,r1
80004c86:	40 93       	lddsp	r3,sp[0x24]
80004c88:	10 90       	mov	r0,r8
80004c8a:	40 41       	lddsp	r1,sp[0x10]
80004c8c:	0e 99       	mov	r9,r7
80004c8e:	ed b5 00 03 	bld	r5,0x3
80004c92:	c4 11       	brne	80004d14 <_vfprintf_r+0x7e8>
80004c94:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004c98:	40 3a       	lddsp	r10,sp[0xc]
80004c9a:	58 0a       	cp.w	r10,0
80004c9c:	c1 90       	breq	80004cce <_vfprintf_r+0x7a2>
80004c9e:	10 36       	cp.w	r6,r8
80004ca0:	c6 45       	brlt	80004d68 <_vfprintf_r+0x83c>
80004ca2:	fa c8 f9 50 	sub	r8,sp,-1712
80004ca6:	1a d8       	st.w	--sp,r8
80004ca8:	fa c8 fa b8 	sub	r8,sp,-1352
80004cac:	1a d8       	st.w	--sp,r8
80004cae:	fa c8 fb b4 	sub	r8,sp,-1100
80004cb2:	0c 9b       	mov	r11,r6
80004cb4:	1a d8       	st.w	--sp,r8
80004cb6:	04 9a       	mov	r10,r2
80004cb8:	fa c8 f9 40 	sub	r8,sp,-1728
80004cbc:	fa c9 ff b4 	sub	r9,sp,-76
80004cc0:	08 9c       	mov	r12,r4
80004cc2:	fe b0 fa 9d 	rcall	800041fc <get_arg>
80004cc6:	2f dd       	sub	sp,-12
80004cc8:	78 16       	ld.w	r6,r12[0x4]
80004cca:	50 76       	stdsp	sp[0x1c],r6
80004ccc:	c4 88       	rjmp	80004d5c <_vfprintf_r+0x830>
80004cce:	2f f7       	sub	r7,-1
80004cd0:	10 39       	cp.w	r9,r8
80004cd2:	c0 c4       	brge	80004cea <_vfprintf_r+0x7be>
80004cd4:	fa ce f9 44 	sub	lr,sp,-1724
80004cd8:	fc 06 00 36 	add	r6,lr,r6<<0x3
80004cdc:	ec fc fd 8c 	ld.w	r12,r6[-628]
80004ce0:	50 7c       	stdsp	sp[0x1c],r12
80004ce2:	ec f6 fd 88 	ld.w	r6,r6[-632]
80004ce6:	50 56       	stdsp	sp[0x14],r6
80004ce8:	c6 68       	rjmp	80004db4 <_vfprintf_r+0x888>
80004cea:	41 09       	lddsp	r9,sp[0x40]
80004cec:	59 f8       	cp.w	r8,31
80004cee:	e0 89 00 10 	brgt	80004d0e <_vfprintf_r+0x7e2>
80004cf2:	f2 ca ff f8 	sub	r10,r9,-8
80004cf6:	72 1b       	ld.w	r11,r9[0x4]
80004cf8:	51 0a       	stdsp	sp[0x40],r10
80004cfa:	72 09       	ld.w	r9,r9[0x0]
80004cfc:	fa ca f9 44 	sub	r10,sp,-1724
80004d00:	50 7b       	stdsp	sp[0x1c],r11
80004d02:	50 59       	stdsp	sp[0x14],r9
80004d04:	f4 08 00 39 	add	r9,r10,r8<<0x3
80004d08:	40 5b       	lddsp	r11,sp[0x14]
80004d0a:	40 7a       	lddsp	r10,sp[0x1c]
80004d0c:	c4 78       	rjmp	80004d9a <_vfprintf_r+0x86e>
80004d0e:	72 18       	ld.w	r8,r9[0x4]
80004d10:	50 78       	stdsp	sp[0x1c],r8
80004d12:	c4 c8       	rjmp	80004daa <_vfprintf_r+0x87e>
80004d14:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004d18:	40 3e       	lddsp	lr,sp[0xc]
80004d1a:	58 0e       	cp.w	lr,0
80004d1c:	c2 30       	breq	80004d62 <_vfprintf_r+0x836>
80004d1e:	10 36       	cp.w	r6,r8
80004d20:	c0 94       	brge	80004d32 <_vfprintf_r+0x806>
80004d22:	fa cc f9 44 	sub	r12,sp,-1724
80004d26:	f8 06 00 36 	add	r6,r12,r6<<0x3
80004d2a:	ec fb fd 8c 	ld.w	r11,r6[-628]
80004d2e:	50 7b       	stdsp	sp[0x1c],r11
80004d30:	cd 9b       	rjmp	80004ce2 <_vfprintf_r+0x7b6>
80004d32:	fa c8 f9 50 	sub	r8,sp,-1712
80004d36:	1a d8       	st.w	--sp,r8
80004d38:	fa c8 fa b8 	sub	r8,sp,-1352
80004d3c:	04 9a       	mov	r10,r2
80004d3e:	1a d8       	st.w	--sp,r8
80004d40:	fa c8 fb b4 	sub	r8,sp,-1100
80004d44:	0c 9b       	mov	r11,r6
80004d46:	1a d8       	st.w	--sp,r8
80004d48:	08 9c       	mov	r12,r4
80004d4a:	fa c8 f9 40 	sub	r8,sp,-1728
80004d4e:	fa c9 ff b4 	sub	r9,sp,-76
80004d52:	fe b0 fa 55 	rcall	800041fc <get_arg>
80004d56:	2f dd       	sub	sp,-12
80004d58:	78 1a       	ld.w	r10,r12[0x4]
80004d5a:	50 7a       	stdsp	sp[0x1c],r10
80004d5c:	78 0c       	ld.w	r12,r12[0x0]
80004d5e:	50 5c       	stdsp	sp[0x14],r12
80004d60:	c2 a8       	rjmp	80004db4 <_vfprintf_r+0x888>
80004d62:	2f f7       	sub	r7,-1
80004d64:	10 39       	cp.w	r9,r8
80004d66:	c0 94       	brge	80004d78 <_vfprintf_r+0x84c>
80004d68:	fa c9 f9 44 	sub	r9,sp,-1724
80004d6c:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004d70:	ec f8 fd 8c 	ld.w	r8,r6[-628]
80004d74:	50 78       	stdsp	sp[0x1c],r8
80004d76:	cb 6b       	rjmp	80004ce2 <_vfprintf_r+0x7b6>
80004d78:	41 09       	lddsp	r9,sp[0x40]
80004d7a:	59 f8       	cp.w	r8,31
80004d7c:	e0 89 00 15 	brgt	80004da6 <_vfprintf_r+0x87a>
80004d80:	f2 ca ff f8 	sub	r10,r9,-8
80004d84:	72 16       	ld.w	r6,r9[0x4]
80004d86:	72 09       	ld.w	r9,r9[0x0]
80004d88:	51 0a       	stdsp	sp[0x40],r10
80004d8a:	50 59       	stdsp	sp[0x14],r9
80004d8c:	fa ce f9 44 	sub	lr,sp,-1724
80004d90:	50 76       	stdsp	sp[0x1c],r6
80004d92:	fc 08 00 39 	add	r9,lr,r8<<0x3
80004d96:	40 5b       	lddsp	r11,sp[0x14]
80004d98:	0c 9a       	mov	r10,r6
80004d9a:	f2 eb fd 88 	st.d	r9[-632],r10
80004d9e:	2f f8       	sub	r8,-1
80004da0:	fb 48 06 b4 	st.w	sp[1716],r8
80004da4:	c0 88       	rjmp	80004db4 <_vfprintf_r+0x888>
80004da6:	72 1c       	ld.w	r12,r9[0x4]
80004da8:	50 7c       	stdsp	sp[0x1c],r12
80004daa:	f2 c8 ff f8 	sub	r8,r9,-8
80004dae:	51 08       	stdsp	sp[0x40],r8
80004db0:	72 09       	ld.w	r9,r9[0x0]
80004db2:	50 59       	stdsp	sp[0x14],r9
80004db4:	40 5b       	lddsp	r11,sp[0x14]
80004db6:	40 7a       	lddsp	r10,sp[0x1c]
80004db8:	e0 a0 1c de 	rcall	80008774 <__isinfd>
80004dbc:	18 96       	mov	r6,r12
80004dbe:	c1 70       	breq	80004dec <_vfprintf_r+0x8c0>
80004dc0:	30 08       	mov	r8,0
80004dc2:	30 09       	mov	r9,0
80004dc4:	40 5b       	lddsp	r11,sp[0x14]
80004dc6:	40 7a       	lddsp	r10,sp[0x1c]
80004dc8:	fe b0 f9 22 	rcall	8000400c <__avr32_f64_cmp_lt>
80004dcc:	c0 40       	breq	80004dd4 <_vfprintf_r+0x8a8>
80004dce:	32 d8       	mov	r8,45
80004dd0:	fb 68 06 bb 	st.b	sp[1723],r8
80004dd4:	fe c8 af 6c 	sub	r8,pc,-20628
80004dd8:	fe c6 af 6c 	sub	r6,pc,-20628
80004ddc:	a7 d5       	cbr	r5,0x7
80004dde:	e0 40 00 47 	cp.w	r0,71
80004de2:	f0 06 17 a0 	movle	r6,r8
80004de6:	30 32       	mov	r2,3
80004de8:	e0 8f 06 ce 	bral	80005b84 <_vfprintf_r+0x1658>
80004dec:	40 5b       	lddsp	r11,sp[0x14]
80004dee:	40 7a       	lddsp	r10,sp[0x1c]
80004df0:	e0 a0 1c d7 	rcall	8000879e <__isnand>
80004df4:	c0 e0       	breq	80004e10 <_vfprintf_r+0x8e4>
80004df6:	50 26       	stdsp	sp[0x8],r6
80004df8:	fe c8 af 88 	sub	r8,pc,-20600
80004dfc:	fe c6 af 88 	sub	r6,pc,-20600
80004e00:	a7 d5       	cbr	r5,0x7
80004e02:	e0 40 00 47 	cp.w	r0,71
80004e06:	f0 06 17 a0 	movle	r6,r8
80004e0a:	30 32       	mov	r2,3
80004e0c:	e0 8f 06 c2 	bral	80005b90 <_vfprintf_r+0x1664>
80004e10:	40 2a       	lddsp	r10,sp[0x8]
80004e12:	5b fa       	cp.w	r10,-1
80004e14:	c0 41       	brne	80004e1c <_vfprintf_r+0x8f0>
80004e16:	30 69       	mov	r9,6
80004e18:	50 29       	stdsp	sp[0x8],r9
80004e1a:	c1 18       	rjmp	80004e3c <_vfprintf_r+0x910>
80004e1c:	e0 40 00 47 	cp.w	r0,71
80004e20:	5f 09       	sreq	r9
80004e22:	e0 40 00 67 	cp.w	r0,103
80004e26:	5f 08       	sreq	r8
80004e28:	f3 e8 10 08 	or	r8,r9,r8
80004e2c:	f8 08 18 00 	cp.b	r8,r12
80004e30:	c0 60       	breq	80004e3c <_vfprintf_r+0x910>
80004e32:	40 28       	lddsp	r8,sp[0x8]
80004e34:	58 08       	cp.w	r8,0
80004e36:	f9 b8 00 01 	moveq	r8,1
80004e3a:	50 28       	stdsp	sp[0x8],r8
80004e3c:	40 78       	lddsp	r8,sp[0x1c]
80004e3e:	40 59       	lddsp	r9,sp[0x14]
80004e40:	fa e9 06 94 	st.d	sp[1684],r8
80004e44:	a9 a5       	sbr	r5,0x8
80004e46:	fa f8 06 94 	ld.w	r8,sp[1684]
80004e4a:	58 08       	cp.w	r8,0
80004e4c:	c0 65       	brlt	80004e58 <_vfprintf_r+0x92c>
80004e4e:	40 5e       	lddsp	lr,sp[0x14]
80004e50:	30 0c       	mov	r12,0
80004e52:	50 6e       	stdsp	sp[0x18],lr
80004e54:	50 9c       	stdsp	sp[0x24],r12
80004e56:	c0 78       	rjmp	80004e64 <_vfprintf_r+0x938>
80004e58:	40 5b       	lddsp	r11,sp[0x14]
80004e5a:	32 da       	mov	r10,45
80004e5c:	ee 1b 80 00 	eorh	r11,0x8000
80004e60:	50 9a       	stdsp	sp[0x24],r10
80004e62:	50 6b       	stdsp	sp[0x18],r11
80004e64:	e0 40 00 46 	cp.w	r0,70
80004e68:	5f 09       	sreq	r9
80004e6a:	e0 40 00 66 	cp.w	r0,102
80004e6e:	5f 08       	sreq	r8
80004e70:	f3 e8 10 08 	or	r8,r9,r8
80004e74:	50 48       	stdsp	sp[0x10],r8
80004e76:	c0 40       	breq	80004e7e <_vfprintf_r+0x952>
80004e78:	40 22       	lddsp	r2,sp[0x8]
80004e7a:	30 39       	mov	r9,3
80004e7c:	c1 08       	rjmp	80004e9c <_vfprintf_r+0x970>
80004e7e:	e0 40 00 45 	cp.w	r0,69
80004e82:	5f 09       	sreq	r9
80004e84:	e0 40 00 65 	cp.w	r0,101
80004e88:	5f 08       	sreq	r8
80004e8a:	40 22       	lddsp	r2,sp[0x8]
80004e8c:	10 49       	or	r9,r8
80004e8e:	2f f2       	sub	r2,-1
80004e90:	40 46       	lddsp	r6,sp[0x10]
80004e92:	ec 09 18 00 	cp.b	r9,r6
80004e96:	fb f2 00 02 	ld.weq	r2,sp[0x8]
80004e9a:	30 29       	mov	r9,2
80004e9c:	fa c8 f9 5c 	sub	r8,sp,-1700
80004ea0:	1a d8       	st.w	--sp,r8
80004ea2:	fa c8 f9 54 	sub	r8,sp,-1708
80004ea6:	1a d8       	st.w	--sp,r8
80004ea8:	fa c8 f9 4c 	sub	r8,sp,-1716
80004eac:	08 9c       	mov	r12,r4
80004eae:	1a d8       	st.w	--sp,r8
80004eb0:	04 98       	mov	r8,r2
80004eb2:	40 9b       	lddsp	r11,sp[0x24]
80004eb4:	40 aa       	lddsp	r10,sp[0x28]
80004eb6:	e0 a0 0b c3 	rcall	8000663c <_dtoa_r>
80004eba:	e0 40 00 47 	cp.w	r0,71
80004ebe:	5f 19       	srne	r9
80004ec0:	e0 40 00 67 	cp.w	r0,103
80004ec4:	5f 18       	srne	r8
80004ec6:	18 96       	mov	r6,r12
80004ec8:	2f dd       	sub	sp,-12
80004eca:	f3 e8 00 08 	and	r8,r9,r8
80004ece:	c0 41       	brne	80004ed6 <_vfprintf_r+0x9aa>
80004ed0:	ed b5 00 00 	bld	r5,0x0
80004ed4:	c3 01       	brne	80004f34 <_vfprintf_r+0xa08>
80004ed6:	ec 02 00 0e 	add	lr,r6,r2
80004eda:	50 3e       	stdsp	sp[0xc],lr
80004edc:	40 4c       	lddsp	r12,sp[0x10]
80004ede:	58 0c       	cp.w	r12,0
80004ee0:	c1 50       	breq	80004f0a <_vfprintf_r+0x9de>
80004ee2:	0d 89       	ld.ub	r9,r6[0x0]
80004ee4:	33 08       	mov	r8,48
80004ee6:	f0 09 18 00 	cp.b	r9,r8
80004eea:	c0 b1       	brne	80004f00 <_vfprintf_r+0x9d4>
80004eec:	30 08       	mov	r8,0
80004eee:	30 09       	mov	r9,0
80004ef0:	40 6b       	lddsp	r11,sp[0x18]
80004ef2:	40 7a       	lddsp	r10,sp[0x1c]
80004ef4:	e0 a0 1f 91 	rcall	80008e16 <__avr32_f64_cmp_eq>
80004ef8:	fb b2 00 01 	rsubeq	r2,1
80004efc:	fb f2 0b ab 	st.weq	sp[0x6ac],r2
80004f00:	40 3b       	lddsp	r11,sp[0xc]
80004f02:	fa f8 06 ac 	ld.w	r8,sp[1708]
80004f06:	10 0b       	add	r11,r8
80004f08:	50 3b       	stdsp	sp[0xc],r11
80004f0a:	40 6b       	lddsp	r11,sp[0x18]
80004f0c:	30 08       	mov	r8,0
80004f0e:	30 09       	mov	r9,0
80004f10:	40 7a       	lddsp	r10,sp[0x1c]
80004f12:	e0 a0 1f 82 	rcall	80008e16 <__avr32_f64_cmp_eq>
80004f16:	c0 90       	breq	80004f28 <_vfprintf_r+0x9fc>
80004f18:	40 3a       	lddsp	r10,sp[0xc]
80004f1a:	fb 4a 06 a4 	st.w	sp[1700],r10
80004f1e:	c0 58       	rjmp	80004f28 <_vfprintf_r+0x9fc>
80004f20:	10 c9       	st.b	r8++,r9
80004f22:	fb 48 06 a4 	st.w	sp[1700],r8
80004f26:	c0 28       	rjmp	80004f2a <_vfprintf_r+0x9fe>
80004f28:	33 09       	mov	r9,48
80004f2a:	fa f8 06 a4 	ld.w	r8,sp[1700]
80004f2e:	40 3e       	lddsp	lr,sp[0xc]
80004f30:	1c 38       	cp.w	r8,lr
80004f32:	cf 73       	brcs	80004f20 <_vfprintf_r+0x9f4>
80004f34:	e0 40 00 47 	cp.w	r0,71
80004f38:	5f 09       	sreq	r9
80004f3a:	e0 40 00 67 	cp.w	r0,103
80004f3e:	5f 08       	sreq	r8
80004f40:	f3 e8 10 08 	or	r8,r9,r8
80004f44:	fa f9 06 a4 	ld.w	r9,sp[1700]
80004f48:	0c 19       	sub	r9,r6
80004f4a:	50 69       	stdsp	sp[0x18],r9
80004f4c:	58 08       	cp.w	r8,0
80004f4e:	c0 b0       	breq	80004f64 <_vfprintf_r+0xa38>
80004f50:	fa f8 06 ac 	ld.w	r8,sp[1708]
80004f54:	5b d8       	cp.w	r8,-3
80004f56:	c0 55       	brlt	80004f60 <_vfprintf_r+0xa34>
80004f58:	40 2c       	lddsp	r12,sp[0x8]
80004f5a:	18 38       	cp.w	r8,r12
80004f5c:	e0 8a 00 6a 	brle	80005030 <_vfprintf_r+0xb04>
80004f60:	20 20       	sub	r0,2
80004f62:	c0 58       	rjmp	80004f6c <_vfprintf_r+0xa40>
80004f64:	e0 40 00 65 	cp.w	r0,101
80004f68:	e0 89 00 46 	brgt	80004ff4 <_vfprintf_r+0xac8>
80004f6c:	fa fb 06 ac 	ld.w	r11,sp[1708]
80004f70:	fb 60 06 9c 	st.b	sp[1692],r0
80004f74:	20 1b       	sub	r11,1
80004f76:	fb 4b 06 ac 	st.w	sp[1708],r11
80004f7a:	c0 47       	brpl	80004f82 <_vfprintf_r+0xa56>
80004f7c:	5c 3b       	neg	r11
80004f7e:	32 d8       	mov	r8,45
80004f80:	c0 28       	rjmp	80004f84 <_vfprintf_r+0xa58>
80004f82:	32 b8       	mov	r8,43
80004f84:	fb 68 06 9d 	st.b	sp[1693],r8
80004f88:	58 9b       	cp.w	r11,9
80004f8a:	e0 8a 00 1d 	brle	80004fc4 <_vfprintf_r+0xa98>
80004f8e:	fa c9 fa 35 	sub	r9,sp,-1483
80004f92:	30 aa       	mov	r10,10
80004f94:	12 98       	mov	r8,r9
80004f96:	0e 9c       	mov	r12,r7
80004f98:	0c 92       	mov	r2,r6
80004f9a:	f6 0a 0c 06 	divs	r6,r11,r10
80004f9e:	0e 9b       	mov	r11,r7
80004fa0:	2d 0b       	sub	r11,-48
80004fa2:	10 fb       	st.b	--r8,r11
80004fa4:	0c 9b       	mov	r11,r6
80004fa6:	58 96       	cp.w	r6,9
80004fa8:	fe 99 ff f9 	brgt	80004f9a <_vfprintf_r+0xa6e>
80004fac:	2d 0b       	sub	r11,-48
80004fae:	18 97       	mov	r7,r12
80004fb0:	04 96       	mov	r6,r2
80004fb2:	10 fb       	st.b	--r8,r11
80004fb4:	fa ca f9 62 	sub	r10,sp,-1694
80004fb8:	c0 38       	rjmp	80004fbe <_vfprintf_r+0xa92>
80004fba:	11 3b       	ld.ub	r11,r8++
80004fbc:	14 cb       	st.b	r10++,r11
80004fbe:	12 38       	cp.w	r8,r9
80004fc0:	cf d3       	brcs	80004fba <_vfprintf_r+0xa8e>
80004fc2:	c0 98       	rjmp	80004fd4 <_vfprintf_r+0xaa8>
80004fc4:	2d 0b       	sub	r11,-48
80004fc6:	33 08       	mov	r8,48
80004fc8:	fb 6b 06 9f 	st.b	sp[1695],r11
80004fcc:	fb 68 06 9e 	st.b	sp[1694],r8
80004fd0:	fa ca f9 60 	sub	r10,sp,-1696
80004fd4:	fa c8 f9 64 	sub	r8,sp,-1692
80004fd8:	f4 08 01 08 	sub	r8,r10,r8
80004fdc:	50 e8       	stdsp	sp[0x38],r8
80004fde:	10 92       	mov	r2,r8
80004fe0:	40 6b       	lddsp	r11,sp[0x18]
80004fe2:	16 02       	add	r2,r11
80004fe4:	58 1b       	cp.w	r11,1
80004fe6:	e0 89 00 05 	brgt	80004ff0 <_vfprintf_r+0xac4>
80004fea:	ed b5 00 00 	bld	r5,0x0
80004fee:	c3 51       	brne	80005058 <_vfprintf_r+0xb2c>
80004ff0:	2f f2       	sub	r2,-1
80004ff2:	c3 38       	rjmp	80005058 <_vfprintf_r+0xb2c>
80004ff4:	e0 40 00 66 	cp.w	r0,102
80004ff8:	c1 c1       	brne	80005030 <_vfprintf_r+0xb04>
80004ffa:	fa f2 06 ac 	ld.w	r2,sp[1708]
80004ffe:	58 02       	cp.w	r2,0
80005000:	e0 8a 00 0c 	brle	80005018 <_vfprintf_r+0xaec>
80005004:	40 2a       	lddsp	r10,sp[0x8]
80005006:	58 0a       	cp.w	r10,0
80005008:	c0 41       	brne	80005010 <_vfprintf_r+0xae4>
8000500a:	ed b5 00 00 	bld	r5,0x0
8000500e:	c2 51       	brne	80005058 <_vfprintf_r+0xb2c>
80005010:	2f f2       	sub	r2,-1
80005012:	40 29       	lddsp	r9,sp[0x8]
80005014:	12 02       	add	r2,r9
80005016:	c0 b8       	rjmp	8000502c <_vfprintf_r+0xb00>
80005018:	40 28       	lddsp	r8,sp[0x8]
8000501a:	58 08       	cp.w	r8,0
8000501c:	c0 61       	brne	80005028 <_vfprintf_r+0xafc>
8000501e:	ed b5 00 00 	bld	r5,0x0
80005022:	c0 30       	breq	80005028 <_vfprintf_r+0xafc>
80005024:	30 12       	mov	r2,1
80005026:	c1 98       	rjmp	80005058 <_vfprintf_r+0xb2c>
80005028:	40 22       	lddsp	r2,sp[0x8]
8000502a:	2f e2       	sub	r2,-2
8000502c:	36 60       	mov	r0,102
8000502e:	c1 58       	rjmp	80005058 <_vfprintf_r+0xb2c>
80005030:	fa f2 06 ac 	ld.w	r2,sp[1708]
80005034:	40 6e       	lddsp	lr,sp[0x18]
80005036:	1c 32       	cp.w	r2,lr
80005038:	c0 65       	brlt	80005044 <_vfprintf_r+0xb18>
8000503a:	ed b5 00 00 	bld	r5,0x0
8000503e:	f7 b2 00 ff 	subeq	r2,-1
80005042:	c0 a8       	rjmp	80005056 <_vfprintf_r+0xb2a>
80005044:	e4 08 11 02 	rsub	r8,r2,2
80005048:	40 6c       	lddsp	r12,sp[0x18]
8000504a:	58 02       	cp.w	r2,0
8000504c:	f0 02 17 a0 	movle	r2,r8
80005050:	f9 b2 09 01 	movgt	r2,1
80005054:	18 02       	add	r2,r12
80005056:	36 70       	mov	r0,103
80005058:	40 9b       	lddsp	r11,sp[0x24]
8000505a:	58 0b       	cp.w	r11,0
8000505c:	e0 80 05 94 	breq	80005b84 <_vfprintf_r+0x1658>
80005060:	32 d8       	mov	r8,45
80005062:	fb 68 06 bb 	st.b	sp[1723],r8
80005066:	e0 8f 05 93 	bral	80005b8c <_vfprintf_r+0x1660>
8000506a:	50 a7       	stdsp	sp[0x28],r7
8000506c:	04 94       	mov	r4,r2
8000506e:	0c 97       	mov	r7,r6
80005070:	02 92       	mov	r2,r1
80005072:	06 96       	mov	r6,r3
80005074:	40 41       	lddsp	r1,sp[0x10]
80005076:	40 93       	lddsp	r3,sp[0x24]
80005078:	0e 99       	mov	r9,r7
8000507a:	ed b5 00 05 	bld	r5,0x5
8000507e:	c4 81       	brne	8000510e <_vfprintf_r+0xbe2>
80005080:	fa f8 06 b4 	ld.w	r8,sp[1716]
80005084:	40 3e       	lddsp	lr,sp[0xc]
80005086:	58 0e       	cp.w	lr,0
80005088:	c1 d0       	breq	800050c2 <_vfprintf_r+0xb96>
8000508a:	10 36       	cp.w	r6,r8
8000508c:	c0 64       	brge	80005098 <_vfprintf_r+0xb6c>
8000508e:	fa cc f9 44 	sub	r12,sp,-1724
80005092:	f8 06 00 36 	add	r6,r12,r6<<0x3
80005096:	c1 d8       	rjmp	800050d0 <_vfprintf_r+0xba4>
80005098:	fa c8 f9 50 	sub	r8,sp,-1712
8000509c:	1a d8       	st.w	--sp,r8
8000509e:	fa c8 fa b8 	sub	r8,sp,-1352
800050a2:	04 9a       	mov	r10,r2
800050a4:	1a d8       	st.w	--sp,r8
800050a6:	fa c8 fb b4 	sub	r8,sp,-1100
800050aa:	0c 9b       	mov	r11,r6
800050ac:	1a d8       	st.w	--sp,r8
800050ae:	08 9c       	mov	r12,r4
800050b0:	fa c8 f9 40 	sub	r8,sp,-1728
800050b4:	fa c9 ff b4 	sub	r9,sp,-76
800050b8:	fe b0 f8 a2 	rcall	800041fc <get_arg>
800050bc:	2f dd       	sub	sp,-12
800050be:	78 0a       	ld.w	r10,r12[0x0]
800050c0:	c2 08       	rjmp	80005100 <_vfprintf_r+0xbd4>
800050c2:	2f f7       	sub	r7,-1
800050c4:	10 39       	cp.w	r9,r8
800050c6:	c0 84       	brge	800050d6 <_vfprintf_r+0xbaa>
800050c8:	fa cb f9 44 	sub	r11,sp,-1724
800050cc:	f6 06 00 36 	add	r6,r11,r6<<0x3
800050d0:	ec fa fd 88 	ld.w	r10,r6[-632]
800050d4:	c1 68       	rjmp	80005100 <_vfprintf_r+0xbd4>
800050d6:	41 09       	lddsp	r9,sp[0x40]
800050d8:	59 f8       	cp.w	r8,31
800050da:	e0 89 00 10 	brgt	800050fa <_vfprintf_r+0xbce>
800050de:	f2 ca ff fc 	sub	r10,r9,-4
800050e2:	51 0a       	stdsp	sp[0x40],r10
800050e4:	fa c6 f9 44 	sub	r6,sp,-1724
800050e8:	72 0a       	ld.w	r10,r9[0x0]
800050ea:	ec 08 00 39 	add	r9,r6,r8<<0x3
800050ee:	f3 4a fd 88 	st.w	r9[-632],r10
800050f2:	2f f8       	sub	r8,-1
800050f4:	fb 48 06 b4 	st.w	sp[1716],r8
800050f8:	c0 48       	rjmp	80005100 <_vfprintf_r+0xbd4>
800050fa:	72 0a       	ld.w	r10,r9[0x0]
800050fc:	2f c9       	sub	r9,-4
800050fe:	51 09       	stdsp	sp[0x40],r9
80005100:	40 be       	lddsp	lr,sp[0x2c]
80005102:	1c 98       	mov	r8,lr
80005104:	95 1e       	st.w	r10[0x4],lr
80005106:	bf 58       	asr	r8,0x1f
80005108:	95 08       	st.w	r10[0x0],r8
8000510a:	fe 9f fa 9f 	bral	80004648 <_vfprintf_r+0x11c>
8000510e:	ed b5 00 04 	bld	r5,0x4
80005112:	c4 80       	breq	800051a2 <_vfprintf_r+0xc76>
80005114:	e2 15 00 40 	andl	r5,0x40,COH
80005118:	c4 50       	breq	800051a2 <_vfprintf_r+0xc76>
8000511a:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000511e:	40 3c       	lddsp	r12,sp[0xc]
80005120:	58 0c       	cp.w	r12,0
80005122:	c1 d0       	breq	8000515c <_vfprintf_r+0xc30>
80005124:	10 36       	cp.w	r6,r8
80005126:	c0 64       	brge	80005132 <_vfprintf_r+0xc06>
80005128:	fa cb f9 44 	sub	r11,sp,-1724
8000512c:	f6 06 00 36 	add	r6,r11,r6<<0x3
80005130:	c1 d8       	rjmp	8000516a <_vfprintf_r+0xc3e>
80005132:	fa c8 f9 50 	sub	r8,sp,-1712
80005136:	1a d8       	st.w	--sp,r8
80005138:	fa c8 fa b8 	sub	r8,sp,-1352
8000513c:	04 9a       	mov	r10,r2
8000513e:	1a d8       	st.w	--sp,r8
80005140:	fa c8 fb b4 	sub	r8,sp,-1100
80005144:	0c 9b       	mov	r11,r6
80005146:	1a d8       	st.w	--sp,r8
80005148:	08 9c       	mov	r12,r4
8000514a:	fa c8 f9 40 	sub	r8,sp,-1728
8000514e:	fa c9 ff b4 	sub	r9,sp,-76
80005152:	fe b0 f8 55 	rcall	800041fc <get_arg>
80005156:	2f dd       	sub	sp,-12
80005158:	78 0a       	ld.w	r10,r12[0x0]
8000515a:	c2 08       	rjmp	8000519a <_vfprintf_r+0xc6e>
8000515c:	2f f7       	sub	r7,-1
8000515e:	10 39       	cp.w	r9,r8
80005160:	c0 84       	brge	80005170 <_vfprintf_r+0xc44>
80005162:	fa ca f9 44 	sub	r10,sp,-1724
80005166:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000516a:	ec fa fd 88 	ld.w	r10,r6[-632]
8000516e:	c1 68       	rjmp	8000519a <_vfprintf_r+0xc6e>
80005170:	41 09       	lddsp	r9,sp[0x40]
80005172:	59 f8       	cp.w	r8,31
80005174:	e0 89 00 10 	brgt	80005194 <_vfprintf_r+0xc68>
80005178:	f2 ca ff fc 	sub	r10,r9,-4
8000517c:	51 0a       	stdsp	sp[0x40],r10
8000517e:	fa c6 f9 44 	sub	r6,sp,-1724
80005182:	72 0a       	ld.w	r10,r9[0x0]
80005184:	ec 08 00 39 	add	r9,r6,r8<<0x3
80005188:	f3 4a fd 88 	st.w	r9[-632],r10
8000518c:	2f f8       	sub	r8,-1
8000518e:	fb 48 06 b4 	st.w	sp[1716],r8
80005192:	c0 48       	rjmp	8000519a <_vfprintf_r+0xc6e>
80005194:	72 0a       	ld.w	r10,r9[0x0]
80005196:	2f c9       	sub	r9,-4
80005198:	51 09       	stdsp	sp[0x40],r9
8000519a:	40 be       	lddsp	lr,sp[0x2c]
8000519c:	b4 0e       	st.h	r10[0x0],lr
8000519e:	fe 9f fa 55 	bral	80004648 <_vfprintf_r+0x11c>
800051a2:	fa f8 06 b4 	ld.w	r8,sp[1716]
800051a6:	40 3c       	lddsp	r12,sp[0xc]
800051a8:	58 0c       	cp.w	r12,0
800051aa:	c1 d0       	breq	800051e4 <_vfprintf_r+0xcb8>
800051ac:	10 36       	cp.w	r6,r8
800051ae:	c0 64       	brge	800051ba <_vfprintf_r+0xc8e>
800051b0:	fa cb f9 44 	sub	r11,sp,-1724
800051b4:	f6 06 00 36 	add	r6,r11,r6<<0x3
800051b8:	c1 d8       	rjmp	800051f2 <_vfprintf_r+0xcc6>
800051ba:	fa c8 f9 50 	sub	r8,sp,-1712
800051be:	1a d8       	st.w	--sp,r8
800051c0:	fa c8 fa b8 	sub	r8,sp,-1352
800051c4:	04 9a       	mov	r10,r2
800051c6:	1a d8       	st.w	--sp,r8
800051c8:	fa c8 fb b4 	sub	r8,sp,-1100
800051cc:	0c 9b       	mov	r11,r6
800051ce:	1a d8       	st.w	--sp,r8
800051d0:	08 9c       	mov	r12,r4
800051d2:	fa c8 f9 40 	sub	r8,sp,-1728
800051d6:	fa c9 ff b4 	sub	r9,sp,-76
800051da:	fe b0 f8 11 	rcall	800041fc <get_arg>
800051de:	2f dd       	sub	sp,-12
800051e0:	78 0a       	ld.w	r10,r12[0x0]
800051e2:	c2 08       	rjmp	80005222 <_vfprintf_r+0xcf6>
800051e4:	2f f7       	sub	r7,-1
800051e6:	10 39       	cp.w	r9,r8
800051e8:	c0 84       	brge	800051f8 <_vfprintf_r+0xccc>
800051ea:	fa ca f9 44 	sub	r10,sp,-1724
800051ee:	f4 06 00 36 	add	r6,r10,r6<<0x3
800051f2:	ec fa fd 88 	ld.w	r10,r6[-632]
800051f6:	c1 68       	rjmp	80005222 <_vfprintf_r+0xcf6>
800051f8:	41 09       	lddsp	r9,sp[0x40]
800051fa:	59 f8       	cp.w	r8,31
800051fc:	e0 89 00 10 	brgt	8000521c <_vfprintf_r+0xcf0>
80005200:	f2 ca ff fc 	sub	r10,r9,-4
80005204:	51 0a       	stdsp	sp[0x40],r10
80005206:	fa c6 f9 44 	sub	r6,sp,-1724
8000520a:	72 0a       	ld.w	r10,r9[0x0]
8000520c:	ec 08 00 39 	add	r9,r6,r8<<0x3
80005210:	f3 4a fd 88 	st.w	r9[-632],r10
80005214:	2f f8       	sub	r8,-1
80005216:	fb 48 06 b4 	st.w	sp[1716],r8
8000521a:	c0 48       	rjmp	80005222 <_vfprintf_r+0xcf6>
8000521c:	72 0a       	ld.w	r10,r9[0x0]
8000521e:	2f c9       	sub	r9,-4
80005220:	51 09       	stdsp	sp[0x40],r9
80005222:	40 be       	lddsp	lr,sp[0x2c]
80005224:	95 0e       	st.w	r10[0x0],lr
80005226:	fe 9f fa 11 	bral	80004648 <_vfprintf_r+0x11c>
8000522a:	50 a7       	stdsp	sp[0x28],r7
8000522c:	50 80       	stdsp	sp[0x20],r0
8000522e:	0c 97       	mov	r7,r6
80005230:	04 94       	mov	r4,r2
80005232:	06 96       	mov	r6,r3
80005234:	02 92       	mov	r2,r1
80005236:	40 93       	lddsp	r3,sp[0x24]
80005238:	10 90       	mov	r0,r8
8000523a:	40 41       	lddsp	r1,sp[0x10]
8000523c:	a5 a5       	sbr	r5,0x4
8000523e:	c0 a8       	rjmp	80005252 <_vfprintf_r+0xd26>
80005240:	50 a7       	stdsp	sp[0x28],r7
80005242:	50 80       	stdsp	sp[0x20],r0
80005244:	0c 97       	mov	r7,r6
80005246:	04 94       	mov	r4,r2
80005248:	06 96       	mov	r6,r3
8000524a:	02 92       	mov	r2,r1
8000524c:	40 93       	lddsp	r3,sp[0x24]
8000524e:	10 90       	mov	r0,r8
80005250:	40 41       	lddsp	r1,sp[0x10]
80005252:	ed b5 00 05 	bld	r5,0x5
80005256:	c5 d1       	brne	80005310 <_vfprintf_r+0xde4>
80005258:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000525c:	40 3c       	lddsp	r12,sp[0xc]
8000525e:	58 0c       	cp.w	r12,0
80005260:	c2 60       	breq	800052ac <_vfprintf_r+0xd80>
80005262:	10 36       	cp.w	r6,r8
80005264:	c0 a4       	brge	80005278 <_vfprintf_r+0xd4c>
80005266:	fa cb f9 44 	sub	r11,sp,-1724
8000526a:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000526e:	ec e8 fd 88 	ld.d	r8,r6[-632]
80005272:	fa e9 00 00 	st.d	sp[0],r8
80005276:	c1 88       	rjmp	800052a6 <_vfprintf_r+0xd7a>
80005278:	fa c8 f9 50 	sub	r8,sp,-1712
8000527c:	1a d8       	st.w	--sp,r8
8000527e:	fa c8 fa b8 	sub	r8,sp,-1352
80005282:	04 9a       	mov	r10,r2
80005284:	1a d8       	st.w	--sp,r8
80005286:	0c 9b       	mov	r11,r6
80005288:	fa c8 fb b4 	sub	r8,sp,-1100
8000528c:	08 9c       	mov	r12,r4
8000528e:	1a d8       	st.w	--sp,r8
80005290:	fa c8 f9 40 	sub	r8,sp,-1728
80005294:	fa c9 ff b4 	sub	r9,sp,-76
80005298:	fe b0 f7 b2 	rcall	800041fc <get_arg>
8000529c:	2f dd       	sub	sp,-12
8000529e:	f8 ea 00 00 	ld.d	r10,r12[0]
800052a2:	fa eb 00 00 	st.d	sp[0],r10
800052a6:	30 08       	mov	r8,0
800052a8:	e0 8f 03 de 	bral	80005a64 <_vfprintf_r+0x1538>
800052ac:	ee ca ff ff 	sub	r10,r7,-1
800052b0:	10 37       	cp.w	r7,r8
800052b2:	c0 b4       	brge	800052c8 <_vfprintf_r+0xd9c>
800052b4:	fa c9 f9 44 	sub	r9,sp,-1724
800052b8:	14 97       	mov	r7,r10
800052ba:	f2 06 00 36 	add	r6,r9,r6<<0x3
800052be:	ec ea fd 88 	ld.d	r10,r6[-632]
800052c2:	fa eb 00 00 	st.d	sp[0],r10
800052c6:	c1 88       	rjmp	800052f6 <_vfprintf_r+0xdca>
800052c8:	41 09       	lddsp	r9,sp[0x40]
800052ca:	59 f8       	cp.w	r8,31
800052cc:	e0 89 00 18 	brgt	800052fc <_vfprintf_r+0xdd0>
800052d0:	f2 e6 00 00 	ld.d	r6,r9[0]
800052d4:	f2 cb ff f8 	sub	r11,r9,-8
800052d8:	fa e7 00 00 	st.d	sp[0],r6
800052dc:	51 0b       	stdsp	sp[0x40],r11
800052de:	fa c6 f9 44 	sub	r6,sp,-1724
800052e2:	ec 08 00 39 	add	r9,r6,r8<<0x3
800052e6:	fa e6 00 00 	ld.d	r6,sp[0]
800052ea:	f2 e7 fd 88 	st.d	r9[-632],r6
800052ee:	2f f8       	sub	r8,-1
800052f0:	14 97       	mov	r7,r10
800052f2:	fb 48 06 b4 	st.w	sp[1716],r8
800052f6:	40 38       	lddsp	r8,sp[0xc]
800052f8:	e0 8f 03 b6 	bral	80005a64 <_vfprintf_r+0x1538>
800052fc:	f2 e6 00 00 	ld.d	r6,r9[0]
80005300:	40 38       	lddsp	r8,sp[0xc]
80005302:	fa e7 00 00 	st.d	sp[0],r6
80005306:	2f 89       	sub	r9,-8
80005308:	14 97       	mov	r7,r10
8000530a:	51 09       	stdsp	sp[0x40],r9
8000530c:	e0 8f 03 ac 	bral	80005a64 <_vfprintf_r+0x1538>
80005310:	ed b5 00 04 	bld	r5,0x4
80005314:	c1 61       	brne	80005340 <_vfprintf_r+0xe14>
80005316:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000531a:	40 3e       	lddsp	lr,sp[0xc]
8000531c:	58 0e       	cp.w	lr,0
8000531e:	c0 80       	breq	8000532e <_vfprintf_r+0xe02>
80005320:	10 36       	cp.w	r6,r8
80005322:	c6 74       	brge	800053f0 <_vfprintf_r+0xec4>
80005324:	fa cc f9 44 	sub	r12,sp,-1724
80005328:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000532c:	c8 08       	rjmp	8000542c <_vfprintf_r+0xf00>
8000532e:	ee ca ff ff 	sub	r10,r7,-1
80005332:	10 37       	cp.w	r7,r8
80005334:	c7 f4       	brge	80005432 <_vfprintf_r+0xf06>
80005336:	fa cb f9 44 	sub	r11,sp,-1724
8000533a:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000533e:	c7 68       	rjmp	8000542a <_vfprintf_r+0xefe>
80005340:	ed b5 00 06 	bld	r5,0x6
80005344:	c4 a1       	brne	800053d8 <_vfprintf_r+0xeac>
80005346:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000534a:	40 3c       	lddsp	r12,sp[0xc]
8000534c:	58 0c       	cp.w	r12,0
8000534e:	c1 d0       	breq	80005388 <_vfprintf_r+0xe5c>
80005350:	10 36       	cp.w	r6,r8
80005352:	c0 64       	brge	8000535e <_vfprintf_r+0xe32>
80005354:	fa cb f9 44 	sub	r11,sp,-1724
80005358:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000535c:	c1 f8       	rjmp	8000539a <_vfprintf_r+0xe6e>
8000535e:	fa c8 f9 50 	sub	r8,sp,-1712
80005362:	1a d8       	st.w	--sp,r8
80005364:	fa c8 fa b8 	sub	r8,sp,-1352
80005368:	1a d8       	st.w	--sp,r8
8000536a:	fa c8 fb b4 	sub	r8,sp,-1100
8000536e:	1a d8       	st.w	--sp,r8
80005370:	fa c8 f9 40 	sub	r8,sp,-1728
80005374:	fa c9 ff b4 	sub	r9,sp,-76
80005378:	04 9a       	mov	r10,r2
8000537a:	0c 9b       	mov	r11,r6
8000537c:	08 9c       	mov	r12,r4
8000537e:	fe b0 f7 3f 	rcall	800041fc <get_arg>
80005382:	2f dd       	sub	sp,-12
80005384:	98 18       	ld.sh	r8,r12[0x2]
80005386:	c2 68       	rjmp	800053d2 <_vfprintf_r+0xea6>
80005388:	ee ca ff ff 	sub	r10,r7,-1
8000538c:	10 37       	cp.w	r7,r8
8000538e:	c0 94       	brge	800053a0 <_vfprintf_r+0xe74>
80005390:	fa c9 f9 44 	sub	r9,sp,-1724
80005394:	14 97       	mov	r7,r10
80005396:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000539a:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
8000539e:	c1 a8       	rjmp	800053d2 <_vfprintf_r+0xea6>
800053a0:	41 09       	lddsp	r9,sp[0x40]
800053a2:	59 f8       	cp.w	r8,31
800053a4:	e0 89 00 13 	brgt	800053ca <_vfprintf_r+0xe9e>
800053a8:	f2 cb ff fc 	sub	r11,r9,-4
800053ac:	51 0b       	stdsp	sp[0x40],r11
800053ae:	72 09       	ld.w	r9,r9[0x0]
800053b0:	fa c6 f9 44 	sub	r6,sp,-1724
800053b4:	ec 08 00 3b 	add	r11,r6,r8<<0x3
800053b8:	2f f8       	sub	r8,-1
800053ba:	f7 49 fd 88 	st.w	r11[-632],r9
800053be:	fb 48 06 b4 	st.w	sp[1716],r8
800053c2:	14 97       	mov	r7,r10
800053c4:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
800053c8:	c0 58       	rjmp	800053d2 <_vfprintf_r+0xea6>
800053ca:	92 18       	ld.sh	r8,r9[0x2]
800053cc:	14 97       	mov	r7,r10
800053ce:	2f c9       	sub	r9,-4
800053d0:	51 09       	stdsp	sp[0x40],r9
800053d2:	5c 78       	castu.h	r8
800053d4:	50 18       	stdsp	sp[0x4],r8
800053d6:	c4 68       	rjmp	80005462 <_vfprintf_r+0xf36>
800053d8:	fa f8 06 b4 	ld.w	r8,sp[1716]
800053dc:	40 3c       	lddsp	r12,sp[0xc]
800053de:	58 0c       	cp.w	r12,0
800053e0:	c1 d0       	breq	8000541a <_vfprintf_r+0xeee>
800053e2:	10 36       	cp.w	r6,r8
800053e4:	c0 64       	brge	800053f0 <_vfprintf_r+0xec4>
800053e6:	fa cb f9 44 	sub	r11,sp,-1724
800053ea:	f6 06 00 36 	add	r6,r11,r6<<0x3
800053ee:	c1 f8       	rjmp	8000542c <_vfprintf_r+0xf00>
800053f0:	fa c8 f9 50 	sub	r8,sp,-1712
800053f4:	1a d8       	st.w	--sp,r8
800053f6:	fa c8 fa b8 	sub	r8,sp,-1352
800053fa:	0c 9b       	mov	r11,r6
800053fc:	1a d8       	st.w	--sp,r8
800053fe:	fa c8 fb b4 	sub	r8,sp,-1100
80005402:	04 9a       	mov	r10,r2
80005404:	1a d8       	st.w	--sp,r8
80005406:	08 9c       	mov	r12,r4
80005408:	fa c8 f9 40 	sub	r8,sp,-1728
8000540c:	fa c9 ff b4 	sub	r9,sp,-76
80005410:	fe b0 f6 f6 	rcall	800041fc <get_arg>
80005414:	2f dd       	sub	sp,-12
80005416:	78 0b       	ld.w	r11,r12[0x0]
80005418:	c2 48       	rjmp	80005460 <_vfprintf_r+0xf34>
8000541a:	ee ca ff ff 	sub	r10,r7,-1
8000541e:	10 37       	cp.w	r7,r8
80005420:	c0 94       	brge	80005432 <_vfprintf_r+0xf06>
80005422:	fa c9 f9 44 	sub	r9,sp,-1724
80005426:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000542a:	14 97       	mov	r7,r10
8000542c:	ec fb fd 88 	ld.w	r11,r6[-632]
80005430:	c1 88       	rjmp	80005460 <_vfprintf_r+0xf34>
80005432:	41 09       	lddsp	r9,sp[0x40]
80005434:	59 f8       	cp.w	r8,31
80005436:	e0 89 00 11 	brgt	80005458 <_vfprintf_r+0xf2c>
8000543a:	f2 cb ff fc 	sub	r11,r9,-4
8000543e:	51 0b       	stdsp	sp[0x40],r11
80005440:	fa c6 f9 44 	sub	r6,sp,-1724
80005444:	72 0b       	ld.w	r11,r9[0x0]
80005446:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000544a:	f3 4b fd 88 	st.w	r9[-632],r11
8000544e:	2f f8       	sub	r8,-1
80005450:	14 97       	mov	r7,r10
80005452:	fb 48 06 b4 	st.w	sp[1716],r8
80005456:	c0 58       	rjmp	80005460 <_vfprintf_r+0xf34>
80005458:	72 0b       	ld.w	r11,r9[0x0]
8000545a:	14 97       	mov	r7,r10
8000545c:	2f c9       	sub	r9,-4
8000545e:	51 09       	stdsp	sp[0x40],r9
80005460:	50 1b       	stdsp	sp[0x4],r11
80005462:	30 0e       	mov	lr,0
80005464:	50 0e       	stdsp	sp[0x0],lr
80005466:	1c 98       	mov	r8,lr
80005468:	e0 8f 02 fe 	bral	80005a64 <_vfprintf_r+0x1538>
8000546c:	50 a7       	stdsp	sp[0x28],r7
8000546e:	50 80       	stdsp	sp[0x20],r0
80005470:	0c 97       	mov	r7,r6
80005472:	04 94       	mov	r4,r2
80005474:	06 96       	mov	r6,r3
80005476:	02 92       	mov	r2,r1
80005478:	40 93       	lddsp	r3,sp[0x24]
8000547a:	40 41       	lddsp	r1,sp[0x10]
8000547c:	0e 99       	mov	r9,r7
8000547e:	fa f8 06 b4 	ld.w	r8,sp[1716]
80005482:	40 3c       	lddsp	r12,sp[0xc]
80005484:	58 0c       	cp.w	r12,0
80005486:	c1 d0       	breq	800054c0 <_vfprintf_r+0xf94>
80005488:	10 36       	cp.w	r6,r8
8000548a:	c0 64       	brge	80005496 <_vfprintf_r+0xf6a>
8000548c:	fa cb f9 44 	sub	r11,sp,-1724
80005490:	f6 06 00 36 	add	r6,r11,r6<<0x3
80005494:	c1 d8       	rjmp	800054ce <_vfprintf_r+0xfa2>
80005496:	fa c8 f9 50 	sub	r8,sp,-1712
8000549a:	1a d8       	st.w	--sp,r8
8000549c:	fa c8 fa b8 	sub	r8,sp,-1352
800054a0:	1a d8       	st.w	--sp,r8
800054a2:	fa c8 fb b4 	sub	r8,sp,-1100
800054a6:	1a d8       	st.w	--sp,r8
800054a8:	fa c9 ff b4 	sub	r9,sp,-76
800054ac:	fa c8 f9 40 	sub	r8,sp,-1728
800054b0:	04 9a       	mov	r10,r2
800054b2:	0c 9b       	mov	r11,r6
800054b4:	08 9c       	mov	r12,r4
800054b6:	fe b0 f6 a3 	rcall	800041fc <get_arg>
800054ba:	2f dd       	sub	sp,-12
800054bc:	78 09       	ld.w	r9,r12[0x0]
800054be:	c2 18       	rjmp	80005500 <_vfprintf_r+0xfd4>
800054c0:	2f f7       	sub	r7,-1
800054c2:	10 39       	cp.w	r9,r8
800054c4:	c0 84       	brge	800054d4 <_vfprintf_r+0xfa8>
800054c6:	fa ca f9 44 	sub	r10,sp,-1724
800054ca:	f4 06 00 36 	add	r6,r10,r6<<0x3
800054ce:	ec f9 fd 88 	ld.w	r9,r6[-632]
800054d2:	c1 78       	rjmp	80005500 <_vfprintf_r+0xfd4>
800054d4:	41 09       	lddsp	r9,sp[0x40]
800054d6:	59 f8       	cp.w	r8,31
800054d8:	e0 89 00 10 	brgt	800054f8 <_vfprintf_r+0xfcc>
800054dc:	f2 ca ff fc 	sub	r10,r9,-4
800054e0:	51 0a       	stdsp	sp[0x40],r10
800054e2:	fa c6 f9 44 	sub	r6,sp,-1724
800054e6:	72 09       	ld.w	r9,r9[0x0]
800054e8:	ec 08 00 3a 	add	r10,r6,r8<<0x3
800054ec:	f5 49 fd 88 	st.w	r10[-632],r9
800054f0:	2f f8       	sub	r8,-1
800054f2:	fb 48 06 b4 	st.w	sp[1716],r8
800054f6:	c0 58       	rjmp	80005500 <_vfprintf_r+0xfd4>
800054f8:	f2 c8 ff fc 	sub	r8,r9,-4
800054fc:	51 08       	stdsp	sp[0x40],r8
800054fe:	72 09       	ld.w	r9,r9[0x0]
80005500:	33 08       	mov	r8,48
80005502:	fb 68 06 b8 	st.b	sp[1720],r8
80005506:	37 88       	mov	r8,120
80005508:	30 0e       	mov	lr,0
8000550a:	fb 68 06 b9 	st.b	sp[1721],r8
8000550e:	fe cc b6 96 	sub	r12,pc,-18794
80005512:	50 19       	stdsp	sp[0x4],r9
80005514:	a1 b5       	sbr	r5,0x1
80005516:	50 0e       	stdsp	sp[0x0],lr
80005518:	50 dc       	stdsp	sp[0x34],r12
8000551a:	30 28       	mov	r8,2
8000551c:	37 80       	mov	r0,120
8000551e:	e0 8f 02 a3 	bral	80005a64 <_vfprintf_r+0x1538>
80005522:	50 a7       	stdsp	sp[0x28],r7
80005524:	50 80       	stdsp	sp[0x20],r0
80005526:	10 90       	mov	r0,r8
80005528:	30 08       	mov	r8,0
8000552a:	fb 68 06 bb 	st.b	sp[1723],r8
8000552e:	0c 97       	mov	r7,r6
80005530:	04 94       	mov	r4,r2
80005532:	06 96       	mov	r6,r3
80005534:	02 92       	mov	r2,r1
80005536:	40 93       	lddsp	r3,sp[0x24]
80005538:	40 41       	lddsp	r1,sp[0x10]
8000553a:	0e 99       	mov	r9,r7
8000553c:	fa f8 06 b4 	ld.w	r8,sp[1716]
80005540:	40 3b       	lddsp	r11,sp[0xc]
80005542:	58 0b       	cp.w	r11,0
80005544:	c1 d0       	breq	8000557e <_vfprintf_r+0x1052>
80005546:	10 36       	cp.w	r6,r8
80005548:	c0 64       	brge	80005554 <_vfprintf_r+0x1028>
8000554a:	fa ca f9 44 	sub	r10,sp,-1724
8000554e:	f4 06 00 36 	add	r6,r10,r6<<0x3
80005552:	c1 d8       	rjmp	8000558c <_vfprintf_r+0x1060>
80005554:	fa c8 f9 50 	sub	r8,sp,-1712
80005558:	1a d8       	st.w	--sp,r8
8000555a:	fa c8 fa b8 	sub	r8,sp,-1352
8000555e:	1a d8       	st.w	--sp,r8
80005560:	fa c8 fb b4 	sub	r8,sp,-1100
80005564:	0c 9b       	mov	r11,r6
80005566:	1a d8       	st.w	--sp,r8
80005568:	04 9a       	mov	r10,r2
8000556a:	fa c8 f9 40 	sub	r8,sp,-1728
8000556e:	fa c9 ff b4 	sub	r9,sp,-76
80005572:	08 9c       	mov	r12,r4
80005574:	fe b0 f6 44 	rcall	800041fc <get_arg>
80005578:	2f dd       	sub	sp,-12
8000557a:	78 06       	ld.w	r6,r12[0x0]
8000557c:	c2 08       	rjmp	800055bc <_vfprintf_r+0x1090>
8000557e:	2f f7       	sub	r7,-1
80005580:	10 39       	cp.w	r9,r8
80005582:	c0 84       	brge	80005592 <_vfprintf_r+0x1066>
80005584:	fa c9 f9 44 	sub	r9,sp,-1724
80005588:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000558c:	ec f6 fd 88 	ld.w	r6,r6[-632]
80005590:	c1 68       	rjmp	800055bc <_vfprintf_r+0x1090>
80005592:	41 09       	lddsp	r9,sp[0x40]
80005594:	59 f8       	cp.w	r8,31
80005596:	e0 89 00 10 	brgt	800055b6 <_vfprintf_r+0x108a>
8000559a:	f2 ca ff fc 	sub	r10,r9,-4
8000559e:	51 0a       	stdsp	sp[0x40],r10
800055a0:	72 06       	ld.w	r6,r9[0x0]
800055a2:	fa ce f9 44 	sub	lr,sp,-1724
800055a6:	fc 08 00 39 	add	r9,lr,r8<<0x3
800055aa:	f3 46 fd 88 	st.w	r9[-632],r6
800055ae:	2f f8       	sub	r8,-1
800055b0:	fb 48 06 b4 	st.w	sp[1716],r8
800055b4:	c0 48       	rjmp	800055bc <_vfprintf_r+0x1090>
800055b6:	72 06       	ld.w	r6,r9[0x0]
800055b8:	2f c9       	sub	r9,-4
800055ba:	51 09       	stdsp	sp[0x40],r9
800055bc:	40 2c       	lddsp	r12,sp[0x8]
800055be:	58 0c       	cp.w	r12,0
800055c0:	c1 05       	brlt	800055e0 <_vfprintf_r+0x10b4>
800055c2:	18 9a       	mov	r10,r12
800055c4:	30 0b       	mov	r11,0
800055c6:	0c 9c       	mov	r12,r6
800055c8:	e0 a0 14 58 	rcall	80007e78 <memchr>
800055cc:	e0 80 02 df 	breq	80005b8a <_vfprintf_r+0x165e>
800055d0:	f8 06 01 02 	sub	r2,r12,r6
800055d4:	40 2b       	lddsp	r11,sp[0x8]
800055d6:	16 32       	cp.w	r2,r11
800055d8:	e0 89 02 d9 	brgt	80005b8a <_vfprintf_r+0x165e>
800055dc:	e0 8f 02 d4 	bral	80005b84 <_vfprintf_r+0x1658>
800055e0:	30 0a       	mov	r10,0
800055e2:	0c 9c       	mov	r12,r6
800055e4:	50 2a       	stdsp	sp[0x8],r10
800055e6:	e0 a0 19 33 	rcall	8000884c <strlen>
800055ea:	18 92       	mov	r2,r12
800055ec:	e0 8f 02 d2 	bral	80005b90 <_vfprintf_r+0x1664>
800055f0:	50 a7       	stdsp	sp[0x28],r7
800055f2:	50 80       	stdsp	sp[0x20],r0
800055f4:	0c 97       	mov	r7,r6
800055f6:	04 94       	mov	r4,r2
800055f8:	06 96       	mov	r6,r3
800055fa:	02 92       	mov	r2,r1
800055fc:	40 93       	lddsp	r3,sp[0x24]
800055fe:	10 90       	mov	r0,r8
80005600:	40 41       	lddsp	r1,sp[0x10]
80005602:	a5 a5       	sbr	r5,0x4
80005604:	c0 a8       	rjmp	80005618 <_vfprintf_r+0x10ec>
80005606:	50 a7       	stdsp	sp[0x28],r7
80005608:	50 80       	stdsp	sp[0x20],r0
8000560a:	0c 97       	mov	r7,r6
8000560c:	04 94       	mov	r4,r2
8000560e:	06 96       	mov	r6,r3
80005610:	02 92       	mov	r2,r1
80005612:	40 93       	lddsp	r3,sp[0x24]
80005614:	10 90       	mov	r0,r8
80005616:	40 41       	lddsp	r1,sp[0x10]
80005618:	ed b5 00 05 	bld	r5,0x5
8000561c:	c5 61       	brne	800056c8 <_vfprintf_r+0x119c>
8000561e:	fa f8 06 b4 	ld.w	r8,sp[1716]
80005622:	40 39       	lddsp	r9,sp[0xc]
80005624:	58 09       	cp.w	r9,0
80005626:	c2 10       	breq	80005668 <_vfprintf_r+0x113c>
80005628:	10 36       	cp.w	r6,r8
8000562a:	c0 74       	brge	80005638 <_vfprintf_r+0x110c>
8000562c:	fa c8 f9 44 	sub	r8,sp,-1724
80005630:	f0 06 00 36 	add	r6,r8,r6<<0x3
80005634:	c2 38       	rjmp	8000567a <_vfprintf_r+0x114e>
80005636:	d7 03       	nop
80005638:	fa c8 f9 50 	sub	r8,sp,-1712
8000563c:	1a d8       	st.w	--sp,r8
8000563e:	fa c8 fa b8 	sub	r8,sp,-1352
80005642:	1a d8       	st.w	--sp,r8
80005644:	fa c8 fb b4 	sub	r8,sp,-1100
80005648:	1a d8       	st.w	--sp,r8
8000564a:	fa c8 f9 40 	sub	r8,sp,-1728
8000564e:	fa c9 ff b4 	sub	r9,sp,-76
80005652:	04 9a       	mov	r10,r2
80005654:	0c 9b       	mov	r11,r6
80005656:	08 9c       	mov	r12,r4
80005658:	fe b0 f5 d2 	rcall	800041fc <get_arg>
8000565c:	2f dd       	sub	sp,-12
8000565e:	f8 e8 00 00 	ld.d	r8,r12[0]
80005662:	fa e9 00 00 	st.d	sp[0],r8
80005666:	c2 e8       	rjmp	800056c2 <_vfprintf_r+0x1196>
80005668:	ee ca ff ff 	sub	r10,r7,-1
8000566c:	10 37       	cp.w	r7,r8
8000566e:	c0 b4       	brge	80005684 <_vfprintf_r+0x1158>
80005670:	fa c8 f9 44 	sub	r8,sp,-1724
80005674:	14 97       	mov	r7,r10
80005676:	f0 06 00 36 	add	r6,r8,r6<<0x3
8000567a:	ec ea fd 88 	ld.d	r10,r6[-632]
8000567e:	fa eb 00 00 	st.d	sp[0],r10
80005682:	c2 08       	rjmp	800056c2 <_vfprintf_r+0x1196>
80005684:	41 09       	lddsp	r9,sp[0x40]
80005686:	59 f8       	cp.w	r8,31
80005688:	e0 89 00 16 	brgt	800056b4 <_vfprintf_r+0x1188>
8000568c:	f2 e6 00 00 	ld.d	r6,r9[0]
80005690:	f2 cb ff f8 	sub	r11,r9,-8
80005694:	fa e7 00 00 	st.d	sp[0],r6
80005698:	51 0b       	stdsp	sp[0x40],r11
8000569a:	fa c6 f9 44 	sub	r6,sp,-1724
8000569e:	ec 08 00 39 	add	r9,r6,r8<<0x3
800056a2:	fa e6 00 00 	ld.d	r6,sp[0]
800056a6:	f2 e7 fd 88 	st.d	r9[-632],r6
800056aa:	2f f8       	sub	r8,-1
800056ac:	14 97       	mov	r7,r10
800056ae:	fb 48 06 b4 	st.w	sp[1716],r8
800056b2:	c0 88       	rjmp	800056c2 <_vfprintf_r+0x1196>
800056b4:	f2 e6 00 00 	ld.d	r6,r9[0]
800056b8:	2f 89       	sub	r9,-8
800056ba:	fa e7 00 00 	st.d	sp[0],r6
800056be:	51 09       	stdsp	sp[0x40],r9
800056c0:	14 97       	mov	r7,r10
800056c2:	30 18       	mov	r8,1
800056c4:	e0 8f 01 d0 	bral	80005a64 <_vfprintf_r+0x1538>
800056c8:	ed b5 00 04 	bld	r5,0x4
800056cc:	c1 61       	brne	800056f8 <_vfprintf_r+0x11cc>
800056ce:	fa f8 06 b4 	ld.w	r8,sp[1716]
800056d2:	40 3e       	lddsp	lr,sp[0xc]
800056d4:	58 0e       	cp.w	lr,0
800056d6:	c0 80       	breq	800056e6 <_vfprintf_r+0x11ba>
800056d8:	10 36       	cp.w	r6,r8
800056da:	c6 74       	brge	800057a8 <_vfprintf_r+0x127c>
800056dc:	fa cc f9 44 	sub	r12,sp,-1724
800056e0:	f8 06 00 36 	add	r6,r12,r6<<0x3
800056e4:	c8 08       	rjmp	800057e4 <_vfprintf_r+0x12b8>
800056e6:	ee ca ff ff 	sub	r10,r7,-1
800056ea:	10 37       	cp.w	r7,r8
800056ec:	c7 f4       	brge	800057ea <_vfprintf_r+0x12be>
800056ee:	fa cb f9 44 	sub	r11,sp,-1724
800056f2:	f6 06 00 36 	add	r6,r11,r6<<0x3
800056f6:	c7 68       	rjmp	800057e2 <_vfprintf_r+0x12b6>
800056f8:	ed b5 00 06 	bld	r5,0x6
800056fc:	c4 a1       	brne	80005790 <_vfprintf_r+0x1264>
800056fe:	fa f8 06 b4 	ld.w	r8,sp[1716]
80005702:	40 3c       	lddsp	r12,sp[0xc]
80005704:	58 0c       	cp.w	r12,0
80005706:	c1 d0       	breq	80005740 <_vfprintf_r+0x1214>
80005708:	10 36       	cp.w	r6,r8
8000570a:	c0 64       	brge	80005716 <_vfprintf_r+0x11ea>
8000570c:	fa cb f9 44 	sub	r11,sp,-1724
80005710:	f6 06 00 36 	add	r6,r11,r6<<0x3
80005714:	c1 f8       	rjmp	80005752 <_vfprintf_r+0x1226>
80005716:	fa c8 f9 50 	sub	r8,sp,-1712
8000571a:	1a d8       	st.w	--sp,r8
8000571c:	fa c8 fa b8 	sub	r8,sp,-1352
80005720:	1a d8       	st.w	--sp,r8
80005722:	fa c8 fb b4 	sub	r8,sp,-1100
80005726:	1a d8       	st.w	--sp,r8
80005728:	fa c8 f9 40 	sub	r8,sp,-1728
8000572c:	fa c9 ff b4 	sub	r9,sp,-76
80005730:	04 9a       	mov	r10,r2
80005732:	0c 9b       	mov	r11,r6
80005734:	08 9c       	mov	r12,r4
80005736:	fe b0 f5 63 	rcall	800041fc <get_arg>
8000573a:	2f dd       	sub	sp,-12
8000573c:	98 18       	ld.sh	r8,r12[0x2]
8000573e:	c2 68       	rjmp	8000578a <_vfprintf_r+0x125e>
80005740:	ee ca ff ff 	sub	r10,r7,-1
80005744:	10 37       	cp.w	r7,r8
80005746:	c0 94       	brge	80005758 <_vfprintf_r+0x122c>
80005748:	fa c9 f9 44 	sub	r9,sp,-1724
8000574c:	14 97       	mov	r7,r10
8000574e:	f2 06 00 36 	add	r6,r9,r6<<0x3
80005752:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80005756:	c1 a8       	rjmp	8000578a <_vfprintf_r+0x125e>
80005758:	41 09       	lddsp	r9,sp[0x40]
8000575a:	59 f8       	cp.w	r8,31
8000575c:	e0 89 00 13 	brgt	80005782 <_vfprintf_r+0x1256>
80005760:	f2 cb ff fc 	sub	r11,r9,-4
80005764:	51 0b       	stdsp	sp[0x40],r11
80005766:	72 09       	ld.w	r9,r9[0x0]
80005768:	fa c6 f9 44 	sub	r6,sp,-1724
8000576c:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80005770:	2f f8       	sub	r8,-1
80005772:	f7 49 fd 88 	st.w	r11[-632],r9
80005776:	fb 48 06 b4 	st.w	sp[1716],r8
8000577a:	14 97       	mov	r7,r10
8000577c:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80005780:	c0 58       	rjmp	8000578a <_vfprintf_r+0x125e>
80005782:	92 18       	ld.sh	r8,r9[0x2]
80005784:	14 97       	mov	r7,r10
80005786:	2f c9       	sub	r9,-4
80005788:	51 09       	stdsp	sp[0x40],r9
8000578a:	5c 78       	castu.h	r8
8000578c:	50 18       	stdsp	sp[0x4],r8
8000578e:	c4 68       	rjmp	8000581a <_vfprintf_r+0x12ee>
80005790:	fa f8 06 b4 	ld.w	r8,sp[1716]
80005794:	40 3c       	lddsp	r12,sp[0xc]
80005796:	58 0c       	cp.w	r12,0
80005798:	c1 d0       	breq	800057d2 <_vfprintf_r+0x12a6>
8000579a:	10 36       	cp.w	r6,r8
8000579c:	c0 64       	brge	800057a8 <_vfprintf_r+0x127c>
8000579e:	fa cb f9 44 	sub	r11,sp,-1724
800057a2:	f6 06 00 36 	add	r6,r11,r6<<0x3
800057a6:	c1 f8       	rjmp	800057e4 <_vfprintf_r+0x12b8>
800057a8:	fa c8 f9 50 	sub	r8,sp,-1712
800057ac:	1a d8       	st.w	--sp,r8
800057ae:	fa c8 fa b8 	sub	r8,sp,-1352
800057b2:	0c 9b       	mov	r11,r6
800057b4:	1a d8       	st.w	--sp,r8
800057b6:	fa c8 fb b4 	sub	r8,sp,-1100
800057ba:	04 9a       	mov	r10,r2
800057bc:	1a d8       	st.w	--sp,r8
800057be:	08 9c       	mov	r12,r4
800057c0:	fa c8 f9 40 	sub	r8,sp,-1728
800057c4:	fa c9 ff b4 	sub	r9,sp,-76
800057c8:	fe b0 f5 1a 	rcall	800041fc <get_arg>
800057cc:	2f dd       	sub	sp,-12
800057ce:	78 0b       	ld.w	r11,r12[0x0]
800057d0:	c2 48       	rjmp	80005818 <_vfprintf_r+0x12ec>
800057d2:	ee ca ff ff 	sub	r10,r7,-1
800057d6:	10 37       	cp.w	r7,r8
800057d8:	c0 94       	brge	800057ea <_vfprintf_r+0x12be>
800057da:	fa c9 f9 44 	sub	r9,sp,-1724
800057de:	f2 06 00 36 	add	r6,r9,r6<<0x3
800057e2:	14 97       	mov	r7,r10
800057e4:	ec fb fd 88 	ld.w	r11,r6[-632]
800057e8:	c1 88       	rjmp	80005818 <_vfprintf_r+0x12ec>
800057ea:	41 09       	lddsp	r9,sp[0x40]
800057ec:	59 f8       	cp.w	r8,31
800057ee:	e0 89 00 11 	brgt	80005810 <_vfprintf_r+0x12e4>
800057f2:	f2 cb ff fc 	sub	r11,r9,-4
800057f6:	51 0b       	stdsp	sp[0x40],r11
800057f8:	fa c6 f9 44 	sub	r6,sp,-1724
800057fc:	72 0b       	ld.w	r11,r9[0x0]
800057fe:	ec 08 00 39 	add	r9,r6,r8<<0x3
80005802:	f3 4b fd 88 	st.w	r9[-632],r11
80005806:	2f f8       	sub	r8,-1
80005808:	14 97       	mov	r7,r10
8000580a:	fb 48 06 b4 	st.w	sp[1716],r8
8000580e:	c0 58       	rjmp	80005818 <_vfprintf_r+0x12ec>
80005810:	72 0b       	ld.w	r11,r9[0x0]
80005812:	14 97       	mov	r7,r10
80005814:	2f c9       	sub	r9,-4
80005816:	51 09       	stdsp	sp[0x40],r9
80005818:	50 1b       	stdsp	sp[0x4],r11
8000581a:	30 0e       	mov	lr,0
8000581c:	30 18       	mov	r8,1
8000581e:	50 0e       	stdsp	sp[0x0],lr
80005820:	c2 29       	rjmp	80005a64 <_vfprintf_r+0x1538>
80005822:	50 a7       	stdsp	sp[0x28],r7
80005824:	50 80       	stdsp	sp[0x20],r0
80005826:	0c 97       	mov	r7,r6
80005828:	04 94       	mov	r4,r2
8000582a:	06 96       	mov	r6,r3
8000582c:	02 92       	mov	r2,r1
8000582e:	fe cc b9 b6 	sub	r12,pc,-17994
80005832:	40 93       	lddsp	r3,sp[0x24]
80005834:	10 90       	mov	r0,r8
80005836:	40 41       	lddsp	r1,sp[0x10]
80005838:	50 dc       	stdsp	sp[0x34],r12
8000583a:	ed b5 00 05 	bld	r5,0x5
8000583e:	c5 51       	brne	800058e8 <_vfprintf_r+0x13bc>
80005840:	fa f8 06 b4 	ld.w	r8,sp[1716]
80005844:	40 3b       	lddsp	r11,sp[0xc]
80005846:	58 0b       	cp.w	r11,0
80005848:	c2 20       	breq	8000588c <_vfprintf_r+0x1360>
8000584a:	10 36       	cp.w	r6,r8
8000584c:	c0 a4       	brge	80005860 <_vfprintf_r+0x1334>
8000584e:	fa ca f9 44 	sub	r10,sp,-1724
80005852:	f4 06 00 36 	add	r6,r10,r6<<0x3
80005856:	ec e8 fd 88 	ld.d	r8,r6[-632]
8000585a:	fa e9 00 00 	st.d	sp[0],r8
8000585e:	cf 28       	rjmp	80005a42 <_vfprintf_r+0x1516>
80005860:	fa c8 f9 50 	sub	r8,sp,-1712
80005864:	1a d8       	st.w	--sp,r8
80005866:	fa c8 fa b8 	sub	r8,sp,-1352
8000586a:	04 9a       	mov	r10,r2
8000586c:	1a d8       	st.w	--sp,r8
8000586e:	0c 9b       	mov	r11,r6
80005870:	fa c8 fb b4 	sub	r8,sp,-1100
80005874:	08 9c       	mov	r12,r4
80005876:	1a d8       	st.w	--sp,r8
80005878:	fa c8 f9 40 	sub	r8,sp,-1728
8000587c:	fa c9 ff b4 	sub	r9,sp,-76
80005880:	fe b0 f4 be 	rcall	800041fc <get_arg>
80005884:	2f dd       	sub	sp,-12
80005886:	f8 ea 00 00 	ld.d	r10,r12[0]
8000588a:	c0 c8       	rjmp	800058a2 <_vfprintf_r+0x1376>
8000588c:	ee ca ff ff 	sub	r10,r7,-1
80005890:	10 37       	cp.w	r7,r8
80005892:	c0 b4       	brge	800058a8 <_vfprintf_r+0x137c>
80005894:	fa c9 f9 44 	sub	r9,sp,-1724
80005898:	14 97       	mov	r7,r10
8000589a:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000589e:	ec ea fd 88 	ld.d	r10,r6[-632]
800058a2:	fa eb 00 00 	st.d	sp[0],r10
800058a6:	cc e8       	rjmp	80005a42 <_vfprintf_r+0x1516>
800058a8:	41 09       	lddsp	r9,sp[0x40]
800058aa:	59 f8       	cp.w	r8,31
800058ac:	e0 89 00 16 	brgt	800058d8 <_vfprintf_r+0x13ac>
800058b0:	f2 e6 00 00 	ld.d	r6,r9[0]
800058b4:	f2 cb ff f8 	sub	r11,r9,-8
800058b8:	fa e7 00 00 	st.d	sp[0],r6
800058bc:	51 0b       	stdsp	sp[0x40],r11
800058be:	fa c6 f9 44 	sub	r6,sp,-1724
800058c2:	ec 08 00 39 	add	r9,r6,r8<<0x3
800058c6:	fa e6 00 00 	ld.d	r6,sp[0]
800058ca:	f2 e7 fd 88 	st.d	r9[-632],r6
800058ce:	2f f8       	sub	r8,-1
800058d0:	14 97       	mov	r7,r10
800058d2:	fb 48 06 b4 	st.w	sp[1716],r8
800058d6:	cb 68       	rjmp	80005a42 <_vfprintf_r+0x1516>
800058d8:	f2 e6 00 00 	ld.d	r6,r9[0]
800058dc:	2f 89       	sub	r9,-8
800058de:	fa e7 00 00 	st.d	sp[0],r6
800058e2:	51 09       	stdsp	sp[0x40],r9
800058e4:	14 97       	mov	r7,r10
800058e6:	ca e8       	rjmp	80005a42 <_vfprintf_r+0x1516>
800058e8:	ed b5 00 04 	bld	r5,0x4
800058ec:	c1 71       	brne	8000591a <_vfprintf_r+0x13ee>
800058ee:	fa f8 06 b4 	ld.w	r8,sp[1716]
800058f2:	40 3e       	lddsp	lr,sp[0xc]
800058f4:	58 0e       	cp.w	lr,0
800058f6:	c0 80       	breq	80005906 <_vfprintf_r+0x13da>
800058f8:	10 36       	cp.w	r6,r8
800058fa:	c6 94       	brge	800059cc <_vfprintf_r+0x14a0>
800058fc:	fa cc f9 44 	sub	r12,sp,-1724
80005900:	f8 06 00 36 	add	r6,r12,r6<<0x3
80005904:	c8 28       	rjmp	80005a08 <_vfprintf_r+0x14dc>
80005906:	ee ca ff ff 	sub	r10,r7,-1
8000590a:	10 37       	cp.w	r7,r8
8000590c:	e0 84 00 81 	brge	80005a0e <_vfprintf_r+0x14e2>
80005910:	fa cb f9 44 	sub	r11,sp,-1724
80005914:	f6 06 00 36 	add	r6,r11,r6<<0x3
80005918:	c7 78       	rjmp	80005a06 <_vfprintf_r+0x14da>
8000591a:	ed b5 00 06 	bld	r5,0x6
8000591e:	c4 b1       	brne	800059b4 <_vfprintf_r+0x1488>
80005920:	fa f8 06 b4 	ld.w	r8,sp[1716]
80005924:	40 3c       	lddsp	r12,sp[0xc]
80005926:	58 0c       	cp.w	r12,0
80005928:	c1 d0       	breq	80005962 <_vfprintf_r+0x1436>
8000592a:	10 36       	cp.w	r6,r8
8000592c:	c0 64       	brge	80005938 <_vfprintf_r+0x140c>
8000592e:	fa cb f9 44 	sub	r11,sp,-1724
80005932:	f6 06 00 36 	add	r6,r11,r6<<0x3
80005936:	c1 f8       	rjmp	80005974 <_vfprintf_r+0x1448>
80005938:	fa c8 f9 50 	sub	r8,sp,-1712
8000593c:	1a d8       	st.w	--sp,r8
8000593e:	fa c8 fa b8 	sub	r8,sp,-1352
80005942:	1a d8       	st.w	--sp,r8
80005944:	fa c8 fb b4 	sub	r8,sp,-1100
80005948:	1a d8       	st.w	--sp,r8
8000594a:	fa c8 f9 40 	sub	r8,sp,-1728
8000594e:	fa c9 ff b4 	sub	r9,sp,-76
80005952:	04 9a       	mov	r10,r2
80005954:	0c 9b       	mov	r11,r6
80005956:	08 9c       	mov	r12,r4
80005958:	fe b0 f4 52 	rcall	800041fc <get_arg>
8000595c:	2f dd       	sub	sp,-12
8000595e:	98 18       	ld.sh	r8,r12[0x2]
80005960:	c2 78       	rjmp	800059ae <_vfprintf_r+0x1482>
80005962:	ee ca ff ff 	sub	r10,r7,-1
80005966:	10 37       	cp.w	r7,r8
80005968:	c0 a4       	brge	8000597c <_vfprintf_r+0x1450>
8000596a:	fa c9 f9 44 	sub	r9,sp,-1724
8000596e:	14 97       	mov	r7,r10
80005970:	f2 06 00 36 	add	r6,r9,r6<<0x3
80005974:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80005978:	c1 b8       	rjmp	800059ae <_vfprintf_r+0x1482>
8000597a:	d7 03       	nop
8000597c:	41 09       	lddsp	r9,sp[0x40]
8000597e:	59 f8       	cp.w	r8,31
80005980:	e0 89 00 13 	brgt	800059a6 <_vfprintf_r+0x147a>
80005984:	f2 cb ff fc 	sub	r11,r9,-4
80005988:	51 0b       	stdsp	sp[0x40],r11
8000598a:	72 09       	ld.w	r9,r9[0x0]
8000598c:	fa c6 f9 44 	sub	r6,sp,-1724
80005990:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80005994:	2f f8       	sub	r8,-1
80005996:	f7 49 fd 88 	st.w	r11[-632],r9
8000599a:	fb 48 06 b4 	st.w	sp[1716],r8
8000599e:	14 97       	mov	r7,r10
800059a0:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
800059a4:	c0 58       	rjmp	800059ae <_vfprintf_r+0x1482>
800059a6:	92 18       	ld.sh	r8,r9[0x2]
800059a8:	14 97       	mov	r7,r10
800059aa:	2f c9       	sub	r9,-4
800059ac:	51 09       	stdsp	sp[0x40],r9
800059ae:	5c 78       	castu.h	r8
800059b0:	50 18       	stdsp	sp[0x4],r8
800059b2:	c4 68       	rjmp	80005a3e <_vfprintf_r+0x1512>
800059b4:	fa f8 06 b4 	ld.w	r8,sp[1716]
800059b8:	40 3c       	lddsp	r12,sp[0xc]
800059ba:	58 0c       	cp.w	r12,0
800059bc:	c1 d0       	breq	800059f6 <_vfprintf_r+0x14ca>
800059be:	10 36       	cp.w	r6,r8
800059c0:	c0 64       	brge	800059cc <_vfprintf_r+0x14a0>
800059c2:	fa cb f9 44 	sub	r11,sp,-1724
800059c6:	f6 06 00 36 	add	r6,r11,r6<<0x3
800059ca:	c1 f8       	rjmp	80005a08 <_vfprintf_r+0x14dc>
800059cc:	fa c8 f9 50 	sub	r8,sp,-1712
800059d0:	1a d8       	st.w	--sp,r8
800059d2:	fa c8 fa b8 	sub	r8,sp,-1352
800059d6:	0c 9b       	mov	r11,r6
800059d8:	1a d8       	st.w	--sp,r8
800059da:	fa c8 fb b4 	sub	r8,sp,-1100
800059de:	04 9a       	mov	r10,r2
800059e0:	1a d8       	st.w	--sp,r8
800059e2:	08 9c       	mov	r12,r4
800059e4:	fa c8 f9 40 	sub	r8,sp,-1728
800059e8:	fa c9 ff b4 	sub	r9,sp,-76
800059ec:	fe b0 f4 08 	rcall	800041fc <get_arg>
800059f0:	2f dd       	sub	sp,-12
800059f2:	78 0b       	ld.w	r11,r12[0x0]
800059f4:	c2 48       	rjmp	80005a3c <_vfprintf_r+0x1510>
800059f6:	ee ca ff ff 	sub	r10,r7,-1
800059fa:	10 37       	cp.w	r7,r8
800059fc:	c0 94       	brge	80005a0e <_vfprintf_r+0x14e2>
800059fe:	fa c9 f9 44 	sub	r9,sp,-1724
80005a02:	f2 06 00 36 	add	r6,r9,r6<<0x3
80005a06:	14 97       	mov	r7,r10
80005a08:	ec fb fd 88 	ld.w	r11,r6[-632]
80005a0c:	c1 88       	rjmp	80005a3c <_vfprintf_r+0x1510>
80005a0e:	41 09       	lddsp	r9,sp[0x40]
80005a10:	59 f8       	cp.w	r8,31
80005a12:	e0 89 00 11 	brgt	80005a34 <_vfprintf_r+0x1508>
80005a16:	f2 cb ff fc 	sub	r11,r9,-4
80005a1a:	51 0b       	stdsp	sp[0x40],r11
80005a1c:	fa c6 f9 44 	sub	r6,sp,-1724
80005a20:	72 0b       	ld.w	r11,r9[0x0]
80005a22:	ec 08 00 39 	add	r9,r6,r8<<0x3
80005a26:	f3 4b fd 88 	st.w	r9[-632],r11
80005a2a:	2f f8       	sub	r8,-1
80005a2c:	14 97       	mov	r7,r10
80005a2e:	fb 48 06 b4 	st.w	sp[1716],r8
80005a32:	c0 58       	rjmp	80005a3c <_vfprintf_r+0x1510>
80005a34:	72 0b       	ld.w	r11,r9[0x0]
80005a36:	14 97       	mov	r7,r10
80005a38:	2f c9       	sub	r9,-4
80005a3a:	51 09       	stdsp	sp[0x40],r9
80005a3c:	50 1b       	stdsp	sp[0x4],r11
80005a3e:	30 0e       	mov	lr,0
80005a40:	50 0e       	stdsp	sp[0x0],lr
80005a42:	40 08       	lddsp	r8,sp[0x0]
80005a44:	40 1c       	lddsp	r12,sp[0x4]
80005a46:	18 48       	or	r8,r12
80005a48:	5f 19       	srne	r9
80005a4a:	0a 98       	mov	r8,r5
80005a4c:	eb e9 00 09 	and	r9,r5,r9
80005a50:	a1 b8       	sbr	r8,0x1
80005a52:	58 09       	cp.w	r9,0
80005a54:	c0 70       	breq	80005a62 <_vfprintf_r+0x1536>
80005a56:	10 95       	mov	r5,r8
80005a58:	fb 60 06 b9 	st.b	sp[1721],r0
80005a5c:	33 08       	mov	r8,48
80005a5e:	fb 68 06 b8 	st.b	sp[1720],r8
80005a62:	30 28       	mov	r8,2
80005a64:	30 09       	mov	r9,0
80005a66:	fb 69 06 bb 	st.b	sp[1723],r9
80005a6a:	0a 99       	mov	r9,r5
80005a6c:	a7 d9       	cbr	r9,0x7
80005a6e:	40 2b       	lddsp	r11,sp[0x8]
80005a70:	40 16       	lddsp	r6,sp[0x4]
80005a72:	58 0b       	cp.w	r11,0
80005a74:	5f 1a       	srne	r10
80005a76:	f2 05 17 40 	movge	r5,r9
80005a7a:	fa c2 f9 78 	sub	r2,sp,-1672
80005a7e:	40 09       	lddsp	r9,sp[0x0]
80005a80:	0c 49       	or	r9,r6
80005a82:	5f 19       	srne	r9
80005a84:	f5 e9 10 09 	or	r9,r10,r9
80005a88:	c5 c0       	breq	80005b40 <_vfprintf_r+0x1614>
80005a8a:	30 19       	mov	r9,1
80005a8c:	f2 08 18 00 	cp.b	r8,r9
80005a90:	c0 60       	breq	80005a9c <_vfprintf_r+0x1570>
80005a92:	30 29       	mov	r9,2
80005a94:	f2 08 18 00 	cp.b	r8,r9
80005a98:	c0 41       	brne	80005aa0 <_vfprintf_r+0x1574>
80005a9a:	c3 c8       	rjmp	80005b12 <_vfprintf_r+0x15e6>
80005a9c:	04 96       	mov	r6,r2
80005a9e:	c3 08       	rjmp	80005afe <_vfprintf_r+0x15d2>
80005aa0:	04 96       	mov	r6,r2
80005aa2:	fa e8 00 00 	ld.d	r8,sp[0]
80005aa6:	f5 d8 c0 03 	bfextu	r10,r8,0x0,0x3
80005aaa:	2d 0a       	sub	r10,-48
80005aac:	0c fa       	st.b	--r6,r10
80005aae:	f0 0b 16 03 	lsr	r11,r8,0x3
80005ab2:	f2 0c 16 03 	lsr	r12,r9,0x3
80005ab6:	f7 e9 11 db 	or	r11,r11,r9<<0x1d
80005aba:	18 99       	mov	r9,r12
80005abc:	16 98       	mov	r8,r11
80005abe:	58 08       	cp.w	r8,0
80005ac0:	5c 29       	cpc	r9
80005ac2:	cf 21       	brne	80005aa6 <_vfprintf_r+0x157a>
80005ac4:	fa e9 00 00 	st.d	sp[0],r8
80005ac8:	ed b5 00 00 	bld	r5,0x0
80005acc:	c4 51       	brne	80005b56 <_vfprintf_r+0x162a>
80005ace:	33 09       	mov	r9,48
80005ad0:	f2 0a 18 00 	cp.b	r10,r9
80005ad4:	c4 10       	breq	80005b56 <_vfprintf_r+0x162a>
80005ad6:	0c f9       	st.b	--r6,r9
80005ad8:	c3 f8       	rjmp	80005b56 <_vfprintf_r+0x162a>
80005ada:	fa ea 00 00 	ld.d	r10,sp[0]
80005ade:	30 a8       	mov	r8,10
80005ae0:	30 09       	mov	r9,0
80005ae2:	e0 a0 1c 9f 	rcall	80009420 <__avr32_umod64>
80005ae6:	30 a8       	mov	r8,10
80005ae8:	2d 0a       	sub	r10,-48
80005aea:	30 09       	mov	r9,0
80005aec:	ac 8a       	st.b	r6[0x0],r10
80005aee:	fa ea 00 00 	ld.d	r10,sp[0]
80005af2:	e0 a0 1b 65 	rcall	800091bc <__avr32_udiv64>
80005af6:	16 99       	mov	r9,r11
80005af8:	14 98       	mov	r8,r10
80005afa:	fa e9 00 00 	st.d	sp[0],r8
80005afe:	20 16       	sub	r6,1
80005b00:	fa ea 00 00 	ld.d	r10,sp[0]
80005b04:	58 9a       	cp.w	r10,9
80005b06:	5c 2b       	cpc	r11
80005b08:	fe 9b ff e9 	brhi	80005ada <_vfprintf_r+0x15ae>
80005b0c:	1b f8       	ld.ub	r8,sp[0x7]
80005b0e:	2d 08       	sub	r8,-48
80005b10:	c2 08       	rjmp	80005b50 <_vfprintf_r+0x1624>
80005b12:	04 96       	mov	r6,r2
80005b14:	fa e8 00 00 	ld.d	r8,sp[0]
80005b18:	f5 d8 c0 04 	bfextu	r10,r8,0x0,0x4
80005b1c:	40 de       	lddsp	lr,sp[0x34]
80005b1e:	fc 0a 07 0a 	ld.ub	r10,lr[r10]
80005b22:	0c fa       	st.b	--r6,r10
80005b24:	f2 0b 16 04 	lsr	r11,r9,0x4
80005b28:	f0 0a 16 04 	lsr	r10,r8,0x4
80005b2c:	f5 e9 11 ca 	or	r10,r10,r9<<0x1c
80005b30:	16 99       	mov	r9,r11
80005b32:	14 98       	mov	r8,r10
80005b34:	58 08       	cp.w	r8,0
80005b36:	5c 29       	cpc	r9
80005b38:	cf 01       	brne	80005b18 <_vfprintf_r+0x15ec>
80005b3a:	fa e9 00 00 	st.d	sp[0],r8
80005b3e:	c0 c8       	rjmp	80005b56 <_vfprintf_r+0x162a>
80005b40:	58 08       	cp.w	r8,0
80005b42:	c0 91       	brne	80005b54 <_vfprintf_r+0x1628>
80005b44:	ed b5 00 00 	bld	r5,0x0
80005b48:	c0 61       	brne	80005b54 <_vfprintf_r+0x1628>
80005b4a:	fa c6 f9 79 	sub	r6,sp,-1671
80005b4e:	33 08       	mov	r8,48
80005b50:	ac 88       	st.b	r6[0x0],r8
80005b52:	c0 28       	rjmp	80005b56 <_vfprintf_r+0x162a>
80005b54:	04 96       	mov	r6,r2
80005b56:	0c 12       	sub	r2,r6
80005b58:	c1 c8       	rjmp	80005b90 <_vfprintf_r+0x1664>
80005b5a:	50 a7       	stdsp	sp[0x28],r7
80005b5c:	50 80       	stdsp	sp[0x20],r0
80005b5e:	40 93       	lddsp	r3,sp[0x24]
80005b60:	0c 97       	mov	r7,r6
80005b62:	10 90       	mov	r0,r8
80005b64:	04 94       	mov	r4,r2
80005b66:	40 41       	lddsp	r1,sp[0x10]
80005b68:	58 08       	cp.w	r8,0
80005b6a:	e0 80 04 4f 	breq	80006408 <_vfprintf_r+0x1edc>
80005b6e:	fb 68 06 60 	st.b	sp[1632],r8
80005b72:	30 0c       	mov	r12,0
80005b74:	30 08       	mov	r8,0
80005b76:	30 12       	mov	r2,1
80005b78:	fb 68 06 bb 	st.b	sp[1723],r8
80005b7c:	50 2c       	stdsp	sp[0x8],r12
80005b7e:	fa c6 f9 a0 	sub	r6,sp,-1632
80005b82:	c0 78       	rjmp	80005b90 <_vfprintf_r+0x1664>
80005b84:	30 0b       	mov	r11,0
80005b86:	50 2b       	stdsp	sp[0x8],r11
80005b88:	c0 48       	rjmp	80005b90 <_vfprintf_r+0x1664>
80005b8a:	40 22       	lddsp	r2,sp[0x8]
80005b8c:	30 0a       	mov	r10,0
80005b8e:	50 2a       	stdsp	sp[0x8],r10
80005b90:	40 29       	lddsp	r9,sp[0x8]
80005b92:	e4 09 0c 49 	max	r9,r2,r9
80005b96:	fb 38 06 bb 	ld.ub	r8,sp[1723]
80005b9a:	50 39       	stdsp	sp[0xc],r9
80005b9c:	0a 9e       	mov	lr,r5
80005b9e:	30 09       	mov	r9,0
80005ba0:	e2 1e 00 02 	andl	lr,0x2,COH
80005ba4:	f2 08 18 00 	cp.b	r8,r9
80005ba8:	fb f8 10 03 	ld.wne	r8,sp[0xc]
80005bac:	f7 b8 01 ff 	subne	r8,-1
80005bb0:	fb f8 1a 03 	st.wne	sp[0xc],r8
80005bb4:	0a 9b       	mov	r11,r5
80005bb6:	58 0e       	cp.w	lr,0
80005bb8:	fb fc 10 03 	ld.wne	r12,sp[0xc]
80005bbc:	f7 bc 01 fe 	subne	r12,-2
80005bc0:	fb fc 1a 03 	st.wne	sp[0xc],r12
80005bc4:	e2 1b 00 84 	andl	r11,0x84,COH
80005bc8:	50 fe       	stdsp	sp[0x3c],lr
80005bca:	50 9b       	stdsp	sp[0x24],r11
80005bcc:	c4 71       	brne	80005c5a <_vfprintf_r+0x172e>
80005bce:	40 8a       	lddsp	r10,sp[0x20]
80005bd0:	40 39       	lddsp	r9,sp[0xc]
80005bd2:	12 1a       	sub	r10,r9
80005bd4:	50 4a       	stdsp	sp[0x10],r10
80005bd6:	58 0a       	cp.w	r10,0
80005bd8:	e0 89 00 20 	brgt	80005c18 <_vfprintf_r+0x16ec>
80005bdc:	c3 f8       	rjmp	80005c5a <_vfprintf_r+0x172e>
80005bde:	2f 09       	sub	r9,-16
80005be0:	2f f8       	sub	r8,-1
80005be2:	fe ce bd 52 	sub	lr,pc,-17070
80005be6:	31 0c       	mov	r12,16
80005be8:	fb 49 06 90 	st.w	sp[1680],r9
80005bec:	87 0e       	st.w	r3[0x0],lr
80005bee:	87 1c       	st.w	r3[0x4],r12
80005bf0:	fb 48 06 8c 	st.w	sp[1676],r8
80005bf4:	58 78       	cp.w	r8,7
80005bf6:	e0 89 00 04 	brgt	80005bfe <_vfprintf_r+0x16d2>
80005bfa:	2f 83       	sub	r3,-8
80005bfc:	c0 b8       	rjmp	80005c12 <_vfprintf_r+0x16e6>
80005bfe:	fa ca f9 78 	sub	r10,sp,-1672
80005c02:	02 9b       	mov	r11,r1
80005c04:	08 9c       	mov	r12,r4
80005c06:	fe b0 f4 85 	rcall	80004510 <__sprint_r>
80005c0a:	e0 81 04 10 	brne	8000642a <_vfprintf_r+0x1efe>
80005c0e:	fa c3 f9 e0 	sub	r3,sp,-1568
80005c12:	40 4b       	lddsp	r11,sp[0x10]
80005c14:	21 0b       	sub	r11,16
80005c16:	50 4b       	stdsp	sp[0x10],r11
80005c18:	fa f9 06 90 	ld.w	r9,sp[1680]
80005c1c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005c20:	fe ca bd 90 	sub	r10,pc,-17008
80005c24:	40 4e       	lddsp	lr,sp[0x10]
80005c26:	59 0e       	cp.w	lr,16
80005c28:	fe 99 ff db 	brgt	80005bde <_vfprintf_r+0x16b2>
80005c2c:	1c 09       	add	r9,lr
80005c2e:	2f f8       	sub	r8,-1
80005c30:	87 0a       	st.w	r3[0x0],r10
80005c32:	fb 49 06 90 	st.w	sp[1680],r9
80005c36:	87 1e       	st.w	r3[0x4],lr
80005c38:	fb 48 06 8c 	st.w	sp[1676],r8
80005c3c:	58 78       	cp.w	r8,7
80005c3e:	e0 89 00 04 	brgt	80005c46 <_vfprintf_r+0x171a>
80005c42:	2f 83       	sub	r3,-8
80005c44:	c0 b8       	rjmp	80005c5a <_vfprintf_r+0x172e>
80005c46:	fa ca f9 78 	sub	r10,sp,-1672
80005c4a:	02 9b       	mov	r11,r1
80005c4c:	08 9c       	mov	r12,r4
80005c4e:	fe b0 f4 61 	rcall	80004510 <__sprint_r>
80005c52:	e0 81 03 ec 	brne	8000642a <_vfprintf_r+0x1efe>
80005c56:	fa c3 f9 e0 	sub	r3,sp,-1568
80005c5a:	30 09       	mov	r9,0
80005c5c:	fb 38 06 bb 	ld.ub	r8,sp[1723]
80005c60:	f2 08 18 00 	cp.b	r8,r9
80005c64:	c1 f0       	breq	80005ca2 <_vfprintf_r+0x1776>
80005c66:	fa f8 06 90 	ld.w	r8,sp[1680]
80005c6a:	fa c9 f9 45 	sub	r9,sp,-1723
80005c6e:	2f f8       	sub	r8,-1
80005c70:	87 09       	st.w	r3[0x0],r9
80005c72:	fb 48 06 90 	st.w	sp[1680],r8
80005c76:	30 19       	mov	r9,1
80005c78:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005c7c:	87 19       	st.w	r3[0x4],r9
80005c7e:	2f f8       	sub	r8,-1
80005c80:	fb 48 06 8c 	st.w	sp[1676],r8
80005c84:	58 78       	cp.w	r8,7
80005c86:	e0 89 00 04 	brgt	80005c8e <_vfprintf_r+0x1762>
80005c8a:	2f 83       	sub	r3,-8
80005c8c:	c0 b8       	rjmp	80005ca2 <_vfprintf_r+0x1776>
80005c8e:	fa ca f9 78 	sub	r10,sp,-1672
80005c92:	02 9b       	mov	r11,r1
80005c94:	08 9c       	mov	r12,r4
80005c96:	fe b0 f4 3d 	rcall	80004510 <__sprint_r>
80005c9a:	e0 81 03 c8 	brne	8000642a <_vfprintf_r+0x1efe>
80005c9e:	fa c3 f9 e0 	sub	r3,sp,-1568
80005ca2:	40 fc       	lddsp	r12,sp[0x3c]
80005ca4:	58 0c       	cp.w	r12,0
80005ca6:	c1 f0       	breq	80005ce4 <_vfprintf_r+0x17b8>
80005ca8:	fa f8 06 90 	ld.w	r8,sp[1680]
80005cac:	fa c9 f9 48 	sub	r9,sp,-1720
80005cb0:	2f e8       	sub	r8,-2
80005cb2:	87 09       	st.w	r3[0x0],r9
80005cb4:	fb 48 06 90 	st.w	sp[1680],r8
80005cb8:	30 29       	mov	r9,2
80005cba:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005cbe:	87 19       	st.w	r3[0x4],r9
80005cc0:	2f f8       	sub	r8,-1
80005cc2:	fb 48 06 8c 	st.w	sp[1676],r8
80005cc6:	58 78       	cp.w	r8,7
80005cc8:	e0 89 00 04 	brgt	80005cd0 <_vfprintf_r+0x17a4>
80005ccc:	2f 83       	sub	r3,-8
80005cce:	c0 b8       	rjmp	80005ce4 <_vfprintf_r+0x17b8>
80005cd0:	fa ca f9 78 	sub	r10,sp,-1672
80005cd4:	02 9b       	mov	r11,r1
80005cd6:	08 9c       	mov	r12,r4
80005cd8:	fe b0 f4 1c 	rcall	80004510 <__sprint_r>
80005cdc:	e0 81 03 a7 	brne	8000642a <_vfprintf_r+0x1efe>
80005ce0:	fa c3 f9 e0 	sub	r3,sp,-1568
80005ce4:	40 9b       	lddsp	r11,sp[0x24]
80005ce6:	e0 4b 00 80 	cp.w	r11,128
80005cea:	c4 71       	brne	80005d78 <_vfprintf_r+0x184c>
80005cec:	40 8a       	lddsp	r10,sp[0x20]
80005cee:	40 39       	lddsp	r9,sp[0xc]
80005cf0:	12 1a       	sub	r10,r9
80005cf2:	50 4a       	stdsp	sp[0x10],r10
80005cf4:	58 0a       	cp.w	r10,0
80005cf6:	e0 89 00 20 	brgt	80005d36 <_vfprintf_r+0x180a>
80005cfa:	c3 f8       	rjmp	80005d78 <_vfprintf_r+0x184c>
80005cfc:	2f 09       	sub	r9,-16
80005cfe:	2f f8       	sub	r8,-1
80005d00:	fe ce be 60 	sub	lr,pc,-16800
80005d04:	31 0c       	mov	r12,16
80005d06:	fb 49 06 90 	st.w	sp[1680],r9
80005d0a:	87 0e       	st.w	r3[0x0],lr
80005d0c:	87 1c       	st.w	r3[0x4],r12
80005d0e:	fb 48 06 8c 	st.w	sp[1676],r8
80005d12:	58 78       	cp.w	r8,7
80005d14:	e0 89 00 04 	brgt	80005d1c <_vfprintf_r+0x17f0>
80005d18:	2f 83       	sub	r3,-8
80005d1a:	c0 b8       	rjmp	80005d30 <_vfprintf_r+0x1804>
80005d1c:	fa ca f9 78 	sub	r10,sp,-1672
80005d20:	02 9b       	mov	r11,r1
80005d22:	08 9c       	mov	r12,r4
80005d24:	fe b0 f3 f6 	rcall	80004510 <__sprint_r>
80005d28:	e0 81 03 81 	brne	8000642a <_vfprintf_r+0x1efe>
80005d2c:	fa c3 f9 e0 	sub	r3,sp,-1568
80005d30:	40 4b       	lddsp	r11,sp[0x10]
80005d32:	21 0b       	sub	r11,16
80005d34:	50 4b       	stdsp	sp[0x10],r11
80005d36:	fa f9 06 90 	ld.w	r9,sp[1680]
80005d3a:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005d3e:	fe ca be 9e 	sub	r10,pc,-16738
80005d42:	40 4e       	lddsp	lr,sp[0x10]
80005d44:	59 0e       	cp.w	lr,16
80005d46:	fe 99 ff db 	brgt	80005cfc <_vfprintf_r+0x17d0>
80005d4a:	1c 09       	add	r9,lr
80005d4c:	2f f8       	sub	r8,-1
80005d4e:	87 0a       	st.w	r3[0x0],r10
80005d50:	fb 49 06 90 	st.w	sp[1680],r9
80005d54:	87 1e       	st.w	r3[0x4],lr
80005d56:	fb 48 06 8c 	st.w	sp[1676],r8
80005d5a:	58 78       	cp.w	r8,7
80005d5c:	e0 89 00 04 	brgt	80005d64 <_vfprintf_r+0x1838>
80005d60:	2f 83       	sub	r3,-8
80005d62:	c0 b8       	rjmp	80005d78 <_vfprintf_r+0x184c>
80005d64:	fa ca f9 78 	sub	r10,sp,-1672
80005d68:	02 9b       	mov	r11,r1
80005d6a:	08 9c       	mov	r12,r4
80005d6c:	fe b0 f3 d2 	rcall	80004510 <__sprint_r>
80005d70:	e0 81 03 5d 	brne	8000642a <_vfprintf_r+0x1efe>
80005d74:	fa c3 f9 e0 	sub	r3,sp,-1568
80005d78:	40 2c       	lddsp	r12,sp[0x8]
80005d7a:	04 1c       	sub	r12,r2
80005d7c:	50 2c       	stdsp	sp[0x8],r12
80005d7e:	58 0c       	cp.w	r12,0
80005d80:	e0 89 00 20 	brgt	80005dc0 <_vfprintf_r+0x1894>
80005d84:	c3 f8       	rjmp	80005e02 <_vfprintf_r+0x18d6>
80005d86:	2f 09       	sub	r9,-16
80005d88:	2f f8       	sub	r8,-1
80005d8a:	fe cb be ea 	sub	r11,pc,-16662
80005d8e:	31 0a       	mov	r10,16
80005d90:	fb 49 06 90 	st.w	sp[1680],r9
80005d94:	87 0b       	st.w	r3[0x0],r11
80005d96:	87 1a       	st.w	r3[0x4],r10
80005d98:	fb 48 06 8c 	st.w	sp[1676],r8
80005d9c:	58 78       	cp.w	r8,7
80005d9e:	e0 89 00 04 	brgt	80005da6 <_vfprintf_r+0x187a>
80005da2:	2f 83       	sub	r3,-8
80005da4:	c0 b8       	rjmp	80005dba <_vfprintf_r+0x188e>
80005da6:	fa ca f9 78 	sub	r10,sp,-1672
80005daa:	02 9b       	mov	r11,r1
80005dac:	08 9c       	mov	r12,r4
80005dae:	fe b0 f3 b1 	rcall	80004510 <__sprint_r>
80005db2:	e0 81 03 3c 	brne	8000642a <_vfprintf_r+0x1efe>
80005db6:	fa c3 f9 e0 	sub	r3,sp,-1568
80005dba:	40 29       	lddsp	r9,sp[0x8]
80005dbc:	21 09       	sub	r9,16
80005dbe:	50 29       	stdsp	sp[0x8],r9
80005dc0:	fa f9 06 90 	ld.w	r9,sp[1680]
80005dc4:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005dc8:	fe ca bf 28 	sub	r10,pc,-16600
80005dcc:	40 2e       	lddsp	lr,sp[0x8]
80005dce:	59 0e       	cp.w	lr,16
80005dd0:	fe 99 ff db 	brgt	80005d86 <_vfprintf_r+0x185a>
80005dd4:	1c 09       	add	r9,lr
80005dd6:	2f f8       	sub	r8,-1
80005dd8:	87 0a       	st.w	r3[0x0],r10
80005dda:	fb 49 06 90 	st.w	sp[1680],r9
80005dde:	87 1e       	st.w	r3[0x4],lr
80005de0:	fb 48 06 8c 	st.w	sp[1676],r8
80005de4:	58 78       	cp.w	r8,7
80005de6:	e0 89 00 04 	brgt	80005dee <_vfprintf_r+0x18c2>
80005dea:	2f 83       	sub	r3,-8
80005dec:	c0 b8       	rjmp	80005e02 <_vfprintf_r+0x18d6>
80005dee:	fa ca f9 78 	sub	r10,sp,-1672
80005df2:	02 9b       	mov	r11,r1
80005df4:	08 9c       	mov	r12,r4
80005df6:	fe b0 f3 8d 	rcall	80004510 <__sprint_r>
80005dfa:	e0 81 03 18 	brne	8000642a <_vfprintf_r+0x1efe>
80005dfe:	fa c3 f9 e0 	sub	r3,sp,-1568
80005e02:	ed b5 00 08 	bld	r5,0x8
80005e06:	c0 b0       	breq	80005e1c <_vfprintf_r+0x18f0>
80005e08:	fa f8 06 90 	ld.w	r8,sp[1680]
80005e0c:	87 12       	st.w	r3[0x4],r2
80005e0e:	87 06       	st.w	r3[0x0],r6
80005e10:	f0 02 00 02 	add	r2,r8,r2
80005e14:	fb 42 06 90 	st.w	sp[1680],r2
80005e18:	e0 8f 01 d4 	bral	800061c0 <_vfprintf_r+0x1c94>
80005e1c:	e0 40 00 65 	cp.w	r0,101
80005e20:	e0 8a 01 d6 	brle	800061cc <_vfprintf_r+0x1ca0>
80005e24:	30 08       	mov	r8,0
80005e26:	30 09       	mov	r9,0
80005e28:	40 5b       	lddsp	r11,sp[0x14]
80005e2a:	40 7a       	lddsp	r10,sp[0x1c]
80005e2c:	e0 a0 17 f5 	rcall	80008e16 <__avr32_f64_cmp_eq>
80005e30:	c7 90       	breq	80005f22 <_vfprintf_r+0x19f6>
80005e32:	fa f8 06 90 	ld.w	r8,sp[1680]
80005e36:	fe c9 bf aa 	sub	r9,pc,-16470
80005e3a:	2f f8       	sub	r8,-1
80005e3c:	87 09       	st.w	r3[0x0],r9
80005e3e:	fb 48 06 90 	st.w	sp[1680],r8
80005e42:	30 19       	mov	r9,1
80005e44:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005e48:	87 19       	st.w	r3[0x4],r9
80005e4a:	2f f8       	sub	r8,-1
80005e4c:	fb 48 06 8c 	st.w	sp[1676],r8
80005e50:	58 78       	cp.w	r8,7
80005e52:	e0 89 00 05 	brgt	80005e5c <_vfprintf_r+0x1930>
80005e56:	2f 83       	sub	r3,-8
80005e58:	c0 c8       	rjmp	80005e70 <_vfprintf_r+0x1944>
80005e5a:	d7 03       	nop
80005e5c:	fa ca f9 78 	sub	r10,sp,-1672
80005e60:	02 9b       	mov	r11,r1
80005e62:	08 9c       	mov	r12,r4
80005e64:	fe b0 f3 56 	rcall	80004510 <__sprint_r>
80005e68:	e0 81 02 e1 	brne	8000642a <_vfprintf_r+0x1efe>
80005e6c:	fa c3 f9 e0 	sub	r3,sp,-1568
80005e70:	fa f8 06 ac 	ld.w	r8,sp[1708]
80005e74:	40 6c       	lddsp	r12,sp[0x18]
80005e76:	18 38       	cp.w	r8,r12
80005e78:	c0 55       	brlt	80005e82 <_vfprintf_r+0x1956>
80005e7a:	ed b5 00 00 	bld	r5,0x0
80005e7e:	e0 81 02 6b 	brne	80006354 <_vfprintf_r+0x1e28>
80005e82:	fa f8 06 90 	ld.w	r8,sp[1680]
80005e86:	2f f8       	sub	r8,-1
80005e88:	40 cb       	lddsp	r11,sp[0x30]
80005e8a:	fb 48 06 90 	st.w	sp[1680],r8
80005e8e:	30 19       	mov	r9,1
80005e90:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005e94:	87 0b       	st.w	r3[0x0],r11
80005e96:	2f f8       	sub	r8,-1
80005e98:	87 19       	st.w	r3[0x4],r9
80005e9a:	fb 48 06 8c 	st.w	sp[1676],r8
80005e9e:	58 78       	cp.w	r8,7
80005ea0:	e0 89 00 04 	brgt	80005ea8 <_vfprintf_r+0x197c>
80005ea4:	2f 83       	sub	r3,-8
80005ea6:	c0 b8       	rjmp	80005ebc <_vfprintf_r+0x1990>
80005ea8:	fa ca f9 78 	sub	r10,sp,-1672
80005eac:	02 9b       	mov	r11,r1
80005eae:	08 9c       	mov	r12,r4
80005eb0:	fe b0 f3 30 	rcall	80004510 <__sprint_r>
80005eb4:	e0 81 02 bb 	brne	8000642a <_vfprintf_r+0x1efe>
80005eb8:	fa c3 f9 e0 	sub	r3,sp,-1568
80005ebc:	40 66       	lddsp	r6,sp[0x18]
80005ebe:	20 16       	sub	r6,1
80005ec0:	58 06       	cp.w	r6,0
80005ec2:	e0 89 00 1d 	brgt	80005efc <_vfprintf_r+0x19d0>
80005ec6:	e0 8f 02 47 	bral	80006354 <_vfprintf_r+0x1e28>
80005eca:	2f 09       	sub	r9,-16
80005ecc:	2f f8       	sub	r8,-1
80005ece:	fb 49 06 90 	st.w	sp[1680],r9
80005ed2:	87 02       	st.w	r3[0x0],r2
80005ed4:	87 10       	st.w	r3[0x4],r0
80005ed6:	fb 48 06 8c 	st.w	sp[1676],r8
80005eda:	58 78       	cp.w	r8,7
80005edc:	e0 89 00 04 	brgt	80005ee4 <_vfprintf_r+0x19b8>
80005ee0:	2f 83       	sub	r3,-8
80005ee2:	c0 b8       	rjmp	80005ef8 <_vfprintf_r+0x19cc>
80005ee4:	fa ca f9 78 	sub	r10,sp,-1672
80005ee8:	02 9b       	mov	r11,r1
80005eea:	08 9c       	mov	r12,r4
80005eec:	fe b0 f3 12 	rcall	80004510 <__sprint_r>
80005ef0:	e0 81 02 9d 	brne	8000642a <_vfprintf_r+0x1efe>
80005ef4:	fa c3 f9 e0 	sub	r3,sp,-1568
80005ef8:	21 06       	sub	r6,16
80005efa:	c0 48       	rjmp	80005f02 <_vfprintf_r+0x19d6>
80005efc:	fe c2 c0 5c 	sub	r2,pc,-16292
80005f00:	31 00       	mov	r0,16
80005f02:	fa f9 06 90 	ld.w	r9,sp[1680]
80005f06:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005f0a:	fe ca c0 6a 	sub	r10,pc,-16278
80005f0e:	59 06       	cp.w	r6,16
80005f10:	fe 99 ff dd 	brgt	80005eca <_vfprintf_r+0x199e>
80005f14:	0c 09       	add	r9,r6
80005f16:	87 0a       	st.w	r3[0x0],r10
80005f18:	fb 49 06 90 	st.w	sp[1680],r9
80005f1c:	2f f8       	sub	r8,-1
80005f1e:	87 16       	st.w	r3[0x4],r6
80005f20:	c5 39       	rjmp	800061c6 <_vfprintf_r+0x1c9a>
80005f22:	fa fa 06 ac 	ld.w	r10,sp[1708]
80005f26:	58 0a       	cp.w	r10,0
80005f28:	e0 89 00 92 	brgt	8000604c <_vfprintf_r+0x1b20>
80005f2c:	fa f8 06 90 	ld.w	r8,sp[1680]
80005f30:	fe c9 c0 a4 	sub	r9,pc,-16220
80005f34:	2f f8       	sub	r8,-1
80005f36:	87 09       	st.w	r3[0x0],r9
80005f38:	fb 48 06 90 	st.w	sp[1680],r8
80005f3c:	30 19       	mov	r9,1
80005f3e:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005f42:	87 19       	st.w	r3[0x4],r9
80005f44:	2f f8       	sub	r8,-1
80005f46:	fb 48 06 8c 	st.w	sp[1676],r8
80005f4a:	58 78       	cp.w	r8,7
80005f4c:	e0 89 00 04 	brgt	80005f54 <_vfprintf_r+0x1a28>
80005f50:	2f 83       	sub	r3,-8
80005f52:	c0 b8       	rjmp	80005f68 <_vfprintf_r+0x1a3c>
80005f54:	fa ca f9 78 	sub	r10,sp,-1672
80005f58:	02 9b       	mov	r11,r1
80005f5a:	08 9c       	mov	r12,r4
80005f5c:	fe b0 f2 da 	rcall	80004510 <__sprint_r>
80005f60:	e0 81 02 65 	brne	8000642a <_vfprintf_r+0x1efe>
80005f64:	fa c3 f9 e0 	sub	r3,sp,-1568
80005f68:	fa f8 06 ac 	ld.w	r8,sp[1708]
80005f6c:	58 08       	cp.w	r8,0
80005f6e:	c0 81       	brne	80005f7e <_vfprintf_r+0x1a52>
80005f70:	40 6a       	lddsp	r10,sp[0x18]
80005f72:	58 0a       	cp.w	r10,0
80005f74:	c0 51       	brne	80005f7e <_vfprintf_r+0x1a52>
80005f76:	ed b5 00 00 	bld	r5,0x0
80005f7a:	e0 81 01 ed 	brne	80006354 <_vfprintf_r+0x1e28>
80005f7e:	40 c9       	lddsp	r9,sp[0x30]
80005f80:	fa f8 06 90 	ld.w	r8,sp[1680]
80005f84:	2f f8       	sub	r8,-1
80005f86:	87 09       	st.w	r3[0x0],r9
80005f88:	fb 48 06 90 	st.w	sp[1680],r8
80005f8c:	30 19       	mov	r9,1
80005f8e:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005f92:	87 19       	st.w	r3[0x4],r9
80005f94:	2f f8       	sub	r8,-1
80005f96:	fb 48 06 8c 	st.w	sp[1676],r8
80005f9a:	58 78       	cp.w	r8,7
80005f9c:	e0 89 00 04 	brgt	80005fa4 <_vfprintf_r+0x1a78>
80005fa0:	2f 83       	sub	r3,-8
80005fa2:	c0 b8       	rjmp	80005fb8 <_vfprintf_r+0x1a8c>
80005fa4:	fa ca f9 78 	sub	r10,sp,-1672
80005fa8:	02 9b       	mov	r11,r1
80005faa:	08 9c       	mov	r12,r4
80005fac:	fe b0 f2 b2 	rcall	80004510 <__sprint_r>
80005fb0:	e0 81 02 3d 	brne	8000642a <_vfprintf_r+0x1efe>
80005fb4:	fa c3 f9 e0 	sub	r3,sp,-1568
80005fb8:	fa f2 06 ac 	ld.w	r2,sp[1708]
80005fbc:	5c 32       	neg	r2
80005fbe:	58 02       	cp.w	r2,0
80005fc0:	e0 89 00 1d 	brgt	80005ffa <_vfprintf_r+0x1ace>
80005fc4:	c3 d8       	rjmp	8000603e <_vfprintf_r+0x1b12>
80005fc6:	2f 09       	sub	r9,-16
80005fc8:	2f f8       	sub	r8,-1
80005fca:	31 0e       	mov	lr,16
80005fcc:	fb 49 06 90 	st.w	sp[1680],r9
80005fd0:	87 00       	st.w	r3[0x0],r0
80005fd2:	87 1e       	st.w	r3[0x4],lr
80005fd4:	fb 48 06 8c 	st.w	sp[1676],r8
80005fd8:	58 78       	cp.w	r8,7
80005fda:	e0 89 00 04 	brgt	80005fe2 <_vfprintf_r+0x1ab6>
80005fde:	2f 83       	sub	r3,-8
80005fe0:	c0 b8       	rjmp	80005ff6 <_vfprintf_r+0x1aca>
80005fe2:	fa ca f9 78 	sub	r10,sp,-1672
80005fe6:	02 9b       	mov	r11,r1
80005fe8:	08 9c       	mov	r12,r4
80005fea:	fe b0 f2 93 	rcall	80004510 <__sprint_r>
80005fee:	e0 81 02 1e 	brne	8000642a <_vfprintf_r+0x1efe>
80005ff2:	fa c3 f9 e0 	sub	r3,sp,-1568
80005ff6:	21 02       	sub	r2,16
80005ff8:	c0 38       	rjmp	80005ffe <_vfprintf_r+0x1ad2>
80005ffa:	fe c0 c1 5a 	sub	r0,pc,-16038
80005ffe:	fa f9 06 90 	ld.w	r9,sp[1680]
80006002:	fa f8 06 8c 	ld.w	r8,sp[1676]
80006006:	fe ca c1 66 	sub	r10,pc,-16026
8000600a:	59 02       	cp.w	r2,16
8000600c:	fe 99 ff dd 	brgt	80005fc6 <_vfprintf_r+0x1a9a>
80006010:	04 09       	add	r9,r2
80006012:	2f f8       	sub	r8,-1
80006014:	87 0a       	st.w	r3[0x0],r10
80006016:	fb 49 06 90 	st.w	sp[1680],r9
8000601a:	87 12       	st.w	r3[0x4],r2
8000601c:	fb 48 06 8c 	st.w	sp[1676],r8
80006020:	58 78       	cp.w	r8,7
80006022:	e0 89 00 04 	brgt	8000602a <_vfprintf_r+0x1afe>
80006026:	2f 83       	sub	r3,-8
80006028:	c0 b8       	rjmp	8000603e <_vfprintf_r+0x1b12>
8000602a:	fa ca f9 78 	sub	r10,sp,-1672
8000602e:	02 9b       	mov	r11,r1
80006030:	08 9c       	mov	r12,r4
80006032:	fe b0 f2 6f 	rcall	80004510 <__sprint_r>
80006036:	e0 81 01 fa 	brne	8000642a <_vfprintf_r+0x1efe>
8000603a:	fa c3 f9 e0 	sub	r3,sp,-1568
8000603e:	40 6c       	lddsp	r12,sp[0x18]
80006040:	fa f8 06 90 	ld.w	r8,sp[1680]
80006044:	87 06       	st.w	r3[0x0],r6
80006046:	87 1c       	st.w	r3[0x4],r12
80006048:	18 08       	add	r8,r12
8000604a:	cb 98       	rjmp	800061bc <_vfprintf_r+0x1c90>
8000604c:	fa f9 06 90 	ld.w	r9,sp[1680]
80006050:	fa f8 06 8c 	ld.w	r8,sp[1676]
80006054:	40 6b       	lddsp	r11,sp[0x18]
80006056:	16 3a       	cp.w	r10,r11
80006058:	c6 f5       	brlt	80006136 <_vfprintf_r+0x1c0a>
8000605a:	16 09       	add	r9,r11
8000605c:	2f f8       	sub	r8,-1
8000605e:	87 06       	st.w	r3[0x0],r6
80006060:	fb 49 06 90 	st.w	sp[1680],r9
80006064:	87 1b       	st.w	r3[0x4],r11
80006066:	fb 48 06 8c 	st.w	sp[1676],r8
8000606a:	58 78       	cp.w	r8,7
8000606c:	e0 89 00 04 	brgt	80006074 <_vfprintf_r+0x1b48>
80006070:	2f 83       	sub	r3,-8
80006072:	c0 b8       	rjmp	80006088 <_vfprintf_r+0x1b5c>
80006074:	fa ca f9 78 	sub	r10,sp,-1672
80006078:	02 9b       	mov	r11,r1
8000607a:	08 9c       	mov	r12,r4
8000607c:	fe b0 f2 4a 	rcall	80004510 <__sprint_r>
80006080:	e0 81 01 d5 	brne	8000642a <_vfprintf_r+0x1efe>
80006084:	fa c3 f9 e0 	sub	r3,sp,-1568
80006088:	fa f6 06 ac 	ld.w	r6,sp[1708]
8000608c:	40 6a       	lddsp	r10,sp[0x18]
8000608e:	14 16       	sub	r6,r10
80006090:	58 06       	cp.w	r6,0
80006092:	e0 89 00 1c 	brgt	800060ca <_vfprintf_r+0x1b9e>
80006096:	c3 d8       	rjmp	80006110 <_vfprintf_r+0x1be4>
80006098:	2f 09       	sub	r9,-16
8000609a:	2f f8       	sub	r8,-1
8000609c:	fb 49 06 90 	st.w	sp[1680],r9
800060a0:	87 02       	st.w	r3[0x0],r2
800060a2:	87 10       	st.w	r3[0x4],r0
800060a4:	fb 48 06 8c 	st.w	sp[1676],r8
800060a8:	58 78       	cp.w	r8,7
800060aa:	e0 89 00 04 	brgt	800060b2 <_vfprintf_r+0x1b86>
800060ae:	2f 83       	sub	r3,-8
800060b0:	c0 b8       	rjmp	800060c6 <_vfprintf_r+0x1b9a>
800060b2:	fa ca f9 78 	sub	r10,sp,-1672
800060b6:	02 9b       	mov	r11,r1
800060b8:	08 9c       	mov	r12,r4
800060ba:	fe b0 f2 2b 	rcall	80004510 <__sprint_r>
800060be:	e0 81 01 b6 	brne	8000642a <_vfprintf_r+0x1efe>
800060c2:	fa c3 f9 e0 	sub	r3,sp,-1568
800060c6:	21 06       	sub	r6,16
800060c8:	c0 48       	rjmp	800060d0 <_vfprintf_r+0x1ba4>
800060ca:	fe c2 c2 2a 	sub	r2,pc,-15830
800060ce:	31 00       	mov	r0,16
800060d0:	fa f9 06 90 	ld.w	r9,sp[1680]
800060d4:	fa f8 06 8c 	ld.w	r8,sp[1676]
800060d8:	fe ca c2 38 	sub	r10,pc,-15816
800060dc:	59 06       	cp.w	r6,16
800060de:	fe 99 ff dd 	brgt	80006098 <_vfprintf_r+0x1b6c>
800060e2:	0c 09       	add	r9,r6
800060e4:	2f f8       	sub	r8,-1
800060e6:	87 0a       	st.w	r3[0x0],r10
800060e8:	fb 49 06 90 	st.w	sp[1680],r9
800060ec:	87 16       	st.w	r3[0x4],r6
800060ee:	fb 48 06 8c 	st.w	sp[1676],r8
800060f2:	58 78       	cp.w	r8,7
800060f4:	e0 89 00 04 	brgt	800060fc <_vfprintf_r+0x1bd0>
800060f8:	2f 83       	sub	r3,-8
800060fa:	c0 b8       	rjmp	80006110 <_vfprintf_r+0x1be4>
800060fc:	fa ca f9 78 	sub	r10,sp,-1672
80006100:	02 9b       	mov	r11,r1
80006102:	08 9c       	mov	r12,r4
80006104:	fe b0 f2 06 	rcall	80004510 <__sprint_r>
80006108:	e0 81 01 91 	brne	8000642a <_vfprintf_r+0x1efe>
8000610c:	fa c3 f9 e0 	sub	r3,sp,-1568
80006110:	ed b5 00 00 	bld	r5,0x0
80006114:	e0 81 01 20 	brne	80006354 <_vfprintf_r+0x1e28>
80006118:	40 c9       	lddsp	r9,sp[0x30]
8000611a:	fa f8 06 90 	ld.w	r8,sp[1680]
8000611e:	2f f8       	sub	r8,-1
80006120:	87 09       	st.w	r3[0x0],r9
80006122:	fb 48 06 90 	st.w	sp[1680],r8
80006126:	30 19       	mov	r9,1
80006128:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000612c:	87 19       	st.w	r3[0x4],r9
8000612e:	2f f8       	sub	r8,-1
80006130:	fb 48 06 8c 	st.w	sp[1676],r8
80006134:	c0 29       	rjmp	80006338 <_vfprintf_r+0x1e0c>
80006136:	14 09       	add	r9,r10
80006138:	2f f8       	sub	r8,-1
8000613a:	fb 49 06 90 	st.w	sp[1680],r9
8000613e:	87 06       	st.w	r3[0x0],r6
80006140:	87 1a       	st.w	r3[0x4],r10
80006142:	fb 48 06 8c 	st.w	sp[1676],r8
80006146:	58 78       	cp.w	r8,7
80006148:	e0 89 00 04 	brgt	80006150 <_vfprintf_r+0x1c24>
8000614c:	2f 83       	sub	r3,-8
8000614e:	c0 b8       	rjmp	80006164 <_vfprintf_r+0x1c38>
80006150:	fa ca f9 78 	sub	r10,sp,-1672
80006154:	02 9b       	mov	r11,r1
80006156:	08 9c       	mov	r12,r4
80006158:	fe b0 f1 dc 	rcall	80004510 <__sprint_r>
8000615c:	e0 81 01 67 	brne	8000642a <_vfprintf_r+0x1efe>
80006160:	fa c3 f9 e0 	sub	r3,sp,-1568
80006164:	40 c8       	lddsp	r8,sp[0x30]
80006166:	87 08       	st.w	r3[0x0],r8
80006168:	fa f8 06 90 	ld.w	r8,sp[1680]
8000616c:	2f f8       	sub	r8,-1
8000616e:	30 19       	mov	r9,1
80006170:	fb 48 06 90 	st.w	sp[1680],r8
80006174:	87 19       	st.w	r3[0x4],r9
80006176:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000617a:	2f f8       	sub	r8,-1
8000617c:	fb 48 06 8c 	st.w	sp[1676],r8
80006180:	fa f2 06 ac 	ld.w	r2,sp[1708]
80006184:	58 78       	cp.w	r8,7
80006186:	e0 89 00 04 	brgt	8000618e <_vfprintf_r+0x1c62>
8000618a:	2f 83       	sub	r3,-8
8000618c:	c0 b8       	rjmp	800061a2 <_vfprintf_r+0x1c76>
8000618e:	fa ca f9 78 	sub	r10,sp,-1672
80006192:	02 9b       	mov	r11,r1
80006194:	08 9c       	mov	r12,r4
80006196:	fe b0 f1 bd 	rcall	80004510 <__sprint_r>
8000619a:	e0 81 01 48 	brne	8000642a <_vfprintf_r+0x1efe>
8000619e:	fa c3 f9 e0 	sub	r3,sp,-1568
800061a2:	04 06       	add	r6,r2
800061a4:	fa f8 06 ac 	ld.w	r8,sp[1708]
800061a8:	87 06       	st.w	r3[0x0],r6
800061aa:	fa f9 06 90 	ld.w	r9,sp[1680]
800061ae:	40 66       	lddsp	r6,sp[0x18]
800061b0:	40 6e       	lddsp	lr,sp[0x18]
800061b2:	10 16       	sub	r6,r8
800061b4:	f2 08 01 08 	sub	r8,r9,r8
800061b8:	87 16       	st.w	r3[0x4],r6
800061ba:	1c 08       	add	r8,lr
800061bc:	fb 48 06 90 	st.w	sp[1680],r8
800061c0:	fa f8 06 8c 	ld.w	r8,sp[1676]
800061c4:	2f f8       	sub	r8,-1
800061c6:	fb 48 06 8c 	st.w	sp[1676],r8
800061ca:	cb 78       	rjmp	80006338 <_vfprintf_r+0x1e0c>
800061cc:	40 6c       	lddsp	r12,sp[0x18]
800061ce:	58 1c       	cp.w	r12,1
800061d0:	e0 89 00 06 	brgt	800061dc <_vfprintf_r+0x1cb0>
800061d4:	ed b5 00 00 	bld	r5,0x0
800061d8:	e0 81 00 85 	brne	800062e2 <_vfprintf_r+0x1db6>
800061dc:	fa f8 06 90 	ld.w	r8,sp[1680]
800061e0:	2f f8       	sub	r8,-1
800061e2:	30 19       	mov	r9,1
800061e4:	fb 48 06 90 	st.w	sp[1680],r8
800061e8:	87 06       	st.w	r3[0x0],r6
800061ea:	fa f8 06 8c 	ld.w	r8,sp[1676]
800061ee:	87 19       	st.w	r3[0x4],r9
800061f0:	2f f8       	sub	r8,-1
800061f2:	fb 48 06 8c 	st.w	sp[1676],r8
800061f6:	58 78       	cp.w	r8,7
800061f8:	e0 89 00 04 	brgt	80006200 <_vfprintf_r+0x1cd4>
800061fc:	2f 83       	sub	r3,-8
800061fe:	c0 b8       	rjmp	80006214 <_vfprintf_r+0x1ce8>
80006200:	fa ca f9 78 	sub	r10,sp,-1672
80006204:	02 9b       	mov	r11,r1
80006206:	08 9c       	mov	r12,r4
80006208:	fe b0 f1 84 	rcall	80004510 <__sprint_r>
8000620c:	e0 81 01 0f 	brne	8000642a <_vfprintf_r+0x1efe>
80006210:	fa c3 f9 e0 	sub	r3,sp,-1568
80006214:	fa f8 06 90 	ld.w	r8,sp[1680]
80006218:	2f f8       	sub	r8,-1
8000621a:	40 cb       	lddsp	r11,sp[0x30]
8000621c:	fb 48 06 90 	st.w	sp[1680],r8
80006220:	30 19       	mov	r9,1
80006222:	fa f8 06 8c 	ld.w	r8,sp[1676]
80006226:	87 0b       	st.w	r3[0x0],r11
80006228:	2f f8       	sub	r8,-1
8000622a:	87 19       	st.w	r3[0x4],r9
8000622c:	fb 48 06 8c 	st.w	sp[1676],r8
80006230:	58 78       	cp.w	r8,7
80006232:	e0 89 00 05 	brgt	8000623c <_vfprintf_r+0x1d10>
80006236:	2f 83       	sub	r3,-8
80006238:	c0 c8       	rjmp	80006250 <_vfprintf_r+0x1d24>
8000623a:	d7 03       	nop
8000623c:	fa ca f9 78 	sub	r10,sp,-1672
80006240:	02 9b       	mov	r11,r1
80006242:	08 9c       	mov	r12,r4
80006244:	fe b0 f1 66 	rcall	80004510 <__sprint_r>
80006248:	e0 81 00 f1 	brne	8000642a <_vfprintf_r+0x1efe>
8000624c:	fa c3 f9 e0 	sub	r3,sp,-1568
80006250:	30 08       	mov	r8,0
80006252:	30 09       	mov	r9,0
80006254:	40 5b       	lddsp	r11,sp[0x14]
80006256:	40 7a       	lddsp	r10,sp[0x1c]
80006258:	e0 a0 15 df 	rcall	80008e16 <__avr32_f64_cmp_eq>
8000625c:	40 68       	lddsp	r8,sp[0x18]
8000625e:	20 18       	sub	r8,1
80006260:	58 0c       	cp.w	r12,0
80006262:	c0 d1       	brne	8000627c <_vfprintf_r+0x1d50>
80006264:	2f f6       	sub	r6,-1
80006266:	87 18       	st.w	r3[0x4],r8
80006268:	87 06       	st.w	r3[0x0],r6
8000626a:	fa f6 06 90 	ld.w	r6,sp[1680]
8000626e:	10 06       	add	r6,r8
80006270:	fa f8 06 8c 	ld.w	r8,sp[1676]
80006274:	fb 46 06 90 	st.w	sp[1680],r6
80006278:	2f f8       	sub	r8,-1
8000627a:	c3 18       	rjmp	800062dc <_vfprintf_r+0x1db0>
8000627c:	10 96       	mov	r6,r8
8000627e:	58 08       	cp.w	r8,0
80006280:	e0 89 00 1c 	brgt	800062b8 <_vfprintf_r+0x1d8c>
80006284:	c4 b8       	rjmp	8000631a <_vfprintf_r+0x1dee>
80006286:	2f 09       	sub	r9,-16
80006288:	2f f8       	sub	r8,-1
8000628a:	fb 49 06 90 	st.w	sp[1680],r9
8000628e:	87 02       	st.w	r3[0x0],r2
80006290:	87 10       	st.w	r3[0x4],r0
80006292:	fb 48 06 8c 	st.w	sp[1676],r8
80006296:	58 78       	cp.w	r8,7
80006298:	e0 89 00 04 	brgt	800062a0 <_vfprintf_r+0x1d74>
8000629c:	2f 83       	sub	r3,-8
8000629e:	c0 b8       	rjmp	800062b4 <_vfprintf_r+0x1d88>
800062a0:	fa ca f9 78 	sub	r10,sp,-1672
800062a4:	02 9b       	mov	r11,r1
800062a6:	08 9c       	mov	r12,r4
800062a8:	fe b0 f1 34 	rcall	80004510 <__sprint_r>
800062ac:	e0 81 00 bf 	brne	8000642a <_vfprintf_r+0x1efe>
800062b0:	fa c3 f9 e0 	sub	r3,sp,-1568
800062b4:	21 06       	sub	r6,16
800062b6:	c0 48       	rjmp	800062be <_vfprintf_r+0x1d92>
800062b8:	fe c2 c4 18 	sub	r2,pc,-15336
800062bc:	31 00       	mov	r0,16
800062be:	fa f9 06 90 	ld.w	r9,sp[1680]
800062c2:	fa f8 06 8c 	ld.w	r8,sp[1676]
800062c6:	fe ca c4 26 	sub	r10,pc,-15322
800062ca:	59 06       	cp.w	r6,16
800062cc:	fe 99 ff dd 	brgt	80006286 <_vfprintf_r+0x1d5a>
800062d0:	0c 09       	add	r9,r6
800062d2:	87 0a       	st.w	r3[0x0],r10
800062d4:	fb 49 06 90 	st.w	sp[1680],r9
800062d8:	2f f8       	sub	r8,-1
800062da:	87 16       	st.w	r3[0x4],r6
800062dc:	fb 48 06 8c 	st.w	sp[1676],r8
800062e0:	c0 e8       	rjmp	800062fc <_vfprintf_r+0x1dd0>
800062e2:	fa f8 06 90 	ld.w	r8,sp[1680]
800062e6:	2f f8       	sub	r8,-1
800062e8:	30 19       	mov	r9,1
800062ea:	fb 48 06 90 	st.w	sp[1680],r8
800062ee:	87 06       	st.w	r3[0x0],r6
800062f0:	fa f8 06 8c 	ld.w	r8,sp[1676]
800062f4:	87 19       	st.w	r3[0x4],r9
800062f6:	2f f8       	sub	r8,-1
800062f8:	fb 48 06 8c 	st.w	sp[1676],r8
800062fc:	58 78       	cp.w	r8,7
800062fe:	e0 89 00 04 	brgt	80006306 <_vfprintf_r+0x1dda>
80006302:	2f 83       	sub	r3,-8
80006304:	c0 b8       	rjmp	8000631a <_vfprintf_r+0x1dee>
80006306:	fa ca f9 78 	sub	r10,sp,-1672
8000630a:	02 9b       	mov	r11,r1
8000630c:	08 9c       	mov	r12,r4
8000630e:	fe b0 f1 01 	rcall	80004510 <__sprint_r>
80006312:	e0 81 00 8c 	brne	8000642a <_vfprintf_r+0x1efe>
80006316:	fa c3 f9 e0 	sub	r3,sp,-1568
8000631a:	40 ea       	lddsp	r10,sp[0x38]
8000631c:	fa f8 06 90 	ld.w	r8,sp[1680]
80006320:	14 08       	add	r8,r10
80006322:	fa c9 f9 64 	sub	r9,sp,-1692
80006326:	fb 48 06 90 	st.w	sp[1680],r8
8000632a:	87 1a       	st.w	r3[0x4],r10
8000632c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80006330:	87 09       	st.w	r3[0x0],r9
80006332:	2f f8       	sub	r8,-1
80006334:	fb 48 06 8c 	st.w	sp[1676],r8
80006338:	58 78       	cp.w	r8,7
8000633a:	e0 89 00 04 	brgt	80006342 <_vfprintf_r+0x1e16>
8000633e:	2f 83       	sub	r3,-8
80006340:	c0 a8       	rjmp	80006354 <_vfprintf_r+0x1e28>
80006342:	fa ca f9 78 	sub	r10,sp,-1672
80006346:	02 9b       	mov	r11,r1
80006348:	08 9c       	mov	r12,r4
8000634a:	fe b0 f0 e3 	rcall	80004510 <__sprint_r>
8000634e:	c6 e1       	brne	8000642a <_vfprintf_r+0x1efe>
80006350:	fa c3 f9 e0 	sub	r3,sp,-1568
80006354:	e2 15 00 04 	andl	r5,0x4,COH
80006358:	c3 f0       	breq	800063d6 <_vfprintf_r+0x1eaa>
8000635a:	40 86       	lddsp	r6,sp[0x20]
8000635c:	40 39       	lddsp	r9,sp[0xc]
8000635e:	12 16       	sub	r6,r9
80006360:	58 06       	cp.w	r6,0
80006362:	e0 89 00 1a 	brgt	80006396 <_vfprintf_r+0x1e6a>
80006366:	c3 88       	rjmp	800063d6 <_vfprintf_r+0x1eaa>
80006368:	2f 09       	sub	r9,-16
8000636a:	2f f8       	sub	r8,-1
8000636c:	fb 49 06 90 	st.w	sp[1680],r9
80006370:	87 05       	st.w	r3[0x0],r5
80006372:	87 12       	st.w	r3[0x4],r2
80006374:	fb 48 06 8c 	st.w	sp[1676],r8
80006378:	58 78       	cp.w	r8,7
8000637a:	e0 89 00 04 	brgt	80006382 <_vfprintf_r+0x1e56>
8000637e:	2f 83       	sub	r3,-8
80006380:	c0 98       	rjmp	80006392 <_vfprintf_r+0x1e66>
80006382:	00 9a       	mov	r10,r0
80006384:	02 9b       	mov	r11,r1
80006386:	08 9c       	mov	r12,r4
80006388:	fe b0 f0 c4 	rcall	80004510 <__sprint_r>
8000638c:	c4 f1       	brne	8000642a <_vfprintf_r+0x1efe>
8000638e:	fa c3 f9 e0 	sub	r3,sp,-1568
80006392:	21 06       	sub	r6,16
80006394:	c0 68       	rjmp	800063a0 <_vfprintf_r+0x1e74>
80006396:	fe c5 c5 06 	sub	r5,pc,-15098
8000639a:	31 02       	mov	r2,16
8000639c:	fa c0 f9 78 	sub	r0,sp,-1672
800063a0:	fa f9 06 90 	ld.w	r9,sp[1680]
800063a4:	fa f8 06 8c 	ld.w	r8,sp[1676]
800063a8:	fe ca c5 18 	sub	r10,pc,-15080
800063ac:	59 06       	cp.w	r6,16
800063ae:	fe 99 ff dd 	brgt	80006368 <_vfprintf_r+0x1e3c>
800063b2:	0c 09       	add	r9,r6
800063b4:	2f f8       	sub	r8,-1
800063b6:	87 0a       	st.w	r3[0x0],r10
800063b8:	87 16       	st.w	r3[0x4],r6
800063ba:	fb 49 06 90 	st.w	sp[1680],r9
800063be:	fb 48 06 8c 	st.w	sp[1676],r8
800063c2:	58 78       	cp.w	r8,7
800063c4:	e0 8a 00 09 	brle	800063d6 <_vfprintf_r+0x1eaa>
800063c8:	fa ca f9 78 	sub	r10,sp,-1672
800063cc:	02 9b       	mov	r11,r1
800063ce:	08 9c       	mov	r12,r4
800063d0:	fe b0 f0 a0 	rcall	80004510 <__sprint_r>
800063d4:	c2 b1       	brne	8000642a <_vfprintf_r+0x1efe>
800063d6:	40 bc       	lddsp	r12,sp[0x2c]
800063d8:	40 36       	lddsp	r6,sp[0xc]
800063da:	40 8e       	lddsp	lr,sp[0x20]
800063dc:	ec 0e 0c 48 	max	r8,r6,lr
800063e0:	10 0c       	add	r12,r8
800063e2:	50 bc       	stdsp	sp[0x2c],r12
800063e4:	fa f8 06 90 	ld.w	r8,sp[1680]
800063e8:	58 08       	cp.w	r8,0
800063ea:	c0 80       	breq	800063fa <_vfprintf_r+0x1ece>
800063ec:	fa ca f9 78 	sub	r10,sp,-1672
800063f0:	02 9b       	mov	r11,r1
800063f2:	08 9c       	mov	r12,r4
800063f4:	fe b0 f0 8e 	rcall	80004510 <__sprint_r>
800063f8:	c1 91       	brne	8000642a <_vfprintf_r+0x1efe>
800063fa:	30 0b       	mov	r11,0
800063fc:	fa c3 f9 e0 	sub	r3,sp,-1568
80006400:	fb 4b 06 8c 	st.w	sp[1676],r11
80006404:	fe 9f f1 22 	bral	80004648 <_vfprintf_r+0x11c>
80006408:	08 95       	mov	r5,r4
8000640a:	fa f8 06 90 	ld.w	r8,sp[1680]
8000640e:	58 08       	cp.w	r8,0
80006410:	c0 80       	breq	80006420 <_vfprintf_r+0x1ef4>
80006412:	08 9c       	mov	r12,r4
80006414:	fa ca f9 78 	sub	r10,sp,-1672
80006418:	02 9b       	mov	r11,r1
8000641a:	fe b0 f0 7b 	rcall	80004510 <__sprint_r>
8000641e:	c0 61       	brne	8000642a <_vfprintf_r+0x1efe>
80006420:	30 08       	mov	r8,0
80006422:	fb 48 06 8c 	st.w	sp[1676],r8
80006426:	c0 28       	rjmp	8000642a <_vfprintf_r+0x1efe>
80006428:	40 41       	lddsp	r1,sp[0x10]
8000642a:	82 68       	ld.sh	r8,r1[0xc]
8000642c:	ed b8 00 06 	bld	r8,0x6
80006430:	c0 31       	brne	80006436 <_vfprintf_r+0x1f0a>
80006432:	3f fa       	mov	r10,-1
80006434:	50 ba       	stdsp	sp[0x2c],r10
80006436:	40 bc       	lddsp	r12,sp[0x2c]
80006438:	fe 3d f9 44 	sub	sp,-1724
8000643c:	d8 32       	popm	r0-r7,pc
8000643e:	d7 03       	nop

80006440 <__swsetup_r>:
80006440:	d4 21       	pushm	r4-r7,lr
80006442:	e0 68 01 04 	mov	r8,260
80006446:	18 96       	mov	r6,r12
80006448:	16 97       	mov	r7,r11
8000644a:	70 0c       	ld.w	r12,r8[0x0]
8000644c:	58 0c       	cp.w	r12,0
8000644e:	c0 60       	breq	8000645a <__swsetup_r+0x1a>
80006450:	78 68       	ld.w	r8,r12[0x18]
80006452:	58 08       	cp.w	r8,0
80006454:	c0 31       	brne	8000645a <__swsetup_r+0x1a>
80006456:	e0 a0 07 b9 	rcall	800073c8 <__sinit>
8000645a:	fe c8 c4 9a 	sub	r8,pc,-15206
8000645e:	10 37       	cp.w	r7,r8
80006460:	c0 61       	brne	8000646c <__swsetup_r+0x2c>
80006462:	e0 68 01 04 	mov	r8,260
80006466:	70 08       	ld.w	r8,r8[0x0]
80006468:	70 07       	ld.w	r7,r8[0x0]
8000646a:	c1 28       	rjmp	8000648e <__swsetup_r+0x4e>
8000646c:	fe c8 c4 8c 	sub	r8,pc,-15220
80006470:	10 37       	cp.w	r7,r8
80006472:	c0 61       	brne	8000647e <__swsetup_r+0x3e>
80006474:	e0 68 01 04 	mov	r8,260
80006478:	70 08       	ld.w	r8,r8[0x0]
8000647a:	70 17       	ld.w	r7,r8[0x4]
8000647c:	c0 98       	rjmp	8000648e <__swsetup_r+0x4e>
8000647e:	fe c8 c4 7e 	sub	r8,pc,-15234
80006482:	10 37       	cp.w	r7,r8
80006484:	c0 51       	brne	8000648e <__swsetup_r+0x4e>
80006486:	e0 68 01 04 	mov	r8,260
8000648a:	70 08       	ld.w	r8,r8[0x0]
8000648c:	70 27       	ld.w	r7,r8[0x8]
8000648e:	8e 68       	ld.sh	r8,r7[0xc]
80006490:	ed b8 00 03 	bld	r8,0x3
80006494:	c1 e0       	breq	800064d0 <__swsetup_r+0x90>
80006496:	ed b8 00 04 	bld	r8,0x4
8000649a:	c3 e1       	brne	80006516 <__swsetup_r+0xd6>
8000649c:	ed b8 00 02 	bld	r8,0x2
800064a0:	c1 51       	brne	800064ca <__swsetup_r+0x8a>
800064a2:	6e db       	ld.w	r11,r7[0x34]
800064a4:	58 0b       	cp.w	r11,0
800064a6:	c0 a0       	breq	800064ba <__swsetup_r+0x7a>
800064a8:	ee c8 ff bc 	sub	r8,r7,-68
800064ac:	10 3b       	cp.w	r11,r8
800064ae:	c0 40       	breq	800064b6 <__swsetup_r+0x76>
800064b0:	0c 9c       	mov	r12,r6
800064b2:	e0 a0 08 25 	rcall	800074fc <_free_r>
800064b6:	30 08       	mov	r8,0
800064b8:	8f d8       	st.w	r7[0x34],r8
800064ba:	8e 68       	ld.sh	r8,r7[0xc]
800064bc:	e0 18 ff db 	andl	r8,0xffdb
800064c0:	ae 68       	st.h	r7[0xc],r8
800064c2:	30 08       	mov	r8,0
800064c4:	8f 18       	st.w	r7[0x4],r8
800064c6:	6e 48       	ld.w	r8,r7[0x10]
800064c8:	8f 08       	st.w	r7[0x0],r8
800064ca:	8e 68       	ld.sh	r8,r7[0xc]
800064cc:	a3 b8       	sbr	r8,0x3
800064ce:	ae 68       	st.h	r7[0xc],r8
800064d0:	6e 48       	ld.w	r8,r7[0x10]
800064d2:	58 08       	cp.w	r8,0
800064d4:	c0 b1       	brne	800064ea <__swsetup_r+0xaa>
800064d6:	8e 68       	ld.sh	r8,r7[0xc]
800064d8:	e2 18 02 80 	andl	r8,0x280,COH
800064dc:	e0 48 02 00 	cp.w	r8,512
800064e0:	c0 50       	breq	800064ea <__swsetup_r+0xaa>
800064e2:	0c 9c       	mov	r12,r6
800064e4:	0e 9b       	mov	r11,r7
800064e6:	e0 a0 0a 4b 	rcall	8000797c <__smakebuf_r>
800064ea:	8e 69       	ld.sh	r9,r7[0xc]
800064ec:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
800064f0:	c0 70       	breq	800064fe <__swsetup_r+0xbe>
800064f2:	30 08       	mov	r8,0
800064f4:	8f 28       	st.w	r7[0x8],r8
800064f6:	6e 58       	ld.w	r8,r7[0x14]
800064f8:	5c 38       	neg	r8
800064fa:	8f 68       	st.w	r7[0x18],r8
800064fc:	c0 68       	rjmp	80006508 <__swsetup_r+0xc8>
800064fe:	ed b9 00 01 	bld	r9,0x1
80006502:	ef f8 10 05 	ld.wne	r8,r7[0x14]
80006506:	8f 28       	st.w	r7[0x8],r8
80006508:	6e 48       	ld.w	r8,r7[0x10]
8000650a:	58 08       	cp.w	r8,0
8000650c:	c0 61       	brne	80006518 <__swsetup_r+0xd8>
8000650e:	8e 68       	ld.sh	r8,r7[0xc]
80006510:	ed b8 00 07 	bld	r8,0x7
80006514:	c0 21       	brne	80006518 <__swsetup_r+0xd8>
80006516:	dc 2a       	popm	r4-r7,pc,r12=-1
80006518:	d8 2a       	popm	r4-r7,pc,r12=0
8000651a:	d7 03       	nop

8000651c <quorem>:
8000651c:	d4 31       	pushm	r0-r7,lr
8000651e:	20 2d       	sub	sp,8
80006520:	18 97       	mov	r7,r12
80006522:	78 48       	ld.w	r8,r12[0x10]
80006524:	76 46       	ld.w	r6,r11[0x10]
80006526:	0c 38       	cp.w	r8,r6
80006528:	c0 34       	brge	8000652e <quorem+0x12>
8000652a:	30 0c       	mov	r12,0
8000652c:	c8 58       	rjmp	80006636 <quorem+0x11a>
8000652e:	ec c2 ff fc 	sub	r2,r6,-4
80006532:	f6 c3 ff ec 	sub	r3,r11,-20
80006536:	f6 02 03 29 	ld.w	r9,r11[r2<<0x2]
8000653a:	f8 02 03 2c 	ld.w	r12,r12[r2<<0x2]
8000653e:	2f f9       	sub	r9,-1
80006540:	20 16       	sub	r6,1
80006542:	f8 09 0d 08 	divu	r8,r12,r9
80006546:	f6 02 00 22 	add	r2,r11,r2<<0x2
8000654a:	ee c4 ff ec 	sub	r4,r7,-20
8000654e:	10 95       	mov	r5,r8
80006550:	58 08       	cp.w	r8,0
80006552:	c4 10       	breq	800065d4 <quorem+0xb8>
80006554:	30 09       	mov	r9,0
80006556:	06 9a       	mov	r10,r3
80006558:	08 98       	mov	r8,r4
8000655a:	12 91       	mov	r1,r9
8000655c:	50 0b       	stdsp	sp[0x0],r11
8000655e:	70 0e       	ld.w	lr,r8[0x0]
80006560:	b1 8e       	lsr	lr,0x10
80006562:	50 1e       	stdsp	sp[0x4],lr
80006564:	15 0e       	ld.w	lr,r10++
80006566:	fc 00 16 10 	lsr	r0,lr,0x10
8000656a:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
8000656e:	ea 0e 03 41 	mac	r1,r5,lr
80006572:	fd d1 c0 10 	bfextu	lr,r1,0x0,0x10
80006576:	b1 81       	lsr	r1,0x10
80006578:	40 1b       	lddsp	r11,sp[0x4]
8000657a:	ea 00 02 40 	mul	r0,r5,r0
8000657e:	e2 00 00 00 	add	r0,r1,r0
80006582:	e3 d0 c0 10 	bfextu	r1,r0,0x0,0x10
80006586:	02 1b       	sub	r11,r1
80006588:	50 1b       	stdsp	sp[0x4],r11
8000658a:	70 0b       	ld.w	r11,r8[0x0]
8000658c:	e3 db c0 10 	bfextu	r1,r11,0x0,0x10
80006590:	02 09       	add	r9,r1
80006592:	f2 0e 01 0e 	sub	lr,r9,lr
80006596:	b0 1e       	st.h	r8[0x2],lr
80006598:	fc 09 14 10 	asr	r9,lr,0x10
8000659c:	40 1e       	lddsp	lr,sp[0x4]
8000659e:	fc 09 00 09 	add	r9,lr,r9
800065a2:	b0 09       	st.h	r8[0x0],r9
800065a4:	e0 01 16 10 	lsr	r1,r0,0x10
800065a8:	2f c8       	sub	r8,-4
800065aa:	b1 49       	asr	r9,0x10
800065ac:	04 3a       	cp.w	r10,r2
800065ae:	fe 98 ff d8 	brls	8000655e <quorem+0x42>
800065b2:	40 0b       	lddsp	r11,sp[0x0]
800065b4:	58 0c       	cp.w	r12,0
800065b6:	c0 f1       	brne	800065d4 <quorem+0xb8>
800065b8:	ec c8 ff fb 	sub	r8,r6,-5
800065bc:	ee 08 00 28 	add	r8,r7,r8<<0x2
800065c0:	c0 28       	rjmp	800065c4 <quorem+0xa8>
800065c2:	20 16       	sub	r6,1
800065c4:	20 48       	sub	r8,4
800065c6:	08 38       	cp.w	r8,r4
800065c8:	e0 88 00 05 	brls	800065d2 <quorem+0xb6>
800065cc:	70 09       	ld.w	r9,r8[0x0]
800065ce:	58 09       	cp.w	r9,0
800065d0:	cf 90       	breq	800065c2 <quorem+0xa6>
800065d2:	8f 46       	st.w	r7[0x10],r6
800065d4:	0e 9c       	mov	r12,r7
800065d6:	e0 a0 0c fb 	rcall	80007fcc <__mcmp>
800065da:	c2 d5       	brlt	80006634 <quorem+0x118>
800065dc:	2f f5       	sub	r5,-1
800065de:	08 98       	mov	r8,r4
800065e0:	30 09       	mov	r9,0
800065e2:	07 0b       	ld.w	r11,r3++
800065e4:	f6 0a 16 10 	lsr	r10,r11,0x10
800065e8:	70 0c       	ld.w	r12,r8[0x0]
800065ea:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
800065ee:	f8 0e 16 10 	lsr	lr,r12,0x10
800065f2:	14 1e       	sub	lr,r10
800065f4:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
800065f8:	16 1a       	sub	r10,r11
800065fa:	12 0a       	add	r10,r9
800065fc:	b0 1a       	st.h	r8[0x2],r10
800065fe:	b1 4a       	asr	r10,0x10
80006600:	fc 0a 00 09 	add	r9,lr,r10
80006604:	b0 09       	st.h	r8[0x0],r9
80006606:	2f c8       	sub	r8,-4
80006608:	b1 49       	asr	r9,0x10
8000660a:	04 33       	cp.w	r3,r2
8000660c:	fe 98 ff eb 	brls	800065e2 <quorem+0xc6>
80006610:	ec c8 ff fb 	sub	r8,r6,-5
80006614:	ee 08 03 29 	ld.w	r9,r7[r8<<0x2]
80006618:	58 09       	cp.w	r9,0
8000661a:	c0 d1       	brne	80006634 <quorem+0x118>
8000661c:	ee 08 00 28 	add	r8,r7,r8<<0x2
80006620:	c0 28       	rjmp	80006624 <quorem+0x108>
80006622:	20 16       	sub	r6,1
80006624:	20 48       	sub	r8,4
80006626:	08 38       	cp.w	r8,r4
80006628:	e0 88 00 05 	brls	80006632 <quorem+0x116>
8000662c:	70 09       	ld.w	r9,r8[0x0]
8000662e:	58 09       	cp.w	r9,0
80006630:	cf 90       	breq	80006622 <quorem+0x106>
80006632:	8f 46       	st.w	r7[0x10],r6
80006634:	0a 9c       	mov	r12,r5
80006636:	2f ed       	sub	sp,-8
80006638:	d8 32       	popm	r0-r7,pc
8000663a:	d7 03       	nop

8000663c <_dtoa_r>:
8000663c:	d4 31       	pushm	r0-r7,lr
8000663e:	21 ad       	sub	sp,104
80006640:	fa c4 ff 74 	sub	r4,sp,-140
80006644:	18 97       	mov	r7,r12
80006646:	16 95       	mov	r5,r11
80006648:	68 2c       	ld.w	r12,r4[0x8]
8000664a:	50 c9       	stdsp	sp[0x30],r9
8000664c:	68 16       	ld.w	r6,r4[0x4]
8000664e:	68 09       	ld.w	r9,r4[0x0]
80006650:	50 e8       	stdsp	sp[0x38],r8
80006652:	14 94       	mov	r4,r10
80006654:	51 2c       	stdsp	sp[0x48],r12
80006656:	fa e5 00 08 	st.d	sp[8],r4
8000665a:	51 59       	stdsp	sp[0x54],r9
8000665c:	6e 95       	ld.w	r5,r7[0x24]
8000665e:	58 05       	cp.w	r5,0
80006660:	c0 91       	brne	80006672 <_dtoa_r+0x36>
80006662:	31 0c       	mov	r12,16
80006664:	e0 a0 09 ea 	rcall	80007a38 <malloc>
80006668:	99 35       	st.w	r12[0xc],r5
8000666a:	8f 9c       	st.w	r7[0x24],r12
8000666c:	99 15       	st.w	r12[0x4],r5
8000666e:	99 25       	st.w	r12[0x8],r5
80006670:	99 05       	st.w	r12[0x0],r5
80006672:	6e 99       	ld.w	r9,r7[0x24]
80006674:	72 08       	ld.w	r8,r9[0x0]
80006676:	58 08       	cp.w	r8,0
80006678:	c0 f0       	breq	80006696 <_dtoa_r+0x5a>
8000667a:	72 1a       	ld.w	r10,r9[0x4]
8000667c:	91 1a       	st.w	r8[0x4],r10
8000667e:	30 1a       	mov	r10,1
80006680:	72 19       	ld.w	r9,r9[0x4]
80006682:	f4 09 09 49 	lsl	r9,r10,r9
80006686:	10 9b       	mov	r11,r8
80006688:	91 29       	st.w	r8[0x8],r9
8000668a:	0e 9c       	mov	r12,r7
8000668c:	e0 a0 0c ba 	rcall	80008000 <_Bfree>
80006690:	6e 98       	ld.w	r8,r7[0x24]
80006692:	30 09       	mov	r9,0
80006694:	91 09       	st.w	r8[0x0],r9
80006696:	40 28       	lddsp	r8,sp[0x8]
80006698:	10 94       	mov	r4,r8
8000669a:	58 08       	cp.w	r8,0
8000669c:	c0 64       	brge	800066a8 <_dtoa_r+0x6c>
8000669e:	f1 d8 c0 1f 	bfextu	r8,r8,0x0,0x1f
800066a2:	50 28       	stdsp	sp[0x8],r8
800066a4:	30 18       	mov	r8,1
800066a6:	c0 28       	rjmp	800066aa <_dtoa_r+0x6e>
800066a8:	30 08       	mov	r8,0
800066aa:	8d 08       	st.w	r6[0x0],r8
800066ac:	fc 1c 7f f0 	movh	r12,0x7ff0
800066b0:	40 26       	lddsp	r6,sp[0x8]
800066b2:	0c 98       	mov	r8,r6
800066b4:	e6 18 7f f0 	andh	r8,0x7ff0,COH
800066b8:	18 38       	cp.w	r8,r12
800066ba:	c2 01       	brne	800066fa <_dtoa_r+0xbe>
800066bc:	e0 68 27 0f 	mov	r8,9999
800066c0:	41 5b       	lddsp	r11,sp[0x54]
800066c2:	97 08       	st.w	r11[0x0],r8
800066c4:	40 3a       	lddsp	r10,sp[0xc]
800066c6:	58 0a       	cp.w	r10,0
800066c8:	c0 71       	brne	800066d6 <_dtoa_r+0x9a>
800066ca:	ed d6 c0 14 	bfextu	r6,r6,0x0,0x14
800066ce:	c0 41       	brne	800066d6 <_dtoa_r+0x9a>
800066d0:	fe cc c7 20 	sub	r12,pc,-14560
800066d4:	c0 38       	rjmp	800066da <_dtoa_r+0x9e>
800066d6:	fe cc c7 1a 	sub	r12,pc,-14566
800066da:	41 29       	lddsp	r9,sp[0x48]
800066dc:	58 09       	cp.w	r9,0
800066de:	e0 80 05 9a 	breq	80007212 <_dtoa_r+0xbd6>
800066e2:	f8 c8 ff fd 	sub	r8,r12,-3
800066e6:	f8 c9 ff f8 	sub	r9,r12,-8
800066ea:	11 8b       	ld.ub	r11,r8[0x0]
800066ec:	30 0a       	mov	r10,0
800066ee:	41 25       	lddsp	r5,sp[0x48]
800066f0:	f4 0b 18 00 	cp.b	r11,r10
800066f4:	f2 08 17 10 	movne	r8,r9
800066f8:	c1 68       	rjmp	80006724 <_dtoa_r+0xe8>
800066fa:	fa ea 00 08 	ld.d	r10,sp[8]
800066fe:	30 08       	mov	r8,0
80006700:	fa eb 00 3c 	st.d	sp[60],r10
80006704:	30 09       	mov	r9,0
80006706:	e0 a0 13 88 	rcall	80008e16 <__avr32_f64_cmp_eq>
8000670a:	c1 00       	breq	8000672a <_dtoa_r+0xee>
8000670c:	30 18       	mov	r8,1
8000670e:	41 5a       	lddsp	r10,sp[0x54]
80006710:	95 08       	st.w	r10[0x0],r8
80006712:	fe cc c8 86 	sub	r12,pc,-14202
80006716:	41 29       	lddsp	r9,sp[0x48]
80006718:	f8 08 00 08 	add	r8,r12,r8
8000671c:	58 09       	cp.w	r9,0
8000671e:	e0 80 05 7a 	breq	80007212 <_dtoa_r+0xbd6>
80006722:	12 95       	mov	r5,r9
80006724:	8b 08       	st.w	r5[0x0],r8
80006726:	e0 8f 05 76 	bral	80007212 <_dtoa_r+0xbd6>
8000672a:	fa c8 ff 9c 	sub	r8,sp,-100
8000672e:	fa c9 ff a0 	sub	r9,sp,-96
80006732:	fa ea 00 3c 	ld.d	r10,sp[60]
80006736:	0e 9c       	mov	r12,r7
80006738:	eb d6 c2 8b 	bfextu	r5,r6,0x14,0xb
8000673c:	e0 a0 0c b4 	rcall	800080a4 <__d2b>
80006740:	18 93       	mov	r3,r12
80006742:	58 05       	cp.w	r5,0
80006744:	c0 d0       	breq	8000675e <_dtoa_r+0x122>
80006746:	fa ea 00 3c 	ld.d	r10,sp[60]
8000674a:	30 04       	mov	r4,0
8000674c:	f1 db c0 14 	bfextu	r8,r11,0x0,0x14
80006750:	ea c5 03 ff 	sub	r5,r5,1023
80006754:	10 9b       	mov	r11,r8
80006756:	51 74       	stdsp	sp[0x5c],r4
80006758:	ea 1b 3f f0 	orh	r11,0x3ff0
8000675c:	c2 58       	rjmp	800067a6 <_dtoa_r+0x16a>
8000675e:	41 88       	lddsp	r8,sp[0x60]
80006760:	41 9c       	lddsp	r12,sp[0x64]
80006762:	10 0c       	add	r12,r8
80006764:	f8 c5 fb ce 	sub	r5,r12,-1074
80006768:	e0 45 00 20 	cp.w	r5,32
8000676c:	e0 8a 00 0e 	brle	80006788 <_dtoa_r+0x14c>
80006770:	f8 cc fb ee 	sub	r12,r12,-1042
80006774:	40 3b       	lddsp	r11,sp[0xc]
80006776:	ea 08 11 40 	rsub	r8,r5,64
8000677a:	f6 0c 0a 4c 	lsr	r12,r11,r12
8000677e:	ec 08 09 46 	lsl	r6,r6,r8
80006782:	0c 4c       	or	r12,r6
80006784:	c0 78       	rjmp	80006792 <_dtoa_r+0x156>
80006786:	d7 03       	nop
80006788:	ea 0c 11 20 	rsub	r12,r5,32
8000678c:	40 3a       	lddsp	r10,sp[0xc]
8000678e:	f4 0c 09 4c 	lsl	r12,r10,r12
80006792:	fe b0 eb c9 	rcall	80003f24 <__avr32_u32_to_f64>
80006796:	fc 18 fe 10 	movh	r8,0xfe10
8000679a:	30 19       	mov	r9,1
8000679c:	ea c5 04 33 	sub	r5,r5,1075
800067a0:	f0 0b 00 0b 	add	r11,r8,r11
800067a4:	51 79       	stdsp	sp[0x5c],r9
800067a6:	30 08       	mov	r8,0
800067a8:	fc 19 3f f8 	movh	r9,0x3ff8
800067ac:	e0 a0 11 ca 	rcall	80008b40 <__avr32_f64_sub>
800067b0:	e0 68 43 61 	mov	r8,17249
800067b4:	ea 18 63 6f 	orh	r8,0x636f
800067b8:	e0 69 87 a7 	mov	r9,34727
800067bc:	ea 19 3f d2 	orh	r9,0x3fd2
800067c0:	fe b0 ea c8 	rcall	80003d50 <__avr32_f64_mul>
800067c4:	e0 68 c8 b3 	mov	r8,51379
800067c8:	ea 18 8b 60 	orh	r8,0x8b60
800067cc:	e0 69 8a 28 	mov	r9,35368
800067d0:	ea 19 3f c6 	orh	r9,0x3fc6
800067d4:	e0 a0 12 84 	rcall	80008cdc <__avr32_f64_add>
800067d8:	0a 9c       	mov	r12,r5
800067da:	14 90       	mov	r0,r10
800067dc:	16 91       	mov	r1,r11
800067de:	fe b0 eb a7 	rcall	80003f2c <__avr32_s32_to_f64>
800067e2:	e0 68 79 fb 	mov	r8,31227
800067e6:	ea 18 50 9f 	orh	r8,0x509f
800067ea:	e0 69 44 13 	mov	r9,17427
800067ee:	ea 19 3f d3 	orh	r9,0x3fd3
800067f2:	fe b0 ea af 	rcall	80003d50 <__avr32_f64_mul>
800067f6:	14 98       	mov	r8,r10
800067f8:	16 99       	mov	r9,r11
800067fa:	00 9a       	mov	r10,r0
800067fc:	02 9b       	mov	r11,r1
800067fe:	e0 a0 12 6f 	rcall	80008cdc <__avr32_f64_add>
80006802:	14 90       	mov	r0,r10
80006804:	16 91       	mov	r1,r11
80006806:	e0 a0 12 f5 	rcall	80008df0 <__avr32_f64_to_s32>
8000680a:	30 08       	mov	r8,0
8000680c:	18 96       	mov	r6,r12
8000680e:	30 09       	mov	r9,0
80006810:	00 9a       	mov	r10,r0
80006812:	02 9b       	mov	r11,r1
80006814:	fe b0 eb fc 	rcall	8000400c <__avr32_f64_cmp_lt>
80006818:	c0 c0       	breq	80006830 <_dtoa_r+0x1f4>
8000681a:	0c 9c       	mov	r12,r6
8000681c:	fe b0 eb 88 	rcall	80003f2c <__avr32_s32_to_f64>
80006820:	14 98       	mov	r8,r10
80006822:	16 99       	mov	r9,r11
80006824:	00 9a       	mov	r10,r0
80006826:	02 9b       	mov	r11,r1
80006828:	e0 a0 12 f7 	rcall	80008e16 <__avr32_f64_cmp_eq>
8000682c:	f7 b6 00 01 	subeq	r6,1
80006830:	59 66       	cp.w	r6,22
80006832:	e0 88 00 05 	brls	8000683c <_dtoa_r+0x200>
80006836:	30 18       	mov	r8,1
80006838:	51 48       	stdsp	sp[0x50],r8
8000683a:	c1 38       	rjmp	80006860 <_dtoa_r+0x224>
8000683c:	fe c8 c7 d0 	sub	r8,pc,-14384
80006840:	fa ea 00 3c 	ld.d	r10,sp[60]
80006844:	f0 06 02 38 	ld.d	r8,r8[r6<<0x3]
80006848:	fe b0 eb e2 	rcall	8000400c <__avr32_f64_cmp_lt>
8000684c:	f9 b4 00 00 	moveq	r4,0
80006850:	fb f4 0a 14 	st.weq	sp[0x50],r4
80006854:	f7 b6 01 01 	subne	r6,1
80006858:	f9 bc 01 00 	movne	r12,0
8000685c:	fb fc 1a 14 	st.wne	sp[0x50],r12
80006860:	41 90       	lddsp	r0,sp[0x64]
80006862:	20 10       	sub	r0,1
80006864:	0a 10       	sub	r0,r5
80006866:	c0 46       	brmi	8000686e <_dtoa_r+0x232>
80006868:	50 40       	stdsp	sp[0x10],r0
8000686a:	30 00       	mov	r0,0
8000686c:	c0 48       	rjmp	80006874 <_dtoa_r+0x238>
8000686e:	30 0b       	mov	r11,0
80006870:	5c 30       	neg	r0
80006872:	50 4b       	stdsp	sp[0x10],r11
80006874:	ec 02 11 00 	rsub	r2,r6,0
80006878:	58 06       	cp.w	r6,0
8000687a:	fb fa 40 04 	ld.wge	r10,sp[0x10]
8000687e:	f5 d6 e4 0a 	addge	r10,r10,r6
80006882:	fb fa 4a 04 	st.wge	sp[0x10],r10
80006886:	fb f6 4a 11 	st.wge	sp[0x44],r6
8000688a:	f9 b2 04 00 	movge	r2,0
8000688e:	e1 d6 e5 10 	sublt	r0,r0,r6
80006892:	f9 b9 05 00 	movlt	r9,0
80006896:	fb f9 5a 11 	st.wlt	sp[0x44],r9
8000689a:	40 c8       	lddsp	r8,sp[0x30]
8000689c:	58 98       	cp.w	r8,9
8000689e:	e0 8b 00 20 	brhi	800068de <_dtoa_r+0x2a2>
800068a2:	58 58       	cp.w	r8,5
800068a4:	f9 b4 0a 01 	movle	r4,1
800068a8:	fb f5 90 0c 	ld.wgt	r5,sp[0x30]
800068ac:	f7 b5 09 04 	subgt	r5,4
800068b0:	fb f5 9a 0c 	st.wgt	sp[0x30],r5
800068b4:	f9 b4 09 00 	movgt	r4,0
800068b8:	40 cc       	lddsp	r12,sp[0x30]
800068ba:	58 3c       	cp.w	r12,3
800068bc:	c2 d0       	breq	80006916 <_dtoa_r+0x2da>
800068be:	e0 89 00 05 	brgt	800068c8 <_dtoa_r+0x28c>
800068c2:	58 2c       	cp.w	r12,2
800068c4:	c1 01       	brne	800068e4 <_dtoa_r+0x2a8>
800068c6:	c1 88       	rjmp	800068f6 <_dtoa_r+0x2ba>
800068c8:	40 cb       	lddsp	r11,sp[0x30]
800068ca:	58 4b       	cp.w	r11,4
800068cc:	c0 60       	breq	800068d8 <_dtoa_r+0x29c>
800068ce:	58 5b       	cp.w	r11,5
800068d0:	c0 a1       	brne	800068e4 <_dtoa_r+0x2a8>
800068d2:	30 1a       	mov	r10,1
800068d4:	50 da       	stdsp	sp[0x34],r10
800068d6:	c2 28       	rjmp	8000691a <_dtoa_r+0x2de>
800068d8:	30 19       	mov	r9,1
800068da:	50 d9       	stdsp	sp[0x34],r9
800068dc:	c0 f8       	rjmp	800068fa <_dtoa_r+0x2be>
800068de:	30 08       	mov	r8,0
800068e0:	30 14       	mov	r4,1
800068e2:	50 c8       	stdsp	sp[0x30],r8
800068e4:	3f f5       	mov	r5,-1
800068e6:	30 1c       	mov	r12,1
800068e8:	30 0b       	mov	r11,0
800068ea:	50 95       	stdsp	sp[0x24],r5
800068ec:	50 dc       	stdsp	sp[0x34],r12
800068ee:	0a 91       	mov	r1,r5
800068f0:	31 28       	mov	r8,18
800068f2:	50 eb       	stdsp	sp[0x38],r11
800068f4:	c2 08       	rjmp	80006934 <_dtoa_r+0x2f8>
800068f6:	30 0a       	mov	r10,0
800068f8:	50 da       	stdsp	sp[0x34],r10
800068fa:	40 e9       	lddsp	r9,sp[0x38]
800068fc:	58 09       	cp.w	r9,0
800068fe:	e0 89 00 07 	brgt	8000690c <_dtoa_r+0x2d0>
80006902:	30 18       	mov	r8,1
80006904:	50 98       	stdsp	sp[0x24],r8
80006906:	10 91       	mov	r1,r8
80006908:	50 e8       	stdsp	sp[0x38],r8
8000690a:	c1 58       	rjmp	80006934 <_dtoa_r+0x2f8>
8000690c:	40 e5       	lddsp	r5,sp[0x38]
8000690e:	50 95       	stdsp	sp[0x24],r5
80006910:	0a 91       	mov	r1,r5
80006912:	0a 98       	mov	r8,r5
80006914:	c1 08       	rjmp	80006934 <_dtoa_r+0x2f8>
80006916:	30 0c       	mov	r12,0
80006918:	50 dc       	stdsp	sp[0x34],r12
8000691a:	40 eb       	lddsp	r11,sp[0x38]
8000691c:	ec 0b 00 0b 	add	r11,r6,r11
80006920:	50 9b       	stdsp	sp[0x24],r11
80006922:	16 98       	mov	r8,r11
80006924:	2f f8       	sub	r8,-1
80006926:	58 08       	cp.w	r8,0
80006928:	e0 89 00 05 	brgt	80006932 <_dtoa_r+0x2f6>
8000692c:	10 91       	mov	r1,r8
8000692e:	30 18       	mov	r8,1
80006930:	c0 28       	rjmp	80006934 <_dtoa_r+0x2f8>
80006932:	10 91       	mov	r1,r8
80006934:	30 09       	mov	r9,0
80006936:	6e 9a       	ld.w	r10,r7[0x24]
80006938:	95 19       	st.w	r10[0x4],r9
8000693a:	30 49       	mov	r9,4
8000693c:	c0 68       	rjmp	80006948 <_dtoa_r+0x30c>
8000693e:	d7 03       	nop
80006940:	6a 1a       	ld.w	r10,r5[0x4]
80006942:	a1 79       	lsl	r9,0x1
80006944:	2f fa       	sub	r10,-1
80006946:	8b 1a       	st.w	r5[0x4],r10
80006948:	6e 95       	ld.w	r5,r7[0x24]
8000694a:	f2 ca ff ec 	sub	r10,r9,-20
8000694e:	10 3a       	cp.w	r10,r8
80006950:	fe 98 ff f8 	brls	80006940 <_dtoa_r+0x304>
80006954:	6a 1b       	ld.w	r11,r5[0x4]
80006956:	0e 9c       	mov	r12,r7
80006958:	e0 a0 0b 6e 	rcall	80008034 <_Balloc>
8000695c:	58 e1       	cp.w	r1,14
8000695e:	5f 88       	srls	r8
80006960:	8b 0c       	st.w	r5[0x0],r12
80006962:	f1 e4 00 04 	and	r4,r8,r4
80006966:	6e 98       	ld.w	r8,r7[0x24]
80006968:	70 08       	ld.w	r8,r8[0x0]
8000696a:	50 88       	stdsp	sp[0x20],r8
8000696c:	e0 80 01 82 	breq	80006c70 <_dtoa_r+0x634>
80006970:	58 06       	cp.w	r6,0
80006972:	e0 8a 00 43 	brle	800069f8 <_dtoa_r+0x3bc>
80006976:	f3 d6 c0 04 	bfextu	r9,r6,0x0,0x4
8000697a:	fe c8 c9 0e 	sub	r8,pc,-14066
8000697e:	f0 09 02 34 	ld.d	r4,r8[r9<<0x3]
80006982:	fa e5 00 18 	st.d	sp[24],r4
80006986:	ec 04 14 04 	asr	r4,r6,0x4
8000698a:	ed b4 00 04 	bld	r4,0x4
8000698e:	c0 30       	breq	80006994 <_dtoa_r+0x358>
80006990:	30 25       	mov	r5,2
80006992:	c1 08       	rjmp	800069b2 <_dtoa_r+0x376>
80006994:	fe c8 c8 60 	sub	r8,pc,-14240
80006998:	f0 e8 00 20 	ld.d	r8,r8[32]
8000699c:	fa ea 00 3c 	ld.d	r10,sp[60]
800069a0:	e9 d4 c0 04 	bfextu	r4,r4,0x0,0x4
800069a4:	e0 a0 12 80 	rcall	80008ea4 <__avr32_f64_div>
800069a8:	30 35       	mov	r5,3
800069aa:	14 98       	mov	r8,r10
800069ac:	16 99       	mov	r9,r11
800069ae:	fa e9 00 08 	st.d	sp[8],r8
800069b2:	fe cc c8 7e 	sub	r12,pc,-14210
800069b6:	50 a3       	stdsp	sp[0x28],r3
800069b8:	0c 93       	mov	r3,r6
800069ba:	18 96       	mov	r6,r12
800069bc:	c0 f8       	rjmp	800069da <_dtoa_r+0x39e>
800069be:	fa ea 00 18 	ld.d	r10,sp[24]
800069c2:	ed b4 00 00 	bld	r4,0x0
800069c6:	c0 81       	brne	800069d6 <_dtoa_r+0x39a>
800069c8:	ec e8 00 00 	ld.d	r8,r6[0]
800069cc:	2f f5       	sub	r5,-1
800069ce:	fe b0 e9 c1 	rcall	80003d50 <__avr32_f64_mul>
800069d2:	fa eb 00 18 	st.d	sp[24],r10
800069d6:	a1 54       	asr	r4,0x1
800069d8:	2f 86       	sub	r6,-8
800069da:	58 04       	cp.w	r4,0
800069dc:	cf 11       	brne	800069be <_dtoa_r+0x382>
800069de:	fa e8 00 18 	ld.d	r8,sp[24]
800069e2:	fa ea 00 08 	ld.d	r10,sp[8]
800069e6:	06 96       	mov	r6,r3
800069e8:	e0 a0 12 5e 	rcall	80008ea4 <__avr32_f64_div>
800069ec:	40 a3       	lddsp	r3,sp[0x28]
800069ee:	14 98       	mov	r8,r10
800069f0:	16 99       	mov	r9,r11
800069f2:	fa e9 00 08 	st.d	sp[8],r8
800069f6:	c2 f8       	rjmp	80006a54 <_dtoa_r+0x418>
800069f8:	ec 08 11 00 	rsub	r8,r6,0
800069fc:	c0 31       	brne	80006a02 <_dtoa_r+0x3c6>
800069fe:	30 25       	mov	r5,2
80006a00:	c2 a8       	rjmp	80006a54 <_dtoa_r+0x418>
80006a02:	fe cc c8 ce 	sub	r12,pc,-14130
80006a06:	f0 04 14 04 	asr	r4,r8,0x4
80006a0a:	50 1c       	stdsp	sp[0x4],r12
80006a0c:	f1 d8 c0 04 	bfextu	r8,r8,0x0,0x4
80006a10:	fe c9 c9 a4 	sub	r9,pc,-13916
80006a14:	fa ea 00 3c 	ld.d	r10,sp[60]
80006a18:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
80006a1c:	fe b0 e9 9a 	rcall	80003d50 <__avr32_f64_mul>
80006a20:	40 1c       	lddsp	r12,sp[0x4]
80006a22:	50 63       	stdsp	sp[0x18],r3
80006a24:	30 25       	mov	r5,2
80006a26:	0c 93       	mov	r3,r6
80006a28:	fa eb 00 08 	st.d	sp[8],r10
80006a2c:	18 96       	mov	r6,r12
80006a2e:	c0 f8       	rjmp	80006a4c <_dtoa_r+0x410>
80006a30:	fa ea 00 08 	ld.d	r10,sp[8]
80006a34:	ed b4 00 00 	bld	r4,0x0
80006a38:	c0 81       	brne	80006a48 <_dtoa_r+0x40c>
80006a3a:	ec e8 00 00 	ld.d	r8,r6[0]
80006a3e:	2f f5       	sub	r5,-1
80006a40:	fe b0 e9 88 	rcall	80003d50 <__avr32_f64_mul>
80006a44:	fa eb 00 08 	st.d	sp[8],r10
80006a48:	a1 54       	asr	r4,0x1
80006a4a:	2f 86       	sub	r6,-8
80006a4c:	58 04       	cp.w	r4,0
80006a4e:	cf 11       	brne	80006a30 <_dtoa_r+0x3f4>
80006a50:	06 96       	mov	r6,r3
80006a52:	40 63       	lddsp	r3,sp[0x18]
80006a54:	41 4a       	lddsp	r10,sp[0x50]
80006a56:	58 0a       	cp.w	r10,0
80006a58:	c2 a0       	breq	80006aac <_dtoa_r+0x470>
80006a5a:	fa e8 00 08 	ld.d	r8,sp[8]
80006a5e:	58 01       	cp.w	r1,0
80006a60:	5f 94       	srgt	r4
80006a62:	fa e9 00 18 	st.d	sp[24],r8
80006a66:	30 08       	mov	r8,0
80006a68:	fc 19 3f f0 	movh	r9,0x3ff0
80006a6c:	fa ea 00 18 	ld.d	r10,sp[24]
80006a70:	fe b0 ea ce 	rcall	8000400c <__avr32_f64_cmp_lt>
80006a74:	f9 bc 00 00 	moveq	r12,0
80006a78:	f9 bc 01 01 	movne	r12,1
80006a7c:	e9 ec 00 0c 	and	r12,r4,r12
80006a80:	c1 60       	breq	80006aac <_dtoa_r+0x470>
80006a82:	40 98       	lddsp	r8,sp[0x24]
80006a84:	58 08       	cp.w	r8,0
80006a86:	e0 8a 00 f1 	brle	80006c68 <_dtoa_r+0x62c>
80006a8a:	30 08       	mov	r8,0
80006a8c:	fc 19 40 24 	movh	r9,0x4024
80006a90:	ec c4 00 01 	sub	r4,r6,1
80006a94:	fa ea 00 18 	ld.d	r10,sp[24]
80006a98:	2f f5       	sub	r5,-1
80006a9a:	50 64       	stdsp	sp[0x18],r4
80006a9c:	fe b0 e9 5a 	rcall	80003d50 <__avr32_f64_mul>
80006aa0:	40 94       	lddsp	r4,sp[0x24]
80006aa2:	14 98       	mov	r8,r10
80006aa4:	16 99       	mov	r9,r11
80006aa6:	fa e9 00 08 	st.d	sp[8],r8
80006aaa:	c0 38       	rjmp	80006ab0 <_dtoa_r+0x474>
80006aac:	50 66       	stdsp	sp[0x18],r6
80006aae:	02 94       	mov	r4,r1
80006ab0:	0a 9c       	mov	r12,r5
80006ab2:	fe b0 ea 3d 	rcall	80003f2c <__avr32_s32_to_f64>
80006ab6:	fa e8 00 08 	ld.d	r8,sp[8]
80006aba:	fe b0 e9 4b 	rcall	80003d50 <__avr32_f64_mul>
80006abe:	30 08       	mov	r8,0
80006ac0:	fc 19 40 1c 	movh	r9,0x401c
80006ac4:	e0 a0 11 0c 	rcall	80008cdc <__avr32_f64_add>
80006ac8:	14 98       	mov	r8,r10
80006aca:	16 99       	mov	r9,r11
80006acc:	fa e9 00 28 	st.d	sp[40],r8
80006ad0:	fc 18 fc c0 	movh	r8,0xfcc0
80006ad4:	40 a5       	lddsp	r5,sp[0x28]
80006ad6:	10 05       	add	r5,r8
80006ad8:	50 a5       	stdsp	sp[0x28],r5
80006ada:	58 04       	cp.w	r4,0
80006adc:	c2 11       	brne	80006b1e <_dtoa_r+0x4e2>
80006ade:	fa ea 00 08 	ld.d	r10,sp[8]
80006ae2:	30 08       	mov	r8,0
80006ae4:	fc 19 40 14 	movh	r9,0x4014
80006ae8:	e0 a0 10 2c 	rcall	80008b40 <__avr32_f64_sub>
80006aec:	40 bc       	lddsp	r12,sp[0x2c]
80006aee:	fa eb 00 08 	st.d	sp[8],r10
80006af2:	14 98       	mov	r8,r10
80006af4:	16 99       	mov	r9,r11
80006af6:	18 9a       	mov	r10,r12
80006af8:	0a 9b       	mov	r11,r5
80006afa:	fe b0 ea 89 	rcall	8000400c <__avr32_f64_cmp_lt>
80006afe:	e0 81 02 54 	brne	80006fa6 <_dtoa_r+0x96a>
80006b02:	0a 98       	mov	r8,r5
80006b04:	40 b9       	lddsp	r9,sp[0x2c]
80006b06:	ee 18 80 00 	eorh	r8,0x8000
80006b0a:	fa ea 00 08 	ld.d	r10,sp[8]
80006b0e:	10 95       	mov	r5,r8
80006b10:	12 98       	mov	r8,r9
80006b12:	0a 99       	mov	r9,r5
80006b14:	fe b0 ea 7c 	rcall	8000400c <__avr32_f64_cmp_lt>
80006b18:	e0 81 02 3e 	brne	80006f94 <_dtoa_r+0x958>
80006b1c:	ca 68       	rjmp	80006c68 <_dtoa_r+0x62c>
80006b1e:	fe c9 ca b2 	sub	r9,pc,-13646
80006b22:	e8 c8 00 01 	sub	r8,r4,1
80006b26:	40 d5       	lddsp	r5,sp[0x34]
80006b28:	58 05       	cp.w	r5,0
80006b2a:	c4 f0       	breq	80006bc8 <_dtoa_r+0x58c>
80006b2c:	30 0c       	mov	r12,0
80006b2e:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
80006b32:	51 3c       	stdsp	sp[0x4c],r12
80006b34:	30 0a       	mov	r10,0
80006b36:	fc 1b 3f e0 	movh	r11,0x3fe0
80006b3a:	e0 a0 11 b5 	rcall	80008ea4 <__avr32_f64_div>
80006b3e:	fa e8 00 28 	ld.d	r8,sp[40]
80006b42:	40 85       	lddsp	r5,sp[0x20]
80006b44:	e0 a0 0f fe 	rcall	80008b40 <__avr32_f64_sub>
80006b48:	fa eb 00 28 	st.d	sp[40],r10
80006b4c:	fa ea 00 08 	ld.d	r10,sp[8]
80006b50:	e0 a0 11 50 	rcall	80008df0 <__avr32_f64_to_s32>
80006b54:	51 6c       	stdsp	sp[0x58],r12
80006b56:	fe b0 e9 eb 	rcall	80003f2c <__avr32_s32_to_f64>
80006b5a:	14 98       	mov	r8,r10
80006b5c:	16 99       	mov	r9,r11
80006b5e:	fa ea 00 08 	ld.d	r10,sp[8]
80006b62:	e0 a0 0f ef 	rcall	80008b40 <__avr32_f64_sub>
80006b66:	fa eb 00 08 	st.d	sp[8],r10
80006b6a:	41 68       	lddsp	r8,sp[0x58]
80006b6c:	2d 08       	sub	r8,-48
80006b6e:	0a c8       	st.b	r5++,r8
80006b70:	41 39       	lddsp	r9,sp[0x4c]
80006b72:	2f f9       	sub	r9,-1
80006b74:	51 39       	stdsp	sp[0x4c],r9
80006b76:	fa e8 00 28 	ld.d	r8,sp[40]
80006b7a:	fe b0 ea 49 	rcall	8000400c <__avr32_f64_cmp_lt>
80006b7e:	e0 81 03 39 	brne	800071f0 <_dtoa_r+0xbb4>
80006b82:	fa e8 00 08 	ld.d	r8,sp[8]
80006b86:	30 0a       	mov	r10,0
80006b88:	fc 1b 3f f0 	movh	r11,0x3ff0
80006b8c:	e0 a0 0f da 	rcall	80008b40 <__avr32_f64_sub>
80006b90:	fa e8 00 28 	ld.d	r8,sp[40]
80006b94:	fe b0 ea 3c 	rcall	8000400c <__avr32_f64_cmp_lt>
80006b98:	fa ea 00 28 	ld.d	r10,sp[40]
80006b9c:	30 08       	mov	r8,0
80006b9e:	fc 19 40 24 	movh	r9,0x4024
80006ba2:	e0 81 00 da 	brne	80006d56 <_dtoa_r+0x71a>
80006ba6:	41 3c       	lddsp	r12,sp[0x4c]
80006ba8:	08 3c       	cp.w	r12,r4
80006baa:	c5 f4       	brge	80006c68 <_dtoa_r+0x62c>
80006bac:	fe b0 e8 d2 	rcall	80003d50 <__avr32_f64_mul>
80006bb0:	30 08       	mov	r8,0
80006bb2:	fa eb 00 28 	st.d	sp[40],r10
80006bb6:	fc 19 40 24 	movh	r9,0x4024
80006bba:	fa ea 00 08 	ld.d	r10,sp[8]
80006bbe:	fe b0 e8 c9 	rcall	80003d50 <__avr32_f64_mul>
80006bc2:	fa eb 00 08 	st.d	sp[8],r10
80006bc6:	cc 3b       	rjmp	80006b4c <_dtoa_r+0x510>
80006bc8:	40 85       	lddsp	r5,sp[0x20]
80006bca:	08 05       	add	r5,r4
80006bcc:	f2 08 02 3a 	ld.d	r10,r9[r8<<0x3]
80006bd0:	51 35       	stdsp	sp[0x4c],r5
80006bd2:	fa e8 00 28 	ld.d	r8,sp[40]
80006bd6:	40 85       	lddsp	r5,sp[0x20]
80006bd8:	fe b0 e8 bc 	rcall	80003d50 <__avr32_f64_mul>
80006bdc:	fa eb 00 28 	st.d	sp[40],r10
80006be0:	fa ea 00 08 	ld.d	r10,sp[8]
80006be4:	e0 a0 11 06 	rcall	80008df0 <__avr32_f64_to_s32>
80006be8:	51 6c       	stdsp	sp[0x58],r12
80006bea:	fe b0 e9 a1 	rcall	80003f2c <__avr32_s32_to_f64>
80006bee:	14 98       	mov	r8,r10
80006bf0:	16 99       	mov	r9,r11
80006bf2:	fa ea 00 08 	ld.d	r10,sp[8]
80006bf6:	e0 a0 0f a5 	rcall	80008b40 <__avr32_f64_sub>
80006bfa:	fa eb 00 08 	st.d	sp[8],r10
80006bfe:	41 68       	lddsp	r8,sp[0x58]
80006c00:	2d 08       	sub	r8,-48
80006c02:	0a c8       	st.b	r5++,r8
80006c04:	41 3c       	lddsp	r12,sp[0x4c]
80006c06:	18 35       	cp.w	r5,r12
80006c08:	c2 81       	brne	80006c58 <_dtoa_r+0x61c>
80006c0a:	30 08       	mov	r8,0
80006c0c:	fc 19 3f e0 	movh	r9,0x3fe0
80006c10:	fa ea 00 28 	ld.d	r10,sp[40]
80006c14:	e0 a0 10 64 	rcall	80008cdc <__avr32_f64_add>
80006c18:	40 85       	lddsp	r5,sp[0x20]
80006c1a:	fa e8 00 08 	ld.d	r8,sp[8]
80006c1e:	08 05       	add	r5,r4
80006c20:	fe b0 e9 f6 	rcall	8000400c <__avr32_f64_cmp_lt>
80006c24:	e0 81 00 99 	brne	80006d56 <_dtoa_r+0x71a>
80006c28:	fa e8 00 28 	ld.d	r8,sp[40]
80006c2c:	30 0a       	mov	r10,0
80006c2e:	fc 1b 3f e0 	movh	r11,0x3fe0
80006c32:	e0 a0 0f 87 	rcall	80008b40 <__avr32_f64_sub>
80006c36:	14 98       	mov	r8,r10
80006c38:	16 99       	mov	r9,r11
80006c3a:	fa ea 00 08 	ld.d	r10,sp[8]
80006c3e:	fe b0 e9 e7 	rcall	8000400c <__avr32_f64_cmp_lt>
80006c42:	c1 30       	breq	80006c68 <_dtoa_r+0x62c>
80006c44:	33 09       	mov	r9,48
80006c46:	0a 98       	mov	r8,r5
80006c48:	11 7a       	ld.ub	r10,--r8
80006c4a:	f2 0a 18 00 	cp.b	r10,r9
80006c4e:	e0 81 02 d1 	brne	800071f0 <_dtoa_r+0xbb4>
80006c52:	10 95       	mov	r5,r8
80006c54:	cf 9b       	rjmp	80006c46 <_dtoa_r+0x60a>
80006c56:	d7 03       	nop
80006c58:	30 08       	mov	r8,0
80006c5a:	fc 19 40 24 	movh	r9,0x4024
80006c5e:	fe b0 e8 79 	rcall	80003d50 <__avr32_f64_mul>
80006c62:	fa eb 00 08 	st.d	sp[8],r10
80006c66:	cb db       	rjmp	80006be0 <_dtoa_r+0x5a4>
80006c68:	fa ea 00 3c 	ld.d	r10,sp[60]
80006c6c:	fa eb 00 08 	st.d	sp[8],r10
80006c70:	58 e6       	cp.w	r6,14
80006c72:	5f ab       	srle	r11
80006c74:	41 8a       	lddsp	r10,sp[0x60]
80006c76:	30 08       	mov	r8,0
80006c78:	f4 09 11 ff 	rsub	r9,r10,-1
80006c7c:	f7 e9 03 f9 	and	r9,r11,r9>>0x1f
80006c80:	f0 09 18 00 	cp.b	r9,r8
80006c84:	e0 80 00 82 	breq	80006d88 <_dtoa_r+0x74c>
80006c88:	40 ea       	lddsp	r10,sp[0x38]
80006c8a:	58 01       	cp.w	r1,0
80006c8c:	5f a9       	srle	r9
80006c8e:	f3 ea 03 f9 	and	r9,r9,r10>>0x1f
80006c92:	fe ca cc 26 	sub	r10,pc,-13274
80006c96:	f4 06 02 34 	ld.d	r4,r10[r6<<0x3]
80006c9a:	fa e5 00 10 	st.d	sp[16],r4
80006c9e:	f0 09 18 00 	cp.b	r9,r8
80006ca2:	c1 40       	breq	80006cca <_dtoa_r+0x68e>
80006ca4:	58 01       	cp.w	r1,0
80006ca6:	e0 81 01 77 	brne	80006f94 <_dtoa_r+0x958>
80006caa:	30 08       	mov	r8,0
80006cac:	fc 19 40 14 	movh	r9,0x4014
80006cb0:	08 9a       	mov	r10,r4
80006cb2:	0a 9b       	mov	r11,r5
80006cb4:	fe b0 e8 4e 	rcall	80003d50 <__avr32_f64_mul>
80006cb8:	fa e8 00 08 	ld.d	r8,sp[8]
80006cbc:	e0 a0 10 c0 	rcall	80008e3c <__avr32_f64_cmp_ge>
80006cc0:	e0 81 01 6a 	brne	80006f94 <_dtoa_r+0x958>
80006cc4:	02 92       	mov	r2,r1
80006cc6:	e0 8f 01 72 	bral	80006faa <_dtoa_r+0x96e>
80006cca:	40 85       	lddsp	r5,sp[0x20]
80006ccc:	30 14       	mov	r4,1
80006cce:	fa e8 00 10 	ld.d	r8,sp[16]
80006cd2:	fa ea 00 08 	ld.d	r10,sp[8]
80006cd6:	e0 a0 10 e7 	rcall	80008ea4 <__avr32_f64_div>
80006cda:	e0 a0 10 8b 	rcall	80008df0 <__avr32_f64_to_s32>
80006cde:	18 92       	mov	r2,r12
80006ce0:	fe b0 e9 26 	rcall	80003f2c <__avr32_s32_to_f64>
80006ce4:	fa e8 00 10 	ld.d	r8,sp[16]
80006ce8:	fe b0 e8 34 	rcall	80003d50 <__avr32_f64_mul>
80006cec:	14 98       	mov	r8,r10
80006cee:	16 99       	mov	r9,r11
80006cf0:	fa ea 00 08 	ld.d	r10,sp[8]
80006cf4:	e0 a0 0f 26 	rcall	80008b40 <__avr32_f64_sub>
80006cf8:	fa eb 00 08 	st.d	sp[8],r10
80006cfc:	e4 c8 ff d0 	sub	r8,r2,-48
80006d00:	0a c8       	st.b	r5++,r8
80006d02:	fc 19 40 24 	movh	r9,0x4024
80006d06:	30 08       	mov	r8,0
80006d08:	02 34       	cp.w	r4,r1
80006d0a:	c3 31       	brne	80006d70 <_dtoa_r+0x734>
80006d0c:	fa e8 00 08 	ld.d	r8,sp[8]
80006d10:	e0 a0 0f e6 	rcall	80008cdc <__avr32_f64_add>
80006d14:	16 91       	mov	r1,r11
80006d16:	14 90       	mov	r0,r10
80006d18:	14 98       	mov	r8,r10
80006d1a:	02 99       	mov	r9,r1
80006d1c:	fa ea 00 10 	ld.d	r10,sp[16]
80006d20:	fe b0 e9 76 	rcall	8000400c <__avr32_f64_cmp_lt>
80006d24:	c1 a1       	brne	80006d58 <_dtoa_r+0x71c>
80006d26:	fa e8 00 10 	ld.d	r8,sp[16]
80006d2a:	00 9a       	mov	r10,r0
80006d2c:	02 9b       	mov	r11,r1
80006d2e:	e0 a0 10 74 	rcall	80008e16 <__avr32_f64_cmp_eq>
80006d32:	e0 80 02 5e 	breq	800071ee <_dtoa_r+0xbb2>
80006d36:	e5 d2 c0 01 	bfextu	r2,r2,0x0,0x1
80006d3a:	c0 f1       	brne	80006d58 <_dtoa_r+0x71c>
80006d3c:	e0 8f 02 59 	bral	800071ee <_dtoa_r+0xbb2>
80006d40:	40 8a       	lddsp	r10,sp[0x20]
80006d42:	14 38       	cp.w	r8,r10
80006d44:	c0 30       	breq	80006d4a <_dtoa_r+0x70e>
80006d46:	10 95       	mov	r5,r8
80006d48:	c0 98       	rjmp	80006d5a <_dtoa_r+0x71e>
80006d4a:	33 08       	mov	r8,48
80006d4c:	40 89       	lddsp	r9,sp[0x20]
80006d4e:	2f f6       	sub	r6,-1
80006d50:	b2 88       	st.b	r9[0x0],r8
80006d52:	40 88       	lddsp	r8,sp[0x20]
80006d54:	c0 88       	rjmp	80006d64 <_dtoa_r+0x728>
80006d56:	40 66       	lddsp	r6,sp[0x18]
80006d58:	33 99       	mov	r9,57
80006d5a:	0a 98       	mov	r8,r5
80006d5c:	11 7a       	ld.ub	r10,--r8
80006d5e:	f2 0a 18 00 	cp.b	r10,r9
80006d62:	ce f0       	breq	80006d40 <_dtoa_r+0x704>
80006d64:	50 66       	stdsp	sp[0x18],r6
80006d66:	11 89       	ld.ub	r9,r8[0x0]
80006d68:	2f f9       	sub	r9,-1
80006d6a:	b0 89       	st.b	r8[0x0],r9
80006d6c:	e0 8f 02 42 	bral	800071f0 <_dtoa_r+0xbb4>
80006d70:	fe b0 e7 f0 	rcall	80003d50 <__avr32_f64_mul>
80006d74:	2f f4       	sub	r4,-1
80006d76:	fa eb 00 08 	st.d	sp[8],r10
80006d7a:	30 08       	mov	r8,0
80006d7c:	30 09       	mov	r9,0
80006d7e:	e0 a0 10 4c 	rcall	80008e16 <__avr32_f64_cmp_eq>
80006d82:	ca 60       	breq	80006cce <_dtoa_r+0x692>
80006d84:	e0 8f 02 35 	bral	800071ee <_dtoa_r+0xbb2>
80006d88:	40 d8       	lddsp	r8,sp[0x34]
80006d8a:	58 08       	cp.w	r8,0
80006d8c:	c0 51       	brne	80006d96 <_dtoa_r+0x75a>
80006d8e:	04 98       	mov	r8,r2
80006d90:	00 95       	mov	r5,r0
80006d92:	40 d4       	lddsp	r4,sp[0x34]
80006d94:	c3 78       	rjmp	80006e02 <_dtoa_r+0x7c6>
80006d96:	40 c5       	lddsp	r5,sp[0x30]
80006d98:	58 15       	cp.w	r5,1
80006d9a:	e0 89 00 0f 	brgt	80006db8 <_dtoa_r+0x77c>
80006d9e:	41 74       	lddsp	r4,sp[0x5c]
80006da0:	58 04       	cp.w	r4,0
80006da2:	c0 40       	breq	80006daa <_dtoa_r+0x76e>
80006da4:	f4 c9 fb cd 	sub	r9,r10,-1075
80006da8:	c0 48       	rjmp	80006db0 <_dtoa_r+0x774>
80006daa:	41 99       	lddsp	r9,sp[0x64]
80006dac:	f2 09 11 36 	rsub	r9,r9,54
80006db0:	04 98       	mov	r8,r2
80006db2:	00 95       	mov	r5,r0
80006db4:	c1 c8       	rjmp	80006dec <_dtoa_r+0x7b0>
80006db6:	d7 03       	nop
80006db8:	e2 c8 00 01 	sub	r8,r1,1
80006dbc:	58 01       	cp.w	r1,0
80006dbe:	e0 05 17 40 	movge	r5,r0
80006dc2:	e2 09 17 40 	movge	r9,r1
80006dc6:	e1 d1 e5 15 	sublt	r5,r0,r1
80006dca:	f9 b9 05 00 	movlt	r9,0
80006dce:	10 32       	cp.w	r2,r8
80006dd0:	e5 d8 e4 18 	subge	r8,r2,r8
80006dd4:	f1 d2 e5 18 	sublt	r8,r8,r2
80006dd8:	e5 d8 e5 02 	addlt	r2,r2,r8
80006ddc:	fb fc 50 11 	ld.wlt	r12,sp[0x44]
80006de0:	f9 d8 e5 0c 	addlt	r12,r12,r8
80006de4:	fb fc 5a 11 	st.wlt	sp[0x44],r12
80006de8:	f9 b8 05 00 	movlt	r8,0
80006dec:	40 4b       	lddsp	r11,sp[0x10]
80006dee:	12 0b       	add	r11,r9
80006df0:	50 08       	stdsp	sp[0x0],r8
80006df2:	50 4b       	stdsp	sp[0x10],r11
80006df4:	12 00       	add	r0,r9
80006df6:	30 1b       	mov	r11,1
80006df8:	0e 9c       	mov	r12,r7
80006dfa:	e0 a0 0a d1 	rcall	8000839c <__i2b>
80006dfe:	40 08       	lddsp	r8,sp[0x0]
80006e00:	18 94       	mov	r4,r12
80006e02:	40 4a       	lddsp	r10,sp[0x10]
80006e04:	58 05       	cp.w	r5,0
80006e06:	5f 99       	srgt	r9
80006e08:	58 0a       	cp.w	r10,0
80006e0a:	5f 9a       	srgt	r10
80006e0c:	f5 e9 00 09 	and	r9,r10,r9
80006e10:	c0 80       	breq	80006e20 <_dtoa_r+0x7e4>
80006e12:	40 4c       	lddsp	r12,sp[0x10]
80006e14:	f8 05 0d 49 	min	r9,r12,r5
80006e18:	12 1c       	sub	r12,r9
80006e1a:	12 10       	sub	r0,r9
80006e1c:	50 4c       	stdsp	sp[0x10],r12
80006e1e:	12 15       	sub	r5,r9
80006e20:	58 02       	cp.w	r2,0
80006e22:	e0 8a 00 27 	brle	80006e70 <_dtoa_r+0x834>
80006e26:	40 db       	lddsp	r11,sp[0x34]
80006e28:	58 0b       	cp.w	r11,0
80006e2a:	c1 d0       	breq	80006e64 <_dtoa_r+0x828>
80006e2c:	58 08       	cp.w	r8,0
80006e2e:	e0 8a 00 17 	brle	80006e5c <_dtoa_r+0x820>
80006e32:	10 9a       	mov	r10,r8
80006e34:	50 08       	stdsp	sp[0x0],r8
80006e36:	08 9b       	mov	r11,r4
80006e38:	0e 9c       	mov	r12,r7
80006e3a:	e0 a0 0a f7 	rcall	80008428 <__pow5mult>
80006e3e:	06 9a       	mov	r10,r3
80006e40:	18 9b       	mov	r11,r12
80006e42:	18 94       	mov	r4,r12
80006e44:	0e 9c       	mov	r12,r7
80006e46:	e0 a0 0a 2b 	rcall	8000829c <__multiply>
80006e4a:	18 99       	mov	r9,r12
80006e4c:	06 9b       	mov	r11,r3
80006e4e:	50 19       	stdsp	sp[0x4],r9
80006e50:	0e 9c       	mov	r12,r7
80006e52:	e0 a0 08 d7 	rcall	80008000 <_Bfree>
80006e56:	40 19       	lddsp	r9,sp[0x4]
80006e58:	40 08       	lddsp	r8,sp[0x0]
80006e5a:	12 93       	mov	r3,r9
80006e5c:	e4 08 01 0a 	sub	r10,r2,r8
80006e60:	c0 80       	breq	80006e70 <_dtoa_r+0x834>
80006e62:	c0 28       	rjmp	80006e66 <_dtoa_r+0x82a>
80006e64:	04 9a       	mov	r10,r2
80006e66:	06 9b       	mov	r11,r3
80006e68:	0e 9c       	mov	r12,r7
80006e6a:	e0 a0 0a df 	rcall	80008428 <__pow5mult>
80006e6e:	18 93       	mov	r3,r12
80006e70:	30 1b       	mov	r11,1
80006e72:	0e 9c       	mov	r12,r7
80006e74:	e0 a0 0a 94 	rcall	8000839c <__i2b>
80006e78:	41 1a       	lddsp	r10,sp[0x44]
80006e7a:	18 92       	mov	r2,r12
80006e7c:	58 0a       	cp.w	r10,0
80006e7e:	e0 8a 00 07 	brle	80006e8c <_dtoa_r+0x850>
80006e82:	18 9b       	mov	r11,r12
80006e84:	0e 9c       	mov	r12,r7
80006e86:	e0 a0 0a d1 	rcall	80008428 <__pow5mult>
80006e8a:	18 92       	mov	r2,r12
80006e8c:	40 c9       	lddsp	r9,sp[0x30]
80006e8e:	58 19       	cp.w	r9,1
80006e90:	e0 89 00 14 	brgt	80006eb8 <_dtoa_r+0x87c>
80006e94:	40 38       	lddsp	r8,sp[0xc]
80006e96:	58 08       	cp.w	r8,0
80006e98:	c1 01       	brne	80006eb8 <_dtoa_r+0x87c>
80006e9a:	40 29       	lddsp	r9,sp[0x8]
80006e9c:	f1 d9 c0 14 	bfextu	r8,r9,0x0,0x14
80006ea0:	c0 c1       	brne	80006eb8 <_dtoa_r+0x87c>
80006ea2:	12 98       	mov	r8,r9
80006ea4:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80006ea8:	c0 80       	breq	80006eb8 <_dtoa_r+0x87c>
80006eaa:	40 4c       	lddsp	r12,sp[0x10]
80006eac:	30 1b       	mov	r11,1
80006eae:	2f fc       	sub	r12,-1
80006eb0:	2f f0       	sub	r0,-1
80006eb2:	50 4c       	stdsp	sp[0x10],r12
80006eb4:	50 6b       	stdsp	sp[0x18],r11
80006eb6:	c0 38       	rjmp	80006ebc <_dtoa_r+0x880>
80006eb8:	30 0a       	mov	r10,0
80006eba:	50 6a       	stdsp	sp[0x18],r10
80006ebc:	41 19       	lddsp	r9,sp[0x44]
80006ebe:	58 09       	cp.w	r9,0
80006ec0:	c0 31       	brne	80006ec6 <_dtoa_r+0x88a>
80006ec2:	30 1c       	mov	r12,1
80006ec4:	c0 98       	rjmp	80006ed6 <_dtoa_r+0x89a>
80006ec6:	64 48       	ld.w	r8,r2[0x10]
80006ec8:	2f c8       	sub	r8,-4
80006eca:	e4 08 03 2c 	ld.w	r12,r2[r8<<0x2]
80006ece:	e0 a0 08 08 	rcall	80007ede <__hi0bits>
80006ed2:	f8 0c 11 20 	rsub	r12,r12,32
80006ed6:	40 4b       	lddsp	r11,sp[0x10]
80006ed8:	f8 0b 00 08 	add	r8,r12,r11
80006edc:	f1 d8 c0 05 	bfextu	r8,r8,0x0,0x5
80006ee0:	c0 c0       	breq	80006ef8 <_dtoa_r+0x8bc>
80006ee2:	f0 08 11 20 	rsub	r8,r8,32
80006ee6:	58 48       	cp.w	r8,4
80006ee8:	e0 8a 00 06 	brle	80006ef4 <_dtoa_r+0x8b8>
80006eec:	20 48       	sub	r8,4
80006eee:	10 0b       	add	r11,r8
80006ef0:	50 4b       	stdsp	sp[0x10],r11
80006ef2:	c0 78       	rjmp	80006f00 <_dtoa_r+0x8c4>
80006ef4:	58 48       	cp.w	r8,4
80006ef6:	c0 70       	breq	80006f04 <_dtoa_r+0x8c8>
80006ef8:	40 4a       	lddsp	r10,sp[0x10]
80006efa:	2e 48       	sub	r8,-28
80006efc:	10 0a       	add	r10,r8
80006efe:	50 4a       	stdsp	sp[0x10],r10
80006f00:	10 00       	add	r0,r8
80006f02:	10 05       	add	r5,r8
80006f04:	58 00       	cp.w	r0,0
80006f06:	e0 8a 00 08 	brle	80006f16 <_dtoa_r+0x8da>
80006f0a:	06 9b       	mov	r11,r3
80006f0c:	00 9a       	mov	r10,r0
80006f0e:	0e 9c       	mov	r12,r7
80006f10:	e0 a0 09 82 	rcall	80008214 <__lshift>
80006f14:	18 93       	mov	r3,r12
80006f16:	40 49       	lddsp	r9,sp[0x10]
80006f18:	58 09       	cp.w	r9,0
80006f1a:	e0 8a 00 08 	brle	80006f2a <_dtoa_r+0x8ee>
80006f1e:	04 9b       	mov	r11,r2
80006f20:	12 9a       	mov	r10,r9
80006f22:	0e 9c       	mov	r12,r7
80006f24:	e0 a0 09 78 	rcall	80008214 <__lshift>
80006f28:	18 92       	mov	r2,r12
80006f2a:	41 48       	lddsp	r8,sp[0x50]
80006f2c:	58 08       	cp.w	r8,0
80006f2e:	c1 b0       	breq	80006f64 <_dtoa_r+0x928>
80006f30:	04 9b       	mov	r11,r2
80006f32:	06 9c       	mov	r12,r3
80006f34:	e0 a0 08 4c 	rcall	80007fcc <__mcmp>
80006f38:	c1 64       	brge	80006f64 <_dtoa_r+0x928>
80006f3a:	06 9b       	mov	r11,r3
80006f3c:	30 09       	mov	r9,0
80006f3e:	30 aa       	mov	r10,10
80006f40:	0e 9c       	mov	r12,r7
80006f42:	e0 a0 0a 35 	rcall	800083ac <__multadd>
80006f46:	20 16       	sub	r6,1
80006f48:	18 93       	mov	r3,r12
80006f4a:	40 dc       	lddsp	r12,sp[0x34]
80006f4c:	58 0c       	cp.w	r12,0
80006f4e:	c0 31       	brne	80006f54 <_dtoa_r+0x918>
80006f50:	40 91       	lddsp	r1,sp[0x24]
80006f52:	c0 98       	rjmp	80006f64 <_dtoa_r+0x928>
80006f54:	08 9b       	mov	r11,r4
80006f56:	40 91       	lddsp	r1,sp[0x24]
80006f58:	30 09       	mov	r9,0
80006f5a:	30 aa       	mov	r10,10
80006f5c:	0e 9c       	mov	r12,r7
80006f5e:	e0 a0 0a 27 	rcall	800083ac <__multadd>
80006f62:	18 94       	mov	r4,r12
80006f64:	58 01       	cp.w	r1,0
80006f66:	5f a9       	srle	r9
80006f68:	40 cb       	lddsp	r11,sp[0x30]
80006f6a:	58 2b       	cp.w	r11,2
80006f6c:	5f 98       	srgt	r8
80006f6e:	f3 e8 00 08 	and	r8,r9,r8
80006f72:	c2 50       	breq	80006fbc <_dtoa_r+0x980>
80006f74:	58 01       	cp.w	r1,0
80006f76:	c1 11       	brne	80006f98 <_dtoa_r+0x95c>
80006f78:	04 9b       	mov	r11,r2
80006f7a:	02 99       	mov	r9,r1
80006f7c:	30 5a       	mov	r10,5
80006f7e:	0e 9c       	mov	r12,r7
80006f80:	e0 a0 0a 16 	rcall	800083ac <__multadd>
80006f84:	18 92       	mov	r2,r12
80006f86:	18 9b       	mov	r11,r12
80006f88:	06 9c       	mov	r12,r3
80006f8a:	e0 a0 08 21 	rcall	80007fcc <__mcmp>
80006f8e:	e0 89 00 0f 	brgt	80006fac <_dtoa_r+0x970>
80006f92:	c0 38       	rjmp	80006f98 <_dtoa_r+0x95c>
80006f94:	30 02       	mov	r2,0
80006f96:	04 94       	mov	r4,r2
80006f98:	40 ea       	lddsp	r10,sp[0x38]
80006f9a:	30 09       	mov	r9,0
80006f9c:	5c da       	com	r10
80006f9e:	40 85       	lddsp	r5,sp[0x20]
80006fa0:	50 6a       	stdsp	sp[0x18],r10
80006fa2:	50 49       	stdsp	sp[0x10],r9
80006fa4:	c0 f9       	rjmp	800071c2 <_dtoa_r+0xb86>
80006fa6:	08 92       	mov	r2,r4
80006fa8:	40 66       	lddsp	r6,sp[0x18]
80006faa:	04 94       	mov	r4,r2
80006fac:	2f f6       	sub	r6,-1
80006fae:	50 66       	stdsp	sp[0x18],r6
80006fb0:	33 18       	mov	r8,49
80006fb2:	40 85       	lddsp	r5,sp[0x20]
80006fb4:	0a c8       	st.b	r5++,r8
80006fb6:	30 08       	mov	r8,0
80006fb8:	50 48       	stdsp	sp[0x10],r8
80006fba:	c0 49       	rjmp	800071c2 <_dtoa_r+0xb86>
80006fbc:	40 dc       	lddsp	r12,sp[0x34]
80006fbe:	58 0c       	cp.w	r12,0
80006fc0:	e0 80 00 b5 	breq	8000712a <_dtoa_r+0xaee>
80006fc4:	58 05       	cp.w	r5,0
80006fc6:	e0 8a 00 08 	brle	80006fd6 <_dtoa_r+0x99a>
80006fca:	08 9b       	mov	r11,r4
80006fcc:	0a 9a       	mov	r10,r5
80006fce:	0e 9c       	mov	r12,r7
80006fd0:	e0 a0 09 22 	rcall	80008214 <__lshift>
80006fd4:	18 94       	mov	r4,r12
80006fd6:	40 6b       	lddsp	r11,sp[0x18]
80006fd8:	58 0b       	cp.w	r11,0
80006fda:	c0 31       	brne	80006fe0 <_dtoa_r+0x9a4>
80006fdc:	08 9c       	mov	r12,r4
80006fde:	c1 38       	rjmp	80007004 <_dtoa_r+0x9c8>
80006fe0:	68 1b       	ld.w	r11,r4[0x4]
80006fe2:	0e 9c       	mov	r12,r7
80006fe4:	e0 a0 08 28 	rcall	80008034 <_Balloc>
80006fe8:	68 4a       	ld.w	r10,r4[0x10]
80006fea:	18 95       	mov	r5,r12
80006fec:	e8 cb ff f4 	sub	r11,r4,-12
80006ff0:	2f ea       	sub	r10,-2
80006ff2:	2f 4c       	sub	r12,-12
80006ff4:	a3 6a       	lsl	r10,0x2
80006ff6:	fe b0 e8 3f 	rcall	80004074 <memcpy>
80006ffa:	0a 9b       	mov	r11,r5
80006ffc:	30 1a       	mov	r10,1
80006ffe:	0e 9c       	mov	r12,r7
80007000:	e0 a0 09 0a 	rcall	80008214 <__lshift>
80007004:	50 44       	stdsp	sp[0x10],r4
80007006:	40 3a       	lddsp	r10,sp[0xc]
80007008:	30 19       	mov	r9,1
8000700a:	f5 da c0 01 	bfextu	r10,r10,0x0,0x1
8000700e:	18 94       	mov	r4,r12
80007010:	50 da       	stdsp	sp[0x34],r10
80007012:	40 85       	lddsp	r5,sp[0x20]
80007014:	50 99       	stdsp	sp[0x24],r9
80007016:	50 26       	stdsp	sp[0x8],r6
80007018:	50 e1       	stdsp	sp[0x38],r1
8000701a:	04 9b       	mov	r11,r2
8000701c:	06 9c       	mov	r12,r3
8000701e:	fe b0 fa 7f 	rcall	8000651c <quorem>
80007022:	40 4b       	lddsp	r11,sp[0x10]
80007024:	f8 c0 ff d0 	sub	r0,r12,-48
80007028:	06 9c       	mov	r12,r3
8000702a:	e0 a0 07 d1 	rcall	80007fcc <__mcmp>
8000702e:	08 9a       	mov	r10,r4
80007030:	50 6c       	stdsp	sp[0x18],r12
80007032:	04 9b       	mov	r11,r2
80007034:	0e 9c       	mov	r12,r7
80007036:	e0 a0 08 87 	rcall	80008144 <__mdiff>
8000703a:	18 91       	mov	r1,r12
8000703c:	78 38       	ld.w	r8,r12[0xc]
8000703e:	58 08       	cp.w	r8,0
80007040:	c0 30       	breq	80007046 <_dtoa_r+0xa0a>
80007042:	30 16       	mov	r6,1
80007044:	c0 68       	rjmp	80007050 <_dtoa_r+0xa14>
80007046:	18 9b       	mov	r11,r12
80007048:	06 9c       	mov	r12,r3
8000704a:	e0 a0 07 c1 	rcall	80007fcc <__mcmp>
8000704e:	18 96       	mov	r6,r12
80007050:	0e 9c       	mov	r12,r7
80007052:	02 9b       	mov	r11,r1
80007054:	e0 a0 07 d6 	rcall	80008000 <_Bfree>
80007058:	40 cc       	lddsp	r12,sp[0x30]
8000705a:	ed ec 10 08 	or	r8,r6,r12
8000705e:	c0 d1       	brne	80007078 <_dtoa_r+0xa3c>
80007060:	40 db       	lddsp	r11,sp[0x34]
80007062:	58 0b       	cp.w	r11,0
80007064:	c0 a1       	brne	80007078 <_dtoa_r+0xa3c>
80007066:	40 26       	lddsp	r6,sp[0x8]
80007068:	e0 40 00 39 	cp.w	r0,57
8000706c:	c3 00       	breq	800070cc <_dtoa_r+0xa90>
8000706e:	40 6a       	lddsp	r10,sp[0x18]
80007070:	58 0a       	cp.w	r10,0
80007072:	e0 89 00 24 	brgt	800070ba <_dtoa_r+0xa7e>
80007076:	c2 f8       	rjmp	800070d4 <_dtoa_r+0xa98>
80007078:	40 69       	lddsp	r9,sp[0x18]
8000707a:	58 09       	cp.w	r9,0
8000707c:	c0 85       	brlt	8000708c <_dtoa_r+0xa50>
8000707e:	12 98       	mov	r8,r9
80007080:	40 cc       	lddsp	r12,sp[0x30]
80007082:	18 48       	or	r8,r12
80007084:	c1 d1       	brne	800070be <_dtoa_r+0xa82>
80007086:	40 db       	lddsp	r11,sp[0x34]
80007088:	58 0b       	cp.w	r11,0
8000708a:	c1 a1       	brne	800070be <_dtoa_r+0xa82>
8000708c:	0c 99       	mov	r9,r6
8000708e:	40 26       	lddsp	r6,sp[0x8]
80007090:	58 09       	cp.w	r9,0
80007092:	e0 8a 00 21 	brle	800070d4 <_dtoa_r+0xa98>
80007096:	06 9b       	mov	r11,r3
80007098:	30 1a       	mov	r10,1
8000709a:	0e 9c       	mov	r12,r7
8000709c:	e0 a0 08 bc 	rcall	80008214 <__lshift>
800070a0:	04 9b       	mov	r11,r2
800070a2:	18 93       	mov	r3,r12
800070a4:	e0 a0 07 94 	rcall	80007fcc <__mcmp>
800070a8:	e0 89 00 06 	brgt	800070b4 <_dtoa_r+0xa78>
800070ac:	c1 41       	brne	800070d4 <_dtoa_r+0xa98>
800070ae:	ed b0 00 00 	bld	r0,0x0
800070b2:	c1 11       	brne	800070d4 <_dtoa_r+0xa98>
800070b4:	e0 40 00 39 	cp.w	r0,57
800070b8:	c0 a0       	breq	800070cc <_dtoa_r+0xa90>
800070ba:	2f f0       	sub	r0,-1
800070bc:	c0 c8       	rjmp	800070d4 <_dtoa_r+0xa98>
800070be:	58 06       	cp.w	r6,0
800070c0:	e0 8a 00 0c 	brle	800070d8 <_dtoa_r+0xa9c>
800070c4:	40 26       	lddsp	r6,sp[0x8]
800070c6:	e0 40 00 39 	cp.w	r0,57
800070ca:	c0 41       	brne	800070d2 <_dtoa_r+0xa96>
800070cc:	33 98       	mov	r8,57
800070ce:	0a c8       	st.b	r5++,r8
800070d0:	c6 78       	rjmp	8000719e <_dtoa_r+0xb62>
800070d2:	2f f0       	sub	r0,-1
800070d4:	0a c0       	st.b	r5++,r0
800070d6:	c7 58       	rjmp	800071c0 <_dtoa_r+0xb84>
800070d8:	0a c0       	st.b	r5++,r0
800070da:	40 9a       	lddsp	r10,sp[0x24]
800070dc:	40 e9       	lddsp	r9,sp[0x38]
800070de:	12 3a       	cp.w	r10,r9
800070e0:	c4 30       	breq	80007166 <_dtoa_r+0xb2a>
800070e2:	06 9b       	mov	r11,r3
800070e4:	30 09       	mov	r9,0
800070e6:	30 aa       	mov	r10,10
800070e8:	0e 9c       	mov	r12,r7
800070ea:	e0 a0 09 61 	rcall	800083ac <__multadd>
800070ee:	40 48       	lddsp	r8,sp[0x10]
800070f0:	18 93       	mov	r3,r12
800070f2:	08 38       	cp.w	r8,r4
800070f4:	c0 91       	brne	80007106 <_dtoa_r+0xaca>
800070f6:	10 9b       	mov	r11,r8
800070f8:	30 09       	mov	r9,0
800070fa:	30 aa       	mov	r10,10
800070fc:	0e 9c       	mov	r12,r7
800070fe:	e0 a0 09 57 	rcall	800083ac <__multadd>
80007102:	50 4c       	stdsp	sp[0x10],r12
80007104:	c0 e8       	rjmp	80007120 <_dtoa_r+0xae4>
80007106:	40 4b       	lddsp	r11,sp[0x10]
80007108:	30 09       	mov	r9,0
8000710a:	30 aa       	mov	r10,10
8000710c:	0e 9c       	mov	r12,r7
8000710e:	e0 a0 09 4f 	rcall	800083ac <__multadd>
80007112:	08 9b       	mov	r11,r4
80007114:	50 4c       	stdsp	sp[0x10],r12
80007116:	30 09       	mov	r9,0
80007118:	30 aa       	mov	r10,10
8000711a:	0e 9c       	mov	r12,r7
8000711c:	e0 a0 09 48 	rcall	800083ac <__multadd>
80007120:	18 94       	mov	r4,r12
80007122:	40 9c       	lddsp	r12,sp[0x24]
80007124:	2f fc       	sub	r12,-1
80007126:	50 9c       	stdsp	sp[0x24],r12
80007128:	c7 9b       	rjmp	8000701a <_dtoa_r+0x9de>
8000712a:	30 18       	mov	r8,1
8000712c:	06 90       	mov	r0,r3
8000712e:	40 85       	lddsp	r5,sp[0x20]
80007130:	08 93       	mov	r3,r4
80007132:	0c 94       	mov	r4,r6
80007134:	10 96       	mov	r6,r8
80007136:	04 9b       	mov	r11,r2
80007138:	00 9c       	mov	r12,r0
8000713a:	fe b0 f9 f1 	rcall	8000651c <quorem>
8000713e:	2d 0c       	sub	r12,-48
80007140:	0a cc       	st.b	r5++,r12
80007142:	02 36       	cp.w	r6,r1
80007144:	c0 a4       	brge	80007158 <_dtoa_r+0xb1c>
80007146:	00 9b       	mov	r11,r0
80007148:	30 09       	mov	r9,0
8000714a:	30 aa       	mov	r10,10
8000714c:	0e 9c       	mov	r12,r7
8000714e:	2f f6       	sub	r6,-1
80007150:	e0 a0 09 2e 	rcall	800083ac <__multadd>
80007154:	18 90       	mov	r0,r12
80007156:	cf 0b       	rjmp	80007136 <_dtoa_r+0xafa>
80007158:	08 96       	mov	r6,r4
8000715a:	30 0b       	mov	r11,0
8000715c:	06 94       	mov	r4,r3
8000715e:	50 4b       	stdsp	sp[0x10],r11
80007160:	00 93       	mov	r3,r0
80007162:	18 90       	mov	r0,r12
80007164:	c0 28       	rjmp	80007168 <_dtoa_r+0xb2c>
80007166:	40 26       	lddsp	r6,sp[0x8]
80007168:	06 9b       	mov	r11,r3
8000716a:	30 1a       	mov	r10,1
8000716c:	0e 9c       	mov	r12,r7
8000716e:	e0 a0 08 53 	rcall	80008214 <__lshift>
80007172:	04 9b       	mov	r11,r2
80007174:	18 93       	mov	r3,r12
80007176:	e0 a0 07 2b 	rcall	80007fcc <__mcmp>
8000717a:	e0 89 00 12 	brgt	8000719e <_dtoa_r+0xb62>
8000717e:	c1 b1       	brne	800071b4 <_dtoa_r+0xb78>
80007180:	e1 d0 c0 01 	bfextu	r0,r0,0x0,0x1
80007184:	c0 d1       	brne	8000719e <_dtoa_r+0xb62>
80007186:	c1 78       	rjmp	800071b4 <_dtoa_r+0xb78>
80007188:	40 89       	lddsp	r9,sp[0x20]
8000718a:	12 38       	cp.w	r8,r9
8000718c:	c0 30       	breq	80007192 <_dtoa_r+0xb56>
8000718e:	10 95       	mov	r5,r8
80007190:	c0 88       	rjmp	800071a0 <_dtoa_r+0xb64>
80007192:	2f f6       	sub	r6,-1
80007194:	50 66       	stdsp	sp[0x18],r6
80007196:	33 18       	mov	r8,49
80007198:	40 8c       	lddsp	r12,sp[0x20]
8000719a:	b8 88       	st.b	r12[0x0],r8
8000719c:	c1 38       	rjmp	800071c2 <_dtoa_r+0xb86>
8000719e:	33 9a       	mov	r10,57
800071a0:	0a 98       	mov	r8,r5
800071a2:	11 79       	ld.ub	r9,--r8
800071a4:	f4 09 18 00 	cp.b	r9,r10
800071a8:	cf 00       	breq	80007188 <_dtoa_r+0xb4c>
800071aa:	2f f9       	sub	r9,-1
800071ac:	b0 89       	st.b	r8[0x0],r9
800071ae:	c0 98       	rjmp	800071c0 <_dtoa_r+0xb84>
800071b0:	10 95       	mov	r5,r8
800071b2:	c0 28       	rjmp	800071b6 <_dtoa_r+0xb7a>
800071b4:	33 09       	mov	r9,48
800071b6:	0a 98       	mov	r8,r5
800071b8:	11 7a       	ld.ub	r10,--r8
800071ba:	f2 0a 18 00 	cp.b	r10,r9
800071be:	cf 90       	breq	800071b0 <_dtoa_r+0xb74>
800071c0:	50 66       	stdsp	sp[0x18],r6
800071c2:	04 9b       	mov	r11,r2
800071c4:	0e 9c       	mov	r12,r7
800071c6:	e0 a0 07 1d 	rcall	80008000 <_Bfree>
800071ca:	58 04       	cp.w	r4,0
800071cc:	c1 20       	breq	800071f0 <_dtoa_r+0xbb4>
800071ce:	40 4b       	lddsp	r11,sp[0x10]
800071d0:	08 3b       	cp.w	r11,r4
800071d2:	5f 19       	srne	r9
800071d4:	58 0b       	cp.w	r11,0
800071d6:	5f 18       	srne	r8
800071d8:	f3 e8 00 08 	and	r8,r9,r8
800071dc:	c0 40       	breq	800071e4 <_dtoa_r+0xba8>
800071de:	0e 9c       	mov	r12,r7
800071e0:	e0 a0 07 10 	rcall	80008000 <_Bfree>
800071e4:	08 9b       	mov	r11,r4
800071e6:	0e 9c       	mov	r12,r7
800071e8:	e0 a0 07 0c 	rcall	80008000 <_Bfree>
800071ec:	c0 28       	rjmp	800071f0 <_dtoa_r+0xbb4>
800071ee:	50 66       	stdsp	sp[0x18],r6
800071f0:	0e 9c       	mov	r12,r7
800071f2:	06 9b       	mov	r11,r3
800071f4:	e0 a0 07 06 	rcall	80008000 <_Bfree>
800071f8:	30 08       	mov	r8,0
800071fa:	aa 88       	st.b	r5[0x0],r8
800071fc:	40 68       	lddsp	r8,sp[0x18]
800071fe:	41 5a       	lddsp	r10,sp[0x54]
80007200:	2f f8       	sub	r8,-1
80007202:	41 29       	lddsp	r9,sp[0x48]
80007204:	95 08       	st.w	r10[0x0],r8
80007206:	40 8c       	lddsp	r12,sp[0x20]
80007208:	58 09       	cp.w	r9,0
8000720a:	fb f8 10 12 	ld.wne	r8,sp[0x48]
8000720e:	f1 f5 1a 00 	st.wne	r8[0x0],r5
80007212:	2e 6d       	sub	sp,-104
80007214:	d8 32       	popm	r0-r7,pc
80007216:	d7 03       	nop

80007218 <_fflush_r>:
80007218:	d4 21       	pushm	r4-r7,lr
8000721a:	16 97       	mov	r7,r11
8000721c:	18 96       	mov	r6,r12
8000721e:	76 48       	ld.w	r8,r11[0x10]
80007220:	58 08       	cp.w	r8,0
80007222:	c7 f0       	breq	80007320 <_fflush_r+0x108>
80007224:	58 0c       	cp.w	r12,0
80007226:	c0 50       	breq	80007230 <_fflush_r+0x18>
80007228:	78 68       	ld.w	r8,r12[0x18]
8000722a:	58 08       	cp.w	r8,0
8000722c:	c0 21       	brne	80007230 <_fflush_r+0x18>
8000722e:	cc dc       	rcall	800073c8 <__sinit>
80007230:	fe c8 d2 70 	sub	r8,pc,-11664
80007234:	10 37       	cp.w	r7,r8
80007236:	c0 31       	brne	8000723c <_fflush_r+0x24>
80007238:	6c 07       	ld.w	r7,r6[0x0]
8000723a:	c0 c8       	rjmp	80007252 <_fflush_r+0x3a>
8000723c:	fe c8 d2 5c 	sub	r8,pc,-11684
80007240:	10 37       	cp.w	r7,r8
80007242:	c0 31       	brne	80007248 <_fflush_r+0x30>
80007244:	6c 17       	ld.w	r7,r6[0x4]
80007246:	c0 68       	rjmp	80007252 <_fflush_r+0x3a>
80007248:	fe c8 d2 48 	sub	r8,pc,-11704
8000724c:	10 37       	cp.w	r7,r8
8000724e:	ed f7 00 02 	ld.weq	r7,r6[0x8]
80007252:	8e 6a       	ld.sh	r10,r7[0xc]
80007254:	14 98       	mov	r8,r10
80007256:	ed ba 00 03 	bld	r10,0x3
8000725a:	c4 20       	breq	800072de <_fflush_r+0xc6>
8000725c:	ab ba       	sbr	r10,0xb
8000725e:	ae 6a       	st.h	r7[0xc],r10
80007260:	6e 18       	ld.w	r8,r7[0x4]
80007262:	58 08       	cp.w	r8,0
80007264:	e0 89 00 06 	brgt	80007270 <_fflush_r+0x58>
80007268:	6f 08       	ld.w	r8,r7[0x40]
8000726a:	58 08       	cp.w	r8,0
8000726c:	e0 8a 00 5a 	brle	80007320 <_fflush_r+0x108>
80007270:	6e b8       	ld.w	r8,r7[0x2c]
80007272:	58 08       	cp.w	r8,0
80007274:	c5 60       	breq	80007320 <_fflush_r+0x108>
80007276:	e2 1a 10 00 	andl	r10,0x1000,COH
8000727a:	c0 30       	breq	80007280 <_fflush_r+0x68>
8000727c:	6f 55       	ld.w	r5,r7[0x54]
8000727e:	c0 f8       	rjmp	8000729c <_fflush_r+0x84>
80007280:	30 19       	mov	r9,1
80007282:	6e 8b       	ld.w	r11,r7[0x20]
80007284:	0c 9c       	mov	r12,r6
80007286:	5d 18       	icall	r8
80007288:	18 95       	mov	r5,r12
8000728a:	5b fc       	cp.w	r12,-1
8000728c:	c0 81       	brne	8000729c <_fflush_r+0x84>
8000728e:	6c 38       	ld.w	r8,r6[0xc]
80007290:	59 d8       	cp.w	r8,29
80007292:	c4 70       	breq	80007320 <_fflush_r+0x108>
80007294:	8e 68       	ld.sh	r8,r7[0xc]
80007296:	a7 a8       	sbr	r8,0x6
80007298:	ae 68       	st.h	r7[0xc],r8
8000729a:	d8 22       	popm	r4-r7,pc
8000729c:	8e 68       	ld.sh	r8,r7[0xc]
8000729e:	ed b8 00 02 	bld	r8,0x2
800072a2:	c0 91       	brne	800072b4 <_fflush_r+0x9c>
800072a4:	6e 18       	ld.w	r8,r7[0x4]
800072a6:	10 15       	sub	r5,r8
800072a8:	6e d8       	ld.w	r8,r7[0x34]
800072aa:	58 08       	cp.w	r8,0
800072ac:	ef f8 10 10 	ld.wne	r8,r7[0x40]
800072b0:	eb d8 e1 15 	subne	r5,r5,r8
800072b4:	6e b8       	ld.w	r8,r7[0x2c]
800072b6:	0c 9c       	mov	r12,r6
800072b8:	30 09       	mov	r9,0
800072ba:	0a 9a       	mov	r10,r5
800072bc:	6e 8b       	ld.w	r11,r7[0x20]
800072be:	5d 18       	icall	r8
800072c0:	8e 68       	ld.sh	r8,r7[0xc]
800072c2:	0a 3c       	cp.w	r12,r5
800072c4:	c2 61       	brne	80007310 <_fflush_r+0xf8>
800072c6:	ab d8       	cbr	r8,0xb
800072c8:	30 0c       	mov	r12,0
800072ca:	6e 49       	ld.w	r9,r7[0x10]
800072cc:	ae 68       	st.h	r7[0xc],r8
800072ce:	8f 1c       	st.w	r7[0x4],r12
800072d0:	8f 09       	st.w	r7[0x0],r9
800072d2:	ed b8 00 0c 	bld	r8,0xc
800072d6:	c2 51       	brne	80007320 <_fflush_r+0x108>
800072d8:	ef 45 00 54 	st.w	r7[84],r5
800072dc:	d8 22       	popm	r4-r7,pc
800072de:	6e 45       	ld.w	r5,r7[0x10]
800072e0:	58 05       	cp.w	r5,0
800072e2:	c1 f0       	breq	80007320 <_fflush_r+0x108>
800072e4:	6e 04       	ld.w	r4,r7[0x0]
800072e6:	f5 da c0 02 	bfextu	r10,r10,0x0,0x2
800072ea:	8f 05       	st.w	r7[0x0],r5
800072ec:	f9 b8 01 00 	movne	r8,0
800072f0:	ef f8 00 05 	ld.weq	r8,r7[0x14]
800072f4:	0a 14       	sub	r4,r5
800072f6:	8f 28       	st.w	r7[0x8],r8
800072f8:	c1 18       	rjmp	8000731a <_fflush_r+0x102>
800072fa:	08 99       	mov	r9,r4
800072fc:	0a 9a       	mov	r10,r5
800072fe:	6e a8       	ld.w	r8,r7[0x28]
80007300:	6e 8b       	ld.w	r11,r7[0x20]
80007302:	0c 9c       	mov	r12,r6
80007304:	5d 18       	icall	r8
80007306:	18 14       	sub	r4,r12
80007308:	58 0c       	cp.w	r12,0
8000730a:	e0 89 00 07 	brgt	80007318 <_fflush_r+0x100>
8000730e:	8e 68       	ld.sh	r8,r7[0xc]
80007310:	a7 a8       	sbr	r8,0x6
80007312:	3f fc       	mov	r12,-1
80007314:	ae 68       	st.h	r7[0xc],r8
80007316:	d8 22       	popm	r4-r7,pc
80007318:	18 05       	add	r5,r12
8000731a:	58 04       	cp.w	r4,0
8000731c:	fe 99 ff ef 	brgt	800072fa <_fflush_r+0xe2>
80007320:	d8 2a       	popm	r4-r7,pc,r12=0
80007322:	d7 03       	nop

80007324 <__sfp_lock_acquire>:
80007324:	5e fc       	retal	r12

80007326 <__sfp_lock_release>:
80007326:	5e fc       	retal	r12

80007328 <_cleanup_r>:
80007328:	d4 01       	pushm	lr
8000732a:	fe cb e8 6a 	sub	r11,pc,-6038
8000732e:	e0 a0 02 fd 	rcall	80007928 <_fwalk>
80007332:	d8 02       	popm	pc

80007334 <__sfmoreglue>:
80007334:	d4 21       	pushm	r4-r7,lr
80007336:	16 95       	mov	r5,r11
80007338:	f6 06 10 5c 	mul	r6,r11,92
8000733c:	ec cb ff f4 	sub	r11,r6,-12
80007340:	e0 a0 03 84 	rcall	80007a48 <_malloc_r>
80007344:	18 97       	mov	r7,r12
80007346:	c0 90       	breq	80007358 <__sfmoreglue+0x24>
80007348:	99 15       	st.w	r12[0x4],r5
8000734a:	30 0b       	mov	r11,0
8000734c:	2f 4c       	sub	r12,-12
8000734e:	0c 9a       	mov	r10,r6
80007350:	8f 2c       	st.w	r7[0x8],r12
80007352:	8f 0b       	st.w	r7[0x0],r11
80007354:	e0 a0 05 bc 	rcall	80007ecc <memset>
80007358:	0e 9c       	mov	r12,r7
8000735a:	d8 22       	popm	r4-r7,pc

8000735c <__sfp>:
8000735c:	d4 21       	pushm	r4-r7,lr
8000735e:	fe c8 d7 86 	sub	r8,pc,-10362
80007362:	18 96       	mov	r6,r12
80007364:	70 07       	ld.w	r7,r8[0x0]
80007366:	6e 68       	ld.w	r8,r7[0x18]
80007368:	58 08       	cp.w	r8,0
8000736a:	c0 31       	brne	80007370 <__sfp+0x14>
8000736c:	0e 9c       	mov	r12,r7
8000736e:	c2 dc       	rcall	800073c8 <__sinit>
80007370:	ee c7 ff 28 	sub	r7,r7,-216
80007374:	30 05       	mov	r5,0
80007376:	6e 2c       	ld.w	r12,r7[0x8]
80007378:	6e 18       	ld.w	r8,r7[0x4]
8000737a:	c0 68       	rjmp	80007386 <__sfp+0x2a>
8000737c:	98 69       	ld.sh	r9,r12[0xc]
8000737e:	ea 09 19 00 	cp.h	r9,r5
80007382:	c1 10       	breq	800073a4 <__sfp+0x48>
80007384:	2a 4c       	sub	r12,-92
80007386:	20 18       	sub	r8,1
80007388:	cf a7       	brpl	8000737c <__sfp+0x20>
8000738a:	6e 08       	ld.w	r8,r7[0x0]
8000738c:	58 08       	cp.w	r8,0
8000738e:	c0 61       	brne	8000739a <__sfp+0x3e>
80007390:	30 4b       	mov	r11,4
80007392:	0c 9c       	mov	r12,r6
80007394:	cd 0f       	rcall	80007334 <__sfmoreglue>
80007396:	8f 0c       	st.w	r7[0x0],r12
80007398:	c0 30       	breq	8000739e <__sfp+0x42>
8000739a:	6e 07       	ld.w	r7,r7[0x0]
8000739c:	ce db       	rjmp	80007376 <__sfp+0x1a>
8000739e:	30 c8       	mov	r8,12
800073a0:	8d 38       	st.w	r6[0xc],r8
800073a2:	d8 22       	popm	r4-r7,pc
800073a4:	30 08       	mov	r8,0
800073a6:	f9 48 00 4c 	st.w	r12[76],r8
800073aa:	99 08       	st.w	r12[0x0],r8
800073ac:	99 28       	st.w	r12[0x8],r8
800073ae:	99 18       	st.w	r12[0x4],r8
800073b0:	99 48       	st.w	r12[0x10],r8
800073b2:	99 58       	st.w	r12[0x14],r8
800073b4:	99 68       	st.w	r12[0x18],r8
800073b6:	99 d8       	st.w	r12[0x34],r8
800073b8:	99 e8       	st.w	r12[0x38],r8
800073ba:	f9 48 00 48 	st.w	r12[72],r8
800073be:	3f f8       	mov	r8,-1
800073c0:	b8 78       	st.h	r12[0xe],r8
800073c2:	30 18       	mov	r8,1
800073c4:	b8 68       	st.h	r12[0xc],r8
800073c6:	d8 22       	popm	r4-r7,pc

800073c8 <__sinit>:
800073c8:	d4 21       	pushm	r4-r7,lr
800073ca:	18 96       	mov	r6,r12
800073cc:	78 67       	ld.w	r7,r12[0x18]
800073ce:	58 07       	cp.w	r7,0
800073d0:	c4 91       	brne	80007462 <__sinit+0x9a>
800073d2:	fe c8 00 aa 	sub	r8,pc,170
800073d6:	30 15       	mov	r5,1
800073d8:	99 a8       	st.w	r12[0x28],r8
800073da:	f9 47 00 d8 	st.w	r12[216],r7
800073de:	f9 47 00 dc 	st.w	r12[220],r7
800073e2:	f9 47 00 e0 	st.w	r12[224],r7
800073e6:	99 65       	st.w	r12[0x18],r5
800073e8:	cb af       	rcall	8000735c <__sfp>
800073ea:	8d 0c       	st.w	r6[0x0],r12
800073ec:	0c 9c       	mov	r12,r6
800073ee:	cb 7f       	rcall	8000735c <__sfp>
800073f0:	8d 1c       	st.w	r6[0x4],r12
800073f2:	0c 9c       	mov	r12,r6
800073f4:	cb 4f       	rcall	8000735c <__sfp>
800073f6:	6c 09       	ld.w	r9,r6[0x0]
800073f8:	30 48       	mov	r8,4
800073fa:	93 07       	st.w	r9[0x0],r7
800073fc:	b2 68       	st.h	r9[0xc],r8
800073fe:	93 17       	st.w	r9[0x4],r7
80007400:	93 27       	st.w	r9[0x8],r7
80007402:	6c 18       	ld.w	r8,r6[0x4]
80007404:	b2 77       	st.h	r9[0xe],r7
80007406:	93 47       	st.w	r9[0x10],r7
80007408:	93 57       	st.w	r9[0x14],r7
8000740a:	93 67       	st.w	r9[0x18],r7
8000740c:	93 89       	st.w	r9[0x20],r9
8000740e:	91 07       	st.w	r8[0x0],r7
80007410:	91 17       	st.w	r8[0x4],r7
80007412:	91 27       	st.w	r8[0x8],r7
80007414:	fe ce eb e4 	sub	lr,pc,-5148
80007418:	fe cb ec 14 	sub	r11,pc,-5100
8000741c:	93 9e       	st.w	r9[0x24],lr
8000741e:	93 ab       	st.w	r9[0x28],r11
80007420:	fe ca ec 3c 	sub	r10,pc,-5060
80007424:	fe c4 ec 48 	sub	r4,pc,-5048
80007428:	93 ba       	st.w	r9[0x2c],r10
8000742a:	93 c4       	st.w	r9[0x30],r4
8000742c:	30 99       	mov	r9,9
8000742e:	b0 69       	st.h	r8[0xc],r9
80007430:	b0 75       	st.h	r8[0xe],r5
80007432:	91 c4       	st.w	r8[0x30],r4
80007434:	91 47       	st.w	r8[0x10],r7
80007436:	91 57       	st.w	r8[0x14],r7
80007438:	91 67       	st.w	r8[0x18],r7
8000743a:	91 88       	st.w	r8[0x20],r8
8000743c:	91 9e       	st.w	r8[0x24],lr
8000743e:	91 ab       	st.w	r8[0x28],r11
80007440:	91 ba       	st.w	r8[0x2c],r10
80007442:	8d 2c       	st.w	r6[0x8],r12
80007444:	31 28       	mov	r8,18
80007446:	99 07       	st.w	r12[0x0],r7
80007448:	b8 68       	st.h	r12[0xc],r8
8000744a:	99 17       	st.w	r12[0x4],r7
8000744c:	99 27       	st.w	r12[0x8],r7
8000744e:	30 28       	mov	r8,2
80007450:	b8 78       	st.h	r12[0xe],r8
80007452:	99 c4       	st.w	r12[0x30],r4
80007454:	99 67       	st.w	r12[0x18],r7
80007456:	99 9e       	st.w	r12[0x24],lr
80007458:	99 ab       	st.w	r12[0x28],r11
8000745a:	99 ba       	st.w	r12[0x2c],r10
8000745c:	99 47       	st.w	r12[0x10],r7
8000745e:	99 57       	st.w	r12[0x14],r7
80007460:	99 8c       	st.w	r12[0x20],r12
80007462:	d8 22       	popm	r4-r7,pc

80007464 <_malloc_trim_r>:
80007464:	d4 21       	pushm	r4-r7,lr
80007466:	16 95       	mov	r5,r11
80007468:	18 97       	mov	r7,r12
8000746a:	e0 a0 05 38 	rcall	80007eda <__malloc_lock>
8000746e:	e0 64 01 08 	mov	r4,264
80007472:	68 28       	ld.w	r8,r4[0x8]
80007474:	70 16       	ld.w	r6,r8[0x4]
80007476:	e0 16 ff fc 	andl	r6,0xfffc
8000747a:	ec c8 ff 91 	sub	r8,r6,-111
8000747e:	f0 05 01 05 	sub	r5,r8,r5
80007482:	e0 15 ff 80 	andl	r5,0xff80
80007486:	ea c5 00 80 	sub	r5,r5,128
8000748a:	e0 45 00 7f 	cp.w	r5,127
8000748e:	e0 8a 00 25 	brle	800074d8 <_malloc_trim_r+0x74>
80007492:	30 0b       	mov	r11,0
80007494:	0e 9c       	mov	r12,r7
80007496:	e0 a0 09 93 	rcall	800087bc <_sbrk_r>
8000749a:	68 28       	ld.w	r8,r4[0x8]
8000749c:	0c 08       	add	r8,r6
8000749e:	10 3c       	cp.w	r12,r8
800074a0:	c1 c1       	brne	800074d8 <_malloc_trim_r+0x74>
800074a2:	ea 0b 11 00 	rsub	r11,r5,0
800074a6:	0e 9c       	mov	r12,r7
800074a8:	e0 a0 09 8a 	rcall	800087bc <_sbrk_r>
800074ac:	5b fc       	cp.w	r12,-1
800074ae:	c1 91       	brne	800074e0 <_malloc_trim_r+0x7c>
800074b0:	30 0b       	mov	r11,0
800074b2:	0e 9c       	mov	r12,r7
800074b4:	e0 a0 09 84 	rcall	800087bc <_sbrk_r>
800074b8:	68 28       	ld.w	r8,r4[0x8]
800074ba:	f8 08 01 09 	sub	r9,r12,r8
800074be:	58 f9       	cp.w	r9,15
800074c0:	e0 8a 00 0c 	brle	800074d8 <_malloc_trim_r+0x74>
800074c4:	a1 a9       	sbr	r9,0x0
800074c6:	91 19       	st.w	r8[0x4],r9
800074c8:	e0 68 05 14 	mov	r8,1300
800074cc:	70 09       	ld.w	r9,r8[0x0]
800074ce:	e0 68 06 50 	mov	r8,1616
800074d2:	f8 09 01 09 	sub	r9,r12,r9
800074d6:	91 09       	st.w	r8[0x0],r9
800074d8:	0e 9c       	mov	r12,r7
800074da:	e0 a0 05 01 	rcall	80007edc <__malloc_unlock>
800074de:	d8 2a       	popm	r4-r7,pc,r12=0
800074e0:	68 28       	ld.w	r8,r4[0x8]
800074e2:	0a 16       	sub	r6,r5
800074e4:	a1 a6       	sbr	r6,0x0
800074e6:	91 16       	st.w	r8[0x4],r6
800074e8:	e0 68 06 50 	mov	r8,1616
800074ec:	70 09       	ld.w	r9,r8[0x0]
800074ee:	0a 19       	sub	r9,r5
800074f0:	0e 9c       	mov	r12,r7
800074f2:	91 09       	st.w	r8[0x0],r9
800074f4:	e0 a0 04 f4 	rcall	80007edc <__malloc_unlock>
800074f8:	da 2a       	popm	r4-r7,pc,r12=1
800074fa:	d7 03       	nop

800074fc <_free_r>:
800074fc:	d4 21       	pushm	r4-r7,lr
800074fe:	16 96       	mov	r6,r11
80007500:	18 97       	mov	r7,r12
80007502:	58 0b       	cp.w	r11,0
80007504:	e0 80 00 c0 	breq	80007684 <_free_r+0x188>
80007508:	e0 a0 04 e9 	rcall	80007eda <__malloc_lock>
8000750c:	20 86       	sub	r6,8
8000750e:	e0 6a 01 08 	mov	r10,264
80007512:	6c 18       	ld.w	r8,r6[0x4]
80007514:	74 2e       	ld.w	lr,r10[0x8]
80007516:	f9 d8 c0 01 	bfextu	r12,r8,0x0,0x1
8000751a:	a1 c8       	cbr	r8,0x0
8000751c:	ec 08 00 09 	add	r9,r6,r8
80007520:	72 1b       	ld.w	r11,r9[0x4]
80007522:	e0 1b ff fc 	andl	r11,0xfffc
80007526:	1c 39       	cp.w	r9,lr
80007528:	c1 e1       	brne	80007564 <_free_r+0x68>
8000752a:	f6 08 00 08 	add	r8,r11,r8
8000752e:	58 0c       	cp.w	r12,0
80007530:	c0 81       	brne	80007540 <_free_r+0x44>
80007532:	6c 09       	ld.w	r9,r6[0x0]
80007534:	12 16       	sub	r6,r9
80007536:	12 08       	add	r8,r9
80007538:	6c 3b       	ld.w	r11,r6[0xc]
8000753a:	6c 29       	ld.w	r9,r6[0x8]
8000753c:	97 29       	st.w	r11[0x8],r9
8000753e:	93 3b       	st.w	r9[0xc],r11
80007540:	10 99       	mov	r9,r8
80007542:	95 26       	st.w	r10[0x8],r6
80007544:	a1 a9       	sbr	r9,0x0
80007546:	8d 19       	st.w	r6[0x4],r9
80007548:	e0 69 05 10 	mov	r9,1296
8000754c:	72 09       	ld.w	r9,r9[0x0]
8000754e:	12 38       	cp.w	r8,r9
80007550:	c0 63       	brcs	8000755c <_free_r+0x60>
80007552:	e0 68 06 4c 	mov	r8,1612
80007556:	0e 9c       	mov	r12,r7
80007558:	70 0b       	ld.w	r11,r8[0x0]
8000755a:	c8 5f       	rcall	80007464 <_malloc_trim_r>
8000755c:	0e 9c       	mov	r12,r7
8000755e:	e0 a0 04 bf 	rcall	80007edc <__malloc_unlock>
80007562:	d8 22       	popm	r4-r7,pc
80007564:	93 1b       	st.w	r9[0x4],r11
80007566:	58 0c       	cp.w	r12,0
80007568:	c0 30       	breq	8000756e <_free_r+0x72>
8000756a:	30 0c       	mov	r12,0
8000756c:	c1 08       	rjmp	8000758c <_free_r+0x90>
8000756e:	6c 0e       	ld.w	lr,r6[0x0]
80007570:	f4 c5 ff f8 	sub	r5,r10,-8
80007574:	1c 16       	sub	r6,lr
80007576:	1c 08       	add	r8,lr
80007578:	6c 2e       	ld.w	lr,r6[0x8]
8000757a:	0a 3e       	cp.w	lr,r5
8000757c:	f9 bc 00 01 	moveq	r12,1
80007580:	ed f5 10 03 	ld.wne	r5,r6[0xc]
80007584:	eb fe 1a 02 	st.wne	r5[0x8],lr
80007588:	fd f5 1a 03 	st.wne	lr[0xc],r5
8000758c:	f2 0b 00 0e 	add	lr,r9,r11
80007590:	7c 1e       	ld.w	lr,lr[0x4]
80007592:	ed be 00 00 	bld	lr,0x0
80007596:	c1 40       	breq	800075be <_free_r+0xc2>
80007598:	16 08       	add	r8,r11
8000759a:	58 0c       	cp.w	r12,0
8000759c:	c0 d1       	brne	800075b6 <_free_r+0xba>
8000759e:	e0 6e 01 08 	mov	lr,264
800075a2:	72 2b       	ld.w	r11,r9[0x8]
800075a4:	2f 8e       	sub	lr,-8
800075a6:	1c 3b       	cp.w	r11,lr
800075a8:	c0 71       	brne	800075b6 <_free_r+0xba>
800075aa:	97 36       	st.w	r11[0xc],r6
800075ac:	97 26       	st.w	r11[0x8],r6
800075ae:	8d 2b       	st.w	r6[0x8],r11
800075b0:	8d 3b       	st.w	r6[0xc],r11
800075b2:	30 1c       	mov	r12,1
800075b4:	c0 58       	rjmp	800075be <_free_r+0xc2>
800075b6:	72 2b       	ld.w	r11,r9[0x8]
800075b8:	72 39       	ld.w	r9,r9[0xc]
800075ba:	93 2b       	st.w	r9[0x8],r11
800075bc:	97 39       	st.w	r11[0xc],r9
800075be:	10 99       	mov	r9,r8
800075c0:	ec 08 09 08 	st.w	r6[r8],r8
800075c4:	a1 a9       	sbr	r9,0x0
800075c6:	8d 19       	st.w	r6[0x4],r9
800075c8:	58 0c       	cp.w	r12,0
800075ca:	c5 a1       	brne	8000767e <_free_r+0x182>
800075cc:	e0 48 01 ff 	cp.w	r8,511
800075d0:	e0 8b 00 13 	brhi	800075f6 <_free_r+0xfa>
800075d4:	a3 98       	lsr	r8,0x3
800075d6:	f4 08 00 39 	add	r9,r10,r8<<0x3
800075da:	72 2b       	ld.w	r11,r9[0x8]
800075dc:	8d 39       	st.w	r6[0xc],r9
800075de:	8d 2b       	st.w	r6[0x8],r11
800075e0:	97 36       	st.w	r11[0xc],r6
800075e2:	93 26       	st.w	r9[0x8],r6
800075e4:	a3 48       	asr	r8,0x2
800075e6:	74 19       	ld.w	r9,r10[0x4]
800075e8:	30 1b       	mov	r11,1
800075ea:	f6 08 09 48 	lsl	r8,r11,r8
800075ee:	f3 e8 10 08 	or	r8,r9,r8
800075f2:	95 18       	st.w	r10[0x4],r8
800075f4:	c4 58       	rjmp	8000767e <_free_r+0x182>
800075f6:	f0 0b 16 09 	lsr	r11,r8,0x9
800075fa:	58 4b       	cp.w	r11,4
800075fc:	e0 8b 00 06 	brhi	80007608 <_free_r+0x10c>
80007600:	f0 0b 16 06 	lsr	r11,r8,0x6
80007604:	2c 8b       	sub	r11,-56
80007606:	c2 08       	rjmp	80007646 <_free_r+0x14a>
80007608:	59 4b       	cp.w	r11,20
8000760a:	e0 8b 00 04 	brhi	80007612 <_free_r+0x116>
8000760e:	2a 5b       	sub	r11,-91
80007610:	c1 b8       	rjmp	80007646 <_free_r+0x14a>
80007612:	e0 4b 00 54 	cp.w	r11,84
80007616:	e0 8b 00 06 	brhi	80007622 <_free_r+0x126>
8000761a:	f0 0b 16 0c 	lsr	r11,r8,0xc
8000761e:	29 2b       	sub	r11,-110
80007620:	c1 38       	rjmp	80007646 <_free_r+0x14a>
80007622:	e0 4b 01 54 	cp.w	r11,340
80007626:	e0 8b 00 06 	brhi	80007632 <_free_r+0x136>
8000762a:	f0 0b 16 0f 	lsr	r11,r8,0xf
8000762e:	28 9b       	sub	r11,-119
80007630:	c0 b8       	rjmp	80007646 <_free_r+0x14a>
80007632:	e0 4b 05 54 	cp.w	r11,1364
80007636:	e0 88 00 05 	brls	80007640 <_free_r+0x144>
8000763a:	37 eb       	mov	r11,126
8000763c:	c0 58       	rjmp	80007646 <_free_r+0x14a>
8000763e:	d7 03       	nop
80007640:	f0 0b 16 12 	lsr	r11,r8,0x12
80007644:	28 4b       	sub	r11,-124
80007646:	f4 0b 00 3c 	add	r12,r10,r11<<0x3
8000764a:	78 29       	ld.w	r9,r12[0x8]
8000764c:	18 39       	cp.w	r9,r12
8000764e:	c0 e1       	brne	8000766a <_free_r+0x16e>
80007650:	74 18       	ld.w	r8,r10[0x4]
80007652:	a3 4b       	asr	r11,0x2
80007654:	30 1c       	mov	r12,1
80007656:	f8 0b 09 4b 	lsl	r11,r12,r11
8000765a:	f1 eb 10 0b 	or	r11,r8,r11
8000765e:	12 98       	mov	r8,r9
80007660:	95 1b       	st.w	r10[0x4],r11
80007662:	c0 a8       	rjmp	80007676 <_free_r+0x17a>
80007664:	72 29       	ld.w	r9,r9[0x8]
80007666:	18 39       	cp.w	r9,r12
80007668:	c0 60       	breq	80007674 <_free_r+0x178>
8000766a:	72 1a       	ld.w	r10,r9[0x4]
8000766c:	e0 1a ff fc 	andl	r10,0xfffc
80007670:	14 38       	cp.w	r8,r10
80007672:	cf 93       	brcs	80007664 <_free_r+0x168>
80007674:	72 38       	ld.w	r8,r9[0xc]
80007676:	8d 38       	st.w	r6[0xc],r8
80007678:	8d 29       	st.w	r6[0x8],r9
8000767a:	93 36       	st.w	r9[0xc],r6
8000767c:	91 26       	st.w	r8[0x8],r6
8000767e:	0e 9c       	mov	r12,r7
80007680:	e0 a0 04 2e 	rcall	80007edc <__malloc_unlock>
80007684:	d8 22       	popm	r4-r7,pc
80007686:	d7 03       	nop

80007688 <__sfvwrite_r>:
80007688:	d4 31       	pushm	r0-r7,lr
8000768a:	20 3d       	sub	sp,12
8000768c:	14 94       	mov	r4,r10
8000768e:	18 95       	mov	r5,r12
80007690:	16 97       	mov	r7,r11
80007692:	74 28       	ld.w	r8,r10[0x8]
80007694:	58 08       	cp.w	r8,0
80007696:	e0 80 01 45 	breq	80007920 <__sfvwrite_r+0x298>
8000769a:	96 68       	ld.sh	r8,r11[0xc]
8000769c:	ed b8 00 03 	bld	r8,0x3
800076a0:	c0 41       	brne	800076a8 <__sfvwrite_r+0x20>
800076a2:	76 48       	ld.w	r8,r11[0x10]
800076a4:	58 08       	cp.w	r8,0
800076a6:	c0 c1       	brne	800076be <__sfvwrite_r+0x36>
800076a8:	0e 9b       	mov	r11,r7
800076aa:	0a 9c       	mov	r12,r5
800076ac:	fe b0 f6 ca 	rcall	80006440 <__swsetup_r>
800076b0:	c0 70       	breq	800076be <__sfvwrite_r+0x36>
800076b2:	8e 68       	ld.sh	r8,r7[0xc]
800076b4:	a7 a8       	sbr	r8,0x6
800076b6:	ae 68       	st.h	r7[0xc],r8
800076b8:	30 98       	mov	r8,9
800076ba:	8b 38       	st.w	r5[0xc],r8
800076bc:	c3 09       	rjmp	8000791c <__sfvwrite_r+0x294>
800076be:	8e 63       	ld.sh	r3,r7[0xc]
800076c0:	68 00       	ld.w	r0,r4[0x0]
800076c2:	06 96       	mov	r6,r3
800076c4:	e2 16 00 02 	andl	r6,0x2,COH
800076c8:	c2 10       	breq	8000770a <__sfvwrite_r+0x82>
800076ca:	30 03       	mov	r3,0
800076cc:	e0 62 04 00 	mov	r2,1024
800076d0:	06 96       	mov	r6,r3
800076d2:	c0 48       	rjmp	800076da <__sfvwrite_r+0x52>
800076d4:	60 03       	ld.w	r3,r0[0x0]
800076d6:	60 16       	ld.w	r6,r0[0x4]
800076d8:	2f 80       	sub	r0,-8
800076da:	58 06       	cp.w	r6,0
800076dc:	cf c0       	breq	800076d4 <__sfvwrite_r+0x4c>
800076de:	e0 46 04 00 	cp.w	r6,1024
800076e2:	ec 09 17 80 	movls	r9,r6
800076e6:	e4 09 17 b0 	movhi	r9,r2
800076ea:	06 9a       	mov	r10,r3
800076ec:	6e a8       	ld.w	r8,r7[0x28]
800076ee:	6e 8b       	ld.w	r11,r7[0x20]
800076f0:	0a 9c       	mov	r12,r5
800076f2:	5d 18       	icall	r8
800076f4:	18 16       	sub	r6,r12
800076f6:	58 0c       	cp.w	r12,0
800076f8:	e0 8a 01 0f 	brle	80007916 <__sfvwrite_r+0x28e>
800076fc:	68 28       	ld.w	r8,r4[0x8]
800076fe:	18 18       	sub	r8,r12
80007700:	89 28       	st.w	r4[0x8],r8
80007702:	e0 80 01 0f 	breq	80007920 <__sfvwrite_r+0x298>
80007706:	18 03       	add	r3,r12
80007708:	ce 9b       	rjmp	800076da <__sfvwrite_r+0x52>
8000770a:	e7 d3 c0 01 	bfextu	r3,r3,0x0,0x1
8000770e:	c0 70       	breq	8000771c <__sfvwrite_r+0x94>
80007710:	50 06       	stdsp	sp[0x0],r6
80007712:	0c 93       	mov	r3,r6
80007714:	0c 91       	mov	r1,r6
80007716:	50 15       	stdsp	sp[0x4],r5
80007718:	08 92       	mov	r2,r4
8000771a:	c9 e8       	rjmp	80007856 <__sfvwrite_r+0x1ce>
8000771c:	06 96       	mov	r6,r3
8000771e:	08 91       	mov	r1,r4
80007720:	c0 48       	rjmp	80007728 <__sfvwrite_r+0xa0>
80007722:	60 03       	ld.w	r3,r0[0x0]
80007724:	60 16       	ld.w	r6,r0[0x4]
80007726:	2f 80       	sub	r0,-8
80007728:	58 06       	cp.w	r6,0
8000772a:	cf c0       	breq	80007722 <__sfvwrite_r+0x9a>
8000772c:	8e 68       	ld.sh	r8,r7[0xc]
8000772e:	6e 24       	ld.w	r4,r7[0x8]
80007730:	10 99       	mov	r9,r8
80007732:	e2 19 02 00 	andl	r9,0x200,COH
80007736:	c5 50       	breq	800077e0 <__sfvwrite_r+0x158>
80007738:	08 36       	cp.w	r6,r4
8000773a:	c4 33       	brcs	800077c0 <__sfvwrite_r+0x138>
8000773c:	10 99       	mov	r9,r8
8000773e:	e2 19 04 80 	andl	r9,0x480,COH
80007742:	c3 f0       	breq	800077c0 <__sfvwrite_r+0x138>
80007744:	6e 4b       	ld.w	r11,r7[0x10]
80007746:	6e 09       	ld.w	r9,r7[0x0]
80007748:	16 19       	sub	r9,r11
8000774a:	50 09       	stdsp	sp[0x0],r9
8000774c:	6e 59       	ld.w	r9,r7[0x14]
8000774e:	10 9c       	mov	r12,r8
80007750:	f2 09 00 1a 	add	r10,r9,r9<<0x1
80007754:	30 28       	mov	r8,2
80007756:	f4 08 0c 08 	divs	r8,r10,r8
8000775a:	fa e9 00 04 	st.d	sp[4],r8
8000775e:	10 94       	mov	r4,r8
80007760:	40 09       	lddsp	r9,sp[0x0]
80007762:	e2 1c 04 00 	andl	r12,0x400,COH
80007766:	2f f9       	sub	r9,-1
80007768:	0c 09       	add	r9,r6
8000776a:	12 38       	cp.w	r8,r9
8000776c:	f2 04 17 30 	movlo	r4,r9
80007770:	58 0c       	cp.w	r12,0
80007772:	c1 00       	breq	80007792 <__sfvwrite_r+0x10a>
80007774:	08 9b       	mov	r11,r4
80007776:	0a 9c       	mov	r12,r5
80007778:	c6 8d       	rcall	80007a48 <_malloc_r>
8000777a:	18 92       	mov	r2,r12
8000777c:	c1 40       	breq	800077a4 <__sfvwrite_r+0x11c>
8000777e:	40 0a       	lddsp	r10,sp[0x0]
80007780:	6e 4b       	ld.w	r11,r7[0x10]
80007782:	fe b0 e4 79 	rcall	80004074 <memcpy>
80007786:	8e 68       	ld.sh	r8,r7[0xc]
80007788:	e0 18 fb 7f 	andl	r8,0xfb7f
8000778c:	a7 b8       	sbr	r8,0x7
8000778e:	ae 68       	st.h	r7[0xc],r8
80007790:	c0 d8       	rjmp	800077aa <__sfvwrite_r+0x122>
80007792:	08 9a       	mov	r10,r4
80007794:	0a 9c       	mov	r12,r5
80007796:	e0 a0 06 8f 	rcall	800084b4 <_realloc_r>
8000779a:	18 92       	mov	r2,r12
8000779c:	c0 71       	brne	800077aa <__sfvwrite_r+0x122>
8000779e:	6e 4b       	ld.w	r11,r7[0x10]
800077a0:	0a 9c       	mov	r12,r5
800077a2:	ca de       	rcall	800074fc <_free_r>
800077a4:	30 c8       	mov	r8,12
800077a6:	8b 38       	st.w	r5[0xc],r8
800077a8:	cb 78       	rjmp	80007916 <__sfvwrite_r+0x28e>
800077aa:	40 0a       	lddsp	r10,sp[0x0]
800077ac:	40 09       	lddsp	r9,sp[0x0]
800077ae:	e8 0a 01 0a 	sub	r10,r4,r10
800077b2:	e4 09 00 08 	add	r8,r2,r9
800077b6:	8f 54       	st.w	r7[0x14],r4
800077b8:	8f 2a       	st.w	r7[0x8],r10
800077ba:	8f 08       	st.w	r7[0x0],r8
800077bc:	8f 42       	st.w	r7[0x10],r2
800077be:	0c 94       	mov	r4,r6
800077c0:	08 36       	cp.w	r6,r4
800077c2:	ec 04 17 30 	movlo	r4,r6
800077c6:	06 9b       	mov	r11,r3
800077c8:	08 9a       	mov	r10,r4
800077ca:	6e 0c       	ld.w	r12,r7[0x0]
800077cc:	e0 a0 03 61 	rcall	80007e8e <memmove>
800077d0:	6e 08       	ld.w	r8,r7[0x0]
800077d2:	08 08       	add	r8,r4
800077d4:	8f 08       	st.w	r7[0x0],r8
800077d6:	6e 28       	ld.w	r8,r7[0x8]
800077d8:	08 18       	sub	r8,r4
800077da:	0c 94       	mov	r4,r6
800077dc:	8f 28       	st.w	r7[0x8],r8
800077de:	c3 08       	rjmp	8000783e <__sfvwrite_r+0x1b6>
800077e0:	08 36       	cp.w	r6,r4
800077e2:	5f ba       	srhi	r10
800077e4:	6e 0c       	ld.w	r12,r7[0x0]
800077e6:	6e 48       	ld.w	r8,r7[0x10]
800077e8:	10 3c       	cp.w	r12,r8
800077ea:	5f b8       	srhi	r8
800077ec:	f5 e8 00 08 	and	r8,r10,r8
800077f0:	f2 08 18 00 	cp.b	r8,r9
800077f4:	c0 e0       	breq	80007810 <__sfvwrite_r+0x188>
800077f6:	06 9b       	mov	r11,r3
800077f8:	08 9a       	mov	r10,r4
800077fa:	e0 a0 03 4a 	rcall	80007e8e <memmove>
800077fe:	6e 08       	ld.w	r8,r7[0x0]
80007800:	08 08       	add	r8,r4
80007802:	0e 9b       	mov	r11,r7
80007804:	8f 08       	st.w	r7[0x0],r8
80007806:	0a 9c       	mov	r12,r5
80007808:	fe b0 fd 08 	rcall	80007218 <_fflush_r>
8000780c:	c1 90       	breq	8000783e <__sfvwrite_r+0x1b6>
8000780e:	c8 48       	rjmp	80007916 <__sfvwrite_r+0x28e>
80007810:	6e 59       	ld.w	r9,r7[0x14]
80007812:	12 36       	cp.w	r6,r9
80007814:	c0 a3       	brcs	80007828 <__sfvwrite_r+0x1a0>
80007816:	6e a8       	ld.w	r8,r7[0x28]
80007818:	06 9a       	mov	r10,r3
8000781a:	6e 8b       	ld.w	r11,r7[0x20]
8000781c:	0a 9c       	mov	r12,r5
8000781e:	5d 18       	icall	r8
80007820:	18 94       	mov	r4,r12
80007822:	e0 89 00 0e 	brgt	8000783e <__sfvwrite_r+0x1b6>
80007826:	c7 88       	rjmp	80007916 <__sfvwrite_r+0x28e>
80007828:	0c 9a       	mov	r10,r6
8000782a:	06 9b       	mov	r11,r3
8000782c:	e0 a0 03 31 	rcall	80007e8e <memmove>
80007830:	6e 08       	ld.w	r8,r7[0x0]
80007832:	0c 08       	add	r8,r6
80007834:	0c 94       	mov	r4,r6
80007836:	8f 08       	st.w	r7[0x0],r8
80007838:	6e 28       	ld.w	r8,r7[0x8]
8000783a:	0c 18       	sub	r8,r6
8000783c:	8f 28       	st.w	r7[0x8],r8
8000783e:	62 28       	ld.w	r8,r1[0x8]
80007840:	08 18       	sub	r8,r4
80007842:	83 28       	st.w	r1[0x8],r8
80007844:	c6 e0       	breq	80007920 <__sfvwrite_r+0x298>
80007846:	08 16       	sub	r6,r4
80007848:	08 03       	add	r3,r4
8000784a:	c6 fb       	rjmp	80007728 <__sfvwrite_r+0xa0>
8000784c:	60 03       	ld.w	r3,r0[0x0]
8000784e:	60 11       	ld.w	r1,r0[0x4]
80007850:	30 08       	mov	r8,0
80007852:	2f 80       	sub	r0,-8
80007854:	50 08       	stdsp	sp[0x0],r8
80007856:	58 01       	cp.w	r1,0
80007858:	cf a0       	breq	8000784c <__sfvwrite_r+0x1c4>
8000785a:	40 0a       	lddsp	r10,sp[0x0]
8000785c:	58 0a       	cp.w	r10,0
8000785e:	c1 51       	brne	80007888 <__sfvwrite_r+0x200>
80007860:	e2 c6 ff ff 	sub	r6,r1,-1
80007864:	02 9a       	mov	r10,r1
80007866:	30 ab       	mov	r11,10
80007868:	06 9c       	mov	r12,r3
8000786a:	e0 a0 03 07 	rcall	80007e78 <memchr>
8000786e:	f8 c8 ff ff 	sub	r8,r12,-1
80007872:	58 0c       	cp.w	r12,0
80007874:	f1 d3 e1 16 	subne	r6,r8,r3
80007878:	f9 b9 01 01 	movne	r9,1
8000787c:	fb f9 1a 00 	st.wne	sp[0x0],r9
80007880:	f9 b8 00 01 	moveq	r8,1
80007884:	fb f8 0a 00 	st.weq	sp[0x0],r8
80007888:	02 36       	cp.w	r6,r1
8000788a:	ec 04 17 80 	movls	r4,r6
8000788e:	e2 04 17 b0 	movhi	r4,r1
80007892:	6e 59       	ld.w	r9,r7[0x14]
80007894:	6e 25       	ld.w	r5,r7[0x8]
80007896:	f2 05 00 05 	add	r5,r9,r5
8000789a:	0a 34       	cp.w	r4,r5
8000789c:	5f 9a       	srgt	r10
8000789e:	6e 0c       	ld.w	r12,r7[0x0]
800078a0:	6e 48       	ld.w	r8,r7[0x10]
800078a2:	10 3c       	cp.w	r12,r8
800078a4:	5f b8       	srhi	r8
800078a6:	f5 e8 00 08 	and	r8,r10,r8
800078aa:	30 0a       	mov	r10,0
800078ac:	f4 08 18 00 	cp.b	r8,r10
800078b0:	c0 e0       	breq	800078cc <__sfvwrite_r+0x244>
800078b2:	06 9b       	mov	r11,r3
800078b4:	0a 9a       	mov	r10,r5
800078b6:	e0 a0 02 ec 	rcall	80007e8e <memmove>
800078ba:	6e 08       	ld.w	r8,r7[0x0]
800078bc:	0a 08       	add	r8,r5
800078be:	0e 9b       	mov	r11,r7
800078c0:	8f 08       	st.w	r7[0x0],r8
800078c2:	40 1c       	lddsp	r12,sp[0x4]
800078c4:	fe b0 fc aa 	rcall	80007218 <_fflush_r>
800078c8:	c1 80       	breq	800078f8 <__sfvwrite_r+0x270>
800078ca:	c2 68       	rjmp	80007916 <__sfvwrite_r+0x28e>
800078cc:	12 34       	cp.w	r4,r9
800078ce:	c0 a5       	brlt	800078e2 <__sfvwrite_r+0x25a>
800078d0:	6e a8       	ld.w	r8,r7[0x28]
800078d2:	06 9a       	mov	r10,r3
800078d4:	6e 8b       	ld.w	r11,r7[0x20]
800078d6:	40 1c       	lddsp	r12,sp[0x4]
800078d8:	5d 18       	icall	r8
800078da:	18 95       	mov	r5,r12
800078dc:	e0 89 00 0e 	brgt	800078f8 <__sfvwrite_r+0x270>
800078e0:	c1 b8       	rjmp	80007916 <__sfvwrite_r+0x28e>
800078e2:	08 9a       	mov	r10,r4
800078e4:	06 9b       	mov	r11,r3
800078e6:	e0 a0 02 d4 	rcall	80007e8e <memmove>
800078ea:	6e 08       	ld.w	r8,r7[0x0]
800078ec:	08 08       	add	r8,r4
800078ee:	08 95       	mov	r5,r4
800078f0:	8f 08       	st.w	r7[0x0],r8
800078f2:	6e 28       	ld.w	r8,r7[0x8]
800078f4:	08 18       	sub	r8,r4
800078f6:	8f 28       	st.w	r7[0x8],r8
800078f8:	0a 16       	sub	r6,r5
800078fa:	c0 71       	brne	80007908 <__sfvwrite_r+0x280>
800078fc:	0e 9b       	mov	r11,r7
800078fe:	40 1c       	lddsp	r12,sp[0x4]
80007900:	fe b0 fc 8c 	rcall	80007218 <_fflush_r>
80007904:	c0 91       	brne	80007916 <__sfvwrite_r+0x28e>
80007906:	50 06       	stdsp	sp[0x0],r6
80007908:	64 28       	ld.w	r8,r2[0x8]
8000790a:	0a 18       	sub	r8,r5
8000790c:	85 28       	st.w	r2[0x8],r8
8000790e:	c0 90       	breq	80007920 <__sfvwrite_r+0x298>
80007910:	0a 11       	sub	r1,r5
80007912:	0a 03       	add	r3,r5
80007914:	ca 1b       	rjmp	80007856 <__sfvwrite_r+0x1ce>
80007916:	8e 68       	ld.sh	r8,r7[0xc]
80007918:	a7 a8       	sbr	r8,0x6
8000791a:	ae 68       	st.h	r7[0xc],r8
8000791c:	3f fc       	mov	r12,-1
8000791e:	c0 28       	rjmp	80007922 <__sfvwrite_r+0x29a>
80007920:	30 0c       	mov	r12,0
80007922:	2f dd       	sub	sp,-12
80007924:	d8 32       	popm	r0-r7,pc
80007926:	d7 03       	nop

80007928 <_fwalk>:
80007928:	d4 31       	pushm	r0-r7,lr
8000792a:	30 05       	mov	r5,0
8000792c:	16 91       	mov	r1,r11
8000792e:	f8 c7 ff 28 	sub	r7,r12,-216
80007932:	0a 92       	mov	r2,r5
80007934:	fe b0 fc f8 	rcall	80007324 <__sfp_lock_acquire>
80007938:	3f f3       	mov	r3,-1
8000793a:	c1 68       	rjmp	80007966 <_fwalk+0x3e>
8000793c:	6e 26       	ld.w	r6,r7[0x8]
8000793e:	6e 14       	ld.w	r4,r7[0x4]
80007940:	2f 46       	sub	r6,-12
80007942:	c0 c8       	rjmp	8000795a <_fwalk+0x32>
80007944:	8c 08       	ld.sh	r8,r6[0x0]
80007946:	e4 08 19 00 	cp.h	r8,r2
8000794a:	c0 70       	breq	80007958 <_fwalk+0x30>
8000794c:	8c 18       	ld.sh	r8,r6[0x2]
8000794e:	e6 08 19 00 	cp.h	r8,r3
80007952:	c0 30       	breq	80007958 <_fwalk+0x30>
80007954:	5d 11       	icall	r1
80007956:	18 45       	or	r5,r12
80007958:	2a 46       	sub	r6,-92
8000795a:	20 14       	sub	r4,1
8000795c:	ec cc 00 0c 	sub	r12,r6,12
80007960:	58 04       	cp.w	r4,0
80007962:	cf 14       	brge	80007944 <_fwalk+0x1c>
80007964:	6e 07       	ld.w	r7,r7[0x0]
80007966:	58 07       	cp.w	r7,0
80007968:	ce a1       	brne	8000793c <_fwalk+0x14>
8000796a:	fe b0 fc de 	rcall	80007326 <__sfp_lock_release>
8000796e:	0a 9c       	mov	r12,r5
80007970:	d8 32       	popm	r0-r7,pc
80007972:	d7 03       	nop

80007974 <_localeconv_r>:
80007974:	fe cc d9 54 	sub	r12,pc,-9900
80007978:	5e fc       	retal	r12
8000797a:	d7 03       	nop

8000797c <__smakebuf_r>:
8000797c:	d4 21       	pushm	r4-r7,lr
8000797e:	20 fd       	sub	sp,60
80007980:	96 68       	ld.sh	r8,r11[0xc]
80007982:	16 97       	mov	r7,r11
80007984:	18 96       	mov	r6,r12
80007986:	e2 18 00 02 	andl	r8,0x2,COH
8000798a:	c3 c1       	brne	80007a02 <__smakebuf_r+0x86>
8000798c:	96 7b       	ld.sh	r11,r11[0xe]
8000798e:	f0 0b 19 00 	cp.h	r11,r8
80007992:	c0 55       	brlt	8000799c <__smakebuf_r+0x20>
80007994:	1a 9a       	mov	r10,sp
80007996:	e0 a0 08 9d 	rcall	80008ad0 <_fstat_r>
8000799a:	c0 f4       	brge	800079b8 <__smakebuf_r+0x3c>
8000799c:	8e 65       	ld.sh	r5,r7[0xc]
8000799e:	0a 98       	mov	r8,r5
800079a0:	ab b8       	sbr	r8,0xb
800079a2:	e2 15 00 80 	andl	r5,0x80,COH
800079a6:	ae 68       	st.h	r7[0xc],r8
800079a8:	30 04       	mov	r4,0
800079aa:	e0 68 04 00 	mov	r8,1024
800079ae:	f9 b5 01 40 	movne	r5,64
800079b2:	f0 05 17 00 	moveq	r5,r8
800079b6:	c1 c8       	rjmp	800079ee <__smakebuf_r+0x72>
800079b8:	40 18       	lddsp	r8,sp[0x4]
800079ba:	e2 18 f0 00 	andl	r8,0xf000,COH
800079be:	e0 48 20 00 	cp.w	r8,8192
800079c2:	5f 04       	sreq	r4
800079c4:	e0 48 80 00 	cp.w	r8,32768
800079c8:	c0 e1       	brne	800079e4 <__smakebuf_r+0x68>
800079ca:	6e b9       	ld.w	r9,r7[0x2c]
800079cc:	fe c8 f1 e8 	sub	r8,pc,-3608
800079d0:	10 39       	cp.w	r9,r8
800079d2:	c0 91       	brne	800079e4 <__smakebuf_r+0x68>
800079d4:	8e 68       	ld.sh	r8,r7[0xc]
800079d6:	e0 65 04 00 	mov	r5,1024
800079da:	ab a8       	sbr	r8,0xa
800079dc:	ef 45 00 50 	st.w	r7[80],r5
800079e0:	ae 68       	st.h	r7[0xc],r8
800079e2:	c0 68       	rjmp	800079ee <__smakebuf_r+0x72>
800079e4:	8e 68       	ld.sh	r8,r7[0xc]
800079e6:	e0 65 04 00 	mov	r5,1024
800079ea:	ab b8       	sbr	r8,0xb
800079ec:	ae 68       	st.h	r7[0xc],r8
800079ee:	0a 9b       	mov	r11,r5
800079f0:	0c 9c       	mov	r12,r6
800079f2:	c2 bc       	rcall	80007a48 <_malloc_r>
800079f4:	8e 68       	ld.sh	r8,r7[0xc]
800079f6:	c0 d1       	brne	80007a10 <__smakebuf_r+0x94>
800079f8:	ed b8 00 09 	bld	r8,0x9
800079fc:	c1 b0       	breq	80007a32 <__smakebuf_r+0xb6>
800079fe:	a1 b8       	sbr	r8,0x1
80007a00:	ae 68       	st.h	r7[0xc],r8
80007a02:	ee c8 ff b9 	sub	r8,r7,-71
80007a06:	8f 48       	st.w	r7[0x10],r8
80007a08:	8f 08       	st.w	r7[0x0],r8
80007a0a:	30 18       	mov	r8,1
80007a0c:	8f 58       	st.w	r7[0x14],r8
80007a0e:	c1 28       	rjmp	80007a32 <__smakebuf_r+0xb6>
80007a10:	a7 b8       	sbr	r8,0x7
80007a12:	8f 4c       	st.w	r7[0x10],r12
80007a14:	ae 68       	st.h	r7[0xc],r8
80007a16:	8f 55       	st.w	r7[0x14],r5
80007a18:	fe c8 06 f0 	sub	r8,pc,1776
80007a1c:	8f 0c       	st.w	r7[0x0],r12
80007a1e:	8d a8       	st.w	r6[0x28],r8
80007a20:	58 04       	cp.w	r4,0
80007a22:	c0 80       	breq	80007a32 <__smakebuf_r+0xb6>
80007a24:	8e 7c       	ld.sh	r12,r7[0xe]
80007a26:	e0 a0 07 47 	rcall	800088b4 <isatty>
80007a2a:	c0 40       	breq	80007a32 <__smakebuf_r+0xb6>
80007a2c:	8e 68       	ld.sh	r8,r7[0xc]
80007a2e:	a1 a8       	sbr	r8,0x0
80007a30:	ae 68       	st.h	r7[0xc],r8
80007a32:	2f 1d       	sub	sp,-60
80007a34:	d8 22       	popm	r4-r7,pc
80007a36:	d7 03       	nop

80007a38 <malloc>:
80007a38:	d4 01       	pushm	lr
80007a3a:	e0 68 01 04 	mov	r8,260
80007a3e:	18 9b       	mov	r11,r12
80007a40:	70 0c       	ld.w	r12,r8[0x0]
80007a42:	c0 3c       	rcall	80007a48 <_malloc_r>
80007a44:	d8 02       	popm	pc
80007a46:	d7 03       	nop

80007a48 <_malloc_r>:
80007a48:	d4 31       	pushm	r0-r7,lr
80007a4a:	f6 c8 ff f5 	sub	r8,r11,-11
80007a4e:	18 95       	mov	r5,r12
80007a50:	10 97       	mov	r7,r8
80007a52:	e0 17 ff f8 	andl	r7,0xfff8
80007a56:	59 68       	cp.w	r8,22
80007a58:	f9 b7 08 10 	movls	r7,16
80007a5c:	16 37       	cp.w	r7,r11
80007a5e:	5f 38       	srlo	r8
80007a60:	f1 e7 13 f8 	or	r8,r8,r7>>0x1f
80007a64:	c0 50       	breq	80007a6e <_malloc_r+0x26>
80007a66:	30 c8       	mov	r8,12
80007a68:	99 38       	st.w	r12[0xc],r8
80007a6a:	e0 8f 01 f7 	bral	80007e58 <_malloc_r+0x410>
80007a6e:	e0 a0 02 36 	rcall	80007eda <__malloc_lock>
80007a72:	e0 47 01 f7 	cp.w	r7,503
80007a76:	e0 8b 00 1d 	brhi	80007ab0 <_malloc_r+0x68>
80007a7a:	ee 03 16 03 	lsr	r3,r7,0x3
80007a7e:	e0 68 01 08 	mov	r8,264
80007a82:	f0 03 00 38 	add	r8,r8,r3<<0x3
80007a86:	70 36       	ld.w	r6,r8[0xc]
80007a88:	10 36       	cp.w	r6,r8
80007a8a:	c0 61       	brne	80007a96 <_malloc_r+0x4e>
80007a8c:	ec c8 ff f8 	sub	r8,r6,-8
80007a90:	70 36       	ld.w	r6,r8[0xc]
80007a92:	10 36       	cp.w	r6,r8
80007a94:	c0 c0       	breq	80007aac <_malloc_r+0x64>
80007a96:	6c 18       	ld.w	r8,r6[0x4]
80007a98:	e0 18 ff fc 	andl	r8,0xfffc
80007a9c:	6c 3a       	ld.w	r10,r6[0xc]
80007a9e:	ec 08 00 09 	add	r9,r6,r8
80007aa2:	0a 9c       	mov	r12,r5
80007aa4:	6c 28       	ld.w	r8,r6[0x8]
80007aa6:	95 28       	st.w	r10[0x8],r8
80007aa8:	91 3a       	st.w	r8[0xc],r10
80007aaa:	c4 78       	rjmp	80007b38 <_malloc_r+0xf0>
80007aac:	2f e3       	sub	r3,-2
80007aae:	c4 d8       	rjmp	80007b48 <_malloc_r+0x100>
80007ab0:	ee 03 16 09 	lsr	r3,r7,0x9
80007ab4:	c0 41       	brne	80007abc <_malloc_r+0x74>
80007ab6:	ee 03 16 03 	lsr	r3,r7,0x3
80007aba:	c2 68       	rjmp	80007b06 <_malloc_r+0xbe>
80007abc:	58 43       	cp.w	r3,4
80007abe:	e0 8b 00 06 	brhi	80007aca <_malloc_r+0x82>
80007ac2:	ee 03 16 06 	lsr	r3,r7,0x6
80007ac6:	2c 83       	sub	r3,-56
80007ac8:	c1 f8       	rjmp	80007b06 <_malloc_r+0xbe>
80007aca:	59 43       	cp.w	r3,20
80007acc:	e0 8b 00 04 	brhi	80007ad4 <_malloc_r+0x8c>
80007ad0:	2a 53       	sub	r3,-91
80007ad2:	c1 a8       	rjmp	80007b06 <_malloc_r+0xbe>
80007ad4:	e0 43 00 54 	cp.w	r3,84
80007ad8:	e0 8b 00 06 	brhi	80007ae4 <_malloc_r+0x9c>
80007adc:	ee 03 16 0c 	lsr	r3,r7,0xc
80007ae0:	29 23       	sub	r3,-110
80007ae2:	c1 28       	rjmp	80007b06 <_malloc_r+0xbe>
80007ae4:	e0 43 01 54 	cp.w	r3,340
80007ae8:	e0 8b 00 06 	brhi	80007af4 <_malloc_r+0xac>
80007aec:	ee 03 16 0f 	lsr	r3,r7,0xf
80007af0:	28 93       	sub	r3,-119
80007af2:	c0 a8       	rjmp	80007b06 <_malloc_r+0xbe>
80007af4:	e0 43 05 54 	cp.w	r3,1364
80007af8:	e0 88 00 04 	brls	80007b00 <_malloc_r+0xb8>
80007afc:	37 e3       	mov	r3,126
80007afe:	c0 48       	rjmp	80007b06 <_malloc_r+0xbe>
80007b00:	ee 03 16 12 	lsr	r3,r7,0x12
80007b04:	28 43       	sub	r3,-124
80007b06:	e0 6a 01 08 	mov	r10,264
80007b0a:	f4 03 00 3a 	add	r10,r10,r3<<0x3
80007b0e:	74 36       	ld.w	r6,r10[0xc]
80007b10:	c1 98       	rjmp	80007b42 <_malloc_r+0xfa>
80007b12:	6c 19       	ld.w	r9,r6[0x4]
80007b14:	e0 19 ff fc 	andl	r9,0xfffc
80007b18:	f2 07 01 0b 	sub	r11,r9,r7
80007b1c:	58 fb       	cp.w	r11,15
80007b1e:	e0 8a 00 04 	brle	80007b26 <_malloc_r+0xde>
80007b22:	20 13       	sub	r3,1
80007b24:	c1 18       	rjmp	80007b46 <_malloc_r+0xfe>
80007b26:	6c 38       	ld.w	r8,r6[0xc]
80007b28:	58 0b       	cp.w	r11,0
80007b2a:	c0 b5       	brlt	80007b40 <_malloc_r+0xf8>
80007b2c:	6c 2a       	ld.w	r10,r6[0x8]
80007b2e:	ec 09 00 09 	add	r9,r6,r9
80007b32:	0a 9c       	mov	r12,r5
80007b34:	91 2a       	st.w	r8[0x8],r10
80007b36:	95 38       	st.w	r10[0xc],r8
80007b38:	72 18       	ld.w	r8,r9[0x4]
80007b3a:	a1 a8       	sbr	r8,0x0
80007b3c:	93 18       	st.w	r9[0x4],r8
80007b3e:	cb c8       	rjmp	80007cb6 <_malloc_r+0x26e>
80007b40:	10 96       	mov	r6,r8
80007b42:	14 36       	cp.w	r6,r10
80007b44:	ce 71       	brne	80007b12 <_malloc_r+0xca>
80007b46:	2f f3       	sub	r3,-1
80007b48:	e0 6a 01 08 	mov	r10,264
80007b4c:	f4 cc ff f8 	sub	r12,r10,-8
80007b50:	78 26       	ld.w	r6,r12[0x8]
80007b52:	18 36       	cp.w	r6,r12
80007b54:	c6 c0       	breq	80007c2c <_malloc_r+0x1e4>
80007b56:	6c 19       	ld.w	r9,r6[0x4]
80007b58:	e0 19 ff fc 	andl	r9,0xfffc
80007b5c:	f2 07 01 08 	sub	r8,r9,r7
80007b60:	58 f8       	cp.w	r8,15
80007b62:	e0 89 00 8f 	brgt	80007c80 <_malloc_r+0x238>
80007b66:	99 3c       	st.w	r12[0xc],r12
80007b68:	99 2c       	st.w	r12[0x8],r12
80007b6a:	58 08       	cp.w	r8,0
80007b6c:	c0 55       	brlt	80007b76 <_malloc_r+0x12e>
80007b6e:	ec 09 00 09 	add	r9,r6,r9
80007b72:	0a 9c       	mov	r12,r5
80007b74:	ce 2b       	rjmp	80007b38 <_malloc_r+0xf0>
80007b76:	e0 49 01 ff 	cp.w	r9,511
80007b7a:	e0 8b 00 13 	brhi	80007ba0 <_malloc_r+0x158>
80007b7e:	a3 99       	lsr	r9,0x3
80007b80:	f4 09 00 38 	add	r8,r10,r9<<0x3
80007b84:	70 2b       	ld.w	r11,r8[0x8]
80007b86:	8d 38       	st.w	r6[0xc],r8
80007b88:	8d 2b       	st.w	r6[0x8],r11
80007b8a:	97 36       	st.w	r11[0xc],r6
80007b8c:	91 26       	st.w	r8[0x8],r6
80007b8e:	a3 49       	asr	r9,0x2
80007b90:	74 18       	ld.w	r8,r10[0x4]
80007b92:	30 1b       	mov	r11,1
80007b94:	f6 09 09 49 	lsl	r9,r11,r9
80007b98:	f1 e9 10 09 	or	r9,r8,r9
80007b9c:	95 19       	st.w	r10[0x4],r9
80007b9e:	c4 78       	rjmp	80007c2c <_malloc_r+0x1e4>
80007ba0:	f2 0a 16 09 	lsr	r10,r9,0x9
80007ba4:	58 4a       	cp.w	r10,4
80007ba6:	e0 8b 00 07 	brhi	80007bb4 <_malloc_r+0x16c>
80007baa:	f2 0a 16 06 	lsr	r10,r9,0x6
80007bae:	2c 8a       	sub	r10,-56
80007bb0:	c2 08       	rjmp	80007bf0 <_malloc_r+0x1a8>
80007bb2:	d7 03       	nop
80007bb4:	59 4a       	cp.w	r10,20
80007bb6:	e0 8b 00 04 	brhi	80007bbe <_malloc_r+0x176>
80007bba:	2a 5a       	sub	r10,-91
80007bbc:	c1 a8       	rjmp	80007bf0 <_malloc_r+0x1a8>
80007bbe:	e0 4a 00 54 	cp.w	r10,84
80007bc2:	e0 8b 00 06 	brhi	80007bce <_malloc_r+0x186>
80007bc6:	f2 0a 16 0c 	lsr	r10,r9,0xc
80007bca:	29 2a       	sub	r10,-110
80007bcc:	c1 28       	rjmp	80007bf0 <_malloc_r+0x1a8>
80007bce:	e0 4a 01 54 	cp.w	r10,340
80007bd2:	e0 8b 00 06 	brhi	80007bde <_malloc_r+0x196>
80007bd6:	f2 0a 16 0f 	lsr	r10,r9,0xf
80007bda:	28 9a       	sub	r10,-119
80007bdc:	c0 a8       	rjmp	80007bf0 <_malloc_r+0x1a8>
80007bde:	e0 4a 05 54 	cp.w	r10,1364
80007be2:	e0 88 00 04 	brls	80007bea <_malloc_r+0x1a2>
80007be6:	37 ea       	mov	r10,126
80007be8:	c0 48       	rjmp	80007bf0 <_malloc_r+0x1a8>
80007bea:	f2 0a 16 12 	lsr	r10,r9,0x12
80007bee:	28 4a       	sub	r10,-124
80007bf0:	e0 6b 01 08 	mov	r11,264
80007bf4:	f6 0a 00 34 	add	r4,r11,r10<<0x3
80007bf8:	68 28       	ld.w	r8,r4[0x8]
80007bfa:	08 38       	cp.w	r8,r4
80007bfc:	c0 e1       	brne	80007c18 <_malloc_r+0x1d0>
80007bfe:	76 19       	ld.w	r9,r11[0x4]
80007c00:	a3 4a       	asr	r10,0x2
80007c02:	30 1e       	mov	lr,1
80007c04:	fc 0a 09 4a 	lsl	r10,lr,r10
80007c08:	f3 ea 10 0a 	or	r10,r9,r10
80007c0c:	10 99       	mov	r9,r8
80007c0e:	97 1a       	st.w	r11[0x4],r10
80007c10:	c0 a8       	rjmp	80007c24 <_malloc_r+0x1dc>
80007c12:	70 28       	ld.w	r8,r8[0x8]
80007c14:	08 38       	cp.w	r8,r4
80007c16:	c0 60       	breq	80007c22 <_malloc_r+0x1da>
80007c18:	70 1a       	ld.w	r10,r8[0x4]
80007c1a:	e0 1a ff fc 	andl	r10,0xfffc
80007c1e:	14 39       	cp.w	r9,r10
80007c20:	cf 93       	brcs	80007c12 <_malloc_r+0x1ca>
80007c22:	70 39       	ld.w	r9,r8[0xc]
80007c24:	8d 39       	st.w	r6[0xc],r9
80007c26:	8d 28       	st.w	r6[0x8],r8
80007c28:	91 36       	st.w	r8[0xc],r6
80007c2a:	93 26       	st.w	r9[0x8],r6
80007c2c:	e6 08 14 02 	asr	r8,r3,0x2
80007c30:	30 1b       	mov	r11,1
80007c32:	e0 64 01 08 	mov	r4,264
80007c36:	f6 08 09 4b 	lsl	r11,r11,r8
80007c3a:	68 18       	ld.w	r8,r4[0x4]
80007c3c:	10 3b       	cp.w	r11,r8
80007c3e:	e0 8b 00 69 	brhi	80007d10 <_malloc_r+0x2c8>
80007c42:	f7 e8 00 09 	and	r9,r11,r8
80007c46:	c0 b1       	brne	80007c5c <_malloc_r+0x214>
80007c48:	e0 13 ff fc 	andl	r3,0xfffc
80007c4c:	a1 7b       	lsl	r11,0x1
80007c4e:	2f c3       	sub	r3,-4
80007c50:	c0 38       	rjmp	80007c56 <_malloc_r+0x20e>
80007c52:	2f c3       	sub	r3,-4
80007c54:	a1 7b       	lsl	r11,0x1
80007c56:	f7 e8 00 09 	and	r9,r11,r8
80007c5a:	cf c0       	breq	80007c52 <_malloc_r+0x20a>
80007c5c:	e8 03 00 3e 	add	lr,r4,r3<<0x3
80007c60:	06 92       	mov	r2,r3
80007c62:	1c 91       	mov	r1,lr
80007c64:	62 36       	ld.w	r6,r1[0xc]
80007c66:	c2 d8       	rjmp	80007cc0 <_malloc_r+0x278>
80007c68:	6c 1a       	ld.w	r10,r6[0x4]
80007c6a:	e0 1a ff fc 	andl	r10,0xfffc
80007c6e:	f4 07 01 08 	sub	r8,r10,r7
80007c72:	58 f8       	cp.w	r8,15
80007c74:	e0 8a 00 15 	brle	80007c9e <_malloc_r+0x256>
80007c78:	6c 3a       	ld.w	r10,r6[0xc]
80007c7a:	6c 29       	ld.w	r9,r6[0x8]
80007c7c:	95 29       	st.w	r10[0x8],r9
80007c7e:	93 3a       	st.w	r9[0xc],r10
80007c80:	0e 99       	mov	r9,r7
80007c82:	ec 07 00 07 	add	r7,r6,r7
80007c86:	a1 a9       	sbr	r9,0x0
80007c88:	99 37       	st.w	r12[0xc],r7
80007c8a:	99 27       	st.w	r12[0x8],r7
80007c8c:	8d 19       	st.w	r6[0x4],r9
80007c8e:	ee 08 09 08 	st.w	r7[r8],r8
80007c92:	8f 2c       	st.w	r7[0x8],r12
80007c94:	8f 3c       	st.w	r7[0xc],r12
80007c96:	a1 a8       	sbr	r8,0x0
80007c98:	0a 9c       	mov	r12,r5
80007c9a:	8f 18       	st.w	r7[0x4],r8
80007c9c:	c0 d8       	rjmp	80007cb6 <_malloc_r+0x26e>
80007c9e:	6c 39       	ld.w	r9,r6[0xc]
80007ca0:	58 08       	cp.w	r8,0
80007ca2:	c0 e5       	brlt	80007cbe <_malloc_r+0x276>
80007ca4:	ec 0a 00 0a 	add	r10,r6,r10
80007ca8:	74 18       	ld.w	r8,r10[0x4]
80007caa:	a1 a8       	sbr	r8,0x0
80007cac:	0a 9c       	mov	r12,r5
80007cae:	95 18       	st.w	r10[0x4],r8
80007cb0:	6c 28       	ld.w	r8,r6[0x8]
80007cb2:	93 28       	st.w	r9[0x8],r8
80007cb4:	91 39       	st.w	r8[0xc],r9
80007cb6:	c1 3d       	rcall	80007edc <__malloc_unlock>
80007cb8:	ec cc ff f8 	sub	r12,r6,-8
80007cbc:	d8 32       	popm	r0-r7,pc
80007cbe:	12 96       	mov	r6,r9
80007cc0:	02 36       	cp.w	r6,r1
80007cc2:	cd 31       	brne	80007c68 <_malloc_r+0x220>
80007cc4:	2f f2       	sub	r2,-1
80007cc6:	f1 d2 c0 02 	bfextu	r8,r2,0x0,0x2
80007cca:	c0 30       	breq	80007cd0 <_malloc_r+0x288>
80007ccc:	2f 81       	sub	r1,-8
80007cce:	cc bb       	rjmp	80007c64 <_malloc_r+0x21c>
80007cd0:	1c 98       	mov	r8,lr
80007cd2:	f3 d3 c0 02 	bfextu	r9,r3,0x0,0x2
80007cd6:	c0 81       	brne	80007ce6 <_malloc_r+0x29e>
80007cd8:	68 19       	ld.w	r9,r4[0x4]
80007cda:	f6 08 11 ff 	rsub	r8,r11,-1
80007cde:	f3 e8 00 08 	and	r8,r9,r8
80007ce2:	89 18       	st.w	r4[0x4],r8
80007ce4:	c0 78       	rjmp	80007cf2 <_malloc_r+0x2aa>
80007ce6:	f0 c9 00 08 	sub	r9,r8,8
80007cea:	20 13       	sub	r3,1
80007cec:	70 08       	ld.w	r8,r8[0x0]
80007cee:	12 38       	cp.w	r8,r9
80007cf0:	cf 10       	breq	80007cd2 <_malloc_r+0x28a>
80007cf2:	a1 7b       	lsl	r11,0x1
80007cf4:	68 18       	ld.w	r8,r4[0x4]
80007cf6:	10 3b       	cp.w	r11,r8
80007cf8:	e0 8b 00 0c 	brhi	80007d10 <_malloc_r+0x2c8>
80007cfc:	58 0b       	cp.w	r11,0
80007cfe:	c0 90       	breq	80007d10 <_malloc_r+0x2c8>
80007d00:	04 93       	mov	r3,r2
80007d02:	c0 38       	rjmp	80007d08 <_malloc_r+0x2c0>
80007d04:	2f c3       	sub	r3,-4
80007d06:	a1 7b       	lsl	r11,0x1
80007d08:	f7 e8 00 09 	and	r9,r11,r8
80007d0c:	ca 81       	brne	80007c5c <_malloc_r+0x214>
80007d0e:	cf bb       	rjmp	80007d04 <_malloc_r+0x2bc>
80007d10:	68 23       	ld.w	r3,r4[0x8]
80007d12:	66 12       	ld.w	r2,r3[0x4]
80007d14:	e0 12 ff fc 	andl	r2,0xfffc
80007d18:	0e 32       	cp.w	r2,r7
80007d1a:	5f 39       	srlo	r9
80007d1c:	e4 07 01 08 	sub	r8,r2,r7
80007d20:	58 f8       	cp.w	r8,15
80007d22:	5f aa       	srle	r10
80007d24:	f5 e9 10 09 	or	r9,r10,r9
80007d28:	e0 80 00 9a 	breq	80007e5c <_malloc_r+0x414>
80007d2c:	e0 68 06 4c 	mov	r8,1612
80007d30:	70 01       	ld.w	r1,r8[0x0]
80007d32:	e0 68 05 14 	mov	r8,1300
80007d36:	2f 01       	sub	r1,-16
80007d38:	70 08       	ld.w	r8,r8[0x0]
80007d3a:	0e 01       	add	r1,r7
80007d3c:	5b f8       	cp.w	r8,-1
80007d3e:	c0 40       	breq	80007d46 <_malloc_r+0x2fe>
80007d40:	28 11       	sub	r1,-127
80007d42:	e0 11 ff 80 	andl	r1,0xff80
80007d46:	02 9b       	mov	r11,r1
80007d48:	0a 9c       	mov	r12,r5
80007d4a:	e0 a0 05 39 	rcall	800087bc <_sbrk_r>
80007d4e:	18 96       	mov	r6,r12
80007d50:	5b fc       	cp.w	r12,-1
80007d52:	c7 50       	breq	80007e3c <_malloc_r+0x3f4>
80007d54:	e6 02 00 08 	add	r8,r3,r2
80007d58:	10 3c       	cp.w	r12,r8
80007d5a:	c0 32       	brcc	80007d60 <_malloc_r+0x318>
80007d5c:	08 33       	cp.w	r3,r4
80007d5e:	c6 f1       	brne	80007e3c <_malloc_r+0x3f4>
80007d60:	e0 6a 06 50 	mov	r10,1616
80007d64:	74 09       	ld.w	r9,r10[0x0]
80007d66:	e2 09 00 09 	add	r9,r1,r9
80007d6a:	95 09       	st.w	r10[0x0],r9
80007d6c:	10 36       	cp.w	r6,r8
80007d6e:	c0 a1       	brne	80007d82 <_malloc_r+0x33a>
80007d70:	f5 d6 c0 07 	bfextu	r10,r6,0x0,0x7
80007d74:	c0 71       	brne	80007d82 <_malloc_r+0x33a>
80007d76:	e2 02 00 02 	add	r2,r1,r2
80007d7a:	68 28       	ld.w	r8,r4[0x8]
80007d7c:	a1 a2       	sbr	r2,0x0
80007d7e:	91 12       	st.w	r8[0x4],r2
80007d80:	c4 f8       	rjmp	80007e1e <_malloc_r+0x3d6>
80007d82:	e0 6a 05 14 	mov	r10,1300
80007d86:	74 0b       	ld.w	r11,r10[0x0]
80007d88:	5b fb       	cp.w	r11,-1
80007d8a:	c0 31       	brne	80007d90 <_malloc_r+0x348>
80007d8c:	95 06       	st.w	r10[0x0],r6
80007d8e:	c0 78       	rjmp	80007d9c <_malloc_r+0x354>
80007d90:	ec 09 00 09 	add	r9,r6,r9
80007d94:	e0 6a 06 50 	mov	r10,1616
80007d98:	10 19       	sub	r9,r8
80007d9a:	95 09       	st.w	r10[0x0],r9
80007d9c:	f1 d6 c0 03 	bfextu	r8,r6,0x0,0x3
80007da0:	f0 09 11 08 	rsub	r9,r8,8
80007da4:	58 08       	cp.w	r8,0
80007da6:	f2 08 17 10 	movne	r8,r9
80007daa:	ed d8 e1 06 	addne	r6,r6,r8
80007dae:	28 08       	sub	r8,-128
80007db0:	ec 01 00 01 	add	r1,r6,r1
80007db4:	0a 9c       	mov	r12,r5
80007db6:	e3 d1 c0 07 	bfextu	r1,r1,0x0,0x7
80007dba:	f0 01 01 01 	sub	r1,r8,r1
80007dbe:	02 9b       	mov	r11,r1
80007dc0:	e0 a0 04 fe 	rcall	800087bc <_sbrk_r>
80007dc4:	e0 68 06 50 	mov	r8,1616
80007dc8:	5b fc       	cp.w	r12,-1
80007dca:	ec 0c 17 00 	moveq	r12,r6
80007dce:	f9 b1 00 00 	moveq	r1,0
80007dd2:	70 09       	ld.w	r9,r8[0x0]
80007dd4:	0c 1c       	sub	r12,r6
80007dd6:	89 26       	st.w	r4[0x8],r6
80007dd8:	02 0c       	add	r12,r1
80007dda:	12 01       	add	r1,r9
80007ddc:	a1 ac       	sbr	r12,0x0
80007dde:	91 01       	st.w	r8[0x0],r1
80007de0:	8d 1c       	st.w	r6[0x4],r12
80007de2:	08 33       	cp.w	r3,r4
80007de4:	c1 d0       	breq	80007e1e <_malloc_r+0x3d6>
80007de6:	58 f2       	cp.w	r2,15
80007de8:	e0 8b 00 05 	brhi	80007df2 <_malloc_r+0x3aa>
80007dec:	30 18       	mov	r8,1
80007dee:	8d 18       	st.w	r6[0x4],r8
80007df0:	c2 68       	rjmp	80007e3c <_malloc_r+0x3f4>
80007df2:	30 59       	mov	r9,5
80007df4:	20 c2       	sub	r2,12
80007df6:	e0 12 ff f8 	andl	r2,0xfff8
80007dfa:	e6 02 00 08 	add	r8,r3,r2
80007dfe:	91 29       	st.w	r8[0x8],r9
80007e00:	91 19       	st.w	r8[0x4],r9
80007e02:	66 18       	ld.w	r8,r3[0x4]
80007e04:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007e08:	e5 e8 10 08 	or	r8,r2,r8
80007e0c:	87 18       	st.w	r3[0x4],r8
80007e0e:	58 f2       	cp.w	r2,15
80007e10:	e0 88 00 07 	brls	80007e1e <_malloc_r+0x3d6>
80007e14:	e6 cb ff f8 	sub	r11,r3,-8
80007e18:	0a 9c       	mov	r12,r5
80007e1a:	fe b0 fb 71 	rcall	800074fc <_free_r>
80007e1e:	e0 69 06 48 	mov	r9,1608
80007e22:	72 0a       	ld.w	r10,r9[0x0]
80007e24:	e0 68 06 50 	mov	r8,1616
80007e28:	70 08       	ld.w	r8,r8[0x0]
80007e2a:	14 38       	cp.w	r8,r10
80007e2c:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80007e30:	e0 69 06 44 	mov	r9,1604
80007e34:	72 0a       	ld.w	r10,r9[0x0]
80007e36:	14 38       	cp.w	r8,r10
80007e38:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80007e3c:	68 28       	ld.w	r8,r4[0x8]
80007e3e:	70 18       	ld.w	r8,r8[0x4]
80007e40:	e0 18 ff fc 	andl	r8,0xfffc
80007e44:	0e 38       	cp.w	r8,r7
80007e46:	5f 39       	srlo	r9
80007e48:	0e 18       	sub	r8,r7
80007e4a:	58 f8       	cp.w	r8,15
80007e4c:	5f aa       	srle	r10
80007e4e:	f5 e9 10 09 	or	r9,r10,r9
80007e52:	c0 50       	breq	80007e5c <_malloc_r+0x414>
80007e54:	0a 9c       	mov	r12,r5
80007e56:	c4 3c       	rcall	80007edc <__malloc_unlock>
80007e58:	d8 3a       	popm	r0-r7,pc,r12=0
80007e5a:	d7 03       	nop
80007e5c:	68 26       	ld.w	r6,r4[0x8]
80007e5e:	a1 a8       	sbr	r8,0x0
80007e60:	0e 99       	mov	r9,r7
80007e62:	a1 a9       	sbr	r9,0x0
80007e64:	8d 19       	st.w	r6[0x4],r9
80007e66:	ec 07 00 07 	add	r7,r6,r7
80007e6a:	0a 9c       	mov	r12,r5
80007e6c:	89 27       	st.w	r4[0x8],r7
80007e6e:	8f 18       	st.w	r7[0x4],r8
80007e70:	c3 6c       	rcall	80007edc <__malloc_unlock>
80007e72:	ec cc ff f8 	sub	r12,r6,-8
80007e76:	d8 32       	popm	r0-r7,pc

80007e78 <memchr>:
80007e78:	f7 db c0 08 	bfextu	r11,r11,0x0,0x8
80007e7c:	c0 68       	rjmp	80007e88 <memchr+0x10>
80007e7e:	20 1a       	sub	r10,1
80007e80:	19 88       	ld.ub	r8,r12[0x0]
80007e82:	16 38       	cp.w	r8,r11
80007e84:	5e 0c       	reteq	r12
80007e86:	2f fc       	sub	r12,-1
80007e88:	58 0a       	cp.w	r10,0
80007e8a:	cf a1       	brne	80007e7e <memchr+0x6>
80007e8c:	5e fa       	retal	r10

80007e8e <memmove>:
80007e8e:	d4 01       	pushm	lr
80007e90:	18 3b       	cp.w	r11,r12
80007e92:	c1 92       	brcc	80007ec4 <memmove+0x36>
80007e94:	f6 0a 00 09 	add	r9,r11,r10
80007e98:	12 3c       	cp.w	r12,r9
80007e9a:	c1 52       	brcc	80007ec4 <memmove+0x36>
80007e9c:	f8 0a 00 0b 	add	r11,r12,r10
80007ea0:	30 08       	mov	r8,0
80007ea2:	c0 68       	rjmp	80007eae <memmove+0x20>
80007ea4:	f2 08 07 0e 	ld.ub	lr,r9[r8]
80007ea8:	20 1a       	sub	r10,1
80007eaa:	f6 08 0b 0e 	st.b	r11[r8],lr
80007eae:	20 18       	sub	r8,1
80007eb0:	58 0a       	cp.w	r10,0
80007eb2:	cf 91       	brne	80007ea4 <memmove+0x16>
80007eb4:	d8 02       	popm	pc
80007eb6:	f6 08 07 09 	ld.ub	r9,r11[r8]
80007eba:	20 1a       	sub	r10,1
80007ebc:	f8 08 0b 09 	st.b	r12[r8],r9
80007ec0:	2f f8       	sub	r8,-1
80007ec2:	c0 28       	rjmp	80007ec6 <memmove+0x38>
80007ec4:	30 08       	mov	r8,0
80007ec6:	58 0a       	cp.w	r10,0
80007ec8:	cf 71       	brne	80007eb6 <memmove+0x28>
80007eca:	d8 02       	popm	pc

80007ecc <memset>:
80007ecc:	18 98       	mov	r8,r12
80007ece:	c0 38       	rjmp	80007ed4 <memset+0x8>
80007ed0:	10 cb       	st.b	r8++,r11
80007ed2:	20 1a       	sub	r10,1
80007ed4:	58 0a       	cp.w	r10,0
80007ed6:	cf d1       	brne	80007ed0 <memset+0x4>
80007ed8:	5e fc       	retal	r12

80007eda <__malloc_lock>:
80007eda:	5e fc       	retal	r12

80007edc <__malloc_unlock>:
80007edc:	5e fc       	retal	r12

80007ede <__hi0bits>:
80007ede:	18 98       	mov	r8,r12
80007ee0:	e0 1c 00 00 	andl	r12,0x0
80007ee4:	f0 09 15 10 	lsl	r9,r8,0x10
80007ee8:	58 0c       	cp.w	r12,0
80007eea:	f2 08 17 00 	moveq	r8,r9
80007eee:	f9 bc 00 10 	moveq	r12,16
80007ef2:	f9 bc 01 00 	movne	r12,0
80007ef6:	10 9a       	mov	r10,r8
80007ef8:	f0 09 15 08 	lsl	r9,r8,0x8
80007efc:	e6 1a ff 00 	andh	r10,0xff00,COH
80007f00:	f7 bc 00 f8 	subeq	r12,-8
80007f04:	f2 08 17 00 	moveq	r8,r9
80007f08:	10 9a       	mov	r10,r8
80007f0a:	f0 09 15 04 	lsl	r9,r8,0x4
80007f0e:	e6 1a f0 00 	andh	r10,0xf000,COH
80007f12:	f7 bc 00 fc 	subeq	r12,-4
80007f16:	f2 08 17 00 	moveq	r8,r9
80007f1a:	10 9a       	mov	r10,r8
80007f1c:	f0 09 15 02 	lsl	r9,r8,0x2
80007f20:	e6 1a c0 00 	andh	r10,0xc000,COH
80007f24:	f7 bc 00 fe 	subeq	r12,-2
80007f28:	f2 08 17 00 	moveq	r8,r9
80007f2c:	58 08       	cp.w	r8,0
80007f2e:	5e 5c       	retlt	r12
80007f30:	ed b8 00 1e 	bld	r8,0x1e
80007f34:	f9 bc 01 20 	movne	r12,32
80007f38:	f7 bc 00 ff 	subeq	r12,-1
80007f3c:	5e fc       	retal	r12

80007f3e <__lo0bits>:
80007f3e:	18 99       	mov	r9,r12
80007f40:	78 08       	ld.w	r8,r12[0x0]
80007f42:	f9 d8 c0 03 	bfextu	r12,r8,0x0,0x3
80007f46:	c1 50       	breq	80007f70 <__lo0bits+0x32>
80007f48:	ed b8 00 00 	bld	r8,0x0
80007f4c:	c0 21       	brne	80007f50 <__lo0bits+0x12>
80007f4e:	5e fd       	retal	0
80007f50:	10 9b       	mov	r11,r8
80007f52:	f0 0a 16 01 	lsr	r10,r8,0x1
80007f56:	e2 1b 00 02 	andl	r11,0x2,COH
80007f5a:	a3 88       	lsr	r8,0x2
80007f5c:	58 0b       	cp.w	r11,0
80007f5e:	f3 fa 1a 00 	st.wne	r9[0x0],r10
80007f62:	f9 bc 01 01 	movne	r12,1
80007f66:	f3 f8 0a 00 	st.weq	r9[0x0],r8
80007f6a:	f9 bc 00 02 	moveq	r12,2
80007f6e:	5e fc       	retal	r12
80007f70:	f5 d8 c0 10 	bfextu	r10,r8,0x0,0x10
80007f74:	f0 0b 16 10 	lsr	r11,r8,0x10
80007f78:	58 0a       	cp.w	r10,0
80007f7a:	f6 08 17 00 	moveq	r8,r11
80007f7e:	f9 bc 00 10 	moveq	r12,16
80007f82:	f7 d8 c0 08 	bfextu	r11,r8,0x0,0x8
80007f86:	f0 0a 16 08 	lsr	r10,r8,0x8
80007f8a:	58 0b       	cp.w	r11,0
80007f8c:	f7 bc 00 f8 	subeq	r12,-8
80007f90:	f4 08 17 00 	moveq	r8,r10
80007f94:	f7 d8 c0 04 	bfextu	r11,r8,0x0,0x4
80007f98:	f0 0a 16 04 	lsr	r10,r8,0x4
80007f9c:	58 0b       	cp.w	r11,0
80007f9e:	f7 bc 00 fc 	subeq	r12,-4
80007fa2:	f4 08 17 00 	moveq	r8,r10
80007fa6:	f7 d8 c0 02 	bfextu	r11,r8,0x0,0x2
80007faa:	f0 0a 16 02 	lsr	r10,r8,0x2
80007fae:	58 0b       	cp.w	r11,0
80007fb0:	f7 bc 00 fe 	subeq	r12,-2
80007fb4:	f4 08 17 00 	moveq	r8,r10
80007fb8:	ed b8 00 00 	bld	r8,0x0
80007fbc:	c0 60       	breq	80007fc8 <__lo0bits+0x8a>
80007fbe:	a1 98       	lsr	r8,0x1
80007fc0:	c0 31       	brne	80007fc6 <__lo0bits+0x88>
80007fc2:	32 0c       	mov	r12,32
80007fc4:	5e fc       	retal	r12
80007fc6:	2f fc       	sub	r12,-1
80007fc8:	93 08       	st.w	r9[0x0],r8
80007fca:	5e fc       	retal	r12

80007fcc <__mcmp>:
80007fcc:	d4 01       	pushm	lr
80007fce:	18 98       	mov	r8,r12
80007fd0:	76 49       	ld.w	r9,r11[0x10]
80007fd2:	78 4c       	ld.w	r12,r12[0x10]
80007fd4:	12 1c       	sub	r12,r9
80007fd6:	c1 31       	brne	80007ffc <__mcmp+0x30>
80007fd8:	2f b9       	sub	r9,-5
80007fda:	a3 69       	lsl	r9,0x2
80007fdc:	12 0b       	add	r11,r9
80007fde:	f0 09 00 09 	add	r9,r8,r9
80007fe2:	2e c8       	sub	r8,-20
80007fe4:	13 4e       	ld.w	lr,--r9
80007fe6:	17 4a       	ld.w	r10,--r11
80007fe8:	14 3e       	cp.w	lr,r10
80007fea:	c0 60       	breq	80007ff6 <__mcmp+0x2a>
80007fec:	f9 bc 03 ff 	movlo	r12,-1
80007ff0:	f9 bc 02 01 	movhs	r12,1
80007ff4:	d8 02       	popm	pc
80007ff6:	10 39       	cp.w	r9,r8
80007ff8:	fe 9b ff f6 	brhi	80007fe4 <__mcmp+0x18>
80007ffc:	d8 02       	popm	pc
80007ffe:	d7 03       	nop

80008000 <_Bfree>:
80008000:	d4 21       	pushm	r4-r7,lr
80008002:	18 97       	mov	r7,r12
80008004:	16 95       	mov	r5,r11
80008006:	78 96       	ld.w	r6,r12[0x24]
80008008:	58 06       	cp.w	r6,0
8000800a:	c0 91       	brne	8000801c <_Bfree+0x1c>
8000800c:	31 0c       	mov	r12,16
8000800e:	fe b0 fd 15 	rcall	80007a38 <malloc>
80008012:	99 36       	st.w	r12[0xc],r6
80008014:	8f 9c       	st.w	r7[0x24],r12
80008016:	99 16       	st.w	r12[0x4],r6
80008018:	99 26       	st.w	r12[0x8],r6
8000801a:	99 06       	st.w	r12[0x0],r6
8000801c:	58 05       	cp.w	r5,0
8000801e:	c0 90       	breq	80008030 <_Bfree+0x30>
80008020:	6a 19       	ld.w	r9,r5[0x4]
80008022:	6e 98       	ld.w	r8,r7[0x24]
80008024:	70 38       	ld.w	r8,r8[0xc]
80008026:	f0 09 03 2a 	ld.w	r10,r8[r9<<0x2]
8000802a:	8b 0a       	st.w	r5[0x0],r10
8000802c:	f0 09 09 25 	st.w	r8[r9<<0x2],r5
80008030:	d8 22       	popm	r4-r7,pc
80008032:	d7 03       	nop

80008034 <_Balloc>:
80008034:	d4 21       	pushm	r4-r7,lr
80008036:	18 97       	mov	r7,r12
80008038:	16 96       	mov	r6,r11
8000803a:	78 95       	ld.w	r5,r12[0x24]
8000803c:	58 05       	cp.w	r5,0
8000803e:	c0 91       	brne	80008050 <_Balloc+0x1c>
80008040:	31 0c       	mov	r12,16
80008042:	fe b0 fc fb 	rcall	80007a38 <malloc>
80008046:	99 35       	st.w	r12[0xc],r5
80008048:	8f 9c       	st.w	r7[0x24],r12
8000804a:	99 15       	st.w	r12[0x4],r5
8000804c:	99 25       	st.w	r12[0x8],r5
8000804e:	99 05       	st.w	r12[0x0],r5
80008050:	6e 95       	ld.w	r5,r7[0x24]
80008052:	6a 38       	ld.w	r8,r5[0xc]
80008054:	58 08       	cp.w	r8,0
80008056:	c0 b1       	brne	8000806c <_Balloc+0x38>
80008058:	31 0a       	mov	r10,16
8000805a:	30 4b       	mov	r11,4
8000805c:	0e 9c       	mov	r12,r7
8000805e:	e0 a0 04 93 	rcall	80008984 <_calloc_r>
80008062:	8b 3c       	st.w	r5[0xc],r12
80008064:	6e 98       	ld.w	r8,r7[0x24]
80008066:	70 3c       	ld.w	r12,r8[0xc]
80008068:	58 0c       	cp.w	r12,0
8000806a:	c1 b0       	breq	800080a0 <_Balloc+0x6c>
8000806c:	6e 98       	ld.w	r8,r7[0x24]
8000806e:	70 38       	ld.w	r8,r8[0xc]
80008070:	f0 06 00 28 	add	r8,r8,r6<<0x2
80008074:	70 0c       	ld.w	r12,r8[0x0]
80008076:	58 0c       	cp.w	r12,0
80008078:	c0 40       	breq	80008080 <_Balloc+0x4c>
8000807a:	78 09       	ld.w	r9,r12[0x0]
8000807c:	91 09       	st.w	r8[0x0],r9
8000807e:	c0 e8       	rjmp	8000809a <_Balloc+0x66>
80008080:	0e 9c       	mov	r12,r7
80008082:	30 17       	mov	r7,1
80008084:	0e 9b       	mov	r11,r7
80008086:	ee 06 09 47 	lsl	r7,r7,r6
8000808a:	ee ca ff fb 	sub	r10,r7,-5
8000808e:	a3 6a       	lsl	r10,0x2
80008090:	e0 a0 04 7a 	rcall	80008984 <_calloc_r>
80008094:	c0 60       	breq	800080a0 <_Balloc+0x6c>
80008096:	99 16       	st.w	r12[0x4],r6
80008098:	99 27       	st.w	r12[0x8],r7
8000809a:	30 08       	mov	r8,0
8000809c:	99 38       	st.w	r12[0xc],r8
8000809e:	99 48       	st.w	r12[0x10],r8
800080a0:	d8 22       	popm	r4-r7,pc
800080a2:	d7 03       	nop

800080a4 <__d2b>:
800080a4:	d4 31       	pushm	r0-r7,lr
800080a6:	20 2d       	sub	sp,8
800080a8:	16 93       	mov	r3,r11
800080aa:	12 96       	mov	r6,r9
800080ac:	10 95       	mov	r5,r8
800080ae:	14 92       	mov	r2,r10
800080b0:	30 1b       	mov	r11,1
800080b2:	cc 1f       	rcall	80008034 <_Balloc>
800080b4:	f3 d3 c0 14 	bfextu	r9,r3,0x0,0x14
800080b8:	50 09       	stdsp	sp[0x0],r9
800080ba:	f1 d3 c0 1f 	bfextu	r8,r3,0x0,0x1f
800080be:	b5 a9       	sbr	r9,0x14
800080c0:	f0 01 16 14 	lsr	r1,r8,0x14
800080c4:	fb f9 1a 00 	st.wne	sp[0x0],r9
800080c8:	18 94       	mov	r4,r12
800080ca:	58 02       	cp.w	r2,0
800080cc:	c1 d0       	breq	80008106 <__d2b+0x62>
800080ce:	fa cc ff f8 	sub	r12,sp,-8
800080d2:	18 d2       	st.w	--r12,r2
800080d4:	c3 5f       	rcall	80007f3e <__lo0bits>
800080d6:	40 18       	lddsp	r8,sp[0x4]
800080d8:	c0 d0       	breq	800080f2 <__d2b+0x4e>
800080da:	40 09       	lddsp	r9,sp[0x0]
800080dc:	f8 0a 11 20 	rsub	r10,r12,32
800080e0:	f2 0a 09 4a 	lsl	r10,r9,r10
800080e4:	f5 e8 10 08 	or	r8,r10,r8
800080e8:	89 58       	st.w	r4[0x14],r8
800080ea:	f2 0c 0a 49 	lsr	r9,r9,r12
800080ee:	50 09       	stdsp	sp[0x0],r9
800080f0:	c0 28       	rjmp	800080f4 <__d2b+0x50>
800080f2:	89 58       	st.w	r4[0x14],r8
800080f4:	40 08       	lddsp	r8,sp[0x0]
800080f6:	58 08       	cp.w	r8,0
800080f8:	f9 b3 01 02 	movne	r3,2
800080fc:	f9 b3 00 01 	moveq	r3,1
80008100:	89 68       	st.w	r4[0x18],r8
80008102:	89 43       	st.w	r4[0x10],r3
80008104:	c0 88       	rjmp	80008114 <__d2b+0x70>
80008106:	1a 9c       	mov	r12,sp
80008108:	c1 bf       	rcall	80007f3e <__lo0bits>
8000810a:	30 13       	mov	r3,1
8000810c:	40 08       	lddsp	r8,sp[0x0]
8000810e:	2e 0c       	sub	r12,-32
80008110:	89 43       	st.w	r4[0x10],r3
80008112:	89 58       	st.w	r4[0x14],r8
80008114:	58 01       	cp.w	r1,0
80008116:	c0 90       	breq	80008128 <__d2b+0x84>
80008118:	e2 c1 04 33 	sub	r1,r1,1075
8000811c:	18 01       	add	r1,r12
8000811e:	8d 01       	st.w	r6[0x0],r1
80008120:	f8 0c 11 35 	rsub	r12,r12,53
80008124:	8b 0c       	st.w	r5[0x0],r12
80008126:	c0 c8       	rjmp	8000813e <__d2b+0x9a>
80008128:	e6 c8 ff fc 	sub	r8,r3,-4
8000812c:	f8 cc 04 32 	sub	r12,r12,1074
80008130:	a5 73       	lsl	r3,0x5
80008132:	8d 0c       	st.w	r6[0x0],r12
80008134:	e8 08 03 2c 	ld.w	r12,r4[r8<<0x2]
80008138:	cd 3e       	rcall	80007ede <__hi0bits>
8000813a:	18 13       	sub	r3,r12
8000813c:	8b 03       	st.w	r5[0x0],r3
8000813e:	08 9c       	mov	r12,r4
80008140:	2f ed       	sub	sp,-8
80008142:	d8 32       	popm	r0-r7,pc

80008144 <__mdiff>:
80008144:	d4 31       	pushm	r0-r7,lr
80008146:	74 48       	ld.w	r8,r10[0x10]
80008148:	76 45       	ld.w	r5,r11[0x10]
8000814a:	16 97       	mov	r7,r11
8000814c:	14 96       	mov	r6,r10
8000814e:	10 15       	sub	r5,r8
80008150:	c1 31       	brne	80008176 <__mdiff+0x32>
80008152:	2f b8       	sub	r8,-5
80008154:	ee ce ff ec 	sub	lr,r7,-20
80008158:	a3 68       	lsl	r8,0x2
8000815a:	f4 08 00 0b 	add	r11,r10,r8
8000815e:	ee 08 00 08 	add	r8,r7,r8
80008162:	11 4a       	ld.w	r10,--r8
80008164:	17 49       	ld.w	r9,--r11
80008166:	12 3a       	cp.w	r10,r9
80008168:	c0 30       	breq	8000816e <__mdiff+0x2a>
8000816a:	c0 e2       	brcc	80008186 <__mdiff+0x42>
8000816c:	c0 78       	rjmp	8000817a <__mdiff+0x36>
8000816e:	1c 38       	cp.w	r8,lr
80008170:	fe 9b ff f9 	brhi	80008162 <__mdiff+0x1e>
80008174:	c4 98       	rjmp	80008206 <__mdiff+0xc2>
80008176:	58 05       	cp.w	r5,0
80008178:	c0 64       	brge	80008184 <__mdiff+0x40>
8000817a:	0e 98       	mov	r8,r7
8000817c:	30 15       	mov	r5,1
8000817e:	0c 97       	mov	r7,r6
80008180:	10 96       	mov	r6,r8
80008182:	c0 28       	rjmp	80008186 <__mdiff+0x42>
80008184:	30 05       	mov	r5,0
80008186:	6e 1b       	ld.w	r11,r7[0x4]
80008188:	c5 6f       	rcall	80008034 <_Balloc>
8000818a:	6e 49       	ld.w	r9,r7[0x10]
8000818c:	6c 44       	ld.w	r4,r6[0x10]
8000818e:	99 35       	st.w	r12[0xc],r5
80008190:	2f b4       	sub	r4,-5
80008192:	f2 c5 ff fb 	sub	r5,r9,-5
80008196:	ec 04 00 24 	add	r4,r6,r4<<0x2
8000819a:	ee 05 00 25 	add	r5,r7,r5<<0x2
8000819e:	2e c6       	sub	r6,-20
800081a0:	2e c7       	sub	r7,-20
800081a2:	f8 c8 ff ec 	sub	r8,r12,-20
800081a6:	30 0a       	mov	r10,0
800081a8:	0f 0e       	ld.w	lr,r7++
800081aa:	0d 0b       	ld.w	r11,r6++
800081ac:	fc 02 16 10 	lsr	r2,lr,0x10
800081b0:	f6 03 16 10 	lsr	r3,r11,0x10
800081b4:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
800081b8:	e4 03 01 03 	sub	r3,r2,r3
800081bc:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
800081c0:	fc 0b 01 0b 	sub	r11,lr,r11
800081c4:	f6 0a 00 0a 	add	r10,r11,r10
800081c8:	b0 1a       	st.h	r8[0x2],r10
800081ca:	b1 4a       	asr	r10,0x10
800081cc:	e6 0a 00 0a 	add	r10,r3,r10
800081d0:	b0 0a       	st.h	r8[0x0],r10
800081d2:	2f c8       	sub	r8,-4
800081d4:	b1 4a       	asr	r10,0x10
800081d6:	08 36       	cp.w	r6,r4
800081d8:	ce 83       	brcs	800081a8 <__mdiff+0x64>
800081da:	c0 d8       	rjmp	800081f4 <__mdiff+0xb0>
800081dc:	0f 0b       	ld.w	r11,r7++
800081de:	f6 0e 16 10 	lsr	lr,r11,0x10
800081e2:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
800081e6:	16 0a       	add	r10,r11
800081e8:	b0 1a       	st.h	r8[0x2],r10
800081ea:	b1 4a       	asr	r10,0x10
800081ec:	1c 0a       	add	r10,lr
800081ee:	b0 0a       	st.h	r8[0x0],r10
800081f0:	2f c8       	sub	r8,-4
800081f2:	b1 4a       	asr	r10,0x10
800081f4:	0a 37       	cp.w	r7,r5
800081f6:	cf 33       	brcs	800081dc <__mdiff+0x98>
800081f8:	c0 28       	rjmp	800081fc <__mdiff+0xb8>
800081fa:	20 19       	sub	r9,1
800081fc:	11 4a       	ld.w	r10,--r8
800081fe:	58 0a       	cp.w	r10,0
80008200:	cf d0       	breq	800081fa <__mdiff+0xb6>
80008202:	99 49       	st.w	r12[0x10],r9
80008204:	d8 32       	popm	r0-r7,pc
80008206:	30 0b       	mov	r11,0
80008208:	c1 6f       	rcall	80008034 <_Balloc>
8000820a:	30 18       	mov	r8,1
8000820c:	99 48       	st.w	r12[0x10],r8
8000820e:	30 08       	mov	r8,0
80008210:	99 58       	st.w	r12[0x14],r8
80008212:	d8 32       	popm	r0-r7,pc

80008214 <__lshift>:
80008214:	d4 31       	pushm	r0-r7,lr
80008216:	16 97       	mov	r7,r11
80008218:	76 46       	ld.w	r6,r11[0x10]
8000821a:	f4 02 14 05 	asr	r2,r10,0x5
8000821e:	2f f6       	sub	r6,-1
80008220:	14 93       	mov	r3,r10
80008222:	18 94       	mov	r4,r12
80008224:	04 06       	add	r6,r2
80008226:	76 1b       	ld.w	r11,r11[0x4]
80008228:	6e 28       	ld.w	r8,r7[0x8]
8000822a:	c0 38       	rjmp	80008230 <__lshift+0x1c>
8000822c:	2f fb       	sub	r11,-1
8000822e:	a1 78       	lsl	r8,0x1
80008230:	10 36       	cp.w	r6,r8
80008232:	fe 99 ff fd 	brgt	8000822c <__lshift+0x18>
80008236:	08 9c       	mov	r12,r4
80008238:	cf ee       	rcall	80008034 <_Balloc>
8000823a:	30 09       	mov	r9,0
8000823c:	18 95       	mov	r5,r12
8000823e:	f8 c8 ff ec 	sub	r8,r12,-20
80008242:	12 9a       	mov	r10,r9
80008244:	c0 38       	rjmp	8000824a <__lshift+0x36>
80008246:	10 aa       	st.w	r8++,r10
80008248:	2f f9       	sub	r9,-1
8000824a:	04 39       	cp.w	r9,r2
8000824c:	cf d5       	brlt	80008246 <__lshift+0x32>
8000824e:	6e 4b       	ld.w	r11,r7[0x10]
80008250:	e7 d3 c0 05 	bfextu	r3,r3,0x0,0x5
80008254:	2f bb       	sub	r11,-5
80008256:	ee c9 ff ec 	sub	r9,r7,-20
8000825a:	ee 0b 00 2b 	add	r11,r7,r11<<0x2
8000825e:	58 03       	cp.w	r3,0
80008260:	c1 30       	breq	80008286 <__lshift+0x72>
80008262:	e6 0c 11 20 	rsub	r12,r3,32
80008266:	30 0a       	mov	r10,0
80008268:	72 02       	ld.w	r2,r9[0x0]
8000826a:	e4 03 09 42 	lsl	r2,r2,r3
8000826e:	04 4a       	or	r10,r2
80008270:	10 aa       	st.w	r8++,r10
80008272:	13 0a       	ld.w	r10,r9++
80008274:	f4 0c 0a 4a 	lsr	r10,r10,r12
80008278:	16 39       	cp.w	r9,r11
8000827a:	cf 73       	brcs	80008268 <__lshift+0x54>
8000827c:	91 0a       	st.w	r8[0x0],r10
8000827e:	58 0a       	cp.w	r10,0
80008280:	c0 70       	breq	8000828e <__lshift+0x7a>
80008282:	2f f6       	sub	r6,-1
80008284:	c0 58       	rjmp	8000828e <__lshift+0x7a>
80008286:	13 0a       	ld.w	r10,r9++
80008288:	10 aa       	st.w	r8++,r10
8000828a:	16 39       	cp.w	r9,r11
8000828c:	cf d3       	brcs	80008286 <__lshift+0x72>
8000828e:	08 9c       	mov	r12,r4
80008290:	20 16       	sub	r6,1
80008292:	0e 9b       	mov	r11,r7
80008294:	8b 46       	st.w	r5[0x10],r6
80008296:	cb 5e       	rcall	80008000 <_Bfree>
80008298:	0a 9c       	mov	r12,r5
8000829a:	d8 32       	popm	r0-r7,pc

8000829c <__multiply>:
8000829c:	d4 31       	pushm	r0-r7,lr
8000829e:	20 2d       	sub	sp,8
800082a0:	76 49       	ld.w	r9,r11[0x10]
800082a2:	74 48       	ld.w	r8,r10[0x10]
800082a4:	16 96       	mov	r6,r11
800082a6:	14 95       	mov	r5,r10
800082a8:	10 39       	cp.w	r9,r8
800082aa:	ec 08 17 50 	movlt	r8,r6
800082ae:	ea 06 17 50 	movlt	r6,r5
800082b2:	f0 05 17 50 	movlt	r5,r8
800082b6:	6c 28       	ld.w	r8,r6[0x8]
800082b8:	76 43       	ld.w	r3,r11[0x10]
800082ba:	74 42       	ld.w	r2,r10[0x10]
800082bc:	76 1b       	ld.w	r11,r11[0x4]
800082be:	e4 03 00 07 	add	r7,r2,r3
800082c2:	10 37       	cp.w	r7,r8
800082c4:	f7 bb 09 ff 	subgt	r11,-1
800082c8:	cb 6e       	rcall	80008034 <_Balloc>
800082ca:	ee c4 ff fb 	sub	r4,r7,-5
800082ce:	f8 c9 ff ec 	sub	r9,r12,-20
800082d2:	f8 04 00 24 	add	r4,r12,r4<<0x2
800082d6:	30 0a       	mov	r10,0
800082d8:	12 98       	mov	r8,r9
800082da:	c0 28       	rjmp	800082de <__multiply+0x42>
800082dc:	10 aa       	st.w	r8++,r10
800082de:	08 38       	cp.w	r8,r4
800082e0:	cf e3       	brcs	800082dc <__multiply+0x40>
800082e2:	2f b3       	sub	r3,-5
800082e4:	2f b2       	sub	r2,-5
800082e6:	ec 03 00 23 	add	r3,r6,r3<<0x2
800082ea:	ea 02 00 22 	add	r2,r5,r2<<0x2
800082ee:	ec cb ff ec 	sub	r11,r6,-20
800082f2:	50 12       	stdsp	sp[0x4],r2
800082f4:	ea ca ff ec 	sub	r10,r5,-20
800082f8:	c4 48       	rjmp	80008380 <__multiply+0xe4>
800082fa:	94 95       	ld.uh	r5,r10[0x2]
800082fc:	58 05       	cp.w	r5,0
800082fe:	c2 00       	breq	8000833e <__multiply+0xa2>
80008300:	12 98       	mov	r8,r9
80008302:	16 96       	mov	r6,r11
80008304:	30 0e       	mov	lr,0
80008306:	50 09       	stdsp	sp[0x0],r9
80008308:	0d 02       	ld.w	r2,r6++
8000830a:	e4 00 16 10 	lsr	r0,r2,0x10
8000830e:	70 01       	ld.w	r1,r8[0x0]
80008310:	70 09       	ld.w	r9,r8[0x0]
80008312:	b1 81       	lsr	r1,0x10
80008314:	e5 d2 c0 10 	bfextu	r2,r2,0x0,0x10
80008318:	e0 05 03 41 	mac	r1,r0,r5
8000831c:	ab 32       	mul	r2,r5
8000831e:	e1 d9 c0 10 	bfextu	r0,r9,0x0,0x10
80008322:	00 02       	add	r2,r0
80008324:	e4 0e 00 0e 	add	lr,r2,lr
80008328:	b0 1e       	st.h	r8[0x2],lr
8000832a:	b1 8e       	lsr	lr,0x10
8000832c:	1c 01       	add	r1,lr
8000832e:	b0 01       	st.h	r8[0x0],r1
80008330:	e2 0e 16 10 	lsr	lr,r1,0x10
80008334:	2f c8       	sub	r8,-4
80008336:	06 36       	cp.w	r6,r3
80008338:	ce 83       	brcs	80008308 <__multiply+0x6c>
8000833a:	40 09       	lddsp	r9,sp[0x0]
8000833c:	91 0e       	st.w	r8[0x0],lr
8000833e:	94 86       	ld.uh	r6,r10[0x0]
80008340:	58 06       	cp.w	r6,0
80008342:	c1 d0       	breq	8000837c <__multiply+0xe0>
80008344:	72 02       	ld.w	r2,r9[0x0]
80008346:	12 98       	mov	r8,r9
80008348:	16 9e       	mov	lr,r11
8000834a:	30 05       	mov	r5,0
8000834c:	b0 12       	st.h	r8[0x2],r2
8000834e:	1d 01       	ld.w	r1,lr++
80008350:	90 82       	ld.uh	r2,r8[0x0]
80008352:	e1 d1 c0 10 	bfextu	r0,r1,0x0,0x10
80008356:	ad 30       	mul	r0,r6
80008358:	e0 02 00 02 	add	r2,r0,r2
8000835c:	e4 05 00 05 	add	r5,r2,r5
80008360:	b0 05       	st.h	r8[0x0],r5
80008362:	b1 85       	lsr	r5,0x10
80008364:	b1 81       	lsr	r1,0x10
80008366:	2f c8       	sub	r8,-4
80008368:	ad 31       	mul	r1,r6
8000836a:	90 92       	ld.uh	r2,r8[0x2]
8000836c:	e2 02 00 02 	add	r2,r1,r2
80008370:	0a 02       	add	r2,r5
80008372:	e4 05 16 10 	lsr	r5,r2,0x10
80008376:	06 3e       	cp.w	lr,r3
80008378:	ce a3       	brcs	8000834c <__multiply+0xb0>
8000837a:	91 02       	st.w	r8[0x0],r2
8000837c:	2f ca       	sub	r10,-4
8000837e:	2f c9       	sub	r9,-4
80008380:	40 18       	lddsp	r8,sp[0x4]
80008382:	10 3a       	cp.w	r10,r8
80008384:	cb b3       	brcs	800082fa <__multiply+0x5e>
80008386:	c0 28       	rjmp	8000838a <__multiply+0xee>
80008388:	20 17       	sub	r7,1
8000838a:	58 07       	cp.w	r7,0
8000838c:	e0 8a 00 05 	brle	80008396 <__multiply+0xfa>
80008390:	09 48       	ld.w	r8,--r4
80008392:	58 08       	cp.w	r8,0
80008394:	cf a0       	breq	80008388 <__multiply+0xec>
80008396:	99 47       	st.w	r12[0x10],r7
80008398:	2f ed       	sub	sp,-8
8000839a:	d8 32       	popm	r0-r7,pc

8000839c <__i2b>:
8000839c:	d4 21       	pushm	r4-r7,lr
8000839e:	16 97       	mov	r7,r11
800083a0:	30 1b       	mov	r11,1
800083a2:	c4 9e       	rcall	80008034 <_Balloc>
800083a4:	30 19       	mov	r9,1
800083a6:	99 57       	st.w	r12[0x14],r7
800083a8:	99 49       	st.w	r12[0x10],r9
800083aa:	d8 22       	popm	r4-r7,pc

800083ac <__multadd>:
800083ac:	d4 31       	pushm	r0-r7,lr
800083ae:	30 08       	mov	r8,0
800083b0:	12 95       	mov	r5,r9
800083b2:	16 97       	mov	r7,r11
800083b4:	18 96       	mov	r6,r12
800083b6:	76 44       	ld.w	r4,r11[0x10]
800083b8:	f6 c9 ff ec 	sub	r9,r11,-20
800083bc:	72 0b       	ld.w	r11,r9[0x0]
800083be:	f6 0c 16 10 	lsr	r12,r11,0x10
800083c2:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
800083c6:	f4 0c 02 4c 	mul	r12,r10,r12
800083ca:	f4 0b 03 45 	mac	r5,r10,r11
800083ce:	f7 d5 c0 10 	bfextu	r11,r5,0x0,0x10
800083d2:	b1 85       	lsr	r5,0x10
800083d4:	18 05       	add	r5,r12
800083d6:	ea 0c 15 10 	lsl	r12,r5,0x10
800083da:	f8 0b 00 0b 	add	r11,r12,r11
800083de:	12 ab       	st.w	r9++,r11
800083e0:	2f f8       	sub	r8,-1
800083e2:	b1 85       	lsr	r5,0x10
800083e4:	08 38       	cp.w	r8,r4
800083e6:	ce b5       	brlt	800083bc <__multadd+0x10>
800083e8:	58 05       	cp.w	r5,0
800083ea:	c1 c0       	breq	80008422 <__multadd+0x76>
800083ec:	6e 28       	ld.w	r8,r7[0x8]
800083ee:	10 34       	cp.w	r4,r8
800083f0:	c1 35       	brlt	80008416 <__multadd+0x6a>
800083f2:	6e 1b       	ld.w	r11,r7[0x4]
800083f4:	0c 9c       	mov	r12,r6
800083f6:	2f fb       	sub	r11,-1
800083f8:	c1 ee       	rcall	80008034 <_Balloc>
800083fa:	6e 4a       	ld.w	r10,r7[0x10]
800083fc:	ee cb ff f4 	sub	r11,r7,-12
80008400:	18 93       	mov	r3,r12
80008402:	2f ea       	sub	r10,-2
80008404:	2f 4c       	sub	r12,-12
80008406:	a3 6a       	lsl	r10,0x2
80008408:	fe b0 de 36 	rcall	80004074 <memcpy>
8000840c:	0e 9b       	mov	r11,r7
8000840e:	0c 9c       	mov	r12,r6
80008410:	fe b0 fd f8 	rcall	80008000 <_Bfree>
80008414:	06 97       	mov	r7,r3
80008416:	e8 c8 ff ff 	sub	r8,r4,-1
8000841a:	2f b4       	sub	r4,-5
8000841c:	8f 48       	st.w	r7[0x10],r8
8000841e:	ee 04 09 25 	st.w	r7[r4<<0x2],r5
80008422:	0e 9c       	mov	r12,r7
80008424:	d8 32       	popm	r0-r7,pc
80008426:	d7 03       	nop

80008428 <__pow5mult>:
80008428:	d4 31       	pushm	r0-r7,lr
8000842a:	14 96       	mov	r6,r10
8000842c:	18 97       	mov	r7,r12
8000842e:	16 94       	mov	r4,r11
80008430:	f1 da c0 02 	bfextu	r8,r10,0x0,0x2
80008434:	c0 90       	breq	80008446 <__pow5mult+0x1e>
80008436:	20 18       	sub	r8,1
80008438:	fe c9 e3 d8 	sub	r9,pc,-7208
8000843c:	f2 08 03 2a 	ld.w	r10,r9[r8<<0x2]
80008440:	30 09       	mov	r9,0
80008442:	cb 5f       	rcall	800083ac <__multadd>
80008444:	18 94       	mov	r4,r12
80008446:	a3 46       	asr	r6,0x2
80008448:	c3 40       	breq	800084b0 <__pow5mult+0x88>
8000844a:	6e 95       	ld.w	r5,r7[0x24]
8000844c:	58 05       	cp.w	r5,0
8000844e:	c0 91       	brne	80008460 <__pow5mult+0x38>
80008450:	31 0c       	mov	r12,16
80008452:	fe b0 fa f3 	rcall	80007a38 <malloc>
80008456:	99 35       	st.w	r12[0xc],r5
80008458:	8f 9c       	st.w	r7[0x24],r12
8000845a:	99 15       	st.w	r12[0x4],r5
8000845c:	99 25       	st.w	r12[0x8],r5
8000845e:	99 05       	st.w	r12[0x0],r5
80008460:	6e 93       	ld.w	r3,r7[0x24]
80008462:	66 25       	ld.w	r5,r3[0x8]
80008464:	58 05       	cp.w	r5,0
80008466:	c0 c1       	brne	8000847e <__pow5mult+0x56>
80008468:	e0 6b 02 71 	mov	r11,625
8000846c:	0e 9c       	mov	r12,r7
8000846e:	c9 7f       	rcall	8000839c <__i2b>
80008470:	87 2c       	st.w	r3[0x8],r12
80008472:	30 08       	mov	r8,0
80008474:	18 95       	mov	r5,r12
80008476:	99 08       	st.w	r12[0x0],r8
80008478:	c0 38       	rjmp	8000847e <__pow5mult+0x56>
8000847a:	06 9c       	mov	r12,r3
8000847c:	18 95       	mov	r5,r12
8000847e:	ed b6 00 00 	bld	r6,0x0
80008482:	c0 b1       	brne	80008498 <__pow5mult+0x70>
80008484:	08 9b       	mov	r11,r4
80008486:	0a 9a       	mov	r10,r5
80008488:	0e 9c       	mov	r12,r7
8000848a:	c0 9f       	rcall	8000829c <__multiply>
8000848c:	08 9b       	mov	r11,r4
8000848e:	18 93       	mov	r3,r12
80008490:	0e 9c       	mov	r12,r7
80008492:	06 94       	mov	r4,r3
80008494:	fe b0 fd b6 	rcall	80008000 <_Bfree>
80008498:	a1 56       	asr	r6,0x1
8000849a:	c0 b0       	breq	800084b0 <__pow5mult+0x88>
8000849c:	6a 03       	ld.w	r3,r5[0x0]
8000849e:	58 03       	cp.w	r3,0
800084a0:	ce d1       	brne	8000847a <__pow5mult+0x52>
800084a2:	0a 9a       	mov	r10,r5
800084a4:	0a 9b       	mov	r11,r5
800084a6:	0e 9c       	mov	r12,r7
800084a8:	cf ae       	rcall	8000829c <__multiply>
800084aa:	8b 0c       	st.w	r5[0x0],r12
800084ac:	99 03       	st.w	r12[0x0],r3
800084ae:	ce 7b       	rjmp	8000847c <__pow5mult+0x54>
800084b0:	08 9c       	mov	r12,r4
800084b2:	d8 32       	popm	r0-r7,pc

800084b4 <_realloc_r>:
800084b4:	d4 31       	pushm	r0-r7,lr
800084b6:	20 1d       	sub	sp,4
800084b8:	16 94       	mov	r4,r11
800084ba:	18 92       	mov	r2,r12
800084bc:	14 9b       	mov	r11,r10
800084be:	58 04       	cp.w	r4,0
800084c0:	c0 51       	brne	800084ca <_realloc_r+0x16>
800084c2:	fe b0 fa c3 	rcall	80007a48 <_malloc_r>
800084c6:	18 95       	mov	r5,r12
800084c8:	c5 39       	rjmp	8000876e <_realloc_r+0x2ba>
800084ca:	50 0a       	stdsp	sp[0x0],r10
800084cc:	fe b0 fd 07 	rcall	80007eda <__malloc_lock>
800084d0:	40 0b       	lddsp	r11,sp[0x0]
800084d2:	f6 c8 ff f5 	sub	r8,r11,-11
800084d6:	e8 c1 00 08 	sub	r1,r4,8
800084da:	10 96       	mov	r6,r8
800084dc:	62 1c       	ld.w	r12,r1[0x4]
800084de:	e0 16 ff f8 	andl	r6,0xfff8
800084e2:	59 68       	cp.w	r8,22
800084e4:	f9 b6 08 10 	movls	r6,16
800084e8:	16 36       	cp.w	r6,r11
800084ea:	5f 38       	srlo	r8
800084ec:	f1 e6 13 f8 	or	r8,r8,r6>>0x1f
800084f0:	c0 50       	breq	800084fa <_realloc_r+0x46>
800084f2:	30 c8       	mov	r8,12
800084f4:	30 05       	mov	r5,0
800084f6:	85 38       	st.w	r2[0xc],r8
800084f8:	c3 b9       	rjmp	8000876e <_realloc_r+0x2ba>
800084fa:	18 90       	mov	r0,r12
800084fc:	e0 10 ff fc 	andl	r0,0xfffc
80008500:	0c 30       	cp.w	r0,r6
80008502:	e0 84 01 0b 	brge	80008718 <_realloc_r+0x264>
80008506:	e0 68 01 08 	mov	r8,264
8000850a:	e2 00 00 09 	add	r9,r1,r0
8000850e:	70 25       	ld.w	r5,r8[0x8]
80008510:	0a 39       	cp.w	r9,r5
80008512:	c0 90       	breq	80008524 <_realloc_r+0x70>
80008514:	72 1a       	ld.w	r10,r9[0x4]
80008516:	a1 ca       	cbr	r10,0x0
80008518:	f2 0a 00 0a 	add	r10,r9,r10
8000851c:	74 1a       	ld.w	r10,r10[0x4]
8000851e:	ed ba 00 00 	bld	r10,0x0
80008522:	c2 20       	breq	80008566 <_realloc_r+0xb2>
80008524:	72 1a       	ld.w	r10,r9[0x4]
80008526:	e0 1a ff fc 	andl	r10,0xfffc
8000852a:	f4 00 00 03 	add	r3,r10,r0
8000852e:	0a 39       	cp.w	r9,r5
80008530:	c1 31       	brne	80008556 <_realloc_r+0xa2>
80008532:	ec c7 ff f0 	sub	r7,r6,-16
80008536:	0e 33       	cp.w	r3,r7
80008538:	c1 95       	brlt	8000856a <_realloc_r+0xb6>
8000853a:	e2 06 00 09 	add	r9,r1,r6
8000853e:	0c 13       	sub	r3,r6
80008540:	a1 a3       	sbr	r3,0x0
80008542:	93 13       	st.w	r9[0x4],r3
80008544:	91 29       	st.w	r8[0x8],r9
80008546:	04 9c       	mov	r12,r2
80008548:	62 18       	ld.w	r8,r1[0x4]
8000854a:	08 95       	mov	r5,r4
8000854c:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80008550:	10 46       	or	r6,r8
80008552:	83 16       	st.w	r1[0x4],r6
80008554:	c0 b9       	rjmp	8000876a <_realloc_r+0x2b6>
80008556:	0c 33       	cp.w	r3,r6
80008558:	c0 95       	brlt	8000856a <_realloc_r+0xb6>
8000855a:	72 28       	ld.w	r8,r9[0x8]
8000855c:	02 97       	mov	r7,r1
8000855e:	72 39       	ld.w	r9,r9[0xc]
80008560:	93 28       	st.w	r9[0x8],r8
80008562:	91 39       	st.w	r8[0xc],r9
80008564:	cd c8       	rjmp	8000871c <_realloc_r+0x268>
80008566:	30 0a       	mov	r10,0
80008568:	14 99       	mov	r9,r10
8000856a:	ed bc 00 00 	bld	r12,0x0
8000856e:	e0 80 00 95 	breq	80008698 <_realloc_r+0x1e4>
80008572:	62 07       	ld.w	r7,r1[0x0]
80008574:	e2 07 01 07 	sub	r7,r1,r7
80008578:	6e 1c       	ld.w	r12,r7[0x4]
8000857a:	e0 1c ff fc 	andl	r12,0xfffc
8000857e:	58 09       	cp.w	r9,0
80008580:	c5 60       	breq	8000862c <_realloc_r+0x178>
80008582:	f8 00 00 03 	add	r3,r12,r0
80008586:	0a 39       	cp.w	r9,r5
80008588:	c4 81       	brne	80008618 <_realloc_r+0x164>
8000858a:	14 03       	add	r3,r10
8000858c:	ec c9 ff f0 	sub	r9,r6,-16
80008590:	12 33       	cp.w	r3,r9
80008592:	c4 d5       	brlt	8000862c <_realloc_r+0x178>
80008594:	6e 3a       	ld.w	r10,r7[0xc]
80008596:	6e 29       	ld.w	r9,r7[0x8]
80008598:	95 29       	st.w	r10[0x8],r9
8000859a:	93 3a       	st.w	r9[0xc],r10
8000859c:	ee c5 ff f8 	sub	r5,r7,-8
800085a0:	e0 ca 00 04 	sub	r10,r0,4
800085a4:	e0 4a 00 24 	cp.w	r10,36
800085a8:	e0 8b 00 25 	brhi	800085f2 <_realloc_r+0x13e>
800085ac:	0a 99       	mov	r9,r5
800085ae:	59 3a       	cp.w	r10,19
800085b0:	e0 88 00 1a 	brls	800085e4 <_realloc_r+0x130>
800085b4:	09 09       	ld.w	r9,r4++
800085b6:	8b 09       	st.w	r5[0x0],r9
800085b8:	09 09       	ld.w	r9,r4++
800085ba:	8f 39       	st.w	r7[0xc],r9
800085bc:	ee c9 ff f0 	sub	r9,r7,-16
800085c0:	59 ba       	cp.w	r10,27
800085c2:	e0 88 00 11 	brls	800085e4 <_realloc_r+0x130>
800085c6:	09 0b       	ld.w	r11,r4++
800085c8:	93 0b       	st.w	r9[0x0],r11
800085ca:	09 09       	ld.w	r9,r4++
800085cc:	8f 59       	st.w	r7[0x14],r9
800085ce:	ee c9 ff e8 	sub	r9,r7,-24
800085d2:	e0 4a 00 24 	cp.w	r10,36
800085d6:	c0 71       	brne	800085e4 <_realloc_r+0x130>
800085d8:	09 0a       	ld.w	r10,r4++
800085da:	93 0a       	st.w	r9[0x0],r10
800085dc:	ee c9 ff e0 	sub	r9,r7,-32
800085e0:	09 0a       	ld.w	r10,r4++
800085e2:	8f 7a       	st.w	r7[0x1c],r10
800085e4:	09 0a       	ld.w	r10,r4++
800085e6:	12 aa       	st.w	r9++,r10
800085e8:	68 0a       	ld.w	r10,r4[0x0]
800085ea:	93 0a       	st.w	r9[0x0],r10
800085ec:	68 1a       	ld.w	r10,r4[0x4]
800085ee:	93 1a       	st.w	r9[0x4],r10
800085f0:	c0 78       	rjmp	800085fe <_realloc_r+0x14a>
800085f2:	50 08       	stdsp	sp[0x0],r8
800085f4:	08 9b       	mov	r11,r4
800085f6:	0a 9c       	mov	r12,r5
800085f8:	fe b0 fc 4b 	rcall	80007e8e <memmove>
800085fc:	40 08       	lddsp	r8,sp[0x0]
800085fe:	ee 06 00 09 	add	r9,r7,r6
80008602:	0c 13       	sub	r3,r6
80008604:	a1 a3       	sbr	r3,0x0
80008606:	93 13       	st.w	r9[0x4],r3
80008608:	91 29       	st.w	r8[0x8],r9
8000860a:	04 9c       	mov	r12,r2
8000860c:	6e 18       	ld.w	r8,r7[0x4]
8000860e:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80008612:	10 46       	or	r6,r8
80008614:	8f 16       	st.w	r7[0x4],r6
80008616:	ca a8       	rjmp	8000876a <_realloc_r+0x2b6>
80008618:	14 03       	add	r3,r10
8000861a:	0c 33       	cp.w	r3,r6
8000861c:	c0 85       	brlt	8000862c <_realloc_r+0x178>
8000861e:	72 28       	ld.w	r8,r9[0x8]
80008620:	72 39       	ld.w	r9,r9[0xc]
80008622:	93 28       	st.w	r9[0x8],r8
80008624:	91 39       	st.w	r8[0xc],r9
80008626:	6e 28       	ld.w	r8,r7[0x8]
80008628:	6e 39       	ld.w	r9,r7[0xc]
8000862a:	c0 78       	rjmp	80008638 <_realloc_r+0x184>
8000862c:	f8 00 00 03 	add	r3,r12,r0
80008630:	0c 33       	cp.w	r3,r6
80008632:	c3 35       	brlt	80008698 <_realloc_r+0x1e4>
80008634:	6e 39       	ld.w	r9,r7[0xc]
80008636:	6e 28       	ld.w	r8,r7[0x8]
80008638:	93 28       	st.w	r9[0x8],r8
8000863a:	91 39       	st.w	r8[0xc],r9
8000863c:	e0 ca 00 04 	sub	r10,r0,4
80008640:	ee cc ff f8 	sub	r12,r7,-8
80008644:	e0 4a 00 24 	cp.w	r10,36
80008648:	e0 8b 00 24 	brhi	80008690 <_realloc_r+0x1dc>
8000864c:	59 3a       	cp.w	r10,19
8000864e:	e0 88 00 1a 	brls	80008682 <_realloc_r+0x1ce>
80008652:	09 08       	ld.w	r8,r4++
80008654:	99 08       	st.w	r12[0x0],r8
80008656:	09 08       	ld.w	r8,r4++
80008658:	8f 38       	st.w	r7[0xc],r8
8000865a:	ee cc ff f0 	sub	r12,r7,-16
8000865e:	59 ba       	cp.w	r10,27
80008660:	e0 88 00 11 	brls	80008682 <_realloc_r+0x1ce>
80008664:	09 08       	ld.w	r8,r4++
80008666:	99 08       	st.w	r12[0x0],r8
80008668:	09 08       	ld.w	r8,r4++
8000866a:	8f 58       	st.w	r7[0x14],r8
8000866c:	ee cc ff e8 	sub	r12,r7,-24
80008670:	e0 4a 00 24 	cp.w	r10,36
80008674:	c0 71       	brne	80008682 <_realloc_r+0x1ce>
80008676:	09 08       	ld.w	r8,r4++
80008678:	99 08       	st.w	r12[0x0],r8
8000867a:	ee cc ff e0 	sub	r12,r7,-32
8000867e:	09 08       	ld.w	r8,r4++
80008680:	8f 78       	st.w	r7[0x1c],r8
80008682:	09 08       	ld.w	r8,r4++
80008684:	18 a8       	st.w	r12++,r8
80008686:	68 08       	ld.w	r8,r4[0x0]
80008688:	99 08       	st.w	r12[0x0],r8
8000868a:	68 18       	ld.w	r8,r4[0x4]
8000868c:	99 18       	st.w	r12[0x4],r8
8000868e:	c4 78       	rjmp	8000871c <_realloc_r+0x268>
80008690:	08 9b       	mov	r11,r4
80008692:	fe b0 fb fe 	rcall	80007e8e <memmove>
80008696:	c4 38       	rjmp	8000871c <_realloc_r+0x268>
80008698:	04 9c       	mov	r12,r2
8000869a:	fe b0 f9 d7 	rcall	80007a48 <_malloc_r>
8000869e:	18 95       	mov	r5,r12
800086a0:	c3 a0       	breq	80008714 <_realloc_r+0x260>
800086a2:	62 18       	ld.w	r8,r1[0x4]
800086a4:	f8 c9 00 08 	sub	r9,r12,8
800086a8:	a1 c8       	cbr	r8,0x0
800086aa:	e2 08 00 08 	add	r8,r1,r8
800086ae:	10 39       	cp.w	r9,r8
800086b0:	c0 71       	brne	800086be <_realloc_r+0x20a>
800086b2:	72 13       	ld.w	r3,r9[0x4]
800086b4:	02 97       	mov	r7,r1
800086b6:	e0 13 ff fc 	andl	r3,0xfffc
800086ba:	00 03       	add	r3,r0
800086bc:	c3 08       	rjmp	8000871c <_realloc_r+0x268>
800086be:	e0 ca 00 04 	sub	r10,r0,4
800086c2:	e0 4a 00 24 	cp.w	r10,36
800086c6:	e0 8b 00 20 	brhi	80008706 <_realloc_r+0x252>
800086ca:	08 99       	mov	r9,r4
800086cc:	18 98       	mov	r8,r12
800086ce:	59 3a       	cp.w	r10,19
800086d0:	e0 88 00 14 	brls	800086f8 <_realloc_r+0x244>
800086d4:	13 0b       	ld.w	r11,r9++
800086d6:	10 ab       	st.w	r8++,r11
800086d8:	13 0b       	ld.w	r11,r9++
800086da:	10 ab       	st.w	r8++,r11
800086dc:	59 ba       	cp.w	r10,27
800086de:	e0 88 00 0d 	brls	800086f8 <_realloc_r+0x244>
800086e2:	13 0b       	ld.w	r11,r9++
800086e4:	10 ab       	st.w	r8++,r11
800086e6:	13 0b       	ld.w	r11,r9++
800086e8:	10 ab       	st.w	r8++,r11
800086ea:	e0 4a 00 24 	cp.w	r10,36
800086ee:	c0 51       	brne	800086f8 <_realloc_r+0x244>
800086f0:	13 0a       	ld.w	r10,r9++
800086f2:	10 aa       	st.w	r8++,r10
800086f4:	13 0a       	ld.w	r10,r9++
800086f6:	10 aa       	st.w	r8++,r10
800086f8:	13 0a       	ld.w	r10,r9++
800086fa:	10 aa       	st.w	r8++,r10
800086fc:	72 0a       	ld.w	r10,r9[0x0]
800086fe:	91 0a       	st.w	r8[0x0],r10
80008700:	72 19       	ld.w	r9,r9[0x4]
80008702:	91 19       	st.w	r8[0x4],r9
80008704:	c0 48       	rjmp	8000870c <_realloc_r+0x258>
80008706:	08 9b       	mov	r11,r4
80008708:	fe b0 fb c3 	rcall	80007e8e <memmove>
8000870c:	08 9b       	mov	r11,r4
8000870e:	04 9c       	mov	r12,r2
80008710:	fe b0 f6 f6 	rcall	800074fc <_free_r>
80008714:	04 9c       	mov	r12,r2
80008716:	c2 a8       	rjmp	8000876a <_realloc_r+0x2b6>
80008718:	00 93       	mov	r3,r0
8000871a:	02 97       	mov	r7,r1
8000871c:	e6 06 01 09 	sub	r9,r3,r6
80008720:	6e 18       	ld.w	r8,r7[0x4]
80008722:	58 f9       	cp.w	r9,15
80008724:	e0 88 00 16 	brls	80008750 <_realloc_r+0x29c>
80008728:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
8000872c:	ed e8 10 08 	or	r8,r6,r8
80008730:	8f 18       	st.w	r7[0x4],r8
80008732:	12 98       	mov	r8,r9
80008734:	a1 a8       	sbr	r8,0x0
80008736:	ee 06 00 0b 	add	r11,r7,r6
8000873a:	f6 09 00 09 	add	r9,r11,r9
8000873e:	97 18       	st.w	r11[0x4],r8
80008740:	72 18       	ld.w	r8,r9[0x4]
80008742:	a1 a8       	sbr	r8,0x0
80008744:	2f 8b       	sub	r11,-8
80008746:	93 18       	st.w	r9[0x4],r8
80008748:	04 9c       	mov	r12,r2
8000874a:	fe b0 f6 d9 	rcall	800074fc <_free_r>
8000874e:	c0 b8       	rjmp	80008764 <_realloc_r+0x2b0>
80008750:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80008754:	e7 e8 10 08 	or	r8,r3,r8
80008758:	8f 18       	st.w	r7[0x4],r8
8000875a:	ee 03 00 03 	add	r3,r7,r3
8000875e:	66 18       	ld.w	r8,r3[0x4]
80008760:	a1 a8       	sbr	r8,0x0
80008762:	87 18       	st.w	r3[0x4],r8
80008764:	04 9c       	mov	r12,r2
80008766:	ee c5 ff f8 	sub	r5,r7,-8
8000876a:	fe b0 fb b9 	rcall	80007edc <__malloc_unlock>
8000876e:	0a 9c       	mov	r12,r5
80008770:	2f fd       	sub	sp,-4
80008772:	d8 32       	popm	r0-r7,pc

80008774 <__isinfd>:
80008774:	14 98       	mov	r8,r10
80008776:	fc 19 7f f0 	movh	r9,0x7ff0
8000877a:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
8000877e:	f0 0b 11 00 	rsub	r11,r8,0
80008782:	f7 e8 10 08 	or	r8,r11,r8
80008786:	f5 e8 13 f8 	or	r8,r10,r8>>0x1f
8000878a:	f2 08 01 08 	sub	r8,r9,r8
8000878e:	f0 0c 11 00 	rsub	r12,r8,0
80008792:	f9 e8 10 08 	or	r8,r12,r8
80008796:	f0 0c 14 1f 	asr	r12,r8,0x1f
8000879a:	2f fc       	sub	r12,-1
8000879c:	5e fc       	retal	r12

8000879e <__isnand>:
8000879e:	14 98       	mov	r8,r10
800087a0:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
800087a4:	f0 0c 11 00 	rsub	r12,r8,0
800087a8:	10 4c       	or	r12,r8
800087aa:	fc 18 7f f0 	movh	r8,0x7ff0
800087ae:	f5 ec 13 fc 	or	r12,r10,r12>>0x1f
800087b2:	f0 0c 01 0c 	sub	r12,r8,r12
800087b6:	bf 9c       	lsr	r12,0x1f
800087b8:	5e fc       	retal	r12
800087ba:	d7 03       	nop

800087bc <_sbrk_r>:
800087bc:	d4 21       	pushm	r4-r7,lr
800087be:	30 08       	mov	r8,0
800087c0:	18 97       	mov	r7,r12
800087c2:	e0 66 08 68 	mov	r6,2152
800087c6:	16 9c       	mov	r12,r11
800087c8:	8d 08       	st.w	r6[0x0],r8
800087ca:	ca fc       	rcall	80008928 <_sbrk>
800087cc:	5b fc       	cp.w	r12,-1
800087ce:	c0 51       	brne	800087d8 <_sbrk_r+0x1c>
800087d0:	6c 08       	ld.w	r8,r6[0x0]
800087d2:	58 08       	cp.w	r8,0
800087d4:	ef f8 1a 03 	st.wne	r7[0xc],r8
800087d8:	d8 22       	popm	r4-r7,pc
800087da:	d7 03       	nop

800087dc <__sclose>:
800087dc:	d4 01       	pushm	lr
800087de:	96 7b       	ld.sh	r11,r11[0xe]
800087e0:	cf ec       	rcall	800089dc <_close_r>
800087e2:	d8 02       	popm	pc

800087e4 <__sseek>:
800087e4:	d4 21       	pushm	r4-r7,lr
800087e6:	16 97       	mov	r7,r11
800087e8:	96 7b       	ld.sh	r11,r11[0xe]
800087ea:	c8 5d       	rcall	80008af4 <_lseek_r>
800087ec:	8e 68       	ld.sh	r8,r7[0xc]
800087ee:	10 99       	mov	r9,r8
800087f0:	ad c8       	cbr	r8,0xc
800087f2:	ad a9       	sbr	r9,0xc
800087f4:	5b fc       	cp.w	r12,-1
800087f6:	ef f8 0c 06 	st.heq	r7[0xc],r8
800087fa:	ef f9 1c 06 	st.hne	r7[0xc],r9
800087fe:	ef fc 1a 15 	st.wne	r7[0x54],r12
80008802:	d8 22       	popm	r4-r7,pc

80008804 <__swrite>:
80008804:	d4 21       	pushm	r4-r7,lr
80008806:	96 68       	ld.sh	r8,r11[0xc]
80008808:	16 97       	mov	r7,r11
8000880a:	14 95       	mov	r5,r10
8000880c:	12 94       	mov	r4,r9
8000880e:	e2 18 01 00 	andl	r8,0x100,COH
80008812:	18 96       	mov	r6,r12
80008814:	c0 50       	breq	8000881e <__swrite+0x1a>
80008816:	30 29       	mov	r9,2
80008818:	30 0a       	mov	r10,0
8000881a:	96 7b       	ld.sh	r11,r11[0xe]
8000881c:	c6 cd       	rcall	80008af4 <_lseek_r>
8000881e:	8e 68       	ld.sh	r8,r7[0xc]
80008820:	ad c8       	cbr	r8,0xc
80008822:	08 99       	mov	r9,r4
80008824:	0a 9a       	mov	r10,r5
80008826:	8e 7b       	ld.sh	r11,r7[0xe]
80008828:	0c 9c       	mov	r12,r6
8000882a:	ae 68       	st.h	r7[0xc],r8
8000882c:	c9 ac       	rcall	80008960 <_write_r>
8000882e:	d8 22       	popm	r4-r7,pc

80008830 <__sread>:
80008830:	d4 21       	pushm	r4-r7,lr
80008832:	16 97       	mov	r7,r11
80008834:	96 7b       	ld.sh	r11,r11[0xe]
80008836:	c7 1d       	rcall	80008b18 <_read_r>
80008838:	c0 65       	brlt	80008844 <__sread+0x14>
8000883a:	6f 58       	ld.w	r8,r7[0x54]
8000883c:	18 08       	add	r8,r12
8000883e:	ef 48 00 54 	st.w	r7[84],r8
80008842:	d8 22       	popm	r4-r7,pc
80008844:	8e 68       	ld.sh	r8,r7[0xc]
80008846:	ad c8       	cbr	r8,0xc
80008848:	ae 68       	st.h	r7[0xc],r8
8000884a:	d8 22       	popm	r4-r7,pc

8000884c <strlen>:
8000884c:	30 09       	mov	r9,0
8000884e:	18 98       	mov	r8,r12
80008850:	c0 28       	rjmp	80008854 <strlen+0x8>
80008852:	2f f8       	sub	r8,-1
80008854:	11 8a       	ld.ub	r10,r8[0x0]
80008856:	f2 0a 18 00 	cp.b	r10,r9
8000885a:	cf c1       	brne	80008852 <strlen+0x6>
8000885c:	f0 0c 01 0c 	sub	r12,r8,r12
80008860:	5e fc       	retal	r12
80008862:	d7 03       	nop

80008864 <_close>:
80008864:	30 28       	mov	r8,2
80008866:	d6 73       	breakpoint
80008868:	3f fc       	mov	r12,-1
8000886a:	35 8b       	mov	r11,88
8000886c:	58 0c       	cp.w	r12,0
8000886e:	5e 4c       	retge	r12
80008870:	e0 6a 08 68 	mov	r10,2152
80008874:	95 0b       	st.w	r10[0x0],r11
80008876:	5e fc       	retal	r12

80008878 <_lseek>:
80008878:	30 58       	mov	r8,5
8000887a:	d6 73       	breakpoint
8000887c:	3f fc       	mov	r12,-1
8000887e:	35 8b       	mov	r11,88
80008880:	58 0c       	cp.w	r12,0
80008882:	5e 4c       	retge	r12
80008884:	e0 6a 08 68 	mov	r10,2152
80008888:	95 0b       	st.w	r10[0x0],r11
8000888a:	5e fc       	retal	r12

8000888c <_read>:
8000888c:	30 38       	mov	r8,3
8000888e:	d6 73       	breakpoint
80008890:	3f fc       	mov	r12,-1
80008892:	35 8b       	mov	r11,88
80008894:	58 0c       	cp.w	r12,0
80008896:	5e 4c       	retge	r12
80008898:	e0 6a 08 68 	mov	r10,2152
8000889c:	95 0b       	st.w	r10[0x0],r11
8000889e:	5e fc       	retal	r12

800088a0 <_write>:
800088a0:	30 48       	mov	r8,4
800088a2:	d6 73       	breakpoint
800088a4:	3f fc       	mov	r12,-1
800088a6:	35 8b       	mov	r11,88
800088a8:	58 0c       	cp.w	r12,0
800088aa:	5e 4c       	retge	r12
800088ac:	e0 6a 08 68 	mov	r10,2152
800088b0:	95 0b       	st.w	r10[0x0],r11
800088b2:	5e fc       	retal	r12

800088b4 <isatty>:
800088b4:	30 b8       	mov	r8,11
800088b6:	d6 73       	breakpoint
800088b8:	3f fc       	mov	r12,-1
800088ba:	35 8b       	mov	r11,88
800088bc:	58 0c       	cp.w	r12,0
800088be:	5e 4c       	retge	r12
800088c0:	e0 6a 08 68 	mov	r10,2152
800088c4:	95 0b       	st.w	r10[0x0],r11
800088c6:	5e fc       	retal	r12

800088c8 <_fstat_host>:
800088c8:	30 98       	mov	r8,9
800088ca:	d6 73       	breakpoint
800088cc:	3f fc       	mov	r12,-1
800088ce:	35 8b       	mov	r11,88
800088d0:	58 0c       	cp.w	r12,0
800088d2:	5e 4c       	retge	r12
800088d4:	e0 6a 08 68 	mov	r10,2152
800088d8:	95 0b       	st.w	r10[0x0],r11
800088da:	5e fc       	retal	r12

800088dc <_fstat>:
800088dc:	d4 21       	pushm	r4-r7,lr
800088de:	21 0d       	sub	sp,64
800088e0:	16 97       	mov	r7,r11
800088e2:	1a 9b       	mov	r11,sp
800088e4:	cf 2f       	rcall	800088c8 <_fstat_host>
800088e6:	c0 34       	brge	800088ec <_fstat+0x10>
800088e8:	3f fc       	mov	r12,-1
800088ea:	c1 c8       	rjmp	80008922 <_fstat+0x46>
800088ec:	40 08       	lddsp	r8,sp[0x0]
800088ee:	ae 08       	st.h	r7[0x0],r8
800088f0:	40 18       	lddsp	r8,sp[0x4]
800088f2:	ae 18       	st.h	r7[0x2],r8
800088f4:	40 28       	lddsp	r8,sp[0x8]
800088f6:	8f 18       	st.w	r7[0x4],r8
800088f8:	40 38       	lddsp	r8,sp[0xc]
800088fa:	ae 48       	st.h	r7[0x8],r8
800088fc:	40 48       	lddsp	r8,sp[0x10]
800088fe:	ae 58       	st.h	r7[0xa],r8
80008900:	40 58       	lddsp	r8,sp[0x14]
80008902:	ae 68       	st.h	r7[0xc],r8
80008904:	40 68       	lddsp	r8,sp[0x18]
80008906:	ae 78       	st.h	r7[0xe],r8
80008908:	40 88       	lddsp	r8,sp[0x20]
8000890a:	8f 48       	st.w	r7[0x10],r8
8000890c:	40 a8       	lddsp	r8,sp[0x28]
8000890e:	8f b8       	st.w	r7[0x2c],r8
80008910:	40 c8       	lddsp	r8,sp[0x30]
80008912:	8f c8       	st.w	r7[0x30],r8
80008914:	40 d8       	lddsp	r8,sp[0x34]
80008916:	8f 58       	st.w	r7[0x14],r8
80008918:	40 e8       	lddsp	r8,sp[0x38]
8000891a:	30 0c       	mov	r12,0
8000891c:	8f 78       	st.w	r7[0x1c],r8
8000891e:	40 f8       	lddsp	r8,sp[0x3c]
80008920:	8f 98       	st.w	r7[0x24],r8
80008922:	2f 0d       	sub	sp,-64
80008924:	d8 22       	popm	r4-r7,pc
80008926:	d7 03       	nop

80008928 <_sbrk>:
80008928:	d4 01       	pushm	lr
8000892a:	e0 68 06 78 	mov	r8,1656
8000892e:	70 09       	ld.w	r9,r8[0x0]
80008930:	58 09       	cp.w	r9,0
80008932:	c0 41       	brne	8000893a <_sbrk+0x12>
80008934:	e0 69 08 70 	mov	r9,2160
80008938:	91 09       	st.w	r8[0x0],r9
8000893a:	e0 69 06 78 	mov	r9,1656
8000893e:	e0 6a f0 00 	mov	r10,61440
80008942:	72 08       	ld.w	r8,r9[0x0]
80008944:	f0 0c 00 0c 	add	r12,r8,r12
80008948:	14 3c       	cp.w	r12,r10
8000894a:	e0 8b 00 04 	brhi	80008952 <_sbrk+0x2a>
8000894e:	93 0c       	st.w	r9[0x0],r12
80008950:	c0 58       	rjmp	8000895a <_sbrk+0x32>
80008952:	c5 5c       	rcall	800089fc <__errno>
80008954:	30 c8       	mov	r8,12
80008956:	99 08       	st.w	r12[0x0],r8
80008958:	3f f8       	mov	r8,-1
8000895a:	10 9c       	mov	r12,r8
8000895c:	d8 02       	popm	pc
8000895e:	d7 03       	nop

80008960 <_write_r>:
80008960:	d4 21       	pushm	r4-r7,lr
80008962:	16 98       	mov	r8,r11
80008964:	18 97       	mov	r7,r12
80008966:	10 9c       	mov	r12,r8
80008968:	30 08       	mov	r8,0
8000896a:	14 9b       	mov	r11,r10
8000896c:	e0 66 08 68 	mov	r6,2152
80008970:	12 9a       	mov	r10,r9
80008972:	8d 08       	st.w	r6[0x0],r8
80008974:	c9 6f       	rcall	800088a0 <_write>
80008976:	5b fc       	cp.w	r12,-1
80008978:	c0 51       	brne	80008982 <_write_r+0x22>
8000897a:	6c 08       	ld.w	r8,r6[0x0]
8000897c:	58 08       	cp.w	r8,0
8000897e:	ef f8 1a 03 	st.wne	r7[0xc],r8
80008982:	d8 22       	popm	r4-r7,pc

80008984 <_calloc_r>:
80008984:	d4 21       	pushm	r4-r7,lr
80008986:	f4 0b 02 4b 	mul	r11,r10,r11
8000898a:	fe b0 f8 5f 	rcall	80007a48 <_malloc_r>
8000898e:	18 97       	mov	r7,r12
80008990:	c2 30       	breq	800089d6 <_calloc_r+0x52>
80008992:	f8 fa ff fc 	ld.w	r10,r12[-4]
80008996:	e0 1a ff fc 	andl	r10,0xfffc
8000899a:	20 4a       	sub	r10,4
8000899c:	e0 4a 00 24 	cp.w	r10,36
800089a0:	e0 8b 00 18 	brhi	800089d0 <_calloc_r+0x4c>
800089a4:	18 98       	mov	r8,r12
800089a6:	59 3a       	cp.w	r10,19
800089a8:	e0 88 00 0f 	brls	800089c6 <_calloc_r+0x42>
800089ac:	30 09       	mov	r9,0
800089ae:	10 a9       	st.w	r8++,r9
800089b0:	10 a9       	st.w	r8++,r9
800089b2:	59 ba       	cp.w	r10,27
800089b4:	e0 88 00 09 	brls	800089c6 <_calloc_r+0x42>
800089b8:	10 a9       	st.w	r8++,r9
800089ba:	10 a9       	st.w	r8++,r9
800089bc:	e0 4a 00 24 	cp.w	r10,36
800089c0:	c0 31       	brne	800089c6 <_calloc_r+0x42>
800089c2:	10 a9       	st.w	r8++,r9
800089c4:	10 a9       	st.w	r8++,r9
800089c6:	30 09       	mov	r9,0
800089c8:	10 a9       	st.w	r8++,r9
800089ca:	91 19       	st.w	r8[0x4],r9
800089cc:	91 09       	st.w	r8[0x0],r9
800089ce:	c0 48       	rjmp	800089d6 <_calloc_r+0x52>
800089d0:	30 0b       	mov	r11,0
800089d2:	fe b0 fa 7d 	rcall	80007ecc <memset>
800089d6:	0e 9c       	mov	r12,r7
800089d8:	d8 22       	popm	r4-r7,pc
800089da:	d7 03       	nop

800089dc <_close_r>:
800089dc:	d4 21       	pushm	r4-r7,lr
800089de:	30 08       	mov	r8,0
800089e0:	18 97       	mov	r7,r12
800089e2:	e0 66 08 68 	mov	r6,2152
800089e6:	16 9c       	mov	r12,r11
800089e8:	8d 08       	st.w	r6[0x0],r8
800089ea:	c3 df       	rcall	80008864 <_close>
800089ec:	5b fc       	cp.w	r12,-1
800089ee:	c0 51       	brne	800089f8 <_close_r+0x1c>
800089f0:	6c 08       	ld.w	r8,r6[0x0]
800089f2:	58 08       	cp.w	r8,0
800089f4:	ef f8 1a 03 	st.wne	r7[0xc],r8
800089f8:	d8 22       	popm	r4-r7,pc
800089fa:	d7 03       	nop

800089fc <__errno>:
800089fc:	e0 68 01 04 	mov	r8,260
80008a00:	70 0c       	ld.w	r12,r8[0x0]
80008a02:	2f 4c       	sub	r12,-12
80008a04:	5e fc       	retal	r12
80008a06:	d7 03       	nop

80008a08 <_fclose_r>:
80008a08:	d4 21       	pushm	r4-r7,lr
80008a0a:	18 96       	mov	r6,r12
80008a0c:	16 97       	mov	r7,r11
80008a0e:	58 0b       	cp.w	r11,0
80008a10:	c0 31       	brne	80008a16 <_fclose_r+0xe>
80008a12:	16 95       	mov	r5,r11
80008a14:	c5 38       	rjmp	80008aba <_fclose_r+0xb2>
80008a16:	fe b0 f4 87 	rcall	80007324 <__sfp_lock_acquire>
80008a1a:	58 06       	cp.w	r6,0
80008a1c:	c0 70       	breq	80008a2a <_fclose_r+0x22>
80008a1e:	6c 68       	ld.w	r8,r6[0x18]
80008a20:	58 08       	cp.w	r8,0
80008a22:	c0 41       	brne	80008a2a <_fclose_r+0x22>
80008a24:	0c 9c       	mov	r12,r6
80008a26:	fe b0 f4 d1 	rcall	800073c8 <__sinit>
80008a2a:	fe c8 ea 6a 	sub	r8,pc,-5526
80008a2e:	10 37       	cp.w	r7,r8
80008a30:	c0 31       	brne	80008a36 <_fclose_r+0x2e>
80008a32:	6c 07       	ld.w	r7,r6[0x0]
80008a34:	c0 c8       	rjmp	80008a4c <_fclose_r+0x44>
80008a36:	fe c8 ea 56 	sub	r8,pc,-5546
80008a3a:	10 37       	cp.w	r7,r8
80008a3c:	c0 31       	brne	80008a42 <_fclose_r+0x3a>
80008a3e:	6c 17       	ld.w	r7,r6[0x4]
80008a40:	c0 68       	rjmp	80008a4c <_fclose_r+0x44>
80008a42:	fe c8 ea 42 	sub	r8,pc,-5566
80008a46:	10 37       	cp.w	r7,r8
80008a48:	ed f7 00 02 	ld.weq	r7,r6[0x8]
80008a4c:	8e 69       	ld.sh	r9,r7[0xc]
80008a4e:	30 08       	mov	r8,0
80008a50:	f0 09 19 00 	cp.h	r9,r8
80008a54:	c0 51       	brne	80008a5e <_fclose_r+0x56>
80008a56:	fe b0 f4 68 	rcall	80007326 <__sfp_lock_release>
80008a5a:	30 05       	mov	r5,0
80008a5c:	c2 f8       	rjmp	80008aba <_fclose_r+0xb2>
80008a5e:	0e 9b       	mov	r11,r7
80008a60:	0c 9c       	mov	r12,r6
80008a62:	fe b0 f3 db 	rcall	80007218 <_fflush_r>
80008a66:	6e c8       	ld.w	r8,r7[0x30]
80008a68:	18 95       	mov	r5,r12
80008a6a:	58 08       	cp.w	r8,0
80008a6c:	c0 60       	breq	80008a78 <_fclose_r+0x70>
80008a6e:	6e 8b       	ld.w	r11,r7[0x20]
80008a70:	0c 9c       	mov	r12,r6
80008a72:	5d 18       	icall	r8
80008a74:	f9 b5 05 ff 	movlt	r5,-1
80008a78:	8e 68       	ld.sh	r8,r7[0xc]
80008a7a:	ed b8 00 07 	bld	r8,0x7
80008a7e:	c0 51       	brne	80008a88 <_fclose_r+0x80>
80008a80:	6e 4b       	ld.w	r11,r7[0x10]
80008a82:	0c 9c       	mov	r12,r6
80008a84:	fe b0 f5 3c 	rcall	800074fc <_free_r>
80008a88:	6e db       	ld.w	r11,r7[0x34]
80008a8a:	58 0b       	cp.w	r11,0
80008a8c:	c0 a0       	breq	80008aa0 <_fclose_r+0x98>
80008a8e:	ee c8 ff bc 	sub	r8,r7,-68
80008a92:	10 3b       	cp.w	r11,r8
80008a94:	c0 40       	breq	80008a9c <_fclose_r+0x94>
80008a96:	0c 9c       	mov	r12,r6
80008a98:	fe b0 f5 32 	rcall	800074fc <_free_r>
80008a9c:	30 08       	mov	r8,0
80008a9e:	8f d8       	st.w	r7[0x34],r8
80008aa0:	6f 2b       	ld.w	r11,r7[0x48]
80008aa2:	58 0b       	cp.w	r11,0
80008aa4:	c0 70       	breq	80008ab2 <_fclose_r+0xaa>
80008aa6:	0c 9c       	mov	r12,r6
80008aa8:	fe b0 f5 2a 	rcall	800074fc <_free_r>
80008aac:	30 08       	mov	r8,0
80008aae:	ef 48 00 48 	st.w	r7[72],r8
80008ab2:	30 08       	mov	r8,0
80008ab4:	ae 68       	st.h	r7[0xc],r8
80008ab6:	fe b0 f4 38 	rcall	80007326 <__sfp_lock_release>
80008aba:	0a 9c       	mov	r12,r5
80008abc:	d8 22       	popm	r4-r7,pc
80008abe:	d7 03       	nop

80008ac0 <fclose>:
80008ac0:	d4 01       	pushm	lr
80008ac2:	e0 68 01 04 	mov	r8,260
80008ac6:	18 9b       	mov	r11,r12
80008ac8:	70 0c       	ld.w	r12,r8[0x0]
80008aca:	c9 ff       	rcall	80008a08 <_fclose_r>
80008acc:	d8 02       	popm	pc
80008ace:	d7 03       	nop

80008ad0 <_fstat_r>:
80008ad0:	d4 21       	pushm	r4-r7,lr
80008ad2:	16 98       	mov	r8,r11
80008ad4:	18 97       	mov	r7,r12
80008ad6:	10 9c       	mov	r12,r8
80008ad8:	30 08       	mov	r8,0
80008ada:	e0 66 08 68 	mov	r6,2152
80008ade:	14 9b       	mov	r11,r10
80008ae0:	8d 08       	st.w	r6[0x0],r8
80008ae2:	cf de       	rcall	800088dc <_fstat>
80008ae4:	5b fc       	cp.w	r12,-1
80008ae6:	c0 51       	brne	80008af0 <_fstat_r+0x20>
80008ae8:	6c 08       	ld.w	r8,r6[0x0]
80008aea:	58 08       	cp.w	r8,0
80008aec:	ef f8 1a 03 	st.wne	r7[0xc],r8
80008af0:	d8 22       	popm	r4-r7,pc
80008af2:	d7 03       	nop

80008af4 <_lseek_r>:
80008af4:	d4 21       	pushm	r4-r7,lr
80008af6:	16 98       	mov	r8,r11
80008af8:	18 97       	mov	r7,r12
80008afa:	10 9c       	mov	r12,r8
80008afc:	30 08       	mov	r8,0
80008afe:	14 9b       	mov	r11,r10
80008b00:	e0 66 08 68 	mov	r6,2152
80008b04:	12 9a       	mov	r10,r9
80008b06:	8d 08       	st.w	r6[0x0],r8
80008b08:	cb 8e       	rcall	80008878 <_lseek>
80008b0a:	5b fc       	cp.w	r12,-1
80008b0c:	c0 51       	brne	80008b16 <_lseek_r+0x22>
80008b0e:	6c 08       	ld.w	r8,r6[0x0]
80008b10:	58 08       	cp.w	r8,0
80008b12:	ef f8 1a 03 	st.wne	r7[0xc],r8
80008b16:	d8 22       	popm	r4-r7,pc

80008b18 <_read_r>:
80008b18:	d4 21       	pushm	r4-r7,lr
80008b1a:	16 98       	mov	r8,r11
80008b1c:	18 97       	mov	r7,r12
80008b1e:	10 9c       	mov	r12,r8
80008b20:	30 08       	mov	r8,0
80008b22:	14 9b       	mov	r11,r10
80008b24:	e0 66 08 68 	mov	r6,2152
80008b28:	12 9a       	mov	r10,r9
80008b2a:	8d 08       	st.w	r6[0x0],r8
80008b2c:	cb 0e       	rcall	8000888c <_read>
80008b2e:	5b fc       	cp.w	r12,-1
80008b30:	c0 51       	brne	80008b3a <_read_r+0x22>
80008b32:	6c 08       	ld.w	r8,r6[0x0]
80008b34:	58 08       	cp.w	r8,0
80008b36:	ef f8 1a 03 	st.wne	r7[0xc],r8
80008b3a:	d8 22       	popm	r4-r7,pc

80008b3c <__avr32_f64_sub_from_add>:
80008b3c:	ee 19 80 00 	eorh	r9,0x8000

80008b40 <__avr32_f64_sub>:
80008b40:	f7 e9 20 0c 	eor	r12,r11,r9
80008b44:	e0 86 00 ca 	brmi	80008cd8 <__avr32_f64_add_from_sub>
80008b48:	eb cd 40 e0 	pushm	r5-r7,lr
80008b4c:	16 9c       	mov	r12,r11
80008b4e:	e6 1c 80 00 	andh	r12,0x8000,COH
80008b52:	bf db       	cbr	r11,0x1f
80008b54:	bf d9       	cbr	r9,0x1f
80008b56:	10 3a       	cp.w	r10,r8
80008b58:	f2 0b 13 00 	cpc	r11,r9
80008b5c:	c0 92       	brcc	80008b6e <__avr32_f64_sub+0x2e>
80008b5e:	16 97       	mov	r7,r11
80008b60:	12 9b       	mov	r11,r9
80008b62:	0e 99       	mov	r9,r7
80008b64:	14 97       	mov	r7,r10
80008b66:	10 9a       	mov	r10,r8
80008b68:	0e 98       	mov	r8,r7
80008b6a:	ee 1c 80 00 	eorh	r12,0x8000
80008b6e:	f6 07 16 14 	lsr	r7,r11,0x14
80008b72:	ab 7b       	lsl	r11,0xb
80008b74:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
80008b78:	ab 7a       	lsl	r10,0xb
80008b7a:	bf bb       	sbr	r11,0x1f
80008b7c:	f2 06 16 14 	lsr	r6,r9,0x14
80008b80:	c4 40       	breq	80008c08 <__avr32_f64_sub_opL_subnormal>
80008b82:	ab 79       	lsl	r9,0xb
80008b84:	f3 e8 13 59 	or	r9,r9,r8>>0x15
80008b88:	ab 78       	lsl	r8,0xb
80008b8a:	bf b9       	sbr	r9,0x1f

80008b8c <__avr32_f64_sub_opL_subnormal_done>:
80008b8c:	e0 47 07 ff 	cp.w	r7,2047
80008b90:	c4 f0       	breq	80008c2e <__avr32_f64_sub_opH_nan_or_inf>
80008b92:	0e 26       	rsub	r6,r7
80008b94:	c1 20       	breq	80008bb8 <__avr32_f64_sub_shift_done>
80008b96:	ec 05 11 20 	rsub	r5,r6,32
80008b9a:	e0 46 00 20 	cp.w	r6,32
80008b9e:	c7 c2       	brcc	80008c96 <__avr32_f64_sub_longshift>
80008ba0:	f0 05 09 4e 	lsl	lr,r8,r5
80008ba4:	f2 05 09 45 	lsl	r5,r9,r5
80008ba8:	f0 06 0a 48 	lsr	r8,r8,r6
80008bac:	f2 06 0a 49 	lsr	r9,r9,r6
80008bb0:	0a 48       	or	r8,r5
80008bb2:	58 0e       	cp.w	lr,0
80008bb4:	5f 1e       	srne	lr
80008bb6:	1c 48       	or	r8,lr

80008bb8 <__avr32_f64_sub_shift_done>:
80008bb8:	10 1a       	sub	r10,r8
80008bba:	f6 09 01 4b 	sbc	r11,r11,r9
80008bbe:	f6 06 12 00 	clz	r6,r11
80008bc2:	c0 e0       	breq	80008bde <__avr32_f64_sub_longnormalize_done>
80008bc4:	c7 83       	brcs	80008cb4 <__avr32_f64_sub_longnormalize>
80008bc6:	ec 0e 11 20 	rsub	lr,r6,32
80008bca:	f6 06 09 4b 	lsl	r11,r11,r6
80008bce:	f4 0e 0a 4e 	lsr	lr,r10,lr
80008bd2:	1c 4b       	or	r11,lr
80008bd4:	f4 06 09 4a 	lsl	r10,r10,r6
80008bd8:	0c 17       	sub	r7,r6
80008bda:	e0 8a 00 39 	brle	80008c4c <__avr32_f64_sub_subnormal_result>

80008bde <__avr32_f64_sub_longnormalize_done>:
80008bde:	f4 09 15 15 	lsl	r9,r10,0x15
80008be2:	ab 9a       	lsr	r10,0xb
80008be4:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80008be8:	ab 9b       	lsr	r11,0xb
80008bea:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80008bee:	18 4b       	or	r11,r12

80008bf0 <__avr32_f64_sub_round>:
80008bf0:	fc 17 80 00 	movh	r7,0x8000
80008bf4:	ed ba 00 00 	bld	r10,0x0
80008bf8:	f7 b7 01 ff 	subne	r7,-1
80008bfc:	0e 39       	cp.w	r9,r7
80008bfe:	5f 29       	srhs	r9
80008c00:	12 0a       	add	r10,r9
80008c02:	5c 0b       	acr	r11
80008c04:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008c08 <__avr32_f64_sub_opL_subnormal>:
80008c08:	ab 79       	lsl	r9,0xb
80008c0a:	f3 e8 13 59 	or	r9,r9,r8>>0x15
80008c0e:	ab 78       	lsl	r8,0xb
80008c10:	f3 e8 10 0e 	or	lr,r9,r8
80008c14:	f9 b6 01 01 	movne	r6,1
80008c18:	ee 0e 11 00 	rsub	lr,r7,0
80008c1c:	f9 b7 00 01 	moveq	r7,1
80008c20:	ef bb 00 1f 	bst	r11,0x1f
80008c24:	f7 ea 10 0e 	or	lr,r11,r10
80008c28:	f9 b7 00 00 	moveq	r7,0
80008c2c:	cb 0b       	rjmp	80008b8c <__avr32_f64_sub_opL_subnormal_done>

80008c2e <__avr32_f64_sub_opH_nan_or_inf>:
80008c2e:	bf db       	cbr	r11,0x1f
80008c30:	f7 ea 10 0e 	or	lr,r11,r10
80008c34:	c0 81       	brne	80008c44 <__avr32_f64_sub_return_nan>
80008c36:	e0 46 07 ff 	cp.w	r6,2047
80008c3a:	c0 50       	breq	80008c44 <__avr32_f64_sub_return_nan>
80008c3c:	f9 e7 11 4b 	or	r11,r12,r7<<0x14
80008c40:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008c44 <__avr32_f64_sub_return_nan>:
80008c44:	3f fa       	mov	r10,-1
80008c46:	3f fb       	mov	r11,-1
80008c48:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008c4c <__avr32_f64_sub_subnormal_result>:
80008c4c:	5c 37       	neg	r7
80008c4e:	2f f7       	sub	r7,-1
80008c50:	f1 b7 04 c0 	satu	r7,0x6
80008c54:	e0 47 00 20 	cp.w	r7,32
80008c58:	c1 14       	brge	80008c7a <__avr32_f64_sub_subnormal_result+0x2e>
80008c5a:	ee 08 11 20 	rsub	r8,r7,32
80008c5e:	f4 08 09 49 	lsl	r9,r10,r8
80008c62:	5f 16       	srne	r6
80008c64:	f4 07 0a 4a 	lsr	r10,r10,r7
80008c68:	0c 4a       	or	r10,r6
80008c6a:	f6 08 09 49 	lsl	r9,r11,r8
80008c6e:	f5 e9 10 0a 	or	r10,r10,r9
80008c72:	f4 07 0a 4b 	lsr	r11,r10,r7
80008c76:	30 07       	mov	r7,0
80008c78:	cb 3b       	rjmp	80008bde <__avr32_f64_sub_longnormalize_done>
80008c7a:	ee 08 11 40 	rsub	r8,r7,64
80008c7e:	f6 08 09 49 	lsl	r9,r11,r8
80008c82:	14 49       	or	r9,r10
80008c84:	5f 16       	srne	r6
80008c86:	f6 07 0a 4a 	lsr	r10,r11,r7
80008c8a:	0c 4a       	or	r10,r6
80008c8c:	30 0b       	mov	r11,0
80008c8e:	30 07       	mov	r7,0
80008c90:	ca 7b       	rjmp	80008bde <__avr32_f64_sub_longnormalize_done>
80008c92:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008c96 <__avr32_f64_sub_longshift>:
80008c96:	f1 b6 04 c0 	satu	r6,0x6
80008c9a:	f0 0e 17 00 	moveq	lr,r8
80008c9e:	c0 40       	breq	80008ca6 <__avr32_f64_sub_longshift+0x10>
80008ca0:	f2 05 09 4e 	lsl	lr,r9,r5
80008ca4:	10 4e       	or	lr,r8
80008ca6:	f2 06 0a 48 	lsr	r8,r9,r6
80008caa:	30 09       	mov	r9,0
80008cac:	58 0e       	cp.w	lr,0
80008cae:	5f 1e       	srne	lr
80008cb0:	1c 48       	or	r8,lr
80008cb2:	c8 3b       	rjmp	80008bb8 <__avr32_f64_sub_shift_done>

80008cb4 <__avr32_f64_sub_longnormalize>:
80008cb4:	f4 06 12 00 	clz	r6,r10
80008cb8:	f9 b7 03 00 	movlo	r7,0
80008cbc:	f9 b6 03 00 	movlo	r6,0
80008cc0:	f9 bc 03 00 	movlo	r12,0
80008cc4:	f7 b6 02 e0 	subhs	r6,-32
80008cc8:	f4 06 09 4b 	lsl	r11,r10,r6
80008ccc:	30 0a       	mov	r10,0
80008cce:	0c 17       	sub	r7,r6
80008cd0:	fe 9a ff be 	brle	80008c4c <__avr32_f64_sub_subnormal_result>
80008cd4:	c8 5b       	rjmp	80008bde <__avr32_f64_sub_longnormalize_done>
80008cd6:	d7 03       	nop

80008cd8 <__avr32_f64_add_from_sub>:
80008cd8:	ee 19 80 00 	eorh	r9,0x8000

80008cdc <__avr32_f64_add>:
80008cdc:	f7 e9 20 0c 	eor	r12,r11,r9
80008ce0:	fe 96 ff 2e 	brmi	80008b3c <__avr32_f64_sub_from_add>
80008ce4:	eb cd 40 e0 	pushm	r5-r7,lr
80008ce8:	16 9c       	mov	r12,r11
80008cea:	e6 1c 80 00 	andh	r12,0x8000,COH
80008cee:	bf db       	cbr	r11,0x1f
80008cf0:	bf d9       	cbr	r9,0x1f
80008cf2:	12 3b       	cp.w	r11,r9
80008cf4:	c0 72       	brcc	80008d02 <__avr32_f64_add+0x26>
80008cf6:	16 97       	mov	r7,r11
80008cf8:	12 9b       	mov	r11,r9
80008cfa:	0e 99       	mov	r9,r7
80008cfc:	14 97       	mov	r7,r10
80008cfe:	10 9a       	mov	r10,r8
80008d00:	0e 98       	mov	r8,r7
80008d02:	30 0e       	mov	lr,0
80008d04:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
80008d08:	f7 db c0 14 	bfextu	r11,r11,0x0,0x14
80008d0c:	b5 ab       	sbr	r11,0x14
80008d0e:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80008d12:	c6 20       	breq	80008dd6 <__avr32_f64_add_op2_subnormal>
80008d14:	f3 d9 c0 14 	bfextu	r9,r9,0x0,0x14
80008d18:	b5 a9       	sbr	r9,0x14
80008d1a:	e0 47 07 ff 	cp.w	r7,2047
80008d1e:	c2 80       	breq	80008d6e <__avr32_f64_add_opH_nan_or_inf>
80008d20:	0e 26       	rsub	r6,r7
80008d22:	c1 20       	breq	80008d46 <__avr32_f64_add_shift_done>
80008d24:	e0 46 00 36 	cp.w	r6,54
80008d28:	c1 52       	brcc	80008d52 <__avr32_f64_add_res_of_done>
80008d2a:	ec 05 11 20 	rsub	r5,r6,32
80008d2e:	e0 46 00 20 	cp.w	r6,32
80008d32:	c3 52       	brcc	80008d9c <__avr32_f64_add_longshift>
80008d34:	f0 05 09 4e 	lsl	lr,r8,r5
80008d38:	f2 05 09 45 	lsl	r5,r9,r5
80008d3c:	f0 06 0a 48 	lsr	r8,r8,r6
80008d40:	f2 06 0a 49 	lsr	r9,r9,r6
80008d44:	0a 48       	or	r8,r5

80008d46 <__avr32_f64_add_shift_done>:
80008d46:	10 0a       	add	r10,r8
80008d48:	f6 09 00 4b 	adc	r11,r11,r9
80008d4c:	ed bb 00 15 	bld	r11,0x15
80008d50:	c3 40       	breq	80008db8 <__avr32_f64_add_res_of>

80008d52 <__avr32_f64_add_res_of_done>:
80008d52:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80008d56:	18 4b       	or	r11,r12

80008d58 <__avr32_f64_add_round>:
80008d58:	f9 da c0 01 	bfextu	r12,r10,0x0,0x1
80008d5c:	18 4e       	or	lr,r12
80008d5e:	ee 1e 80 00 	eorh	lr,0x8000
80008d62:	f1 be 04 20 	satu	lr,0x1
80008d66:	1c 0a       	add	r10,lr
80008d68:	5c 0b       	acr	r11
80008d6a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008d6e <__avr32_f64_add_opH_nan_or_inf>:
80008d6e:	b5 cb       	cbr	r11,0x14
80008d70:	f7 ea 10 0e 	or	lr,r11,r10
80008d74:	c1 01       	brne	80008d94 <__avr32_f64_add_return_nan>
80008d76:	e0 46 07 ff 	cp.w	r6,2047
80008d7a:	c0 30       	breq	80008d80 <__avr32_f64_add_opL_nan_or_inf>
80008d7c:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008d80 <__avr32_f64_add_opL_nan_or_inf>:
80008d80:	b5 c9       	cbr	r9,0x14
80008d82:	f3 e8 10 0e 	or	lr,r9,r8
80008d86:	c0 71       	brne	80008d94 <__avr32_f64_add_return_nan>
80008d88:	30 0a       	mov	r10,0
80008d8a:	fc 1b 7f f0 	movh	r11,0x7ff0
80008d8e:	18 4b       	or	r11,r12
80008d90:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008d94 <__avr32_f64_add_return_nan>:
80008d94:	3f fa       	mov	r10,-1
80008d96:	3f fb       	mov	r11,-1
80008d98:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008d9c <__avr32_f64_add_longshift>:
80008d9c:	f1 b6 04 c0 	satu	r6,0x6
80008da0:	f0 0e 17 00 	moveq	lr,r8
80008da4:	c0 60       	breq	80008db0 <__avr32_f64_add_longshift+0x14>
80008da6:	f2 05 09 4e 	lsl	lr,r9,r5
80008daa:	58 08       	cp.w	r8,0
80008dac:	5f 18       	srne	r8
80008dae:	10 4e       	or	lr,r8
80008db0:	f2 06 0a 48 	lsr	r8,r9,r6
80008db4:	30 09       	mov	r9,0
80008db6:	cc 8b       	rjmp	80008d46 <__avr32_f64_add_shift_done>

80008db8 <__avr32_f64_add_res_of>:
80008db8:	fd ee 10 1e 	or	lr,lr,lr<<0x1
80008dbc:	a1 9b       	lsr	r11,0x1
80008dbe:	5d 0a       	ror	r10
80008dc0:	5d 0e       	ror	lr
80008dc2:	2f f7       	sub	r7,-1
80008dc4:	e0 47 07 ff 	cp.w	r7,2047
80008dc8:	f9 ba 00 00 	moveq	r10,0
80008dcc:	f9 bb 00 00 	moveq	r11,0
80008dd0:	f9 be 00 00 	moveq	lr,0
80008dd4:	cb fb       	rjmp	80008d52 <__avr32_f64_add_res_of_done>

80008dd6 <__avr32_f64_add_op2_subnormal>:
80008dd6:	30 16       	mov	r6,1
80008dd8:	58 07       	cp.w	r7,0
80008dda:	ca 01       	brne	80008d1a <__avr32_f64_add+0x3e>
80008ddc:	b5 cb       	cbr	r11,0x14
80008dde:	10 0a       	add	r10,r8
80008de0:	f6 09 00 4b 	adc	r11,r11,r9
80008de4:	18 4b       	or	r11,r12
80008de6:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80008dea:	d7 03       	nop

80008dec <__avr32_f64_to_u32>:
80008dec:	58 0b       	cp.w	r11,0
80008dee:	5e 6d       	retmi	0

80008df0 <__avr32_f64_to_s32>:
80008df0:	f6 0c 15 01 	lsl	r12,r11,0x1
80008df4:	b5 9c       	lsr	r12,0x15
80008df6:	e0 2c 03 ff 	sub	r12,1023
80008dfa:	5e 3d       	retlo	0
80008dfc:	f8 0c 11 1f 	rsub	r12,r12,31
80008e00:	16 99       	mov	r9,r11
80008e02:	ab 7b       	lsl	r11,0xb
80008e04:	bf bb       	sbr	r11,0x1f
80008e06:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
80008e0a:	f6 0c 0a 4b 	lsr	r11,r11,r12
80008e0e:	a1 79       	lsl	r9,0x1
80008e10:	5e 2b       	reths	r11
80008e12:	5c 3b       	neg	r11
80008e14:	5e fb       	retal	r11

80008e16 <__avr32_f64_cmp_eq>:
80008e16:	10 3a       	cp.w	r10,r8
80008e18:	f2 0b 13 00 	cpc	r11,r9
80008e1c:	c0 80       	breq	80008e2c <__avr32_f64_cmp_eq+0x16>
80008e1e:	a1 7b       	lsl	r11,0x1
80008e20:	a1 79       	lsl	r9,0x1
80008e22:	14 4b       	or	r11,r10
80008e24:	12 4b       	or	r11,r9
80008e26:	10 4b       	or	r11,r8
80008e28:	5e 0f       	reteq	1
80008e2a:	5e fd       	retal	0
80008e2c:	a1 7b       	lsl	r11,0x1
80008e2e:	fc 1c ff e0 	movh	r12,0xffe0
80008e32:	58 0a       	cp.w	r10,0
80008e34:	f8 0b 13 00 	cpc	r11,r12
80008e38:	5e 8f       	retls	1
80008e3a:	5e fd       	retal	0

80008e3c <__avr32_f64_cmp_ge>:
80008e3c:	1a de       	st.w	--sp,lr
80008e3e:	1a d7       	st.w	--sp,r7
80008e40:	a1 7b       	lsl	r11,0x1
80008e42:	5f 3c       	srlo	r12
80008e44:	a1 79       	lsl	r9,0x1
80008e46:	5f 37       	srlo	r7
80008e48:	5c fc       	rol	r12
80008e4a:	fc 1e ff e0 	movh	lr,0xffe0
80008e4e:	58 0a       	cp.w	r10,0
80008e50:	fc 0b 13 00 	cpc	r11,lr
80008e54:	e0 8b 00 1d 	brhi	80008e8e <__avr32_f64_cmp_ge+0x52>
80008e58:	58 08       	cp.w	r8,0
80008e5a:	fc 09 13 00 	cpc	r9,lr
80008e5e:	e0 8b 00 18 	brhi	80008e8e <__avr32_f64_cmp_ge+0x52>
80008e62:	58 0b       	cp.w	r11,0
80008e64:	f5 ba 00 00 	subfeq	r10,0
80008e68:	c1 50       	breq	80008e92 <__avr32_f64_cmp_ge+0x56>
80008e6a:	1b 07       	ld.w	r7,sp++
80008e6c:	1b 0e       	ld.w	lr,sp++
80008e6e:	58 3c       	cp.w	r12,3
80008e70:	c0 a0       	breq	80008e84 <__avr32_f64_cmp_ge+0x48>
80008e72:	58 1c       	cp.w	r12,1
80008e74:	c0 33       	brcs	80008e7a <__avr32_f64_cmp_ge+0x3e>
80008e76:	5e 0f       	reteq	1
80008e78:	5e 1d       	retne	0
80008e7a:	10 3a       	cp.w	r10,r8
80008e7c:	f2 0b 13 00 	cpc	r11,r9
80008e80:	5e 2f       	reths	1
80008e82:	5e 3d       	retlo	0
80008e84:	14 38       	cp.w	r8,r10
80008e86:	f6 09 13 00 	cpc	r9,r11
80008e8a:	5e 2f       	reths	1
80008e8c:	5e 3d       	retlo	0
80008e8e:	1b 07       	ld.w	r7,sp++
80008e90:	d8 0a       	popm	pc,r12=0
80008e92:	58 17       	cp.w	r7,1
80008e94:	5f 0c       	sreq	r12
80008e96:	58 09       	cp.w	r9,0
80008e98:	f5 b8 00 00 	subfeq	r8,0
80008e9c:	1b 07       	ld.w	r7,sp++
80008e9e:	1b 0e       	ld.w	lr,sp++
80008ea0:	5e 0f       	reteq	1
80008ea2:	5e fc       	retal	r12

80008ea4 <__avr32_f64_div>:
80008ea4:	eb cd 40 ff 	pushm	r0-r7,lr
80008ea8:	f7 e9 20 0e 	eor	lr,r11,r9
80008eac:	f6 07 16 14 	lsr	r7,r11,0x14
80008eb0:	a9 7b       	lsl	r11,0x9
80008eb2:	f7 ea 13 7b 	or	r11,r11,r10>>0x17
80008eb6:	a9 7a       	lsl	r10,0x9
80008eb8:	bd bb       	sbr	r11,0x1d
80008eba:	e4 1b 3f ff 	andh	r11,0x3fff
80008ebe:	ab d7       	cbr	r7,0xb
80008ec0:	e0 80 00 cc 	breq	80009058 <__avr32_f64_div_round_subnormal+0x54>
80008ec4:	e0 47 07 ff 	cp.w	r7,2047
80008ec8:	e0 84 00 b5 	brge	80009032 <__avr32_f64_div_round_subnormal+0x2e>
80008ecc:	f2 06 16 14 	lsr	r6,r9,0x14
80008ed0:	a9 79       	lsl	r9,0x9
80008ed2:	f3 e8 13 79 	or	r9,r9,r8>>0x17
80008ed6:	a9 78       	lsl	r8,0x9
80008ed8:	bd b9       	sbr	r9,0x1d
80008eda:	e4 19 3f ff 	andh	r9,0x3fff
80008ede:	ab d6       	cbr	r6,0xb
80008ee0:	e0 80 00 e2 	breq	800090a4 <__avr32_f64_div_round_subnormal+0xa0>
80008ee4:	e0 46 07 ff 	cp.w	r6,2047
80008ee8:	e0 84 00 b2 	brge	8000904c <__avr32_f64_div_round_subnormal+0x48>
80008eec:	0c 17       	sub	r7,r6
80008eee:	fe 37 fc 01 	sub	r7,-1023
80008ef2:	fc 1c 80 00 	movh	r12,0x8000
80008ef6:	f8 03 16 01 	lsr	r3,r12,0x1
80008efa:	e9 d9 c3 62 	bfextu	r4,r9,0x1b,0x2
80008efe:	5c d4       	com	r4
80008f00:	e7 d4 d3 82 	bfins	r3,r4,0x1c,0x2
80008f04:	e6 09 06 44 	mulu.d	r4,r3,r9
80008f08:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80008f0c:	e6 05 06 44 	mulu.d	r4,r3,r5
80008f10:	ea 03 15 02 	lsl	r3,r5,0x2
80008f14:	e6 09 06 44 	mulu.d	r4,r3,r9
80008f18:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80008f1c:	e6 05 06 44 	mulu.d	r4,r3,r5
80008f20:	ea 03 15 02 	lsl	r3,r5,0x2
80008f24:	e6 09 06 44 	mulu.d	r4,r3,r9
80008f28:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80008f2c:	e6 05 06 44 	mulu.d	r4,r3,r5
80008f30:	ea 03 15 02 	lsl	r3,r5,0x2
80008f34:	e6 08 06 40 	mulu.d	r0,r3,r8
80008f38:	e4 09 07 40 	macu.d	r0,r2,r9
80008f3c:	e6 09 06 44 	mulu.d	r4,r3,r9
80008f40:	02 04       	add	r4,r1
80008f42:	5c 05       	acr	r5
80008f44:	a3 65       	lsl	r5,0x2
80008f46:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80008f4a:	a3 64       	lsl	r4,0x2
80008f4c:	5c 34       	neg	r4
80008f4e:	f8 05 01 45 	sbc	r5,r12,r5
80008f52:	e6 04 06 40 	mulu.d	r0,r3,r4
80008f56:	e4 05 07 40 	macu.d	r0,r2,r5
80008f5a:	e6 05 06 44 	mulu.d	r4,r3,r5
80008f5e:	02 04       	add	r4,r1
80008f60:	5c 05       	acr	r5
80008f62:	ea 03 15 02 	lsl	r3,r5,0x2
80008f66:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80008f6a:	e8 02 15 02 	lsl	r2,r4,0x2
80008f6e:	e6 08 06 40 	mulu.d	r0,r3,r8
80008f72:	e4 09 07 40 	macu.d	r0,r2,r9
80008f76:	e6 09 06 44 	mulu.d	r4,r3,r9
80008f7a:	02 04       	add	r4,r1
80008f7c:	5c 05       	acr	r5
80008f7e:	a3 65       	lsl	r5,0x2
80008f80:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80008f84:	a3 64       	lsl	r4,0x2
80008f86:	5c 34       	neg	r4
80008f88:	f8 05 01 45 	sbc	r5,r12,r5
80008f8c:	e6 04 06 40 	mulu.d	r0,r3,r4
80008f90:	e4 05 07 40 	macu.d	r0,r2,r5
80008f94:	e6 05 06 44 	mulu.d	r4,r3,r5
80008f98:	02 04       	add	r4,r1
80008f9a:	5c 05       	acr	r5
80008f9c:	ea 03 15 02 	lsl	r3,r5,0x2
80008fa0:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80008fa4:	e8 02 15 02 	lsl	r2,r4,0x2
80008fa8:	e6 0a 06 40 	mulu.d	r0,r3,r10
80008fac:	e4 0b 07 40 	macu.d	r0,r2,r11
80008fb0:	e6 0b 06 42 	mulu.d	r2,r3,r11
80008fb4:	02 02       	add	r2,r1
80008fb6:	5c 03       	acr	r3
80008fb8:	ed b3 00 1c 	bld	r3,0x1c
80008fbc:	c0 90       	breq	80008fce <__avr32_f64_div+0x12a>
80008fbe:	a1 72       	lsl	r2,0x1
80008fc0:	5c f3       	rol	r3
80008fc2:	20 17       	sub	r7,1
80008fc4:	a3 9a       	lsr	r10,0x3
80008fc6:	f5 eb 11 da 	or	r10,r10,r11<<0x1d
80008fca:	a3 9b       	lsr	r11,0x3
80008fcc:	c0 58       	rjmp	80008fd6 <__avr32_f64_div+0x132>
80008fce:	a5 8a       	lsr	r10,0x4
80008fd0:	f5 eb 11 ca 	or	r10,r10,r11<<0x1c
80008fd4:	a5 8b       	lsr	r11,0x4
80008fd6:	58 07       	cp.w	r7,0
80008fd8:	e0 8a 00 8b 	brle	800090ee <__avr32_f64_div_res_subnormal>
80008fdc:	e0 12 ff 00 	andl	r2,0xff00
80008fe0:	e8 12 00 80 	orl	r2,0x80
80008fe4:	e6 08 06 40 	mulu.d	r0,r3,r8
80008fe8:	e4 09 07 40 	macu.d	r0,r2,r9
80008fec:	e4 08 06 44 	mulu.d	r4,r2,r8
80008ff0:	e6 09 06 48 	mulu.d	r8,r3,r9
80008ff4:	00 05       	add	r5,r0
80008ff6:	f0 01 00 48 	adc	r8,r8,r1
80008ffa:	5c 09       	acr	r9
80008ffc:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80009000:	58 04       	cp.w	r4,0
80009002:	5c 25       	cpc	r5

80009004 <__avr32_f64_div_round_subnormal>:
80009004:	f4 08 13 00 	cpc	r8,r10
80009008:	f6 09 13 00 	cpc	r9,r11
8000900c:	5f 36       	srlo	r6
8000900e:	f8 06 17 00 	moveq	r6,r12
80009012:	e4 0a 16 08 	lsr	r10,r2,0x8
80009016:	f5 e3 11 8a 	or	r10,r10,r3<<0x18
8000901a:	e6 0b 16 08 	lsr	r11,r3,0x8
8000901e:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80009022:	ed be 00 1f 	bld	lr,0x1f
80009026:	ef bb 00 1f 	bst	r11,0x1f
8000902a:	0c 0a       	add	r10,r6
8000902c:	5c 0b       	acr	r11
8000902e:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80009032:	e4 1b 00 0f 	andh	r11,0xf
80009036:	14 4b       	or	r11,r10
80009038:	e0 81 00 a7 	brne	80009186 <__avr32_f64_div_res_subnormal+0x98>
8000903c:	f2 06 16 14 	lsr	r6,r9,0x14
80009040:	ab d6       	cbr	r6,0xb
80009042:	e0 46 07 ff 	cp.w	r6,2047
80009046:	e0 81 00 a4 	brne	8000918e <__avr32_f64_div_res_subnormal+0xa0>
8000904a:	c9 e8       	rjmp	80009186 <__avr32_f64_div_res_subnormal+0x98>
8000904c:	e4 19 00 0f 	andh	r9,0xf
80009050:	10 49       	or	r9,r8
80009052:	e0 81 00 9a 	brne	80009186 <__avr32_f64_div_res_subnormal+0x98>
80009056:	c9 28       	rjmp	8000917a <__avr32_f64_div_res_subnormal+0x8c>
80009058:	a3 7b       	lsl	r11,0x3
8000905a:	f7 ea 13 db 	or	r11,r11,r10>>0x1d
8000905e:	a3 7a       	lsl	r10,0x3
80009060:	f5 eb 10 04 	or	r4,r10,r11
80009064:	e0 80 00 a0 	breq	800091a4 <__avr32_f64_div_op1_zero>
80009068:	f6 04 12 00 	clz	r4,r11
8000906c:	c1 70       	breq	8000909a <__avr32_f64_div_round_subnormal+0x96>
8000906e:	c0 c3       	brcs	80009086 <__avr32_f64_div_round_subnormal+0x82>
80009070:	e8 05 11 20 	rsub	r5,r4,32
80009074:	f6 04 09 4b 	lsl	r11,r11,r4
80009078:	f4 05 0a 45 	lsr	r5,r10,r5
8000907c:	0a 4b       	or	r11,r5
8000907e:	f4 04 09 4a 	lsl	r10,r10,r4
80009082:	08 17       	sub	r7,r4
80009084:	c0 b8       	rjmp	8000909a <__avr32_f64_div_round_subnormal+0x96>
80009086:	f4 04 12 00 	clz	r4,r10
8000908a:	f9 b4 03 00 	movlo	r4,0
8000908e:	f7 b4 02 e0 	subhs	r4,-32
80009092:	f4 04 09 4b 	lsl	r11,r10,r4
80009096:	30 0a       	mov	r10,0
80009098:	08 17       	sub	r7,r4
8000909a:	a3 8a       	lsr	r10,0x2
8000909c:	f5 eb 11 ea 	or	r10,r10,r11<<0x1e
800090a0:	a3 8b       	lsr	r11,0x2
800090a2:	c1 1b       	rjmp	80008ec4 <__avr32_f64_div+0x20>
800090a4:	a3 79       	lsl	r9,0x3
800090a6:	f3 e8 13 d9 	or	r9,r9,r8>>0x1d
800090aa:	a3 78       	lsl	r8,0x3
800090ac:	f3 e8 10 04 	or	r4,r9,r8
800090b0:	c6 f0       	breq	8000918e <__avr32_f64_div_res_subnormal+0xa0>
800090b2:	f2 04 12 00 	clz	r4,r9
800090b6:	c1 70       	breq	800090e4 <__avr32_f64_div_round_subnormal+0xe0>
800090b8:	c0 c3       	brcs	800090d0 <__avr32_f64_div_round_subnormal+0xcc>
800090ba:	e8 05 11 20 	rsub	r5,r4,32
800090be:	f2 04 09 49 	lsl	r9,r9,r4
800090c2:	f0 05 0a 45 	lsr	r5,r8,r5
800090c6:	0a 49       	or	r9,r5
800090c8:	f0 04 09 48 	lsl	r8,r8,r4
800090cc:	08 16       	sub	r6,r4
800090ce:	c0 b8       	rjmp	800090e4 <__avr32_f64_div_round_subnormal+0xe0>
800090d0:	f0 04 12 00 	clz	r4,r8
800090d4:	f9 b4 03 00 	movlo	r4,0
800090d8:	f7 b4 02 e0 	subhs	r4,-32
800090dc:	f0 04 09 49 	lsl	r9,r8,r4
800090e0:	30 08       	mov	r8,0
800090e2:	08 16       	sub	r6,r4
800090e4:	a3 88       	lsr	r8,0x2
800090e6:	f1 e9 11 e8 	or	r8,r8,r9<<0x1e
800090ea:	a3 89       	lsr	r9,0x2
800090ec:	cf ca       	rjmp	80008ee4 <__avr32_f64_div+0x40>

800090ee <__avr32_f64_div_res_subnormal>:
800090ee:	5c 37       	neg	r7
800090f0:	2f f7       	sub	r7,-1
800090f2:	f1 b7 04 c0 	satu	r7,0x6
800090f6:	e0 47 00 20 	cp.w	r7,32
800090fa:	c1 54       	brge	80009124 <__avr32_f64_div_res_subnormal+0x36>
800090fc:	ee 06 11 20 	rsub	r6,r7,32
80009100:	e4 07 0a 42 	lsr	r2,r2,r7
80009104:	e6 06 09 4c 	lsl	r12,r3,r6
80009108:	18 42       	or	r2,r12
8000910a:	e6 07 0a 43 	lsr	r3,r3,r7
8000910e:	f4 06 09 41 	lsl	r1,r10,r6
80009112:	f4 07 0a 4a 	lsr	r10,r10,r7
80009116:	f6 06 09 4c 	lsl	r12,r11,r6
8000911a:	18 4a       	or	r10,r12
8000911c:	f6 07 0a 4b 	lsr	r11,r11,r7
80009120:	30 00       	mov	r0,0
80009122:	c1 58       	rjmp	8000914c <__avr32_f64_div_res_subnormal+0x5e>
80009124:	ee 06 11 20 	rsub	r6,r7,32
80009128:	f9 b0 00 00 	moveq	r0,0
8000912c:	f9 bc 00 00 	moveq	r12,0
80009130:	c0 50       	breq	8000913a <__avr32_f64_div_res_subnormal+0x4c>
80009132:	f4 06 09 40 	lsl	r0,r10,r6
80009136:	f6 06 09 4c 	lsl	r12,r11,r6
8000913a:	e6 07 0a 42 	lsr	r2,r3,r7
8000913e:	30 03       	mov	r3,0
80009140:	f4 07 0a 41 	lsr	r1,r10,r7
80009144:	18 41       	or	r1,r12
80009146:	f6 07 0a 4a 	lsr	r10,r11,r7
8000914a:	30 0b       	mov	r11,0
8000914c:	e0 12 ff 00 	andl	r2,0xff00
80009150:	e8 12 00 80 	orl	r2,0x80
80009154:	e6 08 06 46 	mulu.d	r6,r3,r8
80009158:	e4 09 07 46 	macu.d	r6,r2,r9
8000915c:	e4 08 06 44 	mulu.d	r4,r2,r8
80009160:	e6 09 06 48 	mulu.d	r8,r3,r9
80009164:	0c 05       	add	r5,r6
80009166:	f0 07 00 48 	adc	r8,r8,r7
8000916a:	5c 09       	acr	r9
8000916c:	30 07       	mov	r7,0
8000916e:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80009172:	00 34       	cp.w	r4,r0
80009174:	e2 05 13 00 	cpc	r5,r1
80009178:	c4 6b       	rjmp	80009004 <__avr32_f64_div_round_subnormal>
8000917a:	1c 9b       	mov	r11,lr
8000917c:	e6 1b 80 00 	andh	r11,0x8000,COH
80009180:	30 0a       	mov	r10,0
80009182:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80009186:	3f fb       	mov	r11,-1
80009188:	30 0a       	mov	r10,0
8000918a:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
8000918e:	f5 eb 10 04 	or	r4,r10,r11
80009192:	c0 90       	breq	800091a4 <__avr32_f64_div_op1_zero>
80009194:	1c 9b       	mov	r11,lr
80009196:	e6 1b 80 00 	andh	r11,0x8000,COH
8000919a:	ea 1b 7f f0 	orh	r11,0x7ff0
8000919e:	30 0a       	mov	r10,0
800091a0:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc

800091a4 <__avr32_f64_div_op1_zero>:
800091a4:	f1 e9 10 15 	or	r5,r8,r9<<0x1
800091a8:	ce f0       	breq	80009186 <__avr32_f64_div_res_subnormal+0x98>
800091aa:	e9 d9 c2 8b 	bfextu	r4,r9,0x14,0xb
800091ae:	e0 44 07 ff 	cp.w	r4,2047
800091b2:	ce 41       	brne	8000917a <__avr32_f64_div_res_subnormal+0x8c>
800091b4:	f1 e9 10 c5 	or	r5,r8,r9<<0xc
800091b8:	ce 10       	breq	8000917a <__avr32_f64_div_res_subnormal+0x8c>
800091ba:	ce 6b       	rjmp	80009186 <__avr32_f64_div_res_subnormal+0x98>

800091bc <__avr32_udiv64>:
800091bc:	d4 31       	pushm	r0-r7,lr
800091be:	1a 97       	mov	r7,sp
800091c0:	20 3d       	sub	sp,12
800091c2:	10 9c       	mov	r12,r8
800091c4:	12 9e       	mov	lr,r9
800091c6:	14 93       	mov	r3,r10
800091c8:	58 09       	cp.w	r9,0
800091ca:	e0 81 00 bd 	brne	80009344 <__avr32_udiv64+0x188>
800091ce:	16 38       	cp.w	r8,r11
800091d0:	e0 88 00 40 	brls	80009250 <__avr32_udiv64+0x94>
800091d4:	f0 08 12 00 	clz	r8,r8
800091d8:	c0 d0       	breq	800091f2 <__avr32_udiv64+0x36>
800091da:	f6 08 09 4b 	lsl	r11,r11,r8
800091de:	f0 09 11 20 	rsub	r9,r8,32
800091e2:	f8 08 09 4c 	lsl	r12,r12,r8
800091e6:	f4 09 0a 49 	lsr	r9,r10,r9
800091ea:	f4 08 09 43 	lsl	r3,r10,r8
800091ee:	f3 eb 10 0b 	or	r11,r9,r11
800091f2:	f8 0e 16 10 	lsr	lr,r12,0x10
800091f6:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
800091fa:	f6 0e 0d 00 	divu	r0,r11,lr
800091fe:	e6 0b 16 10 	lsr	r11,r3,0x10
80009202:	00 99       	mov	r9,r0
80009204:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80009208:	e0 0a 02 48 	mul	r8,r0,r10
8000920c:	10 3b       	cp.w	r11,r8
8000920e:	c0 a2       	brcc	80009222 <__avr32_udiv64+0x66>
80009210:	20 19       	sub	r9,1
80009212:	18 0b       	add	r11,r12
80009214:	18 3b       	cp.w	r11,r12
80009216:	c0 63       	brcs	80009222 <__avr32_udiv64+0x66>
80009218:	10 3b       	cp.w	r11,r8
8000921a:	f7 b9 03 01 	sublo	r9,1
8000921e:	f7 dc e3 0b 	addcs	r11,r11,r12
80009222:	f6 08 01 01 	sub	r1,r11,r8
80009226:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
8000922a:	e2 0e 0d 00 	divu	r0,r1,lr
8000922e:	e7 e1 11 03 	or	r3,r3,r1<<0x10
80009232:	00 98       	mov	r8,r0
80009234:	e0 0a 02 4a 	mul	r10,r0,r10
80009238:	14 33       	cp.w	r3,r10
8000923a:	c0 82       	brcc	8000924a <__avr32_udiv64+0x8e>
8000923c:	20 18       	sub	r8,1
8000923e:	18 03       	add	r3,r12
80009240:	18 33       	cp.w	r3,r12
80009242:	c0 43       	brcs	8000924a <__avr32_udiv64+0x8e>
80009244:	14 33       	cp.w	r3,r10
80009246:	f7 b8 03 01 	sublo	r8,1
8000924a:	f1 e9 11 08 	or	r8,r8,r9<<0x10
8000924e:	cd f8       	rjmp	8000940c <__avr32_udiv64+0x250>
80009250:	58 08       	cp.w	r8,0
80009252:	c0 51       	brne	8000925c <__avr32_udiv64+0xa0>
80009254:	30 19       	mov	r9,1
80009256:	f2 08 0d 08 	divu	r8,r9,r8
8000925a:	10 9c       	mov	r12,r8
8000925c:	f8 06 12 00 	clz	r6,r12
80009260:	c0 41       	brne	80009268 <__avr32_udiv64+0xac>
80009262:	18 1b       	sub	r11,r12
80009264:	30 19       	mov	r9,1
80009266:	c4 08       	rjmp	800092e6 <__avr32_udiv64+0x12a>
80009268:	ec 01 11 20 	rsub	r1,r6,32
8000926c:	f4 01 0a 49 	lsr	r9,r10,r1
80009270:	f8 06 09 4c 	lsl	r12,r12,r6
80009274:	f6 06 09 48 	lsl	r8,r11,r6
80009278:	f6 01 0a 41 	lsr	r1,r11,r1
8000927c:	f3 e8 10 08 	or	r8,r9,r8
80009280:	f8 03 16 10 	lsr	r3,r12,0x10
80009284:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80009288:	e2 03 0d 00 	divu	r0,r1,r3
8000928c:	f0 0b 16 10 	lsr	r11,r8,0x10
80009290:	00 9e       	mov	lr,r0
80009292:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80009296:	e0 05 02 49 	mul	r9,r0,r5
8000929a:	12 3b       	cp.w	r11,r9
8000929c:	c0 a2       	brcc	800092b0 <__avr32_udiv64+0xf4>
8000929e:	20 1e       	sub	lr,1
800092a0:	18 0b       	add	r11,r12
800092a2:	18 3b       	cp.w	r11,r12
800092a4:	c0 63       	brcs	800092b0 <__avr32_udiv64+0xf4>
800092a6:	12 3b       	cp.w	r11,r9
800092a8:	f7 be 03 01 	sublo	lr,1
800092ac:	f7 dc e3 0b 	addcs	r11,r11,r12
800092b0:	12 1b       	sub	r11,r9
800092b2:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
800092b6:	f6 03 0d 02 	divu	r2,r11,r3
800092ba:	f1 e3 11 08 	or	r8,r8,r3<<0x10
800092be:	04 99       	mov	r9,r2
800092c0:	e4 05 02 4b 	mul	r11,r2,r5
800092c4:	16 38       	cp.w	r8,r11
800092c6:	c0 a2       	brcc	800092da <__avr32_udiv64+0x11e>
800092c8:	20 19       	sub	r9,1
800092ca:	18 08       	add	r8,r12
800092cc:	18 38       	cp.w	r8,r12
800092ce:	c0 63       	brcs	800092da <__avr32_udiv64+0x11e>
800092d0:	16 38       	cp.w	r8,r11
800092d2:	f7 b9 03 01 	sublo	r9,1
800092d6:	f1 dc e3 08 	addcs	r8,r8,r12
800092da:	f4 06 09 43 	lsl	r3,r10,r6
800092de:	f0 0b 01 0b 	sub	r11,r8,r11
800092e2:	f3 ee 11 09 	or	r9,r9,lr<<0x10
800092e6:	f8 06 16 10 	lsr	r6,r12,0x10
800092ea:	fd dc c0 10 	bfextu	lr,r12,0x0,0x10
800092ee:	f6 06 0d 00 	divu	r0,r11,r6
800092f2:	e6 0b 16 10 	lsr	r11,r3,0x10
800092f6:	00 9a       	mov	r10,r0
800092f8:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
800092fc:	e0 0e 02 48 	mul	r8,r0,lr
80009300:	10 3b       	cp.w	r11,r8
80009302:	c0 a2       	brcc	80009316 <__avr32_udiv64+0x15a>
80009304:	20 1a       	sub	r10,1
80009306:	18 0b       	add	r11,r12
80009308:	18 3b       	cp.w	r11,r12
8000930a:	c0 63       	brcs	80009316 <__avr32_udiv64+0x15a>
8000930c:	10 3b       	cp.w	r11,r8
8000930e:	f7 ba 03 01 	sublo	r10,1
80009312:	f7 dc e3 0b 	addcs	r11,r11,r12
80009316:	f6 08 01 01 	sub	r1,r11,r8
8000931a:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
8000931e:	e2 06 0d 00 	divu	r0,r1,r6
80009322:	e7 e1 11 03 	or	r3,r3,r1<<0x10
80009326:	00 98       	mov	r8,r0
80009328:	e0 0e 02 4b 	mul	r11,r0,lr
8000932c:	16 33       	cp.w	r3,r11
8000932e:	c0 82       	brcc	8000933e <__avr32_udiv64+0x182>
80009330:	20 18       	sub	r8,1
80009332:	18 03       	add	r3,r12
80009334:	18 33       	cp.w	r3,r12
80009336:	c0 43       	brcs	8000933e <__avr32_udiv64+0x182>
80009338:	16 33       	cp.w	r3,r11
8000933a:	f7 b8 03 01 	sublo	r8,1
8000933e:	f1 ea 11 08 	or	r8,r8,r10<<0x10
80009342:	c6 98       	rjmp	80009414 <__avr32_udiv64+0x258>
80009344:	16 39       	cp.w	r9,r11
80009346:	e0 8b 00 65 	brhi	80009410 <__avr32_udiv64+0x254>
8000934a:	f2 09 12 00 	clz	r9,r9
8000934e:	c0 b1       	brne	80009364 <__avr32_udiv64+0x1a8>
80009350:	10 3a       	cp.w	r10,r8
80009352:	5f 2a       	srhs	r10
80009354:	1c 3b       	cp.w	r11,lr
80009356:	5f b8       	srhi	r8
80009358:	10 4a       	or	r10,r8
8000935a:	f2 0a 18 00 	cp.b	r10,r9
8000935e:	c5 90       	breq	80009410 <__avr32_udiv64+0x254>
80009360:	30 18       	mov	r8,1
80009362:	c5 98       	rjmp	80009414 <__avr32_udiv64+0x258>
80009364:	f0 09 09 46 	lsl	r6,r8,r9
80009368:	f2 03 11 20 	rsub	r3,r9,32
8000936c:	fc 09 09 4e 	lsl	lr,lr,r9
80009370:	f0 03 0a 48 	lsr	r8,r8,r3
80009374:	f6 09 09 4c 	lsl	r12,r11,r9
80009378:	f4 03 0a 42 	lsr	r2,r10,r3
8000937c:	ef 46 ff f4 	st.w	r7[-12],r6
80009380:	f6 03 0a 43 	lsr	r3,r11,r3
80009384:	18 42       	or	r2,r12
80009386:	f1 ee 10 0c 	or	r12,r8,lr
8000938a:	f8 01 16 10 	lsr	r1,r12,0x10
8000938e:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
80009392:	e6 01 0d 04 	divu	r4,r3,r1
80009396:	e4 03 16 10 	lsr	r3,r2,0x10
8000939a:	08 9e       	mov	lr,r4
8000939c:	e7 e5 11 03 	or	r3,r3,r5<<0x10
800093a0:	e8 06 02 48 	mul	r8,r4,r6
800093a4:	10 33       	cp.w	r3,r8
800093a6:	c0 a2       	brcc	800093ba <__avr32_udiv64+0x1fe>
800093a8:	20 1e       	sub	lr,1
800093aa:	18 03       	add	r3,r12
800093ac:	18 33       	cp.w	r3,r12
800093ae:	c0 63       	brcs	800093ba <__avr32_udiv64+0x1fe>
800093b0:	10 33       	cp.w	r3,r8
800093b2:	f7 be 03 01 	sublo	lr,1
800093b6:	e7 dc e3 03 	addcs	r3,r3,r12
800093ba:	10 13       	sub	r3,r8
800093bc:	f7 d2 c0 10 	bfextu	r11,r2,0x0,0x10
800093c0:	e6 01 0d 00 	divu	r0,r3,r1
800093c4:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
800093c8:	00 98       	mov	r8,r0
800093ca:	e0 06 02 46 	mul	r6,r0,r6
800093ce:	0c 3b       	cp.w	r11,r6
800093d0:	c0 a2       	brcc	800093e4 <__avr32_udiv64+0x228>
800093d2:	20 18       	sub	r8,1
800093d4:	18 0b       	add	r11,r12
800093d6:	18 3b       	cp.w	r11,r12
800093d8:	c0 63       	brcs	800093e4 <__avr32_udiv64+0x228>
800093da:	0c 3b       	cp.w	r11,r6
800093dc:	f7 dc e3 0b 	addcs	r11,r11,r12
800093e0:	f7 b8 03 01 	sublo	r8,1
800093e4:	f1 ee 11 08 	or	r8,r8,lr<<0x10
800093e8:	ee f4 ff f4 	ld.w	r4,r7[-12]
800093ec:	0c 1b       	sub	r11,r6
800093ee:	f0 04 06 42 	mulu.d	r2,r8,r4
800093f2:	06 95       	mov	r5,r3
800093f4:	16 35       	cp.w	r5,r11
800093f6:	e0 8b 00 0a 	brhi	8000940a <__avr32_udiv64+0x24e>
800093fa:	5f 0b       	sreq	r11
800093fc:	f4 09 09 49 	lsl	r9,r10,r9
80009400:	12 32       	cp.w	r2,r9
80009402:	5f b9       	srhi	r9
80009404:	f7 e9 00 09 	and	r9,r11,r9
80009408:	c0 60       	breq	80009414 <__avr32_udiv64+0x258>
8000940a:	20 18       	sub	r8,1
8000940c:	30 09       	mov	r9,0
8000940e:	c0 38       	rjmp	80009414 <__avr32_udiv64+0x258>
80009410:	30 09       	mov	r9,0
80009412:	12 98       	mov	r8,r9
80009414:	10 9a       	mov	r10,r8
80009416:	12 93       	mov	r3,r9
80009418:	10 92       	mov	r2,r8
8000941a:	12 9b       	mov	r11,r9
8000941c:	2f dd       	sub	sp,-12
8000941e:	d8 32       	popm	r0-r7,pc

80009420 <__avr32_umod64>:
80009420:	d4 31       	pushm	r0-r7,lr
80009422:	1a 97       	mov	r7,sp
80009424:	20 3d       	sub	sp,12
80009426:	10 9c       	mov	r12,r8
80009428:	12 95       	mov	r5,r9
8000942a:	14 9e       	mov	lr,r10
8000942c:	16 91       	mov	r1,r11
8000942e:	16 96       	mov	r6,r11
80009430:	58 09       	cp.w	r9,0
80009432:	e0 81 00 81 	brne	80009534 <__avr32_umod64+0x114>
80009436:	16 38       	cp.w	r8,r11
80009438:	e0 88 00 12 	brls	8000945c <__avr32_umod64+0x3c>
8000943c:	f0 08 12 00 	clz	r8,r8
80009440:	c4 e0       	breq	800094dc <__avr32_umod64+0xbc>
80009442:	f6 08 09 46 	lsl	r6,r11,r8
80009446:	f8 08 09 4c 	lsl	r12,r12,r8
8000944a:	f0 0b 11 20 	rsub	r11,r8,32
8000944e:	f4 08 09 4e 	lsl	lr,r10,r8
80009452:	f4 0b 0a 4b 	lsr	r11,r10,r11
80009456:	f7 e6 10 06 	or	r6,r11,r6
8000945a:	c4 18       	rjmp	800094dc <__avr32_umod64+0xbc>
8000945c:	58 08       	cp.w	r8,0
8000945e:	c0 51       	brne	80009468 <__avr32_umod64+0x48>
80009460:	30 19       	mov	r9,1
80009462:	f2 08 0d 08 	divu	r8,r9,r8
80009466:	10 9c       	mov	r12,r8
80009468:	f8 08 12 00 	clz	r8,r12
8000946c:	c0 31       	brne	80009472 <__avr32_umod64+0x52>
8000946e:	18 16       	sub	r6,r12
80009470:	c3 68       	rjmp	800094dc <__avr32_umod64+0xbc>
80009472:	f0 03 11 20 	rsub	r3,r8,32
80009476:	f4 03 0a 4b 	lsr	r11,r10,r3
8000947a:	f8 08 09 4c 	lsl	r12,r12,r8
8000947e:	ec 08 09 49 	lsl	r9,r6,r8
80009482:	ec 03 0a 43 	lsr	r3,r6,r3
80009486:	f7 e9 10 09 	or	r9,r11,r9
8000948a:	f8 05 16 10 	lsr	r5,r12,0x10
8000948e:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
80009492:	e6 05 0d 02 	divu	r2,r3,r5
80009496:	f2 0e 16 10 	lsr	lr,r9,0x10
8000949a:	ec 02 02 4b 	mul	r11,r6,r2
8000949e:	fd e3 11 0e 	or	lr,lr,r3<<0x10
800094a2:	16 3e       	cp.w	lr,r11
800094a4:	c0 72       	brcc	800094b2 <__avr32_umod64+0x92>
800094a6:	18 0e       	add	lr,r12
800094a8:	18 3e       	cp.w	lr,r12
800094aa:	c0 43       	brcs	800094b2 <__avr32_umod64+0x92>
800094ac:	16 3e       	cp.w	lr,r11
800094ae:	fd dc e3 0e 	addcs	lr,lr,r12
800094b2:	fc 0b 01 03 	sub	r3,lr,r11
800094b6:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
800094ba:	e6 05 0d 02 	divu	r2,r3,r5
800094be:	f3 e3 11 09 	or	r9,r9,r3<<0x10
800094c2:	a5 36       	mul	r6,r2
800094c4:	0c 39       	cp.w	r9,r6
800094c6:	c0 72       	brcc	800094d4 <__avr32_umod64+0xb4>
800094c8:	18 09       	add	r9,r12
800094ca:	18 39       	cp.w	r9,r12
800094cc:	c0 43       	brcs	800094d4 <__avr32_umod64+0xb4>
800094ce:	0c 39       	cp.w	r9,r6
800094d0:	f3 dc e3 09 	addcs	r9,r9,r12
800094d4:	f2 06 01 06 	sub	r6,r9,r6
800094d8:	f4 08 09 4e 	lsl	lr,r10,r8
800094dc:	f8 0a 16 10 	lsr	r10,r12,0x10
800094e0:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
800094e4:	ec 0a 0d 02 	divu	r2,r6,r10
800094e8:	fc 09 16 10 	lsr	r9,lr,0x10
800094ec:	ea 02 02 4b 	mul	r11,r5,r2
800094f0:	f3 e3 11 09 	or	r9,r9,r3<<0x10
800094f4:	16 39       	cp.w	r9,r11
800094f6:	c0 72       	brcc	80009504 <__avr32_umod64+0xe4>
800094f8:	18 09       	add	r9,r12
800094fa:	18 39       	cp.w	r9,r12
800094fc:	c0 43       	brcs	80009504 <__avr32_umod64+0xe4>
800094fe:	16 39       	cp.w	r9,r11
80009500:	f3 dc e3 09 	addcs	r9,r9,r12
80009504:	f2 0b 01 0b 	sub	r11,r9,r11
80009508:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
8000950c:	f6 0a 0d 0a 	divu	r10,r11,r10
80009510:	fd eb 11 0e 	or	lr,lr,r11<<0x10
80009514:	ea 0a 02 4a 	mul	r10,r5,r10
80009518:	14 3e       	cp.w	lr,r10
8000951a:	c0 72       	brcc	80009528 <__avr32_umod64+0x108>
8000951c:	18 0e       	add	lr,r12
8000951e:	18 3e       	cp.w	lr,r12
80009520:	c0 43       	brcs	80009528 <__avr32_umod64+0x108>
80009522:	14 3e       	cp.w	lr,r10
80009524:	fd dc e3 0e 	addcs	lr,lr,r12
80009528:	fc 0a 01 0a 	sub	r10,lr,r10
8000952c:	30 0b       	mov	r11,0
8000952e:	f4 08 0a 4a 	lsr	r10,r10,r8
80009532:	c7 b8       	rjmp	80009628 <__avr32_umod64+0x208>
80009534:	16 39       	cp.w	r9,r11
80009536:	e0 8b 00 79 	brhi	80009628 <__avr32_umod64+0x208>
8000953a:	f2 09 12 00 	clz	r9,r9
8000953e:	c1 21       	brne	80009562 <__avr32_umod64+0x142>
80009540:	10 3a       	cp.w	r10,r8
80009542:	5f 2b       	srhs	r11
80009544:	0a 31       	cp.w	r1,r5
80009546:	5f ba       	srhi	r10
80009548:	f7 ea 10 0a 	or	r10,r11,r10
8000954c:	f2 0a 18 00 	cp.b	r10,r9
80009550:	c0 60       	breq	8000955c <__avr32_umod64+0x13c>
80009552:	fc 08 01 0c 	sub	r12,lr,r8
80009556:	e2 05 01 46 	sbc	r6,r1,r5
8000955a:	18 9e       	mov	lr,r12
8000955c:	0c 9b       	mov	r11,r6
8000955e:	1c 9a       	mov	r10,lr
80009560:	c6 48       	rjmp	80009628 <__avr32_umod64+0x208>
80009562:	ea 09 09 4c 	lsl	r12,r5,r9
80009566:	f2 06 11 20 	rsub	r6,r9,32
8000956a:	f6 09 09 4b 	lsl	r11,r11,r9
8000956e:	f0 09 09 42 	lsl	r2,r8,r9
80009572:	ef 46 ff f4 	st.w	r7[-12],r6
80009576:	f0 06 0a 48 	lsr	r8,r8,r6
8000957a:	18 48       	or	r8,r12
8000957c:	e2 06 0a 4c 	lsr	r12,r1,r6
80009580:	f4 09 09 43 	lsl	r3,r10,r9
80009584:	fd d8 c0 10 	bfextu	lr,r8,0x0,0x10
80009588:	f4 06 0a 4a 	lsr	r10,r10,r6
8000958c:	16 4a       	or	r10,r11
8000958e:	f0 0b 16 10 	lsr	r11,r8,0x10
80009592:	f8 0b 0d 04 	divu	r4,r12,r11
80009596:	f4 0c 16 10 	lsr	r12,r10,0x10
8000959a:	08 91       	mov	r1,r4
8000959c:	f9 e5 11 0c 	or	r12,r12,r5<<0x10
800095a0:	e8 0e 02 46 	mul	r6,r4,lr
800095a4:	0c 3c       	cp.w	r12,r6
800095a6:	c0 a2       	brcc	800095ba <__avr32_umod64+0x19a>
800095a8:	20 11       	sub	r1,1
800095aa:	10 0c       	add	r12,r8
800095ac:	10 3c       	cp.w	r12,r8
800095ae:	c0 63       	brcs	800095ba <__avr32_umod64+0x19a>
800095b0:	0c 3c       	cp.w	r12,r6
800095b2:	f7 b1 03 01 	sublo	r1,1
800095b6:	f9 d8 e3 0c 	addcs	r12,r12,r8
800095ba:	0c 1c       	sub	r12,r6
800095bc:	f5 da c0 10 	bfextu	r10,r10,0x0,0x10
800095c0:	f8 0b 0d 04 	divu	r4,r12,r11
800095c4:	f5 e5 11 0b 	or	r11,r10,r5<<0x10
800095c8:	08 96       	mov	r6,r4
800095ca:	e8 0e 02 4e 	mul	lr,r4,lr
800095ce:	1c 3b       	cp.w	r11,lr
800095d0:	c0 a2       	brcc	800095e4 <__avr32_umod64+0x1c4>
800095d2:	20 16       	sub	r6,1
800095d4:	10 0b       	add	r11,r8
800095d6:	10 3b       	cp.w	r11,r8
800095d8:	c0 63       	brcs	800095e4 <__avr32_umod64+0x1c4>
800095da:	1c 3b       	cp.w	r11,lr
800095dc:	f7 b6 03 01 	sublo	r6,1
800095e0:	f7 d8 e3 0b 	addcs	r11,r11,r8
800095e4:	ed e1 11 01 	or	r1,r6,r1<<0x10
800095e8:	1c 1b       	sub	r11,lr
800095ea:	e2 02 06 40 	mulu.d	r0,r1,r2
800095ee:	00 9e       	mov	lr,r0
800095f0:	02 9c       	mov	r12,r1
800095f2:	16 3c       	cp.w	r12,r11
800095f4:	e0 8b 00 08 	brhi	80009604 <__avr32_umod64+0x1e4>
800095f8:	5f 06       	sreq	r6
800095fa:	06 30       	cp.w	r0,r3
800095fc:	5f ba       	srhi	r10
800095fe:	ed ea 00 0a 	and	r10,r6,r10
80009602:	c0 60       	breq	8000960e <__avr32_umod64+0x1ee>
80009604:	fc 02 01 04 	sub	r4,lr,r2
80009608:	f8 08 01 4c 	sbc	r12,r12,r8
8000960c:	08 9e       	mov	lr,r4
8000960e:	e6 0e 01 0a 	sub	r10,r3,lr
80009612:	f6 0c 01 4c 	sbc	r12,r11,r12
80009616:	ee f1 ff f4 	ld.w	r1,r7[-12]
8000961a:	f8 09 0a 4b 	lsr	r11,r12,r9
8000961e:	f4 09 0a 4a 	lsr	r10,r10,r9
80009622:	f8 01 09 4c 	lsl	r12,r12,r1
80009626:	18 4a       	or	r10,r12
80009628:	2f dd       	sub	sp,-12
8000962a:	d8 32       	popm	r0-r7,pc

Disassembly of section .exception:

80009800 <_evba>:
80009800:	c0 08       	rjmp	80009800 <_evba>
	...

80009804 <_handle_TLB_Multiple_Hit>:
80009804:	c0 08       	rjmp	80009804 <_handle_TLB_Multiple_Hit>
	...

80009808 <_handle_Bus_Error_Data_Fetch>:
80009808:	c0 08       	rjmp	80009808 <_handle_Bus_Error_Data_Fetch>
	...

8000980c <_handle_Bus_Error_Instruction_Fetch>:
8000980c:	c0 08       	rjmp	8000980c <_handle_Bus_Error_Instruction_Fetch>
	...

80009810 <_handle_NMI>:
80009810:	c0 08       	rjmp	80009810 <_handle_NMI>
	...

80009814 <_handle_Instruction_Address>:
80009814:	c0 08       	rjmp	80009814 <_handle_Instruction_Address>
	...

80009818 <_handle_ITLB_Protection>:
80009818:	c0 08       	rjmp	80009818 <_handle_ITLB_Protection>
	...

8000981c <_handle_Breakpoint>:
8000981c:	c0 08       	rjmp	8000981c <_handle_Breakpoint>
	...

80009820 <_handle_Illegal_Opcode>:
80009820:	c0 08       	rjmp	80009820 <_handle_Illegal_Opcode>
	...

80009824 <_handle_Unimplemented_Instruction>:
80009824:	c0 08       	rjmp	80009824 <_handle_Unimplemented_Instruction>
	...

80009828 <_handle_Privilege_Violation>:
80009828:	c0 08       	rjmp	80009828 <_handle_Privilege_Violation>
	...

8000982c <_handle_Floating_Point>:
8000982c:	c0 08       	rjmp	8000982c <_handle_Floating_Point>
	...

80009830 <_handle_Coprocessor_Absent>:
80009830:	c0 08       	rjmp	80009830 <_handle_Coprocessor_Absent>
	...

80009834 <_handle_Data_Address_Read>:
80009834:	c0 08       	rjmp	80009834 <_handle_Data_Address_Read>
	...

80009838 <_handle_Data_Address_Write>:
80009838:	c0 08       	rjmp	80009838 <_handle_Data_Address_Write>
	...

8000983c <_handle_DTLB_Protection_Read>:
8000983c:	c0 08       	rjmp	8000983c <_handle_DTLB_Protection_Read>
	...

80009840 <_handle_DTLB_Protection_Write>:
80009840:	c0 08       	rjmp	80009840 <_handle_DTLB_Protection_Write>
	...

80009844 <_handle_DTLB_Modified>:
80009844:	c0 08       	rjmp	80009844 <_handle_DTLB_Modified>
	...

80009850 <_handle_ITLB_Miss>:
80009850:	c0 08       	rjmp	80009850 <_handle_ITLB_Miss>
	...

80009860 <_handle_DTLB_Miss_Read>:
80009860:	c0 08       	rjmp	80009860 <_handle_DTLB_Miss_Read>
	...

80009870 <_handle_DTLB_Miss_Write>:
80009870:	c0 08       	rjmp	80009870 <_handle_DTLB_Miss_Write>
	...

80009900 <_handle_Supervisor_Call>:
80009900:	c0 08       	rjmp	80009900 <_handle_Supervisor_Call>
80009902:	d7 03       	nop

80009904 <_int0>:
80009904:	30 0c       	mov	r12,0
80009906:	fe b0 d0 1f 	rcall	80003944 <_get_interrupt_handler>
8000990a:	58 0c       	cp.w	r12,0
8000990c:	f8 0f 17 10 	movne	pc,r12
80009910:	d6 03       	rete

80009912 <_int1>:
80009912:	30 1c       	mov	r12,1
80009914:	fe b0 d0 18 	rcall	80003944 <_get_interrupt_handler>
80009918:	58 0c       	cp.w	r12,0
8000991a:	f8 0f 17 10 	movne	pc,r12
8000991e:	d6 03       	rete

80009920 <_int2>:
80009920:	30 2c       	mov	r12,2
80009922:	fe b0 d0 11 	rcall	80003944 <_get_interrupt_handler>
80009926:	58 0c       	cp.w	r12,0
80009928:	f8 0f 17 10 	movne	pc,r12
8000992c:	d6 03       	rete

8000992e <_int3>:
8000992e:	30 3c       	mov	r12,3
80009930:	fe b0 d0 0a 	rcall	80003944 <_get_interrupt_handler>
80009934:	58 0c       	cp.w	r12,0
80009936:	f8 0f 17 10 	movne	pc,r12
8000993a:	d6 03       	rete
8000993c:	d7 03       	nop
8000993e:	d7 03       	nop
80009940:	d7 03       	nop
80009942:	d7 03       	nop
80009944:	d7 03       	nop
80009946:	d7 03       	nop
80009948:	d7 03       	nop
8000994a:	d7 03       	nop
8000994c:	d7 03       	nop
8000994e:	d7 03       	nop
80009950:	d7 03       	nop
80009952:	d7 03       	nop
80009954:	d7 03       	nop
80009956:	d7 03       	nop
80009958:	d7 03       	nop
8000995a:	d7 03       	nop
8000995c:	d7 03       	nop
8000995e:	d7 03       	nop
80009960:	d7 03       	nop
80009962:	d7 03       	nop
80009964:	d7 03       	nop
80009966:	d7 03       	nop
80009968:	d7 03       	nop
8000996a:	d7 03       	nop
8000996c:	d7 03       	nop
8000996e:	d7 03       	nop
80009970:	d7 03       	nop
80009972:	d7 03       	nop
80009974:	d7 03       	nop
80009976:	d7 03       	nop
80009978:	d7 03       	nop
8000997a:	d7 03       	nop
8000997c:	d7 03       	nop
8000997e:	d7 03       	nop
80009980:	d7 03       	nop
80009982:	d7 03       	nop
80009984:	d7 03       	nop
80009986:	d7 03       	nop
80009988:	d7 03       	nop
8000998a:	d7 03       	nop
8000998c:	d7 03       	nop
8000998e:	d7 03       	nop
80009990:	d7 03       	nop
80009992:	d7 03       	nop
80009994:	d7 03       	nop
80009996:	d7 03       	nop
80009998:	d7 03       	nop
8000999a:	d7 03       	nop
8000999c:	d7 03       	nop
8000999e:	d7 03       	nop
800099a0:	d7 03       	nop
800099a2:	d7 03       	nop
800099a4:	d7 03       	nop
800099a6:	d7 03       	nop
800099a8:	d7 03       	nop
800099aa:	d7 03       	nop
800099ac:	d7 03       	nop
800099ae:	d7 03       	nop
800099b0:	d7 03       	nop
800099b2:	d7 03       	nop
800099b4:	d7 03       	nop
800099b6:	d7 03       	nop
800099b8:	d7 03       	nop
800099ba:	d7 03       	nop
800099bc:	d7 03       	nop
800099be:	d7 03       	nop
800099c0:	d7 03       	nop
800099c2:	d7 03       	nop
800099c4:	d7 03       	nop
800099c6:	d7 03       	nop
800099c8:	d7 03       	nop
800099ca:	d7 03       	nop
800099cc:	d7 03       	nop
800099ce:	d7 03       	nop
800099d0:	d7 03       	nop
800099d2:	d7 03       	nop
800099d4:	d7 03       	nop
800099d6:	d7 03       	nop
800099d8:	d7 03       	nop
800099da:	d7 03       	nop
800099dc:	d7 03       	nop
800099de:	d7 03       	nop
800099e0:	d7 03       	nop
800099e2:	d7 03       	nop
800099e4:	d7 03       	nop
800099e6:	d7 03       	nop
800099e8:	d7 03       	nop
800099ea:	d7 03       	nop
800099ec:	d7 03       	nop
800099ee:	d7 03       	nop
800099f0:	d7 03       	nop
800099f2:	d7 03       	nop
800099f4:	d7 03       	nop
800099f6:	d7 03       	nop
800099f8:	d7 03       	nop
800099fa:	d7 03       	nop
800099fc:	d7 03       	nop
800099fe:	d7 03       	nop

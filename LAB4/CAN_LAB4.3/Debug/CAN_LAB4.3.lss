
CAN_LAB4.3.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00002008  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00006f28  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .exception    00000200  80009000  80009000  00009400  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       00000758  80009200  80009200  00009600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dalign       00000004  00000004  00000004  00000000  2**0
                  ALLOC
  6 .data         00000510  00000008  80009958  0000a008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00000168  00000518  00000518  00000000  2**2
                  ALLOC
  8 .heap         0000e980  00000680  00000680  00000000  2**0
                  ALLOC
  9 .comment      00000030  00000000  00000000  0000a518  2**0
                  CONTENTS, READONLY
 10 .debug_aranges 00000d80  00000000  00000000  0000a548  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubnames 0000187b  00000000  00000000  0000b2c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_info   0001f7d4  00000000  00000000  0000cb43  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000052c4  00000000  00000000  0002c317  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000dde9  00000000  00000000  000315db  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001fd0  00000000  00000000  0003f3c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00004161  00000000  00000000  00041394  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    00009ea6  00000000  00000000  000454f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_macinfo 00936d18  00000000  00000000  0004f39b  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .stack        00001000  0000f000  0000f000  00000000  2**0
                  ALLOC
 20 .debug_ranges 00000f50  00000000  00000000  009860b8  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_start>:
80000000:	fe cf c9 ec 	sub	pc,pc,-13844

80000004 <_trampoline>:
80000004:	e0 8f 10 00 	bral	80002004 <program_start>
	...

80002004 <program_start>:
80002004:	fe cf e9 f0 	sub	pc,pc,-5648

Disassembly of section .text:

80002008 <adc_start>:
80002008:	30 28       	mov	r8,2
8000200a:	99 08       	st.w	r12[0x0],r8
{
	Assert( adc != NULL );

	/* start conversion */
	adc->cr = AVR32_ADC_START_MASK;
}
8000200c:	5e fc       	retal	r12

8000200e <adc_enable>:
	Assert( adc != NULL );
	Assert( channel <= AVR32_ADC_CHANNELS_MSB ); /* check if channel exist
	                                              **/

	/* enable channel */
	adc->cher = (1 << channel);
8000200e:	30 18       	mov	r8,1
80002010:	f0 0b 09 48 	lsl	r8,r8,r11
80002014:	99 48       	st.w	r12[0x10],r8
}
80002016:	5e fc       	retal	r12

80002018 <adc_check_eoc>:
	Assert( adc != NULL );
	Assert( channel <= AVR32_ADC_CHANNELS_MSB ); /* check if channel exist
	                                              **/

	/* get SR register : EOC bit for channel */
	return ((adc->sr & (1 << channel)) ? true : false);
80002018:	78 78       	ld.w	r8,r12[0x1c]
8000201a:	30 19       	mov	r9,1
8000201c:	f2 0b 09 49 	lsl	r9,r9,r11
80002020:	f3 e8 00 08 	and	r8,r9,r8
}
80002024:	5f 1c       	srne	r12
80002026:	5e fc       	retal	r12

80002028 <adc_get_value>:
 * \param *adc Base address of the ADC
 * \param  channel   channel to handle (0 to 7)
 * \return The value acquired (unsigned long)
 */
uint32_t adc_get_value(volatile avr32_adc_t *adc, uint16_t channel)
{
80002028:	eb cd 40 e0 	pushm	r5-r7,lr
8000202c:	18 97       	mov	r7,r12
8000202e:	16 95       	mov	r5,r11
	Assert( adc != NULL );
	Assert( channel <= AVR32_ADC_CHANNELS_MSB );

	/* wait for end of conversion */
	while (adc_check_eoc(adc, channel) != true) {
80002030:	ed db c0 10 	bfextu	r6,r11,0x0,0x10
80002034:	0c 9b       	mov	r11,r6
80002036:	0e 9c       	mov	r12,r7
80002038:	f0 1f 00 05 	mcall	8000204c <adc_get_value+0x24>
8000203c:	cf c0       	breq	80002034 <adc_get_value+0xc>
	}

	return *((uint32_t *)((&(adc->cdr0)) + channel));
8000203e:	2d 07       	sub	r7,-48
80002040:	5c 75       	castu.h	r5
}
80002042:	ee 05 03 2c 	ld.w	r12,r7[r5<<0x2]
80002046:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000204a:	00 00       	add	r0,r0
8000204c:	80 00       	ld.sh	r0,r0[0x0]
8000204e:	20 18       	sub	r8,1

80002050 <ClearMessages>:
80002050:	30 08       	mov	r8,0
80002052:	b8 88       	st.b	r12[0x0],r8
80002054:	b8 98       	st.b	r12[0x1],r8
80002056:	b8 a8       	st.b	r12[0x2],r8
80002058:	b8 b8       	st.b	r12[0x3],r8
8000205a:	b8 c8       	st.b	r12[0x4],r8
8000205c:	b8 d8       	st.b	r12[0x5],r8
8000205e:	b8 e8       	st.b	r12[0x6],r8
80002060:	b8 f8       	st.b	r12[0x7],r8
80002062:	5e fc       	retal	r12

80002064 <config_dpi204>:
80002064:	eb cd 40 80 	pushm	r7,lr
80002068:	20 4d       	sub	sp,16
8000206a:	49 68       	lddpc	r8,800020c0 <config_dpi204+0x5c>
8000206c:	1a 97       	mov	r7,sp
8000206e:	f0 ea 00 00 	ld.d	r10,r8[0]
80002072:	fa eb 00 00 	st.d	sp[0],r10
80002076:	f0 e8 00 08 	ld.d	r8,r8[8]
8000207a:	fa e9 00 08 	st.d	sp[8],r8
8000207e:	30 4b       	mov	r11,4
80002080:	49 1c       	lddpc	r12,800020c4 <config_dpi204+0x60>
80002082:	f0 1f 00 12 	mcall	800020c8 <config_dpi204+0x64>
80002086:	1a 9b       	mov	r11,sp
80002088:	fe 7c 28 00 	mov	r12,-55296
8000208c:	f0 1f 00 10 	mcall	800020cc <config_dpi204+0x68>
80002090:	30 09       	mov	r9,0
80002092:	12 9a       	mov	r10,r9
80002094:	12 9b       	mov	r11,r9
80002096:	fe 7c 28 00 	mov	r12,-55296
8000209a:	f0 1f 00 0e 	mcall	800020d0 <config_dpi204+0x6c>
8000209e:	fe 7c 28 00 	mov	r12,-55296
800020a2:	f0 1f 00 0d 	mcall	800020d4 <config_dpi204+0x70>
800020a6:	e0 6a 1b 00 	mov	r10,6912
800020aa:	ea 1a 00 b7 	orh	r10,0xb7
800020ae:	1a 9b       	mov	r11,sp
800020b0:	fe 7c 28 00 	mov	r12,-55296
800020b4:	f0 1f 00 09 	mcall	800020d8 <config_dpi204+0x74>
800020b8:	2f cd       	sub	sp,-16
800020ba:	e3 cd 80 80 	ldm	sp++,r7,pc
800020be:	00 00       	add	r0,r0
800020c0:	80 00       	ld.sh	r0,r0[0x0]
800020c2:	92 30       	ld.sh	r0,r9[0x6]
800020c4:	80 00       	ld.sh	r0,r0[0x0]
800020c6:	92 40       	ld.sh	r0,r9[0x8]
800020c8:	80 00       	ld.sh	r0,r0[0x0]
800020ca:	31 dc       	mov	r12,29
800020cc:	80 00       	ld.sh	r0,r0[0x0]
800020ce:	34 3a       	mov	r10,67
800020d0:	80 00       	ld.sh	r0,r0[0x0]
800020d2:	34 72       	mov	r2,71
800020d4:	80 00       	ld.sh	r0,r0[0x0]
800020d6:	35 c8       	mov	r8,92
800020d8:	80 00       	ld.sh	r0,r0[0x0]
800020da:	35 10       	mov	r0,81

800020dc <mASSERT_CS>:
800020dc:	d4 01       	pushm	lr
800020de:	18 9b       	mov	r11,r12
800020e0:	fe 7c 24 00 	mov	r12,-56320
800020e4:	f0 1f 00 02 	mcall	800020ec <mASSERT_CS+0x10>
800020e8:	d8 02       	popm	pc
800020ea:	00 00       	add	r0,r0
800020ec:	80 00       	ld.sh	r0,r0[0x0]
800020ee:	34 9e       	mov	lr,73

800020f0 <config_SPI_SPARE>:
800020f0:	eb cd 40 80 	pushm	r7,lr
800020f4:	20 4d       	sub	sp,16
800020f6:	49 88       	lddpc	r8,80002154 <config_SPI_SPARE+0x64>
800020f8:	1a 97       	mov	r7,sp
800020fa:	f0 ea 00 00 	ld.d	r10,r8[0]
800020fe:	fa eb 00 00 	st.d	sp[0],r10
80002102:	f0 e8 00 08 	ld.d	r8,r8[8]
80002106:	fa e9 00 08 	st.d	sp[8],r8
8000210a:	30 4b       	mov	r11,4
8000210c:	49 3c       	lddpc	r12,80002158 <config_SPI_SPARE+0x68>
8000210e:	f0 1f 00 14 	mcall	8000215c <config_SPI_SPARE+0x6c>
80002112:	1a 9b       	mov	r11,sp
80002114:	fe 7c 24 00 	mov	r12,-56320
80002118:	f0 1f 00 12 	mcall	80002160 <config_SPI_SPARE+0x70>
8000211c:	30 09       	mov	r9,0
8000211e:	12 9a       	mov	r10,r9
80002120:	12 9b       	mov	r11,r9
80002122:	fe 7c 24 00 	mov	r12,-56320
80002126:	f0 1f 00 10 	mcall	80002164 <config_SPI_SPARE+0x74>
8000212a:	30 0b       	mov	r11,0
8000212c:	fe 7c 24 00 	mov	r12,-56320
80002130:	f0 1f 00 0e 	mcall	80002168 <config_SPI_SPARE+0x78>
80002134:	e0 6a 1b 00 	mov	r10,6912
80002138:	ea 1a 00 b7 	orh	r10,0xb7
8000213c:	1a 9b       	mov	r11,sp
8000213e:	fe 7c 24 00 	mov	r12,-56320
80002142:	f0 1f 00 0b 	mcall	8000216c <config_SPI_SPARE+0x7c>
80002146:	fe 7c 24 00 	mov	r12,-56320
8000214a:	f0 1f 00 0a 	mcall	80002170 <config_SPI_SPARE+0x80>
8000214e:	2f cd       	sub	sp,-16
80002150:	e3 cd 80 80 	ldm	sp++,r7,pc
80002154:	80 00       	ld.sh	r0,r0[0x0]
80002156:	92 20       	ld.sh	r0,r9[0x4]
80002158:	80 00       	ld.sh	r0,r0[0x0]
8000215a:	92 00       	ld.sh	r0,r9[0x0]
8000215c:	80 00       	ld.sh	r0,r0[0x0]
8000215e:	31 dc       	mov	r12,29
80002160:	80 00       	ld.sh	r0,r0[0x0]
80002162:	34 3a       	mov	r10,67
80002164:	80 00       	ld.sh	r0,r0[0x0]
80002166:	34 72       	mov	r2,71
80002168:	80 00       	ld.sh	r0,r0[0x0]
8000216a:	34 9e       	mov	lr,73
8000216c:	80 00       	ld.sh	r0,r0[0x0]
8000216e:	35 10       	mov	r0,81
80002170:	80 00       	ld.sh	r0,r0[0x0]
80002172:	35 c8       	mov	r8,92

80002174 <XferSPI_send>:
80002174:	d4 01       	pushm	lr
80002176:	fe 7c 24 00 	mov	r12,-56320
8000217a:	f0 1f 00 02 	mcall	80002180 <XferSPI_send+0xc>
8000217e:	d8 0a       	popm	pc,r12=0
80002180:	80 00       	ld.sh	r0,r0[0x0]
80002182:	35 ce       	mov	lr,92

80002184 <ReadStatus2515>:
80002184:	d4 01       	pushm	lr
80002186:	20 1d       	sub	sp,4
80002188:	30 0b       	mov	r11,0
8000218a:	fe 7c 24 00 	mov	r12,-56320
8000218e:	f0 1f 00 0e 	mcall	800021c4 <ReadStatus2515+0x40>
80002192:	e0 6b 00 a0 	mov	r11,160
80002196:	fe 7c 24 00 	mov	r12,-56320
8000219a:	f0 1f 00 0c 	mcall	800021c8 <ReadStatus2515+0x44>
8000219e:	30 0b       	mov	r11,0
800021a0:	fe 7c 24 00 	mov	r12,-56320
800021a4:	f0 1f 00 09 	mcall	800021c8 <ReadStatus2515+0x44>
800021a8:	fa cb ff fe 	sub	r11,sp,-2
800021ac:	fe 7c 24 00 	mov	r12,-56320
800021b0:	f0 1f 00 07 	mcall	800021cc <ReadStatus2515+0x48>
800021b4:	30 0b       	mov	r11,0
800021b6:	fe 7c 24 00 	mov	r12,-56320
800021ba:	f0 1f 00 06 	mcall	800021d0 <ReadStatus2515+0x4c>
800021be:	1b bc       	ld.ub	r12,sp[0x3]
800021c0:	2f fd       	sub	sp,-4
800021c2:	d8 02       	popm	pc
800021c4:	80 00       	ld.sh	r0,r0[0x0]
800021c6:	34 9e       	mov	lr,73
800021c8:	80 00       	ld.sh	r0,r0[0x0]
800021ca:	35 ce       	mov	lr,92
800021cc:	80 00       	ld.sh	r0,r0[0x0]
800021ce:	35 f2       	mov	r2,95
800021d0:	80 00       	ld.sh	r0,r0[0x0]
800021d2:	34 ea       	mov	r10,78

800021d4 <CANRxReady>:
800021d4:	d4 01       	pushm	lr
800021d6:	f0 1f 00 04 	mcall	800021e4 <CANRxReady+0x10>
800021da:	f9 dc c0 02 	bfextu	r12,r12,0x0,0x2
800021de:	5f 1c       	srne	r12
800021e0:	d8 02       	popm	pc
800021e2:	00 00       	add	r0,r0
800021e4:	80 00       	ld.sh	r0,r0[0x0]
800021e6:	21 84       	sub	r4,24

800021e8 <CANTxReady>:
800021e8:	d4 01       	pushm	lr
800021ea:	f0 1f 00 04 	mcall	800021f8 <CANTxReady+0x10>
800021ee:	ec 1c 00 04 	eorl	r12,0x4
800021f2:	f9 dc c0 41 	bfextu	r12,r12,0x2,0x1
800021f6:	d8 02       	popm	pc
800021f8:	80 00       	ld.sh	r0,r0[0x0]
800021fa:	21 84       	sub	r4,24

800021fc <mDEASSERT_CS>:
800021fc:	d4 01       	pushm	lr
800021fe:	18 9b       	mov	r11,r12
80002200:	fe 7c 24 00 	mov	r12,-56320
80002204:	f0 1f 00 02 	mcall	8000220c <mDEASSERT_CS+0x10>
80002208:	d8 02       	popm	pc
8000220a:	00 00       	add	r0,r0
8000220c:	80 00       	ld.sh	r0,r0[0x0]
8000220e:	34 ea       	mov	r10,78

80002210 <CAN2515ByteWrite>:
80002210:	d4 21       	pushm	r4-r7,lr
80002212:	18 97       	mov	r7,r12
80002214:	16 95       	mov	r5,r11
80002216:	14 94       	mov	r4,r10
80002218:	18 96       	mov	r6,r12
8000221a:	5c 56       	castu.b	r6
8000221c:	0c 9c       	mov	r12,r6
8000221e:	f0 1f 00 0a 	mcall	80002244 <CAN2515ByteWrite+0x34>
80002222:	30 2b       	mov	r11,2
80002224:	0e 9c       	mov	r12,r7
80002226:	f0 1f 00 09 	mcall	80002248 <CAN2515ByteWrite+0x38>
8000222a:	0a 9b       	mov	r11,r5
8000222c:	0e 9c       	mov	r12,r7
8000222e:	f0 1f 00 07 	mcall	80002248 <CAN2515ByteWrite+0x38>
80002232:	08 9b       	mov	r11,r4
80002234:	0e 9c       	mov	r12,r7
80002236:	f0 1f 00 05 	mcall	80002248 <CAN2515ByteWrite+0x38>
8000223a:	0c 9c       	mov	r12,r6
8000223c:	f0 1f 00 04 	mcall	8000224c <CAN2515ByteWrite+0x3c>
80002240:	d8 22       	popm	r4-r7,pc
80002242:	00 00       	add	r0,r0
80002244:	80 00       	ld.sh	r0,r0[0x0]
80002246:	20 dc       	sub	r12,13
80002248:	80 00       	ld.sh	r0,r0[0x0]
8000224a:	21 74       	sub	r4,23
8000224c:	80 00       	ld.sh	r0,r0[0x0]
8000224e:	21 fc       	sub	r12,31

80002250 <CAN2515SetRXB1FiltersEx>:
80002250:	eb cd 40 e0 	pushm	r5-r7,lr
80002254:	18 97       	mov	r7,r12
80002256:	16 96       	mov	r6,r11
80002258:	14 95       	mov	r5,r10
8000225a:	f5 db c0 08 	bfextu	r10,r11,0x0,0x8
8000225e:	32 7b       	mov	r11,39
80002260:	f0 1f 00 50 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002264:	f5 d6 c1 08 	bfextu	r10,r6,0x8,0x8
80002268:	32 6b       	mov	r11,38
8000226a:	0e 9c       	mov	r12,r7
8000226c:	f0 1f 00 4d 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002270:	f1 d6 c2 02 	bfextu	r8,r6,0x10,0x2
80002274:	ec 0a 16 0d 	lsr	r10,r6,0xd
80002278:	e2 1a 00 e0 	andl	r10,0xe0,COH
8000227c:	10 4a       	or	r10,r8
8000227e:	32 5b       	mov	r11,37
80002280:	0e 9c       	mov	r12,r7
80002282:	f0 1f 00 48 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002286:	f5 d6 c2 a8 	bfextu	r10,r6,0x15,0x8
8000228a:	32 4b       	mov	r11,36
8000228c:	0e 9c       	mov	r12,r7
8000228e:	f0 1f 00 45 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002292:	0b ba       	ld.ub	r10,r5[0x3]
80002294:	30 bb       	mov	r11,11
80002296:	0e 9c       	mov	r12,r7
80002298:	f0 1f 00 42 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000229c:	0b aa       	ld.ub	r10,r5[0x2]
8000229e:	30 ab       	mov	r11,10
800022a0:	0e 9c       	mov	r12,r7
800022a2:	f0 1f 00 40 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
800022a6:	6a 08       	ld.w	r8,r5[0x0]
800022a8:	f0 0a 16 0d 	lsr	r10,r8,0xd
800022ac:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
800022b0:	e2 1a 00 e0 	andl	r10,0xe0,COH
800022b4:	f1 ea 10 0a 	or	r10,r8,r10
800022b8:	a3 ba       	sbr	r10,0x3
800022ba:	e2 1a 00 eb 	andl	r10,0xeb,COH
800022be:	30 9b       	mov	r11,9
800022c0:	0e 9c       	mov	r12,r7
800022c2:	f0 1f 00 38 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
800022c6:	0b 0a       	ld.w	r10,r5++
800022c8:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
800022cc:	30 8b       	mov	r11,8
800022ce:	0e 9c       	mov	r12,r7
800022d0:	f0 1f 00 34 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
800022d4:	0b ba       	ld.ub	r10,r5[0x3]
800022d6:	31 3b       	mov	r11,19
800022d8:	0e 9c       	mov	r12,r7
800022da:	f0 1f 00 32 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
800022de:	0b aa       	ld.ub	r10,r5[0x2]
800022e0:	31 2b       	mov	r11,18
800022e2:	0e 9c       	mov	r12,r7
800022e4:	f0 1f 00 2f 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
800022e8:	6a 08       	ld.w	r8,r5[0x0]
800022ea:	f0 0a 16 0d 	lsr	r10,r8,0xd
800022ee:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
800022f2:	e2 1a 00 e0 	andl	r10,0xe0,COH
800022f6:	f1 ea 10 0a 	or	r10,r8,r10
800022fa:	a3 ba       	sbr	r10,0x3
800022fc:	e2 1a 00 eb 	andl	r10,0xeb,COH
80002300:	31 1b       	mov	r11,17
80002302:	0e 9c       	mov	r12,r7
80002304:	f0 1f 00 27 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002308:	0b 0a       	ld.w	r10,r5++
8000230a:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
8000230e:	31 0b       	mov	r11,16
80002310:	0e 9c       	mov	r12,r7
80002312:	f0 1f 00 24 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002316:	0b ba       	ld.ub	r10,r5[0x3]
80002318:	31 7b       	mov	r11,23
8000231a:	0e 9c       	mov	r12,r7
8000231c:	f0 1f 00 21 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002320:	0b aa       	ld.ub	r10,r5[0x2]
80002322:	31 6b       	mov	r11,22
80002324:	0e 9c       	mov	r12,r7
80002326:	f0 1f 00 1f 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000232a:	6a 08       	ld.w	r8,r5[0x0]
8000232c:	f0 0a 16 0d 	lsr	r10,r8,0xd
80002330:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002334:	e2 1a 00 e0 	andl	r10,0xe0,COH
80002338:	f1 ea 10 0a 	or	r10,r8,r10
8000233c:	a3 ba       	sbr	r10,0x3
8000233e:	e2 1a 00 eb 	andl	r10,0xeb,COH
80002342:	31 5b       	mov	r11,21
80002344:	0e 9c       	mov	r12,r7
80002346:	f0 1f 00 17 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000234a:	0b 0a       	ld.w	r10,r5++
8000234c:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
80002350:	31 4b       	mov	r11,20
80002352:	0e 9c       	mov	r12,r7
80002354:	f0 1f 00 13 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002358:	0b ba       	ld.ub	r10,r5[0x3]
8000235a:	31 bb       	mov	r11,27
8000235c:	0e 9c       	mov	r12,r7
8000235e:	f0 1f 00 11 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002362:	0b aa       	ld.ub	r10,r5[0x2]
80002364:	31 ab       	mov	r11,26
80002366:	0e 9c       	mov	r12,r7
80002368:	f0 1f 00 0e 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000236c:	6a 08       	ld.w	r8,r5[0x0]
8000236e:	f0 0a 16 0d 	lsr	r10,r8,0xd
80002372:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002376:	e2 1a 00 e0 	andl	r10,0xe0,COH
8000237a:	f1 ea 10 0a 	or	r10,r8,r10
8000237e:	a3 ba       	sbr	r10,0x3
80002380:	e2 1a 00 eb 	andl	r10,0xeb,COH
80002384:	31 9b       	mov	r11,25
80002386:	0e 9c       	mov	r12,r7
80002388:	f0 1f 00 06 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000238c:	6a 0a       	ld.w	r10,r5[0x0]
8000238e:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
80002392:	31 8b       	mov	r11,24
80002394:	0e 9c       	mov	r12,r7
80002396:	f0 1f 00 03 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000239a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000239e:	00 00       	add	r0,r0
800023a0:	80 00       	ld.sh	r0,r0[0x0]
800023a2:	22 10       	sub	r0,33

800023a4 <CAN2515SetRXB0FiltersEx>:
800023a4:	eb cd 40 e0 	pushm	r5-r7,lr
800023a8:	18 97       	mov	r7,r12
800023aa:	16 96       	mov	r6,r11
800023ac:	14 95       	mov	r5,r10
800023ae:	f5 db c0 08 	bfextu	r10,r11,0x0,0x8
800023b2:	32 3b       	mov	r11,35
800023b4:	f0 1f 00 2f 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023b8:	f5 d6 c1 08 	bfextu	r10,r6,0x8,0x8
800023bc:	32 2b       	mov	r11,34
800023be:	0e 9c       	mov	r12,r7
800023c0:	f0 1f 00 2c 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023c4:	f1 d6 c2 02 	bfextu	r8,r6,0x10,0x2
800023c8:	ec 0a 16 0d 	lsr	r10,r6,0xd
800023cc:	e2 1a 00 e0 	andl	r10,0xe0,COH
800023d0:	10 4a       	or	r10,r8
800023d2:	32 1b       	mov	r11,33
800023d4:	0e 9c       	mov	r12,r7
800023d6:	f0 1f 00 27 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023da:	f5 d6 c2 a8 	bfextu	r10,r6,0x15,0x8
800023de:	32 0b       	mov	r11,32
800023e0:	0e 9c       	mov	r12,r7
800023e2:	f0 1f 00 24 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023e6:	0b ba       	ld.ub	r10,r5[0x3]
800023e8:	30 3b       	mov	r11,3
800023ea:	0e 9c       	mov	r12,r7
800023ec:	f0 1f 00 21 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023f0:	0b aa       	ld.ub	r10,r5[0x2]
800023f2:	30 2b       	mov	r11,2
800023f4:	0e 9c       	mov	r12,r7
800023f6:	f0 1f 00 1f 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023fa:	6a 08       	ld.w	r8,r5[0x0]
800023fc:	f0 0a 16 0d 	lsr	r10,r8,0xd
80002400:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002404:	e2 1a 00 e0 	andl	r10,0xe0,COH
80002408:	f1 ea 10 0a 	or	r10,r8,r10
8000240c:	a3 ba       	sbr	r10,0x3
8000240e:	e2 1a 00 eb 	andl	r10,0xeb,COH
80002412:	30 1b       	mov	r11,1
80002414:	0e 9c       	mov	r12,r7
80002416:	f0 1f 00 17 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
8000241a:	0b 0a       	ld.w	r10,r5++
8000241c:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
80002420:	30 0b       	mov	r11,0
80002422:	0e 9c       	mov	r12,r7
80002424:	f0 1f 00 13 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
80002428:	0b ba       	ld.ub	r10,r5[0x3]
8000242a:	30 7b       	mov	r11,7
8000242c:	0e 9c       	mov	r12,r7
8000242e:	f0 1f 00 11 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
80002432:	0b aa       	ld.ub	r10,r5[0x2]
80002434:	30 6b       	mov	r11,6
80002436:	0e 9c       	mov	r12,r7
80002438:	f0 1f 00 0e 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
8000243c:	6a 08       	ld.w	r8,r5[0x0]
8000243e:	f0 0a 16 0d 	lsr	r10,r8,0xd
80002442:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002446:	e2 1a 00 e0 	andl	r10,0xe0,COH
8000244a:	f1 ea 10 0a 	or	r10,r8,r10
8000244e:	a3 ba       	sbr	r10,0x3
80002450:	e2 1a 00 eb 	andl	r10,0xeb,COH
80002454:	30 5b       	mov	r11,5
80002456:	0e 9c       	mov	r12,r7
80002458:	f0 1f 00 06 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
8000245c:	6a 0a       	ld.w	r10,r5[0x0]
8000245e:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
80002462:	30 4b       	mov	r11,4
80002464:	0e 9c       	mov	r12,r7
80002466:	f0 1f 00 03 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
8000246a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000246e:	00 00       	add	r0,r0
80002470:	80 00       	ld.sh	r0,r0[0x0]
80002472:	22 10       	sub	r0,33

80002474 <CANReset>:
80002474:	eb cd 40 c0 	pushm	r6-r7,lr
80002478:	18 96       	mov	r6,r12
8000247a:	ef dc c0 08 	bfextu	r7,r12,0x0,0x8
8000247e:	0e 9c       	mov	r12,r7
80002480:	f0 1f 00 06 	mcall	80002498 <CANReset+0x24>
80002484:	e0 6b 00 c0 	mov	r11,192
80002488:	0c 9c       	mov	r12,r6
8000248a:	f0 1f 00 05 	mcall	8000249c <CANReset+0x28>
8000248e:	0e 9c       	mov	r12,r7
80002490:	f0 1f 00 04 	mcall	800024a0 <CANReset+0x2c>
80002494:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002498:	80 00       	ld.sh	r0,r0[0x0]
8000249a:	20 dc       	sub	r12,13
8000249c:	80 00       	ld.sh	r0,r0[0x0]
8000249e:	21 74       	sub	r4,23
800024a0:	80 00       	ld.sh	r0,r0[0x0]
800024a2:	21 fc       	sub	r12,31

800024a4 <CAN2515ByteRead>:
800024a4:	eb cd 40 e0 	pushm	r5-r7,lr
800024a8:	20 1d       	sub	sp,4
800024aa:	18 97       	mov	r7,r12
800024ac:	16 95       	mov	r5,r11
800024ae:	18 96       	mov	r6,r12
800024b0:	5c 56       	castu.b	r6
800024b2:	0c 9c       	mov	r12,r6
800024b4:	f0 1f 00 13 	mcall	80002500 <CAN2515ByteRead+0x5c>
800024b8:	30 3b       	mov	r11,3
800024ba:	0e 9c       	mov	r12,r7
800024bc:	f0 1f 00 12 	mcall	80002504 <CAN2515ByteRead+0x60>
800024c0:	0a 9b       	mov	r11,r5
800024c2:	0e 9c       	mov	r12,r7
800024c4:	f0 1f 00 10 	mcall	80002504 <CAN2515ByteRead+0x60>
800024c8:	30 0b       	mov	r11,0
800024ca:	fe 7c 24 00 	mov	r12,-56320
800024ce:	f0 1f 00 0f 	mcall	80002508 <CAN2515ByteRead+0x64>
800024d2:	fe 77 24 00 	mov	r7,-56320
800024d6:	c0 28       	rjmp	800024da <CAN2515ByteRead+0x36>
800024d8:	d7 03       	nop
800024da:	0e 9c       	mov	r12,r7
800024dc:	f0 1f 00 0c 	mcall	8000250c <CAN2515ByteRead+0x68>
800024e0:	cf c0       	breq	800024d8 <CAN2515ByteRead+0x34>
800024e2:	fa cb ff fe 	sub	r11,sp,-2
800024e6:	fe 7c 24 00 	mov	r12,-56320
800024ea:	f0 1f 00 0a 	mcall	80002510 <CAN2515ByteRead+0x6c>
800024ee:	1b b7       	ld.ub	r7,sp[0x3]
800024f0:	0c 9c       	mov	r12,r6
800024f2:	f0 1f 00 09 	mcall	80002514 <CAN2515ByteRead+0x70>
800024f6:	0e 9c       	mov	r12,r7
800024f8:	2f fd       	sub	sp,-4
800024fa:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
800024fe:	00 00       	add	r0,r0
80002500:	80 00       	ld.sh	r0,r0[0x0]
80002502:	20 dc       	sub	r12,13
80002504:	80 00       	ld.sh	r0,r0[0x0]
80002506:	21 74       	sub	r4,23
80002508:	80 00       	ld.sh	r0,r0[0x0]
8000250a:	35 ce       	mov	lr,92
8000250c:	80 00       	ld.sh	r0,r0[0x0]
8000250e:	35 ea       	mov	r10,94
80002510:	80 00       	ld.sh	r0,r0[0x0]
80002512:	35 f2       	mov	r2,95
80002514:	80 00       	ld.sh	r0,r0[0x0]
80002516:	21 fc       	sub	r12,31

80002518 <CANEnable>:
80002518:	eb cd 40 80 	pushm	r7,lr
8000251c:	18 97       	mov	r7,r12
8000251e:	58 ab       	cp.w	r11,10
80002520:	c1 11       	brne	80002542 <CANEnable+0x2a>
80002522:	30 3a       	mov	r10,3
80002524:	32 ab       	mov	r11,42
80002526:	f0 1f 00 30 	mcall	800025e4 <CANEnable+0xcc>
8000252a:	e0 6a 00 ac 	mov	r10,172
8000252e:	32 9b       	mov	r11,41
80002530:	0e 9c       	mov	r12,r7
80002532:	f0 1f 00 2d 	mcall	800025e4 <CANEnable+0xcc>
80002536:	30 7a       	mov	r10,7
80002538:	32 8b       	mov	r11,40
8000253a:	0e 9c       	mov	r12,r7
8000253c:	f0 1f 00 2a 	mcall	800025e4 <CANEnable+0xcc>
80002540:	c3 68       	rjmp	800025ac <CANEnable+0x94>
80002542:	58 7b       	cp.w	r11,7
80002544:	c1 11       	brne	80002566 <CANEnable+0x4e>
80002546:	30 1a       	mov	r10,1
80002548:	32 ab       	mov	r11,42
8000254a:	f0 1f 00 27 	mcall	800025e4 <CANEnable+0xcc>
8000254e:	e0 6a 00 ac 	mov	r10,172
80002552:	32 9b       	mov	r11,41
80002554:	0e 9c       	mov	r12,r7
80002556:	f0 1f 00 24 	mcall	800025e4 <CANEnable+0xcc>
8000255a:	30 7a       	mov	r10,7
8000255c:	32 8b       	mov	r11,40
8000255e:	0e 9c       	mov	r12,r7
80002560:	f0 1f 00 21 	mcall	800025e4 <CANEnable+0xcc>
80002564:	c2 48       	rjmp	800025ac <CANEnable+0x94>
80002566:	58 5b       	cp.w	r11,5
80002568:	c1 11       	brne	8000258a <CANEnable+0x72>
8000256a:	30 0a       	mov	r10,0
8000256c:	32 ab       	mov	r11,42
8000256e:	f0 1f 00 1e 	mcall	800025e4 <CANEnable+0xcc>
80002572:	e0 6a 00 ac 	mov	r10,172
80002576:	32 9b       	mov	r11,41
80002578:	0e 9c       	mov	r12,r7
8000257a:	f0 1f 00 1b 	mcall	800025e4 <CANEnable+0xcc>
8000257e:	30 7a       	mov	r10,7
80002580:	32 8b       	mov	r11,40
80002582:	0e 9c       	mov	r12,r7
80002584:	f0 1f 00 18 	mcall	800025e4 <CANEnable+0xcc>
80002588:	c1 28       	rjmp	800025ac <CANEnable+0x94>
8000258a:	58 1b       	cp.w	r11,1
8000258c:	c1 01       	brne	800025ac <CANEnable+0x94>
8000258e:	30 0a       	mov	r10,0
80002590:	32 ab       	mov	r11,42
80002592:	f0 1f 00 15 	mcall	800025e4 <CANEnable+0xcc>
80002596:	e0 6a 00 91 	mov	r10,145
8000259a:	32 9b       	mov	r11,41
8000259c:	0e 9c       	mov	r12,r7
8000259e:	f0 1f 00 12 	mcall	800025e4 <CANEnable+0xcc>
800025a2:	30 3a       	mov	r10,3
800025a4:	32 8b       	mov	r11,40
800025a6:	0e 9c       	mov	r12,r7
800025a8:	f0 1f 00 0f 	mcall	800025e4 <CANEnable+0xcc>
800025ac:	30 3a       	mov	r10,3
800025ae:	32 bb       	mov	r11,43
800025b0:	0e 9c       	mov	r12,r7
800025b2:	f0 1f 00 0d 	mcall	800025e4 <CANEnable+0xcc>
800025b6:	30 4a       	mov	r10,4
800025b8:	30 fb       	mov	r11,15
800025ba:	0e 9c       	mov	r12,r7
800025bc:	f0 1f 00 0a 	mcall	800025e4 <CANEnable+0xcc>
800025c0:	30 eb       	mov	r11,14
800025c2:	0e 9c       	mov	r12,r7
800025c4:	f0 1f 00 09 	mcall	800025e8 <CANEnable+0xd0>
800025c8:	30 eb       	mov	r11,14
800025ca:	0e 9c       	mov	r12,r7
800025cc:	f0 1f 00 07 	mcall	800025e8 <CANEnable+0xd0>
800025d0:	e2 1c 00 e0 	andl	r12,0xe0,COH
800025d4:	c0 60       	breq	800025e0 <CANEnable+0xc8>
800025d6:	30 4a       	mov	r10,4
800025d8:	30 fb       	mov	r11,15
800025da:	0e 9c       	mov	r12,r7
800025dc:	f0 1f 00 02 	mcall	800025e4 <CANEnable+0xcc>
800025e0:	e3 cd 80 80 	ldm	sp++,r7,pc
800025e4:	80 00       	ld.sh	r0,r0[0x0]
800025e6:	22 10       	sub	r0,33
800025e8:	80 00       	ld.sh	r0,r0[0x0]
800025ea:	24 a4       	sub	r4,74

800025ec <InitializeCANExtended>:
800025ec:	d4 21       	pushm	r4-r7,lr
800025ee:	18 97       	mov	r7,r12
800025f0:	16 94       	mov	r4,r11
800025f2:	14 95       	mov	r5,r10
800025f4:	12 96       	mov	r6,r9
800025f6:	f0 1f 00 0f 	mcall	80002630 <InitializeCANExtended+0x44>
800025fa:	34 0a       	mov	r10,64
800025fc:	36 0b       	mov	r11,96
800025fe:	0e 9c       	mov	r12,r7
80002600:	f0 1f 00 0d 	mcall	80002634 <InitializeCANExtended+0x48>
80002604:	34 0a       	mov	r10,64
80002606:	37 0b       	mov	r11,112
80002608:	0e 9c       	mov	r12,r7
8000260a:	f0 1f 00 0b 	mcall	80002634 <InitializeCANExtended+0x48>
8000260e:	0c 9a       	mov	r10,r6
80002610:	0a 9b       	mov	r11,r5
80002612:	0e 9c       	mov	r12,r7
80002614:	f0 1f 00 09 	mcall	80002638 <InitializeCANExtended+0x4c>
80002618:	ec ca ff f8 	sub	r10,r6,-8
8000261c:	0a 9b       	mov	r11,r5
8000261e:	0e 9c       	mov	r12,r7
80002620:	f0 1f 00 07 	mcall	8000263c <InitializeCANExtended+0x50>
80002624:	08 9b       	mov	r11,r4
80002626:	0e 9c       	mov	r12,r7
80002628:	f0 1f 00 06 	mcall	80002640 <InitializeCANExtended+0x54>
8000262c:	d8 22       	popm	r4-r7,pc
8000262e:	00 00       	add	r0,r0
80002630:	80 00       	ld.sh	r0,r0[0x0]
80002632:	24 74       	sub	r4,71
80002634:	80 00       	ld.sh	r0,r0[0x0]
80002636:	22 10       	sub	r0,33
80002638:	80 00       	ld.sh	r0,r0[0x0]
8000263a:	23 a4       	sub	r4,58
8000263c:	80 00       	ld.sh	r0,r0[0x0]
8000263e:	22 50       	sub	r0,37
80002640:	80 00       	ld.sh	r0,r0[0x0]
80002642:	25 18       	sub	r8,81

80002644 <CANSendMsg>:
80002644:	eb cd 40 fe 	pushm	r1-r7,lr
80002648:	18 96       	mov	r6,r12
8000264a:	16 93       	mov	r3,r11
8000264c:	14 94       	mov	r4,r10
8000264e:	12 92       	mov	r2,r9
80002650:	10 91       	mov	r1,r8
80002652:	30 07       	mov	r7,0
80002654:	33 05       	mov	r5,48
80002656:	c1 78       	rjmp	80002684 <CANSendMsg+0x40>
80002658:	e1 b8 00 42 	mfsr	r8,0x108
8000265c:	f0 ca d1 20 	sub	r10,r8,-12000
80002660:	e1 b9 00 42 	mfsr	r9,0x108
80002664:	14 38       	cp.w	r8,r10
80002666:	e0 88 00 08 	brls	80002676 <CANSendMsg+0x32>
8000266a:	12 38       	cp.w	r8,r9
8000266c:	fe 98 ff fa 	brls	80002660 <CANSendMsg+0x1c>
80002670:	12 3a       	cp.w	r10,r9
80002672:	c7 63       	brcs	8000275e <CANSendMsg+0x11a>
80002674:	cf 6b       	rjmp	80002660 <CANSendMsg+0x1c>
80002676:	12 38       	cp.w	r8,r9
80002678:	e0 8b 00 73 	brhi	8000275e <CANSendMsg+0x11a>
8000267c:	12 3a       	cp.w	r10,r9
8000267e:	c7 03       	brcs	8000275e <CANSendMsg+0x11a>
80002680:	cf 0b       	rjmp	80002660 <CANSendMsg+0x1c>
80002682:	2f f7       	sub	r7,-1
80002684:	0a 9b       	mov	r11,r5
80002686:	0c 9c       	mov	r12,r6
80002688:	f0 1f 00 38 	mcall	80002768 <CANSendMsg+0x124>
8000268c:	e2 1c 00 08 	andl	r12,0x8,COH
80002690:	ce 41       	brne	80002658 <CANSendMsg+0x14>
80002692:	e6 08 16 0b 	lsr	r8,r3,0xb
80002696:	c1 01       	brne	800026b6 <CANSendMsg+0x72>
80002698:	f5 d3 c0 68 	bfextu	r10,r3,0x3,0x8
8000269c:	33 1b       	mov	r11,49
8000269e:	0c 9c       	mov	r12,r6
800026a0:	f0 1f 00 33 	mcall	8000276c <CANSendMsg+0x128>
800026a4:	e6 0a 15 05 	lsl	r10,r3,0x5
800026a8:	e2 1a 00 e0 	andl	r10,0xe0,COH
800026ac:	33 2b       	mov	r11,50
800026ae:	0c 9c       	mov	r12,r6
800026b0:	f0 1f 00 2f 	mcall	8000276c <CANSendMsg+0x128>
800026b4:	c2 18       	rjmp	800026f6 <CANSendMsg+0xb2>
800026b6:	f5 d3 c2 a8 	bfextu	r10,r3,0x15,0x8
800026ba:	33 1b       	mov	r11,49
800026bc:	0c 9c       	mov	r12,r6
800026be:	f0 1f 00 2c 	mcall	8000276c <CANSendMsg+0x128>
800026c2:	e6 08 16 0d 	lsr	r8,r3,0xd
800026c6:	f5 d3 c2 02 	bfextu	r10,r3,0x10,0x2
800026ca:	e2 18 00 e0 	andl	r8,0xe0,COH
800026ce:	10 4a       	or	r10,r8
800026d0:	a3 ba       	sbr	r10,0x3
800026d2:	e2 1a 00 eb 	andl	r10,0xeb,COH
800026d6:	33 2b       	mov	r11,50
800026d8:	0c 9c       	mov	r12,r6
800026da:	f0 1f 00 25 	mcall	8000276c <CANSendMsg+0x128>
800026de:	f5 d3 c1 08 	bfextu	r10,r3,0x8,0x8
800026e2:	33 3b       	mov	r11,51
800026e4:	0c 9c       	mov	r12,r6
800026e6:	f0 1f 00 22 	mcall	8000276c <CANSendMsg+0x128>
800026ea:	f5 d3 c0 08 	bfextu	r10,r3,0x0,0x8
800026ee:	33 4b       	mov	r11,52
800026f0:	0c 9c       	mov	r12,r6
800026f2:	f0 1f 00 1f 	mcall	8000276c <CANSendMsg+0x128>
800026f6:	30 85       	mov	r5,8
800026f8:	ea 02 18 00 	cp.b	r2,r5
800026fc:	e4 05 17 80 	movls	r5,r2
80002700:	f9 b5 0b 08 	movhi	r5,8
80002704:	e0 41 00 52 	cp.w	r1,82
80002708:	c1 01       	brne	80002728 <CANSendMsg+0xe4>
8000270a:	a7 a5       	sbr	r5,0x6
8000270c:	5c 55       	castu.b	r5
8000270e:	0a 9a       	mov	r10,r5
80002710:	33 5b       	mov	r11,53
80002712:	0c 9c       	mov	r12,r6
80002714:	f0 1f 00 16 	mcall	8000276c <CANSendMsg+0x128>
80002718:	30 4b       	mov	r11,4
8000271a:	31 1c       	mov	r12,17
8000271c:	f0 1f 00 15 	mcall	80002770 <CANSendMsg+0x12c>
80002720:	49 5c       	lddpc	r12,80002774 <CANSendMsg+0x130>
80002722:	f0 1f 00 16 	mcall	80002778 <CANSendMsg+0x134>
80002726:	c0 68       	rjmp	80002732 <CANSendMsg+0xee>
80002728:	0a 9a       	mov	r10,r5
8000272a:	33 5b       	mov	r11,53
8000272c:	0c 9c       	mov	r12,r6
8000272e:	f0 1f 00 10 	mcall	8000276c <CANSendMsg+0x128>
80002732:	58 05       	cp.w	r5,0
80002734:	e0 8a 00 0e 	brle	80002750 <CANSendMsg+0x10c>
80002738:	30 07       	mov	r7,0
8000273a:	0e 9b       	mov	r11,r7
8000273c:	2c ab       	sub	r11,-54
8000273e:	e8 07 07 0a 	ld.ub	r10,r4[r7]
80002742:	5c 5b       	castu.b	r11
80002744:	0c 9c       	mov	r12,r6
80002746:	f0 1f 00 0a 	mcall	8000276c <CANSendMsg+0x128>
8000274a:	2f f7       	sub	r7,-1
8000274c:	0a 37       	cp.w	r7,r5
8000274e:	cf 65       	brlt	8000273a <CANSendMsg+0xf6>
80002750:	30 8a       	mov	r10,8
80002752:	33 0b       	mov	r11,48
80002754:	0c 9c       	mov	r12,r6
80002756:	f0 1f 00 06 	mcall	8000276c <CANSendMsg+0x128>
8000275a:	e3 cf 90 fe 	ldm	sp++,r1-r7,pc,r12=1
8000275e:	e0 47 00 64 	cp.w	r7,100
80002762:	c9 01       	brne	80002682 <CANSendMsg+0x3e>
80002764:	e3 cf 80 fe 	ldm	sp++,r1-r7,pc,r12=0
80002768:	80 00       	ld.sh	r0,r0[0x0]
8000276a:	24 a4       	sub	r4,74
8000276c:	80 00       	ld.sh	r0,r0[0x0]
8000276e:	22 10       	sub	r0,33
80002770:	80 00       	ld.sh	r0,r0[0x0]
80002772:	2e 78       	sub	r8,-25
80002774:	80 00       	ld.sh	r0,r0[0x0]
80002776:	92 74       	ld.sh	r4,r9[0xe]
80002778:	80 00       	ld.sh	r0,r0[0x0]
8000277a:	2d e0       	sub	r0,-34

8000277c <CANGetMsg>:
8000277c:	d4 31       	pushm	r0-r7,lr
8000277e:	18 95       	mov	r5,r12
80002780:	16 92       	mov	r2,r11
80002782:	14 93       	mov	r3,r10
80002784:	12 94       	mov	r4,r9
80002786:	f0 1f 00 55 	mcall	800028d8 <CANGetMsg+0x15c>
8000278a:	f9 dc c0 02 	bfextu	r12,r12,0x0,0x2
8000278e:	e0 80 00 a3 	breq	800028d4 <CANGetMsg+0x158>
80002792:	58 1c       	cp.w	r12,1
80002794:	c0 31       	brne	8000279a <CANGetMsg+0x1e>
80002796:	36 16       	mov	r6,97
80002798:	c0 58       	rjmp	800027a2 <CANGetMsg+0x26>
8000279a:	58 2c       	cp.w	r12,2
8000279c:	e0 81 00 9c 	brne	800028d4 <CANGetMsg+0x158>
800027a0:	37 16       	mov	r6,113
800027a2:	0c 9b       	mov	r11,r6
800027a4:	0a 9c       	mov	r12,r5
800027a6:	f0 1f 00 4e 	mcall	800028dc <CANGetMsg+0x160>
800027aa:	18 91       	mov	r1,r12
800027ac:	ec cb ff ff 	sub	r11,r6,-1
800027b0:	5c 5b       	castu.b	r11
800027b2:	0a 9c       	mov	r12,r5
800027b4:	f0 1f 00 4a 	mcall	800028dc <CANGetMsg+0x160>
800027b8:	18 97       	mov	r7,r12
800027ba:	ec cb ff fe 	sub	r11,r6,-2
800027be:	5c 5b       	castu.b	r11
800027c0:	0a 9c       	mov	r12,r5
800027c2:	f0 1f 00 47 	mcall	800028dc <CANGetMsg+0x160>
800027c6:	18 90       	mov	r0,r12
800027c8:	ec cb ff fd 	sub	r11,r6,-3
800027cc:	5c 5b       	castu.b	r11
800027ce:	0a 9c       	mov	r12,r5
800027d0:	f0 1f 00 43 	mcall	800028dc <CANGetMsg+0x160>
800027d4:	f1 d7 c0 68 	bfextu	r8,r7,0x3,0x8
800027d8:	f3 d8 c0 01 	bfextu	r9,r8,0x0,0x1
800027dc:	c0 d1       	brne	800027f6 <CANGetMsg+0x7a>
800027de:	ef d7 c0 a8 	bfextu	r7,r7,0x5,0x8
800027e2:	ef e1 10 31 	or	r1,r7,r1<<0x3
800027e6:	85 01       	st.w	r2[0x0],r1
800027e8:	30 1c       	mov	r12,1
800027ea:	f0 1f 00 3e 	mcall	800028e0 <CANGetMsg+0x164>
800027ee:	30 2c       	mov	r12,2
800027f0:	f0 1f 00 3d 	mcall	800028e4 <CANGetMsg+0x168>
800027f4:	c1 48       	rjmp	8000281c <CANGetMsg+0xa0>
800027f6:	a9 60       	lsl	r0,0x8
800027f8:	e1 e1 11 51 	or	r1,r0,r1<<0x15
800027fc:	e3 ec 10 0c 	or	r12,r1,r12
80002800:	e2 18 00 1c 	andl	r8,0x1c,COH
80002804:	ef d7 c0 02 	bfextu	r7,r7,0x0,0x2
80002808:	0e 48       	or	r8,r7
8000280a:	f9 e8 11 0c 	or	r12,r12,r8<<0x10
8000280e:	85 0c       	st.w	r2[0x0],r12
80002810:	30 2c       	mov	r12,2
80002812:	f0 1f 00 34 	mcall	800028e0 <CANGetMsg+0x164>
80002816:	30 1c       	mov	r12,1
80002818:	f0 1f 00 33 	mcall	800028e4 <CANGetMsg+0x168>
8000281c:	ec cb ff fc 	sub	r11,r6,-4
80002820:	5c 5b       	castu.b	r11
80002822:	0a 9c       	mov	r12,r5
80002824:	f0 1f 00 2e 	mcall	800028dc <CANGetMsg+0x160>
80002828:	f9 dc c0 04 	bfextu	r12,r12,0x0,0x4
8000282c:	a8 8c       	st.b	r4[0x0],r12
8000282e:	30 88       	mov	r8,8
80002830:	f0 0c 18 00 	cp.b	r12,r8
80002834:	e0 88 00 07 	brls	80002842 <CANGetMsg+0xc6>
80002838:	a8 88       	st.b	r4[0x0],r8
8000283a:	2f b6       	sub	r6,-5
8000283c:	5c 56       	castu.b	r6
8000283e:	30 07       	mov	r7,0
80002840:	c0 58       	rjmp	8000284a <CANGetMsg+0xce>
80002842:	58 0c       	cp.w	r12,0
80002844:	fe 99 ff fb 	brgt	8000283a <CANGetMsg+0xbe>
80002848:	c0 e8       	rjmp	80002864 <CANGetMsg+0xe8>
8000284a:	0c 9b       	mov	r11,r6
8000284c:	0a 9c       	mov	r12,r5
8000284e:	f0 1f 00 24 	mcall	800028dc <CANGetMsg+0x160>
80002852:	e6 07 0b 0c 	st.b	r3[r7],r12
80002856:	2f f7       	sub	r7,-1
80002858:	2f f6       	sub	r6,-1
8000285a:	5c 56       	castu.b	r6
8000285c:	09 88       	ld.ub	r8,r4[0x0]
8000285e:	0e 38       	cp.w	r8,r7
80002860:	fe 99 ff f5 	brgt	8000284a <CANGetMsg+0xce>
80002864:	30 4c       	mov	r12,4
80002866:	f0 1f 00 20 	mcall	800028e4 <CANGetMsg+0x168>
8000286a:	36 0b       	mov	r11,96
8000286c:	0a 9c       	mov	r12,r5
8000286e:	f0 1f 00 1c 	mcall	800028dc <CANGetMsg+0x160>
80002872:	e2 1c 00 08 	andl	r12,0x8,COH
80002876:	c0 81       	brne	80002886 <CANGetMsg+0x10a>
80002878:	37 0b       	mov	r11,112
8000287a:	0a 9c       	mov	r12,r5
8000287c:	f0 1f 00 18 	mcall	800028dc <CANGetMsg+0x160>
80002880:	e2 1c 00 08 	andl	r12,0x8,COH
80002884:	c1 d0       	breq	800028be <CANGetMsg+0x142>
80002886:	64 08       	ld.w	r8,r2[0x0]
80002888:	58 18       	cp.w	r8,1
8000288a:	c1 a1       	brne	800028be <CANGetMsg+0x142>
8000288c:	30 08       	mov	r8,0
8000288e:	a6 88       	st.b	r3[0x0],r8
80002890:	30 18       	mov	r8,1
80002892:	a6 98       	st.b	r3[0x1],r8
80002894:	30 28       	mov	r8,2
80002896:	a6 a8       	st.b	r3[0x2],r8
80002898:	30 38       	mov	r8,3
8000289a:	a6 b8       	st.b	r3[0x3],r8
8000289c:	30 08       	mov	r8,0
8000289e:	30 49       	mov	r9,4
800028a0:	06 9a       	mov	r10,r3
800028a2:	64 0b       	ld.w	r11,r2[0x0]
800028a4:	0a 9c       	mov	r12,r5
800028a6:	f0 1f 00 11 	mcall	800028e8 <CANGetMsg+0x16c>
800028aa:	30 4b       	mov	r11,4
800028ac:	31 1c       	mov	r12,17
800028ae:	f0 1f 00 10 	mcall	800028ec <CANGetMsg+0x170>
800028b2:	49 0c       	lddpc	r12,800028f0 <CANGetMsg+0x174>
800028b4:	f0 1f 00 10 	mcall	800028f4 <CANGetMsg+0x178>
800028b8:	30 4c       	mov	r12,4
800028ba:	f0 1f 00 0a 	mcall	800028e0 <CANGetMsg+0x164>
800028be:	30 0a       	mov	r10,0
800028c0:	32 cb       	mov	r11,44
800028c2:	14 9c       	mov	r12,r10
800028c4:	f0 1f 00 0d 	mcall	800028f8 <CANGetMsg+0x17c>
800028c8:	30 0a       	mov	r10,0
800028ca:	32 cb       	mov	r11,44
800028cc:	14 9c       	mov	r12,r10
800028ce:	f0 1f 00 0b 	mcall	800028f8 <CANGetMsg+0x17c>
800028d2:	da 3a       	popm	r0-r7,pc,r12=1
800028d4:	d8 3a       	popm	r0-r7,pc,r12=0
800028d6:	00 00       	add	r0,r0
800028d8:	80 00       	ld.sh	r0,r0[0x0]
800028da:	21 84       	sub	r4,24
800028dc:	80 00       	ld.sh	r0,r0[0x0]
800028de:	24 a4       	sub	r4,74
800028e0:	80 00       	ld.sh	r0,r0[0x0]
800028e2:	2c 4c       	sub	r12,-60
800028e4:	80 00       	ld.sh	r0,r0[0x0]
800028e6:	2c 9c       	sub	r12,-55
800028e8:	80 00       	ld.sh	r0,r0[0x0]
800028ea:	26 44       	sub	r4,100
800028ec:	80 00       	ld.sh	r0,r0[0x0]
800028ee:	2e 78       	sub	r8,-25
800028f0:	80 00       	ld.sh	r0,r0[0x0]
800028f2:	92 74       	ld.sh	r4,r9[0xe]
800028f4:	80 00       	ld.sh	r0,r0[0x0]
800028f6:	2d e0       	sub	r0,-34
800028f8:	80 00       	ld.sh	r0,r0[0x0]
800028fa:	22 10       	sub	r0,33

800028fc <nodeCount>:
	dip204_init(100,1);
	dip204_clear_display();
}

UINT8 nodeCount(UINT16 newId)
{
800028fc:	eb cd 40 c0 	pushm	r6-r7,lr
	UINT8 l;
	//Adds any new nodes to its corresponding position
	ids |= (1 << (newId & 0xF));
80002900:	f9 dc c0 04 	bfextu	r12,r12,0x0,0x4
80002904:	49 28       	lddpc	r8,8000294c <nodeCount+0x50>
80002906:	30 1b       	mov	r11,1
80002908:	f6 0c 09 4b 	lsl	r11,r11,r12
8000290c:	90 09       	ld.sh	r9,r8[0x0]
8000290e:	12 4b       	or	r11,r9
80002910:	b0 0b       	st.h	r8[0x0],r11
80002912:	30 08       	mov	r8,0
	{
		//If counts the number of nodes active within ~1000 ms
		UINT16 ids_new = ((ids >> j) & 0x1);

		//If there was a node found at the j'th bit 1 is added to l
		if(ids_new == 1)
80002914:	5c 7b       	castu.h	r11
80002916:	30 1a       	mov	r10,1
80002918:	f6 08 08 49 	asr	r9,r11,r8
8000291c:	f3 d9 c0 01 	bfextu	r9,r9,0x0,0x1
80002920:	f4 09 19 00 	cp.h	r9,r10
80002924:	c0 31       	brne	8000292a <nodeCount+0x2e>
		{
			++l;
80002926:	2f f7       	sub	r7,-1
80002928:	5c 57       	castu.b	r7
{
	UINT8 l;
	//Adds any new nodes to its corresponding position
	ids |= (1 << (newId & 0xF));

	for(int j = 0; j < 16 ; ++j)
8000292a:	2f f8       	sub	r8,-1
8000292c:	59 08       	cp.w	r8,16
8000292e:	cf 51       	brne	80002918 <nodeCount+0x1c>
80002930:	0e 96       	mov	r6,r7
		{
			++l;
		}
	}
	//If the board itself is active on the bus we add 1
	if(CANRxReady(0) || CANTxReady(0))
80002932:	30 0c       	mov	r12,0
80002934:	f0 1f 00 07 	mcall	80002950 <nodeCount+0x54>
80002938:	c0 41       	brne	80002940 <nodeCount+0x44>
8000293a:	f0 1f 00 07 	mcall	80002954 <nodeCount+0x58>
8000293e:	c0 40       	breq	80002946 <nodeCount+0x4a>
	{
		++l;
80002940:	ec c7 ff ff 	sub	r7,r6,-1
80002944:	5c 57       	castu.b	r7
	}
	return l;
}
80002946:	0e 9c       	mov	r12,r7
80002948:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000294c:	00 00       	add	r0,r0
8000294e:	06 60       	and	r0,r3
80002950:	80 00       	ld.sh	r0,r0[0x0]
80002952:	21 d4       	sub	r4,29
80002954:	80 00       	ld.sh	r0,r0[0x0]
80002956:	21 e8       	sub	r8,30

80002958 <initBoard>:
	dip204_set_cursor_position(17, 4);
	dip204_printf_string("%d", msg[5]);
	dip204_hide_cursor();
}
void initBoard(void)
{
80002958:	d4 01       	pushm	lr
	//Enable ADC channels
	adc_enable( &AVR32_ADC, ADC_TEMPERATURE_CHANNEL );
8000295a:	30 0b       	mov	r11,0
8000295c:	fe 7c 3c 00 	mov	r12,-50176
80002960:	f0 1f 00 10 	mcall	800029a0 <initBoard+0x48>
	adc_enable( &AVR32_ADC, ADC_LIGHT_CHANNEL );
80002964:	30 2b       	mov	r11,2
80002966:	fe 7c 3c 00 	mov	r12,-50176
8000296a:	f0 1f 00 0e 	mcall	800029a0 <initBoard+0x48>

	//spidatareadpointer=&spidataread;
	pm_switch_to_osc0(&AVR32_PM, FOSC0, OSC0_STARTUP);
8000296e:	30 3a       	mov	r10,3
80002970:	e0 6b 1b 00 	mov	r11,6912
80002974:	ea 1b 00 b7 	orh	r11,0xb7
80002978:	fe 7c 0c 00 	mov	r12,-62464
8000297c:	f0 1f 00 0a 	mcall	800029a4 <initBoard+0x4c>
	
	// Configures the MCP2515 SPI communication.
	config_SPI_SPARE();
80002980:	f0 1f 00 0a 	mcall	800029a8 <initBoard+0x50>

	// Enables receive interrupts.
	Disable_global_interrupt();
80002984:	d3 03       	ssrf	0x10
	INTC_init_interrupts();
80002986:	f0 1f 00 0a 	mcall	800029ac <initBoard+0x54>
	Enable_global_interrupt();
8000298a:	d5 03       	csrf	0x10
	
	// Delay to let the Oscillator get started
	delay_init( FOSC0 );
	
	// Initializes the display
	config_dpi204();
8000298c:	f0 1f 00 09 	mcall	800029b0 <initBoard+0x58>
	dip204_init(100,1);
80002990:	30 1b       	mov	r11,1
80002992:	36 4c       	mov	r12,100
80002994:	f0 1f 00 08 	mcall	800029b4 <initBoard+0x5c>
	dip204_clear_display();
80002998:	f0 1f 00 08 	mcall	800029b8 <initBoard+0x60>
}
8000299c:	d8 02       	popm	pc
8000299e:	00 00       	add	r0,r0
800029a0:	80 00       	ld.sh	r0,r0[0x0]
800029a2:	20 0e       	sub	lr,0
800029a4:	80 00       	ld.sh	r0,r0[0x0]
800029a6:	33 60       	mov	r0,54
800029a8:	80 00       	ld.sh	r0,r0[0x0]
800029aa:	20 f0       	sub	r0,15
800029ac:	80 00       	ld.sh	r0,r0[0x0]
800029ae:	32 48       	mov	r8,36
800029b0:	80 00       	ld.sh	r0,r0[0x0]
800029b2:	20 64       	sub	r4,6
800029b4:	80 00       	ld.sh	r0,r0[0x0]
800029b6:	2f 60       	sub	r0,-10
800029b8:	80 00       	ld.sh	r0,r0[0x0]
800029ba:	2f 04       	sub	r4,-16

800029bc <printLCD>:
	msg[7] = 0;

}

void printLCD(void)
{
800029bc:	eb cd 40 f8 	pushm	r3-r7,lr
						
	// Read temp, 2 MSB msg[0], 8 LSB msg[1]
	temper = ((UINT16)msg[0] << 8) | msg[1];
						
	//Calculate percentages
	lightPro = (100*light)/divid;
800029c0:	4c 16       	lddpc	r6,80002ac4 <printLCD+0x108>
800029c2:	0d a3       	ld.ub	r3,r6[0x2]
800029c4:	0d b8       	ld.ub	r8,r6[0x3]
800029c6:	f1 e3 10 83 	or	r3,r8,r3<<0x8
800029ca:	4c 08       	lddpc	r8,80002ac8 <printLCD+0x10c>
800029cc:	90 85       	ld.uh	r5,r8[0x0]
	temperPro = (100*temper)/divid;
800029ce:	0d 84       	ld.ub	r4,r6[0x0]
800029d0:	0d 98       	ld.ub	r8,r6[0x1]
800029d2:	f1 e4 10 84 	or	r4,r8,r4<<0x8
								
	dip204_clear_display();
800029d6:	f0 1f 00 3e 	mcall	80002acc <printLCD+0x110>
	dip204_set_cursor_position(1, 1);
800029da:	30 1b       	mov	r11,1
800029dc:	16 9c       	mov	r12,r11
800029de:	f0 1f 00 3d 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("Active nodes:");
800029e2:	4b dc       	lddpc	r12,80002ad4 <printLCD+0x118>
800029e4:	f0 1f 00 3d 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(1, 2);
800029e8:	30 2b       	mov	r11,2
800029ea:	30 1c       	mov	r12,1
800029ec:	f0 1f 00 39 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("Temp:");
800029f0:	4b bc       	lddpc	r12,80002adc <printLCD+0x120>
800029f2:	f0 1f 00 3a 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(1, 3);
800029f6:	30 3b       	mov	r11,3
800029f8:	30 1c       	mov	r12,1
800029fa:	f0 1f 00 36 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("Light:");
800029fe:	4b 9c       	lddpc	r12,80002ae0 <printLCD+0x124>
80002a00:	f0 1f 00 36 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(1, 4);
80002a04:	30 4b       	mov	r11,4
80002a06:	30 1c       	mov	r12,1
80002a08:	f0 1f 00 32 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("# msg:");
80002a0c:	4b 6c       	lddpc	r12,80002ae4 <printLCD+0x128>
80002a0e:	f0 1f 00 33 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(12, 2);
80002a12:	30 2b       	mov	r11,2
80002a14:	30 cc       	mov	r12,12
80002a16:	f0 1f 00 2f 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("Abs:");
80002a1a:	4b 47       	lddpc	r7,80002ae8 <printLCD+0x12c>
80002a1c:	0e 9c       	mov	r12,r7
80002a1e:	f0 1f 00 2f 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(12, 3);
80002a22:	30 3b       	mov	r11,3
80002a24:	30 cc       	mov	r12,12
80002a26:	f0 1f 00 2b 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("Abs:");
80002a2a:	0e 9c       	mov	r12,r7
80002a2c:	f0 1f 00 2b 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(12, 4);
80002a30:	30 4b       	mov	r11,4
80002a32:	30 cc       	mov	r12,12
80002a34:	f0 1f 00 27 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("Abs:");
80002a38:	0e 9c       	mov	r12,r7
80002a3a:	f0 1f 00 28 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(8, 2);
80002a3e:	30 2b       	mov	r11,2
80002a40:	30 8c       	mov	r12,8
80002a42:	f0 1f 00 24 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("%d", temperPro);
80002a46:	4a a7       	lddpc	r7,80002aec <printLCD+0x130>
80002a48:	e8 09 10 64 	mul	r9,r4,100
80002a4c:	f2 05 0c 08 	divs	r8,r9,r5
80002a50:	5c 78       	castu.h	r8
80002a52:	1a d8       	st.w	--sp,r8
80002a54:	0e 9c       	mov	r12,r7
80002a56:	f0 1f 00 21 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(8, 3);
80002a5a:	30 3b       	mov	r11,3
80002a5c:	30 8c       	mov	r12,8
80002a5e:	f0 1f 00 1d 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("%d", lightPro);
80002a62:	e6 09 10 64 	mul	r9,r3,100
80002a66:	f2 05 0c 08 	divs	r8,r9,r5
80002a6a:	5c 78       	castu.h	r8
80002a6c:	1a d8       	st.w	--sp,r8
80002a6e:	0e 9c       	mov	r12,r7
80002a70:	f0 1f 00 1a 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(8, 4);
80002a74:	30 4b       	mov	r11,4
80002a76:	30 8c       	mov	r12,8
80002a78:	f0 1f 00 16 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("%d", i);
80002a7c:	49 d8       	lddpc	r8,80002af0 <printLCD+0x134>
80002a7e:	70 08       	ld.w	r8,r8[0x0]
80002a80:	1a d8       	st.w	--sp,r8
80002a82:	0e 9c       	mov	r12,r7
80002a84:	f0 1f 00 15 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(17, 2);
80002a88:	30 2b       	mov	r11,2
80002a8a:	31 1c       	mov	r12,17
80002a8c:	f0 1f 00 11 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("%d", temper);
80002a90:	1a d4       	st.w	--sp,r4
80002a92:	0e 9c       	mov	r12,r7
80002a94:	f0 1f 00 11 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(17, 3);
80002a98:	30 3b       	mov	r11,3
80002a9a:	31 1c       	mov	r12,17
80002a9c:	f0 1f 00 0d 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("%d", light);
80002aa0:	1a d3       	st.w	--sp,r3
80002aa2:	0e 9c       	mov	r12,r7
80002aa4:	f0 1f 00 0d 	mcall	80002ad8 <printLCD+0x11c>
	dip204_set_cursor_position(17, 4);
80002aa8:	30 4b       	mov	r11,4
80002aaa:	31 1c       	mov	r12,17
80002aac:	f0 1f 00 09 	mcall	80002ad0 <printLCD+0x114>
	dip204_printf_string("%d", msg[5]);
80002ab0:	0d d8       	ld.ub	r8,r6[0x5]
80002ab2:	1a d8       	st.w	--sp,r8
80002ab4:	0e 9c       	mov	r12,r7
80002ab6:	f0 1f 00 09 	mcall	80002ad8 <printLCD+0x11c>
	dip204_hide_cursor();
80002aba:	f0 1f 00 0f 	mcall	80002af4 <printLCD+0x138>
80002abe:	2f ad       	sub	sp,-24
}
80002ac0:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80002ac4:	00 00       	add	r0,r0
80002ac6:	06 64       	and	r4,r3
80002ac8:	00 00       	add	r0,r0
80002aca:	00 08       	add	r8,r0
80002acc:	80 00       	ld.sh	r0,r0[0x0]
80002ace:	2f 04       	sub	r4,-16
80002ad0:	80 00       	ld.sh	r0,r0[0x0]
80002ad2:	2e 78       	sub	r8,-25
80002ad4:	80 00       	ld.sh	r0,r0[0x0]
80002ad6:	92 7c       	ld.sh	r12,r9[0xe]
80002ad8:	80 00       	ld.sh	r0,r0[0x0]
80002ada:	2d e0       	sub	r0,-34
80002adc:	80 00       	ld.sh	r0,r0[0x0]
80002ade:	92 8c       	ld.uh	r12,r9[0x0]
80002ae0:	80 00       	ld.sh	r0,r0[0x0]
80002ae2:	92 94       	ld.uh	r4,r9[0x2]
80002ae4:	80 00       	ld.sh	r0,r0[0x0]
80002ae6:	92 9c       	ld.uh	r12,r9[0x2]
80002ae8:	80 00       	ld.sh	r0,r0[0x0]
80002aea:	92 a4       	ld.uh	r4,r9[0x4]
80002aec:	80 00       	ld.sh	r0,r0[0x0]
80002aee:	92 ac       	ld.uh	r12,r9[0x4]
80002af0:	00 00       	add	r0,r0
80002af2:	06 6c       	and	r12,r3
80002af4:	80 00       	ld.sh	r0,r0[0x0]
80002af6:	2e d4       	sub	r4,-19

80002af8 <readADC>:
UINT32 Ident;

int i;

void readADC(void)
{
80002af8:	eb cd 40 80 	pushm	r7,lr
	UINT32 readPot, readLight, readTemp;
	UINT16 potMSB, potLSB, lightMSB, lightLSB, tempMSB, tempLSB;

		
	//Reading ADC channels
	readLight = adc_get_value(&AVR32_ADC, ADC_LIGHT_CHANNEL);
80002afc:	30 2b       	mov	r11,2
80002afe:	fe 7c 3c 00 	mov	r12,-50176
80002b02:	f0 1f 00 0d 	mcall	80002b34 <readADC+0x3c>
80002b06:	18 97       	mov	r7,r12
	readTemp = adc_get_value(&AVR32_ADC, ADC_TEMPERATURE_CHANNEL);
80002b08:	30 0b       	mov	r11,0
80002b0a:	fe 7c 3c 00 	mov	r12,-50176
80002b0e:	f0 1f 00 0a 	mcall	80002b34 <readADC+0x3c>
	lightLSB = readLight & 0x000000FF;
				
	tempMSB = (readTemp >> 8) & 0x00000003;
	tempLSB = readTemp & 0x000000FF;
	
	msg[0] = lightMSB;
80002b12:	48 a8       	lddpc	r8,80002b38 <readADC+0x40>
80002b14:	f3 d7 c1 02 	bfextu	r9,r7,0x8,0x2
80002b18:	b0 89       	st.b	r8[0x0],r9
	msg[1] = lightLSB;
80002b1a:	b0 97       	st.b	r8[0x1],r7
	msg[2] = tempMSB;
80002b1c:	f3 dc c1 02 	bfextu	r9,r12,0x8,0x2
80002b20:	b0 a9       	st.b	r8[0x2],r9
	msg[3] = tempLSB;
80002b22:	b0 bc       	st.b	r8[0x3],r12
	msg[4] = 0;
80002b24:	30 09       	mov	r9,0
80002b26:	b0 c9       	st.b	r8[0x4],r9
	msg[5] = 0;
80002b28:	b0 d9       	st.b	r8[0x5],r9
	msg[6] = 0;
80002b2a:	b0 e9       	st.b	r8[0x6],r9
	msg[7] = 0;
80002b2c:	b0 f9       	st.b	r8[0x7],r9

}
80002b2e:	e3 cd 80 80 	ldm	sp++,r7,pc
80002b32:	00 00       	add	r0,r0
80002b34:	80 00       	ld.sh	r0,r0[0x0]
80002b36:	20 28       	sub	r8,2
80002b38:	00 00       	add	r0,r0
80002b3a:	06 64       	and	r4,r3

80002b3c <main>:
		++l;
	}
	return l;
}

int main(void) {
80002b3c:	d4 31       	pushm	r0-r7,lr
80002b3e:	20 3d       	sub	sp,12
	
	initBoard();
80002b40:	f0 1f 00 31 	mcall	80002c04 <main+0xc8>

	UINT16 Mask = 0xFFF0; 
	UINT16 flt = 0x1200;
	UINT16 Flt[] = {flt,flt,flt,flt,flt,flt};
80002b44:	e0 68 12 00 	mov	r8,4608
80002b48:	ba 08       	st.h	sp[0x0],r8
80002b4a:	ba 18       	st.h	sp[0x2],r8
80002b4c:	ba 28       	st.h	sp[0x4],r8
80002b4e:	ba 38       	st.h	sp[0x6],r8
80002b50:	ba 48       	st.h	sp[0x8],r8
80002b52:	ba 58       	st.h	sp[0xa],r8
		
	InitializeCANExtended(0, CAN_250kbps, Mask, Flt);
80002b54:	1a 99       	mov	r9,sp
80002b56:	e0 6a ff f0 	mov	r10,65520
80002b5a:	30 7b       	mov	r11,7
80002b5c:	30 0c       	mov	r12,0
80002b5e:	f0 1f 00 2b 	mcall	80002c08 <main+0xcc>

	UINT8 nodes;

	while(1){
		
		adc_start(&AVR32_ADC);
80002b62:	fe 73 3c 00 	mov	r3,-50176
		ids &= 0x0;
80002b66:	4a a2       	lddpc	r2,80002c0c <main+0xd0>
80002b68:	30 05       	mov	r5,0
		
		//Clear memory contents
		ClearMessages(msg);
80002b6a:	4a a6       	lddpc	r6,80002c10 <main+0xd4>
		//Read any message available
		if(CANRxReady(0)){
80002b6c:	30 07       	mov	r7,0
			if( CANGetMsg(0, &Ident, msg, &mSize )) // Gets message and returns //TRUE if message received.
80002b6e:	4a a0       	lddpc	r0,80002c14 <main+0xd8>
80002b70:	4a a1       	lddpc	r1,80002c18 <main+0xdc>

	UINT8 nodes;

	while(1){
		
		adc_start(&AVR32_ADC);
80002b72:	06 9c       	mov	r12,r3
80002b74:	f0 1f 00 2a 	mcall	80002c1c <main+0xe0>
		ids &= 0x0;
80002b78:	a4 05       	st.h	r2[0x0],r5
		
		//Clear memory contents
		ClearMessages(msg);
80002b7a:	0c 9c       	mov	r12,r6
80002b7c:	f0 1f 00 29 	mcall	80002c20 <main+0xe4>
		//Read any message available
		if(CANRxReady(0)){
80002b80:	0e 9c       	mov	r12,r7
80002b82:	f0 1f 00 29 	mcall	80002c24 <main+0xe8>
80002b86:	c0 c0       	breq	80002b9e <main+0x62>
			if( CANGetMsg(0, &Ident, msg, &mSize )) // Gets message and returns //TRUE if message received.
80002b88:	00 99       	mov	r9,r0
80002b8a:	0c 9a       	mov	r10,r6
80002b8c:	02 9b       	mov	r11,r1
80002b8e:	0e 9c       	mov	r12,r7
80002b90:	f0 1f 00 26 	mcall	80002c28 <main+0xec>
80002b94:	c0 50       	breq	80002b9e <main+0x62>
			{	

				nodes = nodeCount(Ident);			
80002b96:	82 9c       	ld.uh	r12,r1[0x2]
80002b98:	f0 1f 00 25 	mcall	80002c2c <main+0xf0>
80002b9c:	18 94       	mov	r4,r12
			}
		}

		if(CANTxReady(0))
80002b9e:	0e 9c       	mov	r12,r7
80002ba0:	f0 1f 00 24 	mcall	80002c30 <main+0xf4>
80002ba4:	c2 30       	breq	80002bea <main+0xae>
		{
			
			readADC();
80002ba6:	f0 1f 00 24 	mcall	80002c34 <main+0xf8>
			CANSendMsg(0, 0x120E, msg, 8, 0);
80002baa:	0e 98       	mov	r8,r7
80002bac:	30 89       	mov	r9,8
80002bae:	0c 9a       	mov	r10,r6
80002bb0:	e0 6b 12 0e 	mov	r11,4622
80002bb4:	0e 9c       	mov	r12,r7
80002bb6:	f0 1f 00 21 	mcall	80002c38 <main+0xfc>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002bba:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002bbe:	e0 6a 1b 00 	mov	r10,6912
80002bc2:	ea 1a 00 b7 	orh	r10,0xb7
80002bc6:	f0 0a 00 0a 	add	r10,r8,r10
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002bca:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002bce:	14 38       	cp.w	r8,r10
80002bd0:	e0 88 00 08 	brls	80002be0 <main+0xa4>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002bd4:	12 38       	cp.w	r8,r9
80002bd6:	fe 98 ff fa 	brls	80002bca <main+0x8e>
80002bda:	12 3a       	cp.w	r10,r9
80002bdc:	c0 73       	brcs	80002bea <main+0xae>
80002bde:	cf 6b       	rjmp	80002bca <main+0x8e>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002be0:	12 38       	cp.w	r8,r9
80002be2:	e0 8b 00 04 	brhi	80002bea <main+0xae>
80002be6:	12 3a       	cp.w	r10,r9
80002be8:	cf 12       	brcc	80002bca <main+0x8e>
			delay_ms(1000);
		}

		printLCD();
80002bea:	f0 1f 00 15 	mcall	80002c3c <main+0x100>
		dip204_set_cursor_position(15, 1);
80002bee:	30 1b       	mov	r11,1
80002bf0:	30 fc       	mov	r12,15
80002bf2:	f0 1f 00 14 	mcall	80002c40 <main+0x104>
		dip204_printf_string("%d", nodes);
80002bf6:	1a d4       	st.w	--sp,r4
80002bf8:	49 3c       	lddpc	r12,80002c44 <main+0x108>
80002bfa:	f0 1f 00 14 	mcall	80002c48 <main+0x10c>
	}
80002bfe:	2f fd       	sub	sp,-4
80002c00:	cb 9b       	rjmp	80002b72 <main+0x36>
80002c02:	00 00       	add	r0,r0
80002c04:	80 00       	ld.sh	r0,r0[0x0]
80002c06:	29 58       	sub	r8,-107
80002c08:	80 00       	ld.sh	r0,r0[0x0]
80002c0a:	25 ec       	sub	r12,94
80002c0c:	00 00       	add	r0,r0
80002c0e:	06 60       	and	r0,r3
80002c10:	00 00       	add	r0,r0
80002c12:	06 64       	and	r4,r3
80002c14:	00 00       	add	r0,r0
80002c16:	06 70       	tst	r0,r3
80002c18:	00 00       	add	r0,r0
80002c1a:	06 74       	tst	r4,r3
80002c1c:	80 00       	ld.sh	r0,r0[0x0]
80002c1e:	20 08       	sub	r8,0
80002c20:	80 00       	ld.sh	r0,r0[0x0]
80002c22:	20 50       	sub	r0,5
80002c24:	80 00       	ld.sh	r0,r0[0x0]
80002c26:	21 d4       	sub	r4,29
80002c28:	80 00       	ld.sh	r0,r0[0x0]
80002c2a:	27 7c       	sub	r12,119
80002c2c:	80 00       	ld.sh	r0,r0[0x0]
80002c2e:	28 fc       	sub	r12,-113
80002c30:	80 00       	ld.sh	r0,r0[0x0]
80002c32:	21 e8       	sub	r8,30
80002c34:	80 00       	ld.sh	r0,r0[0x0]
80002c36:	2a f8       	sub	r8,-81
80002c38:	80 00       	ld.sh	r0,r0[0x0]
80002c3a:	26 44       	sub	r4,100
80002c3c:	80 00       	ld.sh	r0,r0[0x0]
80002c3e:	29 bc       	sub	r12,-101
80002c40:	80 00       	ld.sh	r0,r0[0x0]
80002c42:	2e 78       	sub	r8,-25
80002c44:	80 00       	ld.sh	r0,r0[0x0]
80002c46:	92 ac       	ld.uh	r12,r9[0x4]
80002c48:	80 00       	ld.sh	r0,r0[0x0]
80002c4a:	2d e0       	sub	r0,-34

80002c4c <LED_On>:
  tLED_DESCRIPTOR *led_descriptor = &LED_DESCRIPTOR[0] - 1;
  volatile avr32_gpio_port_t *led_gpio_port;
  U8 led_shift;

  // Make sure only existing LEDs are specified.
  leds &= (1 << LED_COUNT) - 1;
80002c4c:	f9 dc c0 08 	bfextu	r12,r12,0x0,0x8

  // Update the saved state of all LEDs with the requested changes.
  Set_bits(LED_State, leds);
80002c50:	49 18       	lddpc	r8,80002c94 <LED_On+0x48>
80002c52:	70 09       	ld.w	r9,r8[0x0]
80002c54:	f9 e9 10 09 	or	r9,r12,r9
80002c58:	91 09       	st.w	r8[0x0],r9

  // While there are specified LEDs left to manage...
  while (leds)
80002c5a:	58 0c       	cp.w	r12,0
80002c5c:	5e 0c       	reteq	r12
80002c5e:	48 f8       	lddpc	r8,80002c98 <LED_On+0x4c>
80002c60:	21 08       	sub	r8,16
  {
    // Select the next specified LED and turn it on.
    led_shift = 1 + ctz(leds);
80002c62:	18 9a       	mov	r10,r12
80002c64:	5c 9a       	brev	r10
80002c66:	f4 0a 12 00 	clz	r10,r10
80002c6a:	2f fa       	sub	r10,-1
    led_descriptor += led_shift;
80002c6c:	f4 09 15 04 	lsl	r9,r10,0x4
80002c70:	12 08       	add	r8,r9
    led_gpio_port = &AVR32_GPIO.port[led_descriptor->GPIO.PORT];
80002c72:	70 09       	ld.w	r9,r8[0x0]
80002c74:	a9 69       	lsl	r9,0x8
80002c76:	e0 29 f0 00 	sub	r9,61440
    led_gpio_port->ovrc  = led_descriptor->GPIO.PIN_MASK;
80002c7a:	70 1b       	ld.w	r11,r8[0x4]
80002c7c:	f3 4b 00 58 	st.w	r9[88],r11
    led_gpio_port->oders = led_descriptor->GPIO.PIN_MASK;
80002c80:	70 1b       	ld.w	r11,r8[0x4]
80002c82:	f3 4b 00 44 	st.w	r9[68],r11
    led_gpio_port->gpers = led_descriptor->GPIO.PIN_MASK;
80002c86:	70 1b       	ld.w	r11,r8[0x4]
80002c88:	93 1b       	st.w	r9[0x4],r11
    leds >>= led_shift;
80002c8a:	f8 0a 0a 4c 	lsr	r12,r12,r10

  // Update the saved state of all LEDs with the requested changes.
  Set_bits(LED_State, leds);

  // While there are specified LEDs left to manage...
  while (leds)
80002c8e:	ce a1       	brne	80002c62 <LED_On+0x16>
80002c90:	5e fc       	retal	r12
80002c92:	00 00       	add	r0,r0
80002c94:	00 00       	add	r0,r0
80002c96:	00 0c       	add	r12,r0
80002c98:	80 00       	ld.sh	r0,r0[0x0]
80002c9a:	92 b0       	ld.uh	r0,r9[0x6]

80002c9c <LED_Off>:
  tLED_DESCRIPTOR *led_descriptor = &LED_DESCRIPTOR[0] - 1;
  volatile avr32_gpio_port_t *led_gpio_port;
  U8 led_shift;

  // Make sure only existing LEDs are specified.
  leds &= (1 << LED_COUNT) - 1;
80002c9c:	f9 dc c0 08 	bfextu	r12,r12,0x0,0x8

  // Update the saved state of all LEDs with the requested changes.
  Clr_bits(LED_State, leds);
80002ca0:	49 28       	lddpc	r8,80002ce8 <LED_Off+0x4c>
80002ca2:	70 09       	ld.w	r9,r8[0x0]
80002ca4:	f8 0a 11 ff 	rsub	r10,r12,-1
80002ca8:	f5 e9 00 09 	and	r9,r10,r9
80002cac:	91 09       	st.w	r8[0x0],r9

  // While there are specified LEDs left to manage...
  while (leds)
80002cae:	58 0c       	cp.w	r12,0
80002cb0:	5e 0c       	reteq	r12
80002cb2:	48 f8       	lddpc	r8,80002cec <LED_Off+0x50>
80002cb4:	21 08       	sub	r8,16
  {
    // Select the next specified LED and turn it off.
    led_shift = 1 + ctz(leds);
80002cb6:	18 9a       	mov	r10,r12
80002cb8:	5c 9a       	brev	r10
80002cba:	f4 0a 12 00 	clz	r10,r10
80002cbe:	2f fa       	sub	r10,-1
    led_descriptor += led_shift;
80002cc0:	f4 09 15 04 	lsl	r9,r10,0x4
80002cc4:	12 08       	add	r8,r9
    led_gpio_port = &AVR32_GPIO.port[led_descriptor->GPIO.PORT];
80002cc6:	70 09       	ld.w	r9,r8[0x0]
80002cc8:	a9 69       	lsl	r9,0x8
80002cca:	e0 29 f0 00 	sub	r9,61440
    led_gpio_port->ovrs  = led_descriptor->GPIO.PIN_MASK;
80002cce:	70 1b       	ld.w	r11,r8[0x4]
80002cd0:	f3 4b 00 54 	st.w	r9[84],r11
    led_gpio_port->oders = led_descriptor->GPIO.PIN_MASK;
80002cd4:	70 1b       	ld.w	r11,r8[0x4]
80002cd6:	f3 4b 00 44 	st.w	r9[68],r11
    led_gpio_port->gpers = led_descriptor->GPIO.PIN_MASK;
80002cda:	70 1b       	ld.w	r11,r8[0x4]
80002cdc:	93 1b       	st.w	r9[0x4],r11
    leds >>= led_shift;
80002cde:	f8 0a 0a 4c 	lsr	r12,r12,r10

  // Update the saved state of all LEDs with the requested changes.
  Clr_bits(LED_State, leds);

  // While there are specified LEDs left to manage...
  while (leds)
80002ce2:	ce a1       	brne	80002cb6 <LED_Off+0x1a>
80002ce4:	5e fc       	retal	r12
80002ce6:	00 00       	add	r0,r0
80002ce8:	00 00       	add	r0,r0
80002cea:	00 0c       	add	r12,r0
80002cec:	80 00       	ld.sh	r0,r0[0x0]
80002cee:	92 b0       	ld.uh	r0,r9[0x6]

80002cf0 <dip204_select>:

/*! \brief function to select the LCD
 *
 */
static void dip204_select(void)
{
80002cf0:	d4 01       	pushm	lr
  spi_selectChip(DIP204_SPI, DIP204_SPI_NPCS);
80002cf2:	30 2b       	mov	r11,2
80002cf4:	fe 7c 28 00 	mov	r12,-55296
80002cf8:	f0 1f 00 02 	mcall	80002d00 <dip204_select+0x10>
}
80002cfc:	d8 02       	popm	pc
80002cfe:	00 00       	add	r0,r0
80002d00:	80 00       	ld.sh	r0,r0[0x0]
80002d02:	34 9e       	mov	lr,73

80002d04 <dip204_write_byte>:
 *
 *  \param  byte  Input. byte to write to the LCD (D7 .. D0)
 *
 */
static void dip204_write_byte(unsigned char byte)
{
80002d04:	eb cd 40 80 	pushm	r7,lr
  unsigned char reverse;

  switch (byte)
80002d08:	f8 c8 ff f8 	sub	r8,r12,-8
80002d0c:	30 69       	mov	r9,6
80002d0e:	f2 08 18 00 	cp.b	r8,r9
80002d12:	e0 8b 00 0f 	brhi	80002d30 <dip204_write_byte+0x2c>
80002d16:	30 19       	mov	r9,1
80002d18:	f2 08 09 48 	lsl	r8,r9,r8
80002d1c:	e2 18 00 55 	andl	r8,0x55,COH
80002d20:	c0 80       	breq	80002d30 <dip204_write_byte+0x2c>
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, byte);
80002d22:	18 9b       	mov	r11,r12
80002d24:	fe 7c 28 00 	mov	r12,-55296
80002d28:	f0 1f 00 0c 	mcall	80002d58 <dip204_write_byte+0x54>
      Assert( SPI_OK==spi_status );
      break;
80002d2c:	e3 cd 80 80 	ldm	sp++,r7,pc
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002d30:	5c 9c       	brev	r12
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
80002d32:	f8 07 16 18 	lsr	r7,r12,0x18
80002d36:	0e 9b       	mov	r11,r7
80002d38:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002d3c:	fe 7c 28 00 	mov	r12,-55296
80002d40:	f0 1f 00 06 	mcall	80002d58 <dip204_write_byte+0x54>
      Assert( SPI_OK==spi_status );
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
80002d44:	ee 0b 15 04 	lsl	r11,r7,0x4
80002d48:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002d4c:	fe 7c 28 00 	mov	r12,-55296
80002d50:	f0 1f 00 02 	mcall	80002d58 <dip204_write_byte+0x54>
80002d54:	e3 cd 80 80 	ldm	sp++,r7,pc
80002d58:	80 00       	ld.sh	r0,r0[0x0]
80002d5a:	35 ce       	mov	lr,92

80002d5c <dip204_read_byte>:
 *
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
80002d5c:	eb cd 40 c0 	pushm	r6-r7,lr
80002d60:	20 1d       	sub	sp,4
80002d62:	18 96       	mov	r6,r12
  unsigned short reverse = 0x00;
80002d64:	fa c7 ff fc 	sub	r7,sp,-4
80002d68:	30 08       	mov	r8,0
80002d6a:	0e e8       	st.h	--r7,r8

  /* dummy write */
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_write(DIP204_SPI, 0x00);
80002d6c:	30 0b       	mov	r11,0
80002d6e:	fe 7c 28 00 	mov	r12,-55296
80002d72:	f0 1f 00 08 	mcall	80002d90 <dip204_read_byte+0x34>
  Assert( SPI_OK==spi_status );
  /* read RSR register */
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_read(DIP204_SPI, &reverse);
80002d76:	0e 9b       	mov	r11,r7
80002d78:	fe 7c 28 00 	mov	r12,-55296
80002d7c:	f0 1f 00 06 	mcall	80002d94 <dip204_read_byte+0x38>
  Assert( SPI_OK==spi_status );
  /* Revert received byte (issued LSB first by the LCD) */
  *byte = bit_reverse8(reverse);
80002d80:	1b b8       	ld.ub	r8,sp[0x3]
80002d82:	5c 98       	brev	r8
80002d84:	b9 88       	lsr	r8,0x18
80002d86:	ac 88       	st.b	r6[0x0],r8
}
80002d88:	2f fd       	sub	sp,-4
80002d8a:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002d8e:	00 00       	add	r0,r0
80002d90:	80 00       	ld.sh	r0,r0[0x0]
80002d92:	35 ce       	mov	lr,92
80002d94:	80 00       	ld.sh	r0,r0[0x0]
80002d96:	35 f2       	mov	r2,95

80002d98 <dip204_wait_busy>:

/*! \brief function to wait for LCD becomes not busy
 *
 */
static void dip204_wait_busy(void)
{
80002d98:	eb cd 40 c0 	pushm	r6-r7,lr
80002d9c:	20 1d       	sub	sp,4
  unsigned char status = 0x00;
80002d9e:	fa c7 ff fc 	sub	r7,sp,-4
80002da2:	30 08       	mov	r8,0
80002da4:	0e f8       	st.b	--r7,r8

  /* send read command to LCD */
  dip204_write_byte(DIP204_READ_COMMAND);
80002da6:	e0 6c 00 fc 	mov	r12,252
80002daa:	f0 1f 00 07 	mcall	80002dc4 <dip204_wait_busy+0x2c>
  /* read next byte */
  do {
  dip204_read_byte(&status);
  /* keep D7 to know status */
  }while (status & 0x80);
80002dae:	30 06       	mov	r6,0

  /* send read command to LCD */
  dip204_write_byte(DIP204_READ_COMMAND);
  /* read next byte */
  do {
  dip204_read_byte(&status);
80002db0:	0e 9c       	mov	r12,r7
80002db2:	f0 1f 00 06 	mcall	80002dc8 <dip204_wait_busy+0x30>
  /* keep D7 to know status */
  }while (status & 0x80);
80002db6:	1b b8       	ld.ub	r8,sp[0x3]
80002db8:	ec 08 18 00 	cp.b	r8,r6
80002dbc:	cf a5       	brlt	80002db0 <dip204_wait_busy+0x18>
}
80002dbe:	2f fd       	sub	sp,-4
80002dc0:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002dc4:	80 00       	ld.sh	r0,r0[0x0]
80002dc6:	2d 04       	sub	r4,-48
80002dc8:	80 00       	ld.sh	r0,r0[0x0]
80002dca:	2d 5c       	sub	r12,-43

80002dcc <dip204_unselect>:

/*! \brief function to unselect the LCD
 *
 */
static void dip204_unselect(void)
{
80002dcc:	d4 01       	pushm	lr
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_unselectChip(DIP204_SPI, DIP204_SPI_NPCS);
80002dce:	30 2b       	mov	r11,2
80002dd0:	fe 7c 28 00 	mov	r12,-55296
80002dd4:	f0 1f 00 02 	mcall	80002ddc <dip204_unselect+0x10>
  Assert( SPI_OK==spi_status );
}
80002dd8:	d8 02       	popm	pc
80002dda:	00 00       	add	r0,r0
80002ddc:	80 00       	ld.sh	r0,r0[0x0]
80002dde:	34 ea       	mov	r10,78

80002de0 <dip204_printf_string>:
  dip204_unselect();
}


void dip204_printf_string(const char *format, ...)
{
80002de0:	d4 21       	pushm	r4-r7,lr
80002de2:	20 6d       	sub	sp,24
  va_list arg;
  char string[21];
  unsigned char i=0;

  va_start(arg, format);
  i = vsprintf(string, format, arg);
80002de4:	fa ca ff d4 	sub	r10,sp,-44
80002de8:	18 9b       	mov	r11,r12
80002dea:	1a 9c       	mov	r12,sp
80002dec:	f0 1f 00 1e 	mcall	80002e64 <dip204_printf_string+0x84>
80002df0:	5c 5c       	castu.b	r12
  while (i < sizeof(string) - 1) string[i++] = '\0';
80002df2:	31 38       	mov	r8,19
80002df4:	f0 0c 18 00 	cp.b	r12,r8
80002df8:	e0 8b 00 0e 	brhi	80002e14 <dip204_printf_string+0x34>
80002dfc:	30 0a       	mov	r10,0
80002dfe:	31 49       	mov	r9,20
80002e00:	fa c8 ff e8 	sub	r8,sp,-24
80002e04:	18 08       	add	r8,r12
80002e06:	f1 6a ff e8 	st.b	r8[-24],r10
80002e0a:	2f fc       	sub	r12,-1
80002e0c:	5c 5c       	castu.b	r12
80002e0e:	f2 0c 18 00 	cp.b	r12,r9
80002e12:	cf 71       	brne	80002e00 <dip204_printf_string+0x20>
  va_end(arg);
  dip204_select();
80002e14:	f0 1f 00 15 	mcall	80002e68 <dip204_printf_string+0x88>
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002e18:	30 08       	mov	r8,0
80002e1a:	1b 89       	ld.ub	r9,sp[0x0]
80002e1c:	f0 09 18 00 	cp.b	r9,r8
80002e20:	c1 e0       	breq	80002e5c <dip204_printf_string+0x7c>
80002e22:	30 06       	mov	r6,0
80002e24:	0c 97       	mov	r7,r6
  {
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
80002e26:	e0 64 00 fa 	mov	r4,250
  while (i < sizeof(string) - 1) string[i++] = '\0';
  va_end(arg);
  dip204_select();
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002e2a:	10 95       	mov	r5,r8
  {
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
80002e2c:	08 9c       	mov	r12,r4
80002e2e:	f0 1f 00 10 	mcall	80002e6c <dip204_printf_string+0x8c>
    /* Send byte */
    dip204_write_byte(string[i]);
80002e32:	fa c8 ff e8 	sub	r8,sp,-24
80002e36:	f0 06 00 06 	add	r6,r8,r6
80002e3a:	ed 3c ff e8 	ld.ub	r12,r6[-24]
80002e3e:	f0 1f 00 0c 	mcall	80002e6c <dip204_printf_string+0x8c>
    /* go to next char */
    i++;
80002e42:	2f f7       	sub	r7,-1
80002e44:	5c 57       	castu.b	r7
    dip204_wait_busy();
80002e46:	f0 1f 00 0b 	mcall	80002e70 <dip204_printf_string+0x90>
  while (i < sizeof(string) - 1) string[i++] = '\0';
  va_end(arg);
  dip204_select();
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002e4a:	0e 96       	mov	r6,r7
80002e4c:	fa c8 ff e8 	sub	r8,sp,-24
80002e50:	0e 08       	add	r8,r7
80002e52:	f1 38 ff e8 	ld.ub	r8,r8[-24]
80002e56:	ea 08 18 00 	cp.b	r8,r5
80002e5a:	ce 91       	brne	80002e2c <dip204_printf_string+0x4c>
    dip204_write_byte(string[i]);
    /* go to next char */
    i++;
    dip204_wait_busy();
  }
  dip204_unselect();
80002e5c:	f0 1f 00 06 	mcall	80002e74 <dip204_printf_string+0x94>
}
80002e60:	2f ad       	sub	sp,-24
80002e62:	d8 22       	popm	r4-r7,pc
80002e64:	80 00       	ld.sh	r0,r0[0x0]
80002e66:	37 c8       	mov	r8,124
80002e68:	80 00       	ld.sh	r0,r0[0x0]
80002e6a:	2c f0       	sub	r0,-49
80002e6c:	80 00       	ld.sh	r0,r0[0x0]
80002e6e:	2d 04       	sub	r4,-48
80002e70:	80 00       	ld.sh	r0,r0[0x0]
80002e72:	2d 98       	sub	r8,-39
80002e74:	80 00       	ld.sh	r0,r0[0x0]
80002e76:	2d cc       	sub	r12,-36

80002e78 <dip204_set_cursor_position>:
  dip204_set_cursor_position(column, line);
}


void dip204_set_cursor_position(unsigned char column, unsigned char line)
{
80002e78:	eb cd 40 c0 	pushm	r6-r7,lr
80002e7c:	18 96       	mov	r6,r12
80002e7e:	16 97       	mov	r7,r11
  unsigned char address = 0;

  dip204_select();
80002e80:	f0 1f 00 11 	mcall	80002ec4 <dip204_set_cursor_position+0x4c>
  if ((column <= 20) && (line <= 4))
80002e84:	31 48       	mov	r8,20
80002e86:	f0 06 18 00 	cp.b	r6,r8
80002e8a:	5f 89       	srls	r9
80002e8c:	30 48       	mov	r8,4
80002e8e:	f0 07 18 00 	cp.b	r7,r8
80002e92:	5f 88       	srls	r8
80002e94:	f3 e8 00 08 	and	r8,r9,r8
80002e98:	c0 31       	brne	80002e9e <dip204_set_cursor_position+0x26>
80002e9a:	30 06       	mov	r6,0
80002e9c:	c0 68       	rjmp	80002ea8 <dip204_set_cursor_position+0x30>
  {
    /* Calculate DDRAM address from line and row values */
    address = ( (line-1) * 32 ) + ( column-1 ) + 128;
80002e9e:	28 16       	sub	r6,-127
80002ea0:	20 17       	sub	r7,1
80002ea2:	a5 77       	lsl	r7,0x5
80002ea4:	0e 06       	add	r6,r7
80002ea6:	5c 56       	castu.b	r6
  }
  /* Send Command Start Byte */
  dip204_write_byte(DIP204_WRITE_COMMAND);
80002ea8:	e0 6c 00 f8 	mov	r12,248
80002eac:	f0 1f 00 07 	mcall	80002ec8 <dip204_set_cursor_position+0x50>
  /* Send Address lower Nibble */
  dip204_write_byte(address);
80002eb0:	0c 9c       	mov	r12,r6
80002eb2:	f0 1f 00 06 	mcall	80002ec8 <dip204_set_cursor_position+0x50>
  dip204_wait_busy();
80002eb6:	f0 1f 00 06 	mcall	80002ecc <dip204_set_cursor_position+0x54>
  dip204_unselect();
80002eba:	f0 1f 00 06 	mcall	80002ed0 <dip204_set_cursor_position+0x58>
}
80002ebe:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002ec2:	00 00       	add	r0,r0
80002ec4:	80 00       	ld.sh	r0,r0[0x0]
80002ec6:	2c f0       	sub	r0,-49
80002ec8:	80 00       	ld.sh	r0,r0[0x0]
80002eca:	2d 04       	sub	r4,-48
80002ecc:	80 00       	ld.sh	r0,r0[0x0]
80002ece:	2d 98       	sub	r8,-39
80002ed0:	80 00       	ld.sh	r0,r0[0x0]
80002ed2:	2d cc       	sub	r12,-36

80002ed4 <dip204_hide_cursor>:
  dip204_unselect();
}


void dip204_hide_cursor(void)
{
80002ed4:	d4 01       	pushm	lr
  /* select the LCD chip */
  dip204_select();
80002ed6:	f0 1f 00 08 	mcall	80002ef4 <dip204_hide_cursor+0x20>
  /* Send Command Start Byte */
  dip204_write_byte(DIP204_WRITE_COMMAND);
80002eda:	e0 6c 00 f8 	mov	r12,248
80002ede:	f0 1f 00 07 	mcall	80002ef8 <dip204_hide_cursor+0x24>
  /* Send "Display On Command: Display On, Cursor On, Blink On" */
  dip204_write_byte(0x0C);
80002ee2:	30 cc       	mov	r12,12
80002ee4:	f0 1f 00 05 	mcall	80002ef8 <dip204_hide_cursor+0x24>
  dip204_wait_busy();
80002ee8:	f0 1f 00 05 	mcall	80002efc <dip204_hide_cursor+0x28>
  /* unselect chip */
  dip204_unselect();
80002eec:	f0 1f 00 05 	mcall	80002f00 <dip204_hide_cursor+0x2c>
}
80002ef0:	d8 02       	popm	pc
80002ef2:	00 00       	add	r0,r0
80002ef4:	80 00       	ld.sh	r0,r0[0x0]
80002ef6:	2c f0       	sub	r0,-49
80002ef8:	80 00       	ld.sh	r0,r0[0x0]
80002efa:	2d 04       	sub	r4,-48
80002efc:	80 00       	ld.sh	r0,r0[0x0]
80002efe:	2d 98       	sub	r8,-39
80002f00:	80 00       	ld.sh	r0,r0[0x0]
80002f02:	2d cc       	sub	r12,-36

80002f04 <dip204_clear_display>:
  dip204_unselect();
}


void dip204_clear_display(void)
{
80002f04:	d4 01       	pushm	lr
  dip204_select();
80002f06:	f0 1f 00 13 	mcall	80002f50 <dip204_clear_display+0x4c>
  /* Send Command Start Byte */
  dip204_write_byte(DIP204_WRITE_COMMAND);
80002f0a:	e0 6c 00 f8 	mov	r12,248
80002f0e:	f0 1f 00 12 	mcall	80002f54 <dip204_clear_display+0x50>
  /* Send Display Clear Command */
  dip204_write_byte(0x01);
80002f12:	30 1c       	mov	r12,1
80002f14:	f0 1f 00 10 	mcall	80002f54 <dip204_clear_display+0x50>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002f18:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002f1c:	e0 69 bb 80 	mov	r9,48000
80002f20:	f0 09 00 0a 	add	r10,r8,r9
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002f24:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002f28:	14 38       	cp.w	r8,r10
80002f2a:	e0 88 00 08 	brls	80002f3a <dip204_clear_display+0x36>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002f2e:	12 38       	cp.w	r8,r9
80002f30:	fe 98 ff fa 	brls	80002f24 <dip204_clear_display+0x20>
80002f34:	12 3a       	cp.w	r10,r9
80002f36:	c0 73       	brcs	80002f44 <dip204_clear_display+0x40>
80002f38:	cf 6b       	rjmp	80002f24 <dip204_clear_display+0x20>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002f3a:	12 38       	cp.w	r8,r9
80002f3c:	e0 8b 00 04 	brhi	80002f44 <dip204_clear_display+0x40>
80002f40:	12 3a       	cp.w	r10,r9
80002f42:	cf 12       	brcc	80002f24 <dip204_clear_display+0x20>
  /* Wait for command execution */
  delay_ms(4);
  dip204_wait_busy();
80002f44:	f0 1f 00 05 	mcall	80002f58 <dip204_clear_display+0x54>
  dip204_unselect();
80002f48:	f0 1f 00 05 	mcall	80002f5c <dip204_clear_display+0x58>
}
80002f4c:	d8 02       	popm	pc
80002f4e:	00 00       	add	r0,r0
80002f50:	80 00       	ld.sh	r0,r0[0x0]
80002f52:	2c f0       	sub	r0,-49
80002f54:	80 00       	ld.sh	r0,r0[0x0]
80002f56:	2d 04       	sub	r4,-48
80002f58:	80 00       	ld.sh	r0,r0[0x0]
80002f5a:	2d 98       	sub	r8,-39
80002f5c:	80 00       	ld.sh	r0,r0[0x0]
80002f5e:	2d cc       	sub	r12,-36

80002f60 <dip204_init>:


/****************************** global functions *****************************/

void dip204_init(backlight_options option, bool backlight_on)
{
80002f60:	eb cd 40 80 	pushm	r7,lr
80002f64:	20 4d       	sub	sp,16
80002f66:	16 97       	mov	r7,r11
  pwm_opt_t pwm_opt;  // pwm option config

  if (option == backlight_PWM)
80002f68:	58 1c       	cp.w	r12,1
80002f6a:	c3 01       	brne	80002fca <dip204_init+0x6a>
  {
    channel_id = DIP204_PWM_CHANNEL;
80002f6c:	30 69       	mov	r9,6
80002f6e:	4f a8       	lddpc	r8,80003154 <dip204_init+0x1f4>
80002f70:	91 09       	st.w	r8[0x0],r9
    gpio_enable_module_pin(DIP204_PWM_PIN, DIP204_PWM_FUNCTION);
80002f72:	30 2b       	mov	r11,2
80002f74:	33 2c       	mov	r12,50
80002f76:	f0 1f 00 79 	mcall	80003158 <dip204_init+0x1f8>

    // PWM controller configuration
    pwm_opt.diva=0;
80002f7a:	30 08       	mov	r8,0
80002f7c:	50 18       	stdsp	sp[0x4],r8
    pwm_opt.divb=0;
80002f7e:	50 08       	stdsp	sp[0x0],r8
    pwm_opt.prea=0;
80002f80:	50 38       	stdsp	sp[0xc],r8
    pwm_opt.preb=0;
80002f82:	50 28       	stdsp	sp[0x8],r8

    pwm_init(&pwm_opt);
80002f84:	1a 9c       	mov	r12,sp
80002f86:	f0 1f 00 76 	mcall	8000315c <dip204_init+0x1fc>
    pwm_duty = (backlight_on) ? DIP204_PERIOD_MAX - 1 : 1;
80002f8a:	58 07       	cp.w	r7,0
80002f8c:	f9 b7 01 31 	movne	r7,49
80002f90:	f9 b7 00 01 	moveq	r7,1
80002f94:	4f 38       	lddpc	r8,80003160 <dip204_init+0x200>
80002f96:	b0 07       	st.h	r8[0x0],r7
    pwm_channel.CMR.calg = PWM_MODE_LEFT_ALIGNED;   // channel mode
80002f98:	4f 3b       	lddpc	r11,80003164 <dip204_init+0x204>
80002f9a:	76 08       	ld.w	r8,r11[0x0]
    pwm_channel.CMR.cpol = PWM_POLARITY_LOW;   // channel polarity
    pwm_channel.CMR.cpd = PWM_UPDATE_PERIOD;   // not used the first time
80002f9c:	e0 18 fc ff 	andl	r8,0xfcff
    pwm_channel.CMR.cpre = AVR32_PWM_CPRE_MCK_DIV_256;   // channel prescaler
80002fa0:	ab a8       	sbr	r8,0xa
80002fa2:	30 89       	mov	r9,8
80002fa4:	f1 d9 d0 04 	bfins	r8,r9,0x0,0x4
80002fa8:	97 08       	st.w	r11[0x0],r8
    pwm_channel.cdty = pwm_duty;  // channel duty cycle, should be < CPRD
80002faa:	97 17       	st.w	r11[0x4],r7
    pwm_channel.cprd = DIP204_PERIOD_MAX;  // channel period
80002fac:	33 28       	mov	r8,50
80002fae:	97 28       	st.w	r11[0x8],r8
    pwm_channel.cupd = 0;  // channel update is not used here.
80002fb0:	30 08       	mov	r8,0
80002fb2:	97 48       	st.w	r11[0x10],r8

    pwm_channel_init(channel_id, &pwm_channel);
80002fb4:	4e 87       	lddpc	r7,80003154 <dip204_init+0x1f4>
80002fb6:	6e 0c       	ld.w	r12,r7[0x0]
80002fb8:	f0 1f 00 6c 	mcall	80003168 <dip204_init+0x208>
    // start PWM
    pwm_start_channels(1 << channel_id);
80002fbc:	6e 08       	ld.w	r8,r7[0x0]
80002fbe:	30 1c       	mov	r12,1
80002fc0:	f8 08 09 4c 	lsl	r12,r12,r8
80002fc4:	f0 1f 00 6a 	mcall	8000316c <dip204_init+0x20c>
80002fc8:	c0 a8       	rjmp	80002fdc <dip204_init+0x7c>
  }
  else
  {
    if (backlight_on)
80002fca:	58 0b       	cp.w	r11,0
80002fcc:	c0 50       	breq	80002fd6 <dip204_init+0x76>
    {
      gpio_clr_gpio_pin(DIP204_BACKLIGHT_PIN);
80002fce:	33 2c       	mov	r12,50
80002fd0:	f0 1f 00 68 	mcall	80003170 <dip204_init+0x210>
80002fd4:	c0 48       	rjmp	80002fdc <dip204_init+0x7c>
    }
    else
    {
      gpio_set_gpio_pin(DIP204_BACKLIGHT_PIN);
80002fd6:	33 2c       	mov	r12,50
80002fd8:	f0 1f 00 67 	mcall	80003174 <dip204_init+0x214>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002fdc:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002fe0:	e2 79 a9 80 	mov	r9,240000
80002fe4:	f0 09 00 0a 	add	r10,r8,r9
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002fe8:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002fec:	14 38       	cp.w	r8,r10
80002fee:	e0 88 00 08 	brls	80002ffe <dip204_init+0x9e>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002ff2:	12 38       	cp.w	r8,r9
80002ff4:	fe 98 ff fa 	brls	80002fe8 <dip204_init+0x88>
80002ff8:	12 3a       	cp.w	r10,r9
80002ffa:	c6 e3       	brcs	800030d6 <dip204_init+0x176>
80002ffc:	cf 6b       	rjmp	80002fe8 <dip204_init+0x88>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002ffe:	12 38       	cp.w	r8,r9
80003000:	e0 8b 00 6b 	brhi	800030d6 <dip204_init+0x176>
80003004:	12 3a       	cp.w	r10,r9
80003006:	c6 83       	brcs	800030d6 <dip204_init+0x176>
80003008:	cf 0b       	rjmp	80002fe8 <dip204_init+0x88>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
8000300a:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
8000300e:	14 38       	cp.w	r8,r10
80003010:	e0 88 00 08 	brls	80003020 <dip204_init+0xc0>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80003014:	12 38       	cp.w	r8,r9
80003016:	fe 98 ff fa 	brls	8000300a <dip204_init+0xaa>
8000301a:	12 3a       	cp.w	r10,r9
8000301c:	c6 b3       	brcs	800030f2 <dip204_init+0x192>
8000301e:	cf 6b       	rjmp	8000300a <dip204_init+0xaa>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80003020:	12 38       	cp.w	r8,r9
80003022:	e0 8b 00 68 	brhi	800030f2 <dip204_init+0x192>
80003026:	12 3a       	cp.w	r10,r9
80003028:	c6 53       	brcs	800030f2 <dip204_init+0x192>
8000302a:	cf 0b       	rjmp	8000300a <dip204_init+0xaa>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
8000302c:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80003030:	14 38       	cp.w	r8,r10
80003032:	e0 88 00 08 	brls	80003042 <dip204_init+0xe2>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80003036:	12 38       	cp.w	r8,r9
80003038:	fe 98 ff fa 	brls	8000302c <dip204_init+0xcc>
8000303c:	12 3a       	cp.w	r10,r9
8000303e:	c6 23       	brcs	80003102 <dip204_init+0x1a2>
80003040:	cf 6b       	rjmp	8000302c <dip204_init+0xcc>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80003042:	12 38       	cp.w	r8,r9
80003044:	e0 8b 00 5f 	brhi	80003102 <dip204_init+0x1a2>
80003048:	12 3a       	cp.w	r10,r9
8000304a:	c5 c3       	brcs	80003102 <dip204_init+0x1a2>
8000304c:	cf 0b       	rjmp	8000302c <dip204_init+0xcc>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
8000304e:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80003052:	14 38       	cp.w	r8,r10
80003054:	e0 88 00 08 	brls	80003064 <dip204_init+0x104>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80003058:	12 38       	cp.w	r8,r9
8000305a:	fe 98 ff fa 	brls	8000304e <dip204_init+0xee>
8000305e:	12 3a       	cp.w	r10,r9
80003060:	c5 93       	brcs	80003112 <dip204_init+0x1b2>
80003062:	cf 6b       	rjmp	8000304e <dip204_init+0xee>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80003064:	12 38       	cp.w	r8,r9
80003066:	e0 8b 00 56 	brhi	80003112 <dip204_init+0x1b2>
8000306a:	12 3a       	cp.w	r10,r9
8000306c:	c5 33       	brcs	80003112 <dip204_init+0x1b2>
8000306e:	cf 0b       	rjmp	8000304e <dip204_init+0xee>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80003070:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80003074:	14 38       	cp.w	r8,r10
80003076:	e0 88 00 08 	brls	80003086 <dip204_init+0x126>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
8000307a:	12 38       	cp.w	r8,r9
8000307c:	fe 98 ff fa 	brls	80003070 <dip204_init+0x110>
80003080:	12 3a       	cp.w	r10,r9
80003082:	c5 03       	brcs	80003122 <dip204_init+0x1c2>
80003084:	cf 6b       	rjmp	80003070 <dip204_init+0x110>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80003086:	12 38       	cp.w	r8,r9
80003088:	e0 8b 00 4d 	brhi	80003122 <dip204_init+0x1c2>
8000308c:	12 3a       	cp.w	r10,r9
8000308e:	c4 a3       	brcs	80003122 <dip204_init+0x1c2>
80003090:	cf 0b       	rjmp	80003070 <dip204_init+0x110>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80003092:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80003096:	14 38       	cp.w	r8,r10
80003098:	e0 88 00 08 	brls	800030a8 <dip204_init+0x148>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
8000309c:	12 38       	cp.w	r8,r9
8000309e:	fe 98 ff fa 	brls	80003092 <dip204_init+0x132>
800030a2:	12 3a       	cp.w	r10,r9
800030a4:	c4 93       	brcs	80003136 <dip204_init+0x1d6>
800030a6:	cf 6b       	rjmp	80003092 <dip204_init+0x132>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
800030a8:	12 38       	cp.w	r8,r9
800030aa:	e0 8b 00 46 	brhi	80003136 <dip204_init+0x1d6>
800030ae:	12 3a       	cp.w	r10,r9
800030b0:	c4 33       	brcs	80003136 <dip204_init+0x1d6>
800030b2:	cf 0b       	rjmp	80003092 <dip204_init+0x132>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
800030b4:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
800030b8:	14 38       	cp.w	r8,r10
800030ba:	e0 88 00 08 	brls	800030ca <dip204_init+0x16a>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
800030be:	12 38       	cp.w	r8,r9
800030c0:	fe 98 ff fa 	brls	800030b4 <dip204_init+0x154>
800030c4:	12 3a       	cp.w	r10,r9
800030c6:	c4 03       	brcs	80003146 <dip204_init+0x1e6>
800030c8:	cf 6b       	rjmp	800030b4 <dip204_init+0x154>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
800030ca:	12 38       	cp.w	r8,r9
800030cc:	e0 8b 00 3d 	brhi	80003146 <dip204_init+0x1e6>
800030d0:	12 3a       	cp.w	r10,r9
800030d2:	c3 a3       	brcs	80003146 <dip204_init+0x1e6>
800030d4:	cf 0b       	rjmp	800030b4 <dip204_init+0x154>
    }
  }
  // delay for power on
  delay_ms(20);
  // select the LCD chip
  dip204_select();
800030d6:	f0 1f 00 29 	mcall	80003178 <dip204_init+0x218>
  // Send Command Start Byte
  dip204_write_byte(DIP204_WRITE_COMMAND);
800030da:	e0 6c 00 f8 	mov	r12,248
800030de:	f0 1f 00 28 	mcall	8000317c <dip204_init+0x21c>
  // Send "extended Function Set" Command  (RE=1)
  dip204_write_byte(0x34);
800030e2:	33 4c       	mov	r12,52
800030e4:	f0 1f 00 26 	mcall	8000317c <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800030e8:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800030ec:	f0 ca d1 20 	sub	r10,r8,-12000
800030f0:	c8 db       	rjmp	8000300a <dip204_init+0xaa>
  // Wait for command execution
  delay_ms(1);
  // Send "Enter 4-Line Mode" Command
  dip204_write_byte(0x09);
800030f2:	30 9c       	mov	r12,9
800030f4:	f0 1f 00 22 	mcall	8000317c <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800030f8:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800030fc:	f0 ca d1 20 	sub	r10,r8,-12000
80003100:	c9 6b       	rjmp	8000302c <dip204_init+0xcc>
  // Wait for command execution
  delay_ms(1);
  // Send "Function Set" Command (RE=0)
  dip204_write_byte(0x30);
80003102:	33 0c       	mov	r12,48
80003104:	f0 1f 00 1e 	mcall	8000317c <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80003108:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
8000310c:	f0 ca d1 20 	sub	r10,r8,-12000
80003110:	c9 fb       	rjmp	8000304e <dip204_init+0xee>
  // Wait for command execution
  delay_ms(1);
  // Send "Display On Command: Display On, Cursor On, Blink On"
  dip204_write_byte(0x0F);
80003112:	30 fc       	mov	r12,15
80003114:	f0 1f 00 1a 	mcall	8000317c <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80003118:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
8000311c:	f0 ca d1 20 	sub	r10,r8,-12000
80003120:	ca 8b       	rjmp	80003070 <dip204_init+0x110>
  // Wait for command execution
  delay_ms(1);
  // Send "Display Clear" Command
  dip204_write_byte(0x01);
80003122:	30 1c       	mov	r12,1
80003124:	f0 1f 00 16 	mcall	8000317c <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80003128:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
8000312c:	e0 69 ea 60 	mov	r9,60000
80003130:	f0 09 00 0a 	add	r10,r8,r9
80003134:	ca fb       	rjmp	80003092 <dip204_init+0x132>
  // Wait for command execution
  delay_ms(5);
  // Send "Entry Mode Set Command: Increment Mode, Entire Shift off"
  dip204_write_byte(0x06);
80003136:	30 6c       	mov	r12,6
80003138:	f0 1f 00 11 	mcall	8000317c <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
8000313c:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80003140:	f0 ca d1 20 	sub	r10,r8,-12000
80003144:	cb 8b       	rjmp	800030b4 <dip204_init+0x154>
  // Wait for command execution
  delay_ms(1);
  dip204_wait_busy();
80003146:	f0 1f 00 0f 	mcall	80003180 <dip204_init+0x220>
  // unselect chip
  dip204_unselect();
8000314a:	f0 1f 00 0f 	mcall	80003184 <dip204_init+0x224>
}
8000314e:	2f cd       	sub	sp,-16
80003150:	e3 cd 80 80 	ldm	sp++,r7,pc
80003154:	00 00       	add	r0,r0
80003156:	00 10       	sub	r0,r0
80003158:	80 00       	ld.sh	r0,r0[0x0]
8000315a:	31 88       	mov	r8,24
8000315c:	80 00       	ld.sh	r0,r0[0x0]
8000315e:	33 d4       	mov	r4,61
80003160:	00 00       	add	r0,r0
80003162:	05 38       	ld.ub	r8,r2++
80003164:	00 00       	add	r0,r0
80003166:	05 18       	ld.sh	r8,r2++
80003168:	80 00       	ld.sh	r0,r0[0x0]
8000316a:	33 8c       	mov	r12,56
8000316c:	80 00       	ld.sh	r0,r0[0x0]
8000316e:	33 c2       	mov	r2,60
80003170:	80 00       	ld.sh	r0,r0[0x0]
80003172:	32 28       	mov	r8,34
80003174:	80 00       	ld.sh	r0,r0[0x0]
80003176:	32 0c       	mov	r12,32
80003178:	80 00       	ld.sh	r0,r0[0x0]
8000317a:	2c f0       	sub	r0,-49
8000317c:	80 00       	ld.sh	r0,r0[0x0]
8000317e:	2d 04       	sub	r4,-48
80003180:	80 00       	ld.sh	r0,r0[0x0]
80003182:	2d 98       	sub	r8,-39
80003184:	80 00       	ld.sh	r0,r0[0x0]
80003186:	2d cc       	sub	r12,-36

80003188 <gpio_enable_module_pin>:
 *
 * \return \ref GPIO_SUCCESS or \ref GPIO_INVALID_ARGUMENT.
 */
uint32_t gpio_enable_module_pin(uint32_t pin, uint32_t function)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
80003188:	f8 08 16 05 	lsr	r8,r12,0x5
8000318c:	a9 68       	lsl	r8,0x8
8000318e:	e0 28 f0 00 	sub	r8,61440

	/* Enable the correct function. */
	switch (function) {
80003192:	58 1b       	cp.w	r11,1
80003194:	c0 d0       	breq	800031ae <gpio_enable_module_pin+0x26>
80003196:	c0 63       	brcs	800031a2 <gpio_enable_module_pin+0x1a>
80003198:	58 2b       	cp.w	r11,2
8000319a:	c1 00       	breq	800031ba <gpio_enable_module_pin+0x32>
8000319c:	58 3b       	cp.w	r11,3
8000319e:	c1 40       	breq	800031c6 <gpio_enable_module_pin+0x3e>
800031a0:	5e ff       	retal	1
	case 0: /* A function. */
		gpio_port->pmr0c = 1 << (pin & 0x1F);
800031a2:	30 19       	mov	r9,1
800031a4:	f2 0c 09 49 	lsl	r9,r9,r12
800031a8:	91 69       	st.w	r8[0x18],r9
		gpio_port->pmr1c = 1 << (pin & 0x1F);
800031aa:	91 a9       	st.w	r8[0x28],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
800031ac:	c1 28       	rjmp	800031d0 <gpio_enable_module_pin+0x48>

	case 1: /* B function. */
		gpio_port->pmr0s = 1 << (pin & 0x1F);
800031ae:	30 19       	mov	r9,1
800031b0:	f2 0c 09 49 	lsl	r9,r9,r12
800031b4:	91 59       	st.w	r8[0x14],r9
		gpio_port->pmr1c = 1 << (pin & 0x1F);
800031b6:	91 a9       	st.w	r8[0x28],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
800031b8:	c0 c8       	rjmp	800031d0 <gpio_enable_module_pin+0x48>

	case 2: /* C function. */
		gpio_port->pmr0c = 1 << (pin & 0x1F);
800031ba:	30 19       	mov	r9,1
800031bc:	f2 0c 09 49 	lsl	r9,r9,r12
800031c0:	91 69       	st.w	r8[0x18],r9
		gpio_port->pmr1s = 1 << (pin & 0x1F);
800031c2:	91 99       	st.w	r8[0x24],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
800031c4:	c0 68       	rjmp	800031d0 <gpio_enable_module_pin+0x48>

	case 3: /* D function. */
		gpio_port->pmr0s = 1 << (pin & 0x1F);
800031c6:	30 19       	mov	r9,1
800031c8:	f2 0c 09 49 	lsl	r9,r9,r12
800031cc:	91 59       	st.w	r8[0x14],r9
		gpio_port->pmr1s = 1 << (pin & 0x1F);
800031ce:	91 99       	st.w	r8[0x24],r9
	default:
		return GPIO_INVALID_ARGUMENT;
	}

	/* Disable GPIO control. */
	gpio_port->gperc = 1 << (pin & 0x1F);
800031d0:	30 19       	mov	r9,1
800031d2:	f2 0c 09 4c 	lsl	r12,r9,r12
800031d6:	91 2c       	st.w	r8[0x8],r12
800031d8:	5e fd       	retal	0
800031da:	d7 03       	nop

800031dc <gpio_enable_module>:
 * \param size The number of pins in \a gpiomap.
 *
 * \return \ref GPIO_SUCCESS or \ref GPIO_INVALID_ARGUMENT.
 */
uint32_t gpio_enable_module(const gpio_map_t gpiomap, uint32_t size)
{
800031dc:	d4 21       	pushm	r4-r7,lr
800031de:	18 97       	mov	r7,r12
800031e0:	16 94       	mov	r4,r11
	uint32_t status = GPIO_SUCCESS;
	uint32_t i;

	for (i = 0; i < size; i++) {
800031e2:	58 0b       	cp.w	r11,0
800031e4:	c0 31       	brne	800031ea <gpio_enable_module+0xe>
800031e6:	30 05       	mov	r5,0
800031e8:	c0 d8       	rjmp	80003202 <gpio_enable_module+0x26>
800031ea:	30 06       	mov	r6,0
800031ec:	0c 95       	mov	r5,r6
		status |= gpio_enable_module_pin(gpiomap->pin, gpiomap->function);
800031ee:	6e 1b       	ld.w	r11,r7[0x4]
800031f0:	6e 0c       	ld.w	r12,r7[0x0]
800031f2:	f0 1f 00 06 	mcall	80003208 <gpio_enable_module+0x2c>
800031f6:	18 45       	or	r5,r12
		gpiomap++;
800031f8:	2f 87       	sub	r7,-8
uint32_t gpio_enable_module(const gpio_map_t gpiomap, uint32_t size)
{
	uint32_t status = GPIO_SUCCESS;
	uint32_t i;

	for (i = 0; i < size; i++) {
800031fa:	2f f6       	sub	r6,-1
800031fc:	0c 34       	cp.w	r4,r6
800031fe:	fe 9b ff f8 	brhi	800031ee <gpio_enable_module+0x12>
		status |= gpio_enable_module_pin(gpiomap->pin, gpiomap->function);
		gpiomap++;
	}

	return status;
}
80003202:	0a 9c       	mov	r12,r5
80003204:	d8 22       	popm	r4-r7,pc
80003206:	00 00       	add	r0,r0
80003208:	80 00       	ld.sh	r0,r0[0x0]
8000320a:	31 88       	mov	r8,24

8000320c <gpio_set_gpio_pin>:
 *
 * \param pin The pin number.
 */
void gpio_set_gpio_pin(uint32_t pin)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
8000320c:	f8 08 16 05 	lsr	r8,r12,0x5
80003210:	a9 68       	lsl	r8,0x8
80003212:	e0 28 f0 00 	sub	r8,61440
	
	/* Value to be driven on the I/O line: 1. */
	gpio_port->ovrs  = 1 << (pin & 0x1F);
80003216:	30 19       	mov	r9,1
80003218:	f2 0c 09 4c 	lsl	r12,r9,r12
8000321c:	f1 4c 00 54 	st.w	r8[84],r12
	/* The GPIO output driver is enabled for that pin. */ 
	gpio_port->oders = 1 << (pin & 0x1F);
80003220:	f1 4c 00 44 	st.w	r8[68],r12
	/* The GPIO module controls that pin. */
	gpio_port->gpers = 1 << (pin & 0x1F);
80003224:	91 1c       	st.w	r8[0x4],r12
}
80003226:	5e fc       	retal	r12

80003228 <gpio_clr_gpio_pin>:
 *
 * \param pin The pin number.
 */
void gpio_clr_gpio_pin(uint32_t pin)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
80003228:	f8 08 16 05 	lsr	r8,r12,0x5
8000322c:	a9 68       	lsl	r8,0x8
8000322e:	e0 28 f0 00 	sub	r8,61440
	
	/* Value to be driven on the I/O line: 0. */
	gpio_port->ovrc  = 1 << (pin & 0x1F);
80003232:	30 19       	mov	r9,1
80003234:	f2 0c 09 4c 	lsl	r12,r9,r12
80003238:	f1 4c 00 58 	st.w	r8[88],r12
	/* The GPIO output driver is enabled for that pin. */
	gpio_port->oders = 1 << (pin & 0x1F);
8000323c:	f1 4c 00 44 	st.w	r8[68],r12
	/* The GPIO module controls that pin. */
	gpio_port->gpers = 1 << (pin & 0x1F);
80003240:	91 1c       	st.w	r8[0x4],r12
}
80003242:	5e fc       	retal	r12

80003244 <_unhandled_interrupt>:
__attribute__((__interrupt__))
#elif (defined __ICCAVR32__)
__interrupt
#endif
static void _unhandled_interrupt(void)
{
80003244:	c0 08       	rjmp	80003244 <_unhandled_interrupt>
80003246:	d7 03       	nop

80003248 <INTC_init_interrupts>:
/**
 * \brief Initializes the hardware interrupt controller driver.
 *
 */
void INTC_init_interrupts(void)
{
80003248:	d4 21       	pushm	r4-r7,lr
 * \brief Init EVBA address. This operation may or may not have been done by the
 * C startup process.
 */
static __inline__ void INTC_init_evba(void)
{
  Set_system_register(AVR32_EVBA, (int32_t)&_evba );
8000324a:	49 18       	lddpc	r8,8000328c <INTC_init_interrupts+0x44>
8000324c:	e3 b8 00 01 	mtsr	0x4,r8
80003250:	49 0e       	lddpc	lr,80003290 <INTC_init_interrupts+0x48>
80003252:	30 07       	mov	r7,0
80003254:	0e 94       	mov	r4,r7
			int_req < _int_handler_table[int_grp].num_irqs;
			int_req++)
		{
			/* Assign _unhandled_interrupt as the default interrupt
			handler. */
			_int_handler_table[int_grp]
80003256:	49 0c       	lddpc	r12,80003294 <INTC_init_interrupts+0x4c>

		/* Set the interrupt group priority register to its default
		value.
		By default, all interrupt groups are linked to the interrupt
		priority level 0 and to the interrupt vector _int0. */
		AVR32_INTC.ipr[int_grp] = IPR_INT0;
80003258:	49 05       	lddpc	r5,80003298 <INTC_init_interrupts+0x50>
8000325a:	10 15       	sub	r5,r8
8000325c:	fe 76 08 00 	mov	r6,-63488
80003260:	c1 08       	rjmp	80003280 <INTC_init_interrupts+0x38>
 * \brief Init EVBA address. This operation may or may not have been done by the
 * C startup process.
 */
static __inline__ void INTC_init_evba(void)
{
  Set_system_register(AVR32_EVBA, (int32_t)&_evba );
80003262:	08 98       	mov	r8,r4
			int_req++)
		{
			/* Assign _unhandled_interrupt as the default interrupt
			handler. */
			_int_handler_table[int_grp]
				._int_line_handler_table[int_req]
80003264:	7c 1b       	ld.w	r11,lr[0x4]

	// For all interrupt groups,
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
80003266:	7c 0a       	ld.w	r10,lr[0x0]
			int_req < _int_handler_table[int_grp].num_irqs;
			int_req++)
		{
			/* Assign _unhandled_interrupt as the default interrupt
			handler. */
			_int_handler_table[int_grp]
80003268:	f6 08 09 2c 	st.w	r11[r8<<0x2],r12
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
			int_req < _int_handler_table[int_grp].num_irqs;
			int_req++)
8000326c:	2f f8       	sub	r8,-1

	// For all interrupt groups,
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
8000326e:	10 3a       	cp.w	r10,r8
80003270:	fe 9b ff fc 	brhi	80003268 <INTC_init_interrupts+0x20>

		/* Set the interrupt group priority register to its default
		value.
		By default, all interrupt groups are linked to the interrupt
		priority level 0 and to the interrupt vector _int0. */
		AVR32_INTC.ipr[int_grp] = IPR_INT0;
80003274:	ec 07 09 25 	st.w	r6[r7<<0x2],r5
	uint32_t int_grp, int_req;

	INTC_init_evba();

	// For all interrupt groups,
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
80003278:	2f f7       	sub	r7,-1
8000327a:	2f 8e       	sub	lr,-8
8000327c:	59 47       	cp.w	r7,20
8000327e:	c0 50       	breq	80003288 <INTC_init_interrupts+0x40>
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
80003280:	7c 08       	ld.w	r8,lr[0x0]
80003282:	58 08       	cp.w	r8,0
80003284:	ce f1       	brne	80003262 <INTC_init_interrupts+0x1a>
80003286:	cf 7b       	rjmp	80003274 <INTC_init_interrupts+0x2c>
80003288:	d8 22       	popm	r4-r7,pc
8000328a:	00 00       	add	r0,r0
8000328c:	80 00       	ld.sh	r0,r0[0x0]
8000328e:	90 00       	ld.sh	r0,r8[0x0]
80003290:	80 00       	ld.sh	r0,r0[0x0]
80003292:	93 30       	st.w	r9[0xc],r0
80003294:	80 00       	ld.sh	r0,r0[0x0]
80003296:	32 44       	mov	r4,36
80003298:	80 00       	ld.sh	r0,r0[0x0]
8000329a:	91 04       	st.w	r8[0x0],r4

8000329c <_get_interrupt_handler>:
__int_handler _get_interrupt_handler(uint32_t int_level)
{
	/* ICR3 is mapped first, ICR0 last.
	Code in exception.S puts int_level in R12 which is used by the compiler
	to pass a single argument to a function. */
	uint32_t int_grp = AVR32_INTC.icr[AVR32_INTC_INT3 - int_level];
8000329c:	fe 78 08 00 	mov	r8,-63488
800032a0:	e0 69 00 83 	mov	r9,131
800032a4:	f2 0c 01 0c 	sub	r12,r9,r12
800032a8:	f0 0c 03 29 	ld.w	r9,r8[r12<<0x2]
	uint32_t int_req = AVR32_INTC.irr[int_grp];
800032ac:	f2 ca ff c0 	sub	r10,r9,-64
800032b0:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
	exception.S will provide the interrupt handler with a clean interrupt
	stack frame, with nothing more pushed onto the stack. The interrupt
	handler must manage the `rete' instruction, which can be done using
	pure assembly, inline assembly or the `__attribute__((__interrupt__))'
	C function attribute.*/
	return (int_req)
800032b4:	58 08       	cp.w	r8,0
800032b6:	c0 21       	brne	800032ba <_get_interrupt_handler+0x1e>
800032b8:	5e fd       	retal	0
		? _int_handler_table[int_grp]._int_line_handler_table[32
800032ba:	f0 08 12 00 	clz	r8,r8
800032be:	48 5a       	lddpc	r10,800032d0 <_get_interrupt_handler+0x34>
800032c0:	f4 09 00 39 	add	r9,r10,r9<<0x3
800032c4:	f0 08 11 1f 	rsub	r8,r8,31
800032c8:	72 19       	ld.w	r9,r9[0x4]
	exception.S will provide the interrupt handler with a clean interrupt
	stack frame, with nothing more pushed onto the stack. The interrupt
	handler must manage the `rete' instruction, which can be done using
	pure assembly, inline assembly or the `__attribute__((__interrupt__))'
	C function attribute.*/
	return (int_req)
800032ca:	f2 08 03 2c 	ld.w	r12,r9[r8<<0x2]
		? _int_handler_table[int_grp]._int_line_handler_table[32
			- clz(int_req) - 1]
		: NULL;
}
800032ce:	5e fc       	retal	r12
800032d0:	80 00       	ld.sh	r0,r0[0x0]
800032d2:	93 30       	st.w	r9[0xc],r0

800032d4 <pm_set_osc0_mode>:
800032d4:	78 a8       	ld.w	r8,r12[0x28]
800032d6:	f1 db d0 03 	bfins	r8,r11,0x0,0x3
800032da:	99 a8       	st.w	r12[0x28],r8
800032dc:	5e fc       	retal	r12
800032de:	d7 03       	nop

800032e0 <pm_enable_osc0_crystal>:
800032e0:	d4 01       	pushm	lr
800032e2:	ec 5b bb 9f 	cp.w	r11,899999
800032e6:	e0 8b 00 04 	brhi	800032ee <pm_enable_osc0_crystal+0xe>
800032ea:	30 4b       	mov	r11,4
800032ec:	c1 38       	rjmp	80003312 <pm_enable_osc0_crystal+0x32>
800032ee:	e0 68 c6 bf 	mov	r8,50879
800032f2:	ea 18 00 2d 	orh	r8,0x2d
800032f6:	10 3b       	cp.w	r11,r8
800032f8:	e0 8b 00 04 	brhi	80003300 <pm_enable_osc0_crystal+0x20>
800032fc:	30 5b       	mov	r11,5
800032fe:	c0 a8       	rjmp	80003312 <pm_enable_osc0_crystal+0x32>
80003300:	e0 68 12 00 	mov	r8,4608
80003304:	ea 18 00 7a 	orh	r8,0x7a
80003308:	10 3b       	cp.w	r11,r8
8000330a:	f9 bb 03 06 	movlo	r11,6
8000330e:	f9 bb 02 07 	movhs	r11,7
80003312:	f0 1f 00 02 	mcall	80003318 <pm_enable_osc0_crystal+0x38>
80003316:	d8 02       	popm	pc
80003318:	80 00       	ld.sh	r0,r0[0x0]
8000331a:	32 d4       	mov	r4,45

8000331c <pm_enable_clk0_no_wait>:
8000331c:	78 a8       	ld.w	r8,r12[0x28]
8000331e:	f1 db d1 03 	bfins	r8,r11,0x8,0x3
80003322:	99 a8       	st.w	r12[0x28],r8
80003324:	78 08       	ld.w	r8,r12[0x0]
80003326:	a3 a8       	sbr	r8,0x2
80003328:	99 08       	st.w	r12[0x0],r8
8000332a:	5e fc       	retal	r12

8000332c <pm_wait_for_clk0_ready>:
8000332c:	79 58       	ld.w	r8,r12[0x54]
8000332e:	e2 18 00 80 	andl	r8,0x80,COH
80003332:	cf d0       	breq	8000332c <pm_wait_for_clk0_ready>
80003334:	5e fc       	retal	r12
80003336:	d7 03       	nop

80003338 <pm_enable_clk0>:
80003338:	eb cd 40 80 	pushm	r7,lr
8000333c:	18 97       	mov	r7,r12
8000333e:	f0 1f 00 04 	mcall	8000334c <pm_enable_clk0+0x14>
80003342:	0e 9c       	mov	r12,r7
80003344:	f0 1f 00 03 	mcall	80003350 <pm_enable_clk0+0x18>
80003348:	e3 cd 80 80 	ldm	sp++,r7,pc
8000334c:	80 00       	ld.sh	r0,r0[0x0]
8000334e:	33 1c       	mov	r12,49
80003350:	80 00       	ld.sh	r0,r0[0x0]
80003352:	33 2c       	mov	r12,50

80003354 <pm_switch_to_clock>:
80003354:	78 08       	ld.w	r8,r12[0x0]
80003356:	f1 db d0 02 	bfins	r8,r11,0x0,0x2
8000335a:	99 08       	st.w	r12[0x0],r8
8000335c:	5e fc       	retal	r12
8000335e:	d7 03       	nop

80003360 <pm_switch_to_osc0>:
80003360:	eb cd 40 c0 	pushm	r6-r7,lr
80003364:	18 97       	mov	r7,r12
80003366:	14 96       	mov	r6,r10
80003368:	f0 1f 00 06 	mcall	80003380 <pm_switch_to_osc0+0x20>
8000336c:	0c 9b       	mov	r11,r6
8000336e:	0e 9c       	mov	r12,r7
80003370:	f0 1f 00 05 	mcall	80003384 <pm_switch_to_osc0+0x24>
80003374:	30 1b       	mov	r11,1
80003376:	0e 9c       	mov	r12,r7
80003378:	f0 1f 00 04 	mcall	80003388 <pm_switch_to_osc0+0x28>
8000337c:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003380:	80 00       	ld.sh	r0,r0[0x0]
80003382:	32 e0       	mov	r0,46
80003384:	80 00       	ld.sh	r0,r0[0x0]
80003386:	33 38       	mov	r8,51
80003388:	80 00       	ld.sh	r0,r0[0x0]
8000338a:	33 54       	mov	r4,53

8000338c <pwm_channel_init>:
8000338c:	58 0b       	cp.w	r11,0
8000338e:	c1 90       	breq	800033c0 <pwm_channel_init+0x34>
80003390:	58 6c       	cp.w	r12,6
80003392:	e0 8b 00 17 	brhi	800033c0 <pwm_channel_init+0x34>
80003396:	76 0a       	ld.w	r10,r11[0x0]
80003398:	fe 78 30 00 	mov	r8,-53248
8000339c:	f8 c9 ff f0 	sub	r9,r12,-16
800033a0:	a5 79       	lsl	r9,0x5
800033a2:	f0 09 00 09 	add	r9,r8,r9
800033a6:	93 0a       	st.w	r9[0x0],r10
800033a8:	76 19       	ld.w	r9,r11[0x4]
800033aa:	a5 7c       	lsl	r12,0x5
800033ac:	f0 0c 00 0c 	add	r12,r8,r12
800033b0:	f8 c8 fd fc 	sub	r8,r12,-516
800033b4:	91 09       	st.w	r8[0x0],r9
800033b6:	76 28       	ld.w	r8,r11[0x8]
800033b8:	f8 cc fd f8 	sub	r12,r12,-520
800033bc:	99 08       	st.w	r12[0x0],r8
800033be:	5e fd       	retal	0
800033c0:	5e ff       	retal	1

800033c2 <pwm_start_channels>:
800033c2:	18 98       	mov	r8,r12
800033c4:	e0 18 ff 80 	andl	r8,0xff80
800033c8:	c0 20       	breq	800033cc <pwm_start_channels+0xa>
800033ca:	5e ff       	retal	1
800033cc:	fe 78 30 00 	mov	r8,-53248
800033d0:	91 1c       	st.w	r8[0x4],r12
800033d2:	5e fd       	retal	0

800033d4 <pwm_init>:
800033d4:	e1 b8 00 00 	mfsr	r8,0x0
800033d8:	58 0c       	cp.w	r12,0
800033da:	c0 21       	brne	800033de <pwm_init+0xa>
800033dc:	5e ff       	retal	1
800033de:	e6 18 00 01 	andh	r8,0x1,COH
800033e2:	c0 91       	brne	800033f4 <pwm_init+0x20>
800033e4:	d3 03       	ssrf	0x10
800033e6:	fe 78 30 00 	mov	r8,-53248
800033ea:	37 f9       	mov	r9,127
800033ec:	91 59       	st.w	r8[0x14],r9
800033ee:	70 78       	ld.w	r8,r8[0x1c]
800033f0:	d5 03       	csrf	0x10
800033f2:	c0 68       	rjmp	800033fe <pwm_init+0x2a>
800033f4:	fe 78 30 00 	mov	r8,-53248
800033f8:	37 f9       	mov	r9,127
800033fa:	91 59       	st.w	r8[0x14],r9
800033fc:	70 78       	ld.w	r8,r8[0x1c]
800033fe:	78 08       	ld.w	r8,r12[0x0]
80003400:	78 39       	ld.w	r9,r12[0xc]
80003402:	a9 69       	lsl	r9,0x8
80003404:	f3 e8 11 09 	or	r9,r9,r8<<0x10
80003408:	78 18       	ld.w	r8,r12[0x4]
8000340a:	10 49       	or	r9,r8
8000340c:	78 28       	ld.w	r8,r12[0x8]
8000340e:	f3 e8 11 89 	or	r9,r9,r8<<0x18
80003412:	fe 78 30 00 	mov	r8,-53248
80003416:	91 09       	st.w	r8[0x0],r9
80003418:	5e fd       	retal	0

8000341a <getBaudDiv>:
8000341a:	f8 c8 00 01 	sub	r8,r12,1
8000341e:	f0 0b 00 0b 	add	r11,r8,r11
80003422:	f6 0c 0d 0a 	divu	r10,r11,r12
80003426:	14 9c       	mov	r12,r10
80003428:	f4 c8 00 01 	sub	r8,r10,1
8000342c:	e0 48 00 fe 	cp.w	r8,254
80003430:	e0 88 00 03 	brls	80003436 <getBaudDiv+0x1c>
80003434:	5e fe       	retal	-1
80003436:	5c 8c       	casts.h	r12
80003438:	5e fc       	retal	r12

8000343a <spi_initMaster>:
8000343a:	f7 39 00 0d 	ld.ub	r9,r11[13]
8000343e:	30 18       	mov	r8,1
80003440:	f0 09 18 00 	cp.b	r9,r8
80003444:	e0 88 00 04 	brls	8000344c <spi_initMaster+0x12>
80003448:	30 2c       	mov	r12,2
8000344a:	5e fc       	retal	r12
8000344c:	e0 68 00 80 	mov	r8,128
80003450:	99 08       	st.w	r12[0x0],r8
80003452:	78 18       	ld.w	r8,r12[0x4]
80003454:	30 19       	mov	r9,1
80003456:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
8000345a:	f7 39 00 0d 	ld.ub	r9,r11[13]
8000345e:	f1 d9 d0 81 	bfins	r8,r9,0x4,0x1
80003462:	30 09       	mov	r9,0
80003464:	f1 d9 d0 e1 	bfins	r8,r9,0x7,0x1
80003468:	30 fa       	mov	r10,15
8000346a:	f1 da d2 04 	bfins	r8,r10,0x10,0x4
8000346e:	99 18       	st.w	r12[0x4],r8
80003470:	5e f9       	retal	r9

80003472 <spi_selectionMode>:
80003472:	d4 01       	pushm	lr
80003474:	30 18       	mov	r8,1
80003476:	f0 0b 18 00 	cp.b	r11,r8
8000347a:	5f be       	srhi	lr
8000347c:	f0 0a 18 00 	cp.b	r10,r8
80003480:	5f b8       	srhi	r8
80003482:	fd e8 10 08 	or	r8,lr,r8
80003486:	c0 30       	breq	8000348c <spi_selectionMode+0x1a>
80003488:	30 2c       	mov	r12,2
8000348a:	d8 02       	popm	pc
8000348c:	78 18       	ld.w	r8,r12[0x4]
8000348e:	f1 db d0 21 	bfins	r8,r11,0x1,0x1
80003492:	f1 da d0 41 	bfins	r8,r10,0x2,0x1
80003496:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
8000349a:	99 18       	st.w	r12[0x4],r8
8000349c:	d8 0a       	popm	pc,r12=0

8000349e <spi_selectChip>:
8000349e:	78 18       	ld.w	r8,r12[0x4]
800034a0:	ea 18 00 0f 	orh	r8,0xf
800034a4:	99 18       	st.w	r12[0x4],r8
800034a6:	78 18       	ld.w	r8,r12[0x4]
800034a8:	e2 18 00 04 	andl	r8,0x4,COH
800034ac:	c0 f0       	breq	800034ca <spi_selectChip+0x2c>
800034ae:	30 e8       	mov	r8,14
800034b0:	f0 0b 18 00 	cp.b	r11,r8
800034b4:	e0 8b 00 19 	brhi	800034e6 <spi_selectChip+0x48>
800034b8:	78 18       	ld.w	r8,r12[0x4]
800034ba:	b1 6b       	lsl	r11,0x10
800034bc:	ea 1b ff f0 	orh	r11,0xfff0
800034c0:	e8 1b ff ff 	orl	r11,0xffff
800034c4:	10 6b       	and	r11,r8
800034c6:	99 1b       	st.w	r12[0x4],r11
800034c8:	5e fd       	retal	0
800034ca:	30 38       	mov	r8,3
800034cc:	f0 0b 18 00 	cp.b	r11,r8
800034d0:	e0 8b 00 0b 	brhi	800034e6 <spi_selectChip+0x48>
800034d4:	78 18       	ld.w	r8,r12[0x4]
800034d6:	2f 0b       	sub	r11,-16
800034d8:	30 19       	mov	r9,1
800034da:	f2 0b 09 4b 	lsl	r11,r9,r11
800034de:	5c db       	com	r11
800034e0:	10 6b       	and	r11,r8
800034e2:	99 1b       	st.w	r12[0x4],r11
800034e4:	5e fd       	retal	0
800034e6:	30 2c       	mov	r12,2
800034e8:	5e fc       	retal	r12

800034ea <spi_unselectChip>:
800034ea:	e0 68 3a 98 	mov	r8,15000
800034ee:	c0 58       	rjmp	800034f8 <spi_unselectChip+0xe>
800034f0:	58 08       	cp.w	r8,0
800034f2:	c0 21       	brne	800034f6 <spi_unselectChip+0xc>
800034f4:	5e ff       	retal	1
800034f6:	20 18       	sub	r8,1
800034f8:	78 49       	ld.w	r9,r12[0x10]
800034fa:	e2 19 02 00 	andl	r9,0x200,COH
800034fe:	cf 90       	breq	800034f0 <spi_unselectChip+0x6>
80003500:	78 18       	ld.w	r8,r12[0x4]
80003502:	ea 18 00 0f 	orh	r8,0xf
80003506:	99 18       	st.w	r12[0x4],r8
80003508:	fc 18 01 00 	movh	r8,0x100
8000350c:	99 08       	st.w	r12[0x0],r8
8000350e:	5e fd       	retal	0

80003510 <spi_setupChipReg>:
80003510:	eb cd 40 f8 	pushm	r3-r7,lr
80003514:	18 95       	mov	r5,r12
80003516:	16 97       	mov	r7,r11
80003518:	f7 36 00 0c 	ld.ub	r6,r11[12]
8000351c:	30 38       	mov	r8,3
8000351e:	f0 06 18 00 	cp.b	r6,r8
80003522:	e0 8b 00 4d 	brhi	800035bc <spi_setupChipReg+0xac>
80003526:	f7 34 00 0b 	ld.ub	r4,r11[11]
8000352a:	30 18       	mov	r8,1
8000352c:	f0 04 18 00 	cp.b	r4,r8
80003530:	e0 8b 00 46 	brhi	800035bc <spi_setupChipReg+0xac>
80003534:	f7 33 00 08 	ld.ub	r3,r11[8]
80003538:	30 78       	mov	r8,7
8000353a:	f0 03 18 00 	cp.b	r3,r8
8000353e:	e0 88 00 3f 	brls	800035bc <spi_setupChipReg+0xac>
80003542:	31 08       	mov	r8,16
80003544:	f0 03 18 00 	cp.b	r3,r8
80003548:	e0 8b 00 3a 	brhi	800035bc <spi_setupChipReg+0xac>
8000354c:	14 9b       	mov	r11,r10
8000354e:	6e 1c       	ld.w	r12,r7[0x4]
80003550:	f0 1f 00 1d 	mcall	800035c4 <spi_setupChipReg+0xb4>
80003554:	c3 45       	brlt	800035bc <spi_setupChipReg+0xac>
80003556:	30 08       	mov	r8,0
80003558:	ec 09 16 01 	lsr	r9,r6,0x1
8000355c:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80003560:	ec 16 00 01 	eorl	r6,0x1
80003564:	f1 d6 d0 21 	bfins	r8,r6,0x1,0x1
80003568:	f1 d4 d0 61 	bfins	r8,r4,0x3,0x1
8000356c:	20 83       	sub	r3,8
8000356e:	f1 d3 d0 84 	bfins	r8,r3,0x4,0x4
80003572:	f1 dc d1 08 	bfins	r8,r12,0x8,0x8
80003576:	ef 39 00 09 	ld.ub	r9,r7[9]
8000357a:	f1 d9 d2 08 	bfins	r8,r9,0x10,0x8
8000357e:	ef 39 00 0a 	ld.ub	r9,r7[10]
80003582:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
80003586:	0f 89       	ld.ub	r9,r7[0x0]
80003588:	30 1a       	mov	r10,1
8000358a:	f4 09 18 00 	cp.b	r9,r10
8000358e:	c0 e0       	breq	800035aa <spi_setupChipReg+0x9a>
80003590:	c0 a3       	brcs	800035a4 <spi_setupChipReg+0x94>
80003592:	30 2a       	mov	r10,2
80003594:	f4 09 18 00 	cp.b	r9,r10
80003598:	c0 c0       	breq	800035b0 <spi_setupChipReg+0xa0>
8000359a:	30 3a       	mov	r10,3
8000359c:	f4 09 18 00 	cp.b	r9,r10
800035a0:	c0 e1       	brne	800035bc <spi_setupChipReg+0xac>
800035a2:	c0 a8       	rjmp	800035b6 <spi_setupChipReg+0xa6>
800035a4:	8b c8       	st.w	r5[0x30],r8
800035a6:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
800035aa:	8b d8       	st.w	r5[0x34],r8
800035ac:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
800035b0:	8b e8       	st.w	r5[0x38],r8
800035b2:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
800035b6:	8b f8       	st.w	r5[0x3c],r8
800035b8:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
800035bc:	30 2c       	mov	r12,2
800035be:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
800035c2:	00 00       	add	r0,r0
800035c4:	80 00       	ld.sh	r0,r0[0x0]
800035c6:	34 1a       	mov	r10,65

800035c8 <spi_enable>:
800035c8:	30 18       	mov	r8,1
800035ca:	99 08       	st.w	r12[0x0],r8
800035cc:	5e fc       	retal	r12

800035ce <spi_write>:
800035ce:	e0 68 3a 98 	mov	r8,15000
800035d2:	c0 58       	rjmp	800035dc <spi_write+0xe>
800035d4:	58 08       	cp.w	r8,0
800035d6:	c0 21       	brne	800035da <spi_write+0xc>
800035d8:	5e ff       	retal	1
800035da:	20 18       	sub	r8,1
800035dc:	78 49       	ld.w	r9,r12[0x10]
800035de:	e2 19 00 02 	andl	r9,0x2,COH
800035e2:	cf 90       	breq	800035d4 <spi_write+0x6>
800035e4:	5c 7b       	castu.h	r11
800035e6:	99 3b       	st.w	r12[0xc],r11
800035e8:	5e fd       	retal	0

800035ea <spi_readRegisterFullCheck>:
800035ea:	78 4c       	ld.w	r12,r12[0x10]
800035ec:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
800035f0:	5e fc       	retal	r12

800035f2 <spi_read>:
800035f2:	e0 68 3a 98 	mov	r8,15000
800035f6:	c0 58       	rjmp	80003600 <spi_read+0xe>
800035f8:	58 08       	cp.w	r8,0
800035fa:	c0 21       	brne	800035fe <spi_read+0xc>
800035fc:	5e ff       	retal	1
800035fe:	20 18       	sub	r8,1
80003600:	78 49       	ld.w	r9,r12[0x10]
80003602:	e2 19 02 01 	andl	r9,0x201,COH
80003606:	e0 49 02 01 	cp.w	r9,513
8000360a:	cf 71       	brne	800035f8 <spi_read+0x6>
8000360c:	78 28       	ld.w	r8,r12[0x8]
8000360e:	b6 08       	st.h	r11[0x0],r8
80003610:	5e fd       	retal	0
80003612:	d7 03       	nop

80003614 <_stext>:
80003614:	e0 7d 00 00 	mov	sp,65536
80003618:	fe c0 a6 18 	sub	r0,pc,-23016
8000361c:	e3 b0 00 01 	mtsr	0x4,r0
80003620:	d5 53       	csrf	0x15
80003622:	30 80       	mov	r0,8
80003624:	e0 61 05 18 	mov	r1,1304
80003628:	02 30       	cp.w	r0,r1
8000362a:	c0 72       	brcc	80003638 <idata_load_loop_end>
8000362c:	fe c2 9c d4 	sub	r2,pc,-25388

80003630 <idata_load_loop>:
80003630:	a5 05       	ld.d	r4,r2++
80003632:	a1 24       	st.d	r0++,r4
80003634:	02 30       	cp.w	r0,r1
80003636:	cf d3       	brcs	80003630 <idata_load_loop>

80003638 <idata_load_loop_end>:
80003638:	e0 60 05 18 	mov	r0,1304
8000363c:	e0 61 06 80 	mov	r1,1664
80003640:	02 30       	cp.w	r0,r1
80003642:	c0 62       	brcc	8000364e <udata_clear_loop_end>
80003644:	30 02       	mov	r2,0
80003646:	30 03       	mov	r3,0

80003648 <udata_clear_loop>:
80003648:	a1 22       	st.d	r0++,r2
8000364a:	02 30       	cp.w	r0,r1
8000364c:	cf e3       	brcs	80003648 <udata_clear_loop>

8000364e <udata_clear_loop_end>:
8000364e:	fe cf 0b 12 	sub	pc,pc,2834
80003652:	d7 03       	nop

80003654 <memcpy>:
80003654:	58 8a       	cp.w	r10,8
80003656:	c2 f5       	brlt	800036b4 <memcpy+0x60>
80003658:	f9 eb 10 09 	or	r9,r12,r11
8000365c:	e2 19 00 03 	andl	r9,0x3,COH
80003660:	e0 81 00 97 	brne	8000378e <memcpy+0x13a>
80003664:	e0 4a 00 20 	cp.w	r10,32
80003668:	c3 b4       	brge	800036de <memcpy+0x8a>
8000366a:	f4 08 14 02 	asr	r8,r10,0x2
8000366e:	f0 09 11 08 	rsub	r9,r8,8
80003672:	fe 09 00 2f 	add	pc,pc,r9<<0x2
80003676:	76 69       	ld.w	r9,r11[0x18]
80003678:	99 69       	st.w	r12[0x18],r9
8000367a:	76 59       	ld.w	r9,r11[0x14]
8000367c:	99 59       	st.w	r12[0x14],r9
8000367e:	76 49       	ld.w	r9,r11[0x10]
80003680:	99 49       	st.w	r12[0x10],r9
80003682:	76 39       	ld.w	r9,r11[0xc]
80003684:	99 39       	st.w	r12[0xc],r9
80003686:	76 29       	ld.w	r9,r11[0x8]
80003688:	99 29       	st.w	r12[0x8],r9
8000368a:	76 19       	ld.w	r9,r11[0x4]
8000368c:	99 19       	st.w	r12[0x4],r9
8000368e:	76 09       	ld.w	r9,r11[0x0]
80003690:	99 09       	st.w	r12[0x0],r9
80003692:	f6 08 00 2b 	add	r11,r11,r8<<0x2
80003696:	f8 08 00 28 	add	r8,r12,r8<<0x2
8000369a:	e0 1a 00 03 	andl	r10,0x3
8000369e:	f4 0a 11 04 	rsub	r10,r10,4
800036a2:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
800036a6:	17 a9       	ld.ub	r9,r11[0x2]
800036a8:	b0 a9       	st.b	r8[0x2],r9
800036aa:	17 99       	ld.ub	r9,r11[0x1]
800036ac:	b0 99       	st.b	r8[0x1],r9
800036ae:	17 89       	ld.ub	r9,r11[0x0]
800036b0:	b0 89       	st.b	r8[0x0],r9
800036b2:	5e fc       	retal	r12
800036b4:	f4 0a 11 09 	rsub	r10,r10,9
800036b8:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
800036bc:	17 f9       	ld.ub	r9,r11[0x7]
800036be:	b8 f9       	st.b	r12[0x7],r9
800036c0:	17 e9       	ld.ub	r9,r11[0x6]
800036c2:	b8 e9       	st.b	r12[0x6],r9
800036c4:	17 d9       	ld.ub	r9,r11[0x5]
800036c6:	b8 d9       	st.b	r12[0x5],r9
800036c8:	17 c9       	ld.ub	r9,r11[0x4]
800036ca:	b8 c9       	st.b	r12[0x4],r9
800036cc:	17 b9       	ld.ub	r9,r11[0x3]
800036ce:	b8 b9       	st.b	r12[0x3],r9
800036d0:	17 a9       	ld.ub	r9,r11[0x2]
800036d2:	b8 a9       	st.b	r12[0x2],r9
800036d4:	17 99       	ld.ub	r9,r11[0x1]
800036d6:	b8 99       	st.b	r12[0x1],r9
800036d8:	17 89       	ld.ub	r9,r11[0x0]
800036da:	b8 89       	st.b	r12[0x0],r9
800036dc:	5e fc       	retal	r12
800036de:	eb cd 40 c0 	pushm	r6-r7,lr
800036e2:	18 99       	mov	r9,r12
800036e4:	22 0a       	sub	r10,32
800036e6:	b7 07       	ld.d	r6,r11++
800036e8:	b3 26       	st.d	r9++,r6
800036ea:	b7 07       	ld.d	r6,r11++
800036ec:	b3 26       	st.d	r9++,r6
800036ee:	b7 07       	ld.d	r6,r11++
800036f0:	b3 26       	st.d	r9++,r6
800036f2:	b7 07       	ld.d	r6,r11++
800036f4:	b3 26       	st.d	r9++,r6
800036f6:	22 0a       	sub	r10,32
800036f8:	cf 74       	brge	800036e6 <memcpy+0x92>
800036fa:	2f 0a       	sub	r10,-16
800036fc:	c0 65       	brlt	80003708 <memcpy+0xb4>
800036fe:	b7 07       	ld.d	r6,r11++
80003700:	b3 26       	st.d	r9++,r6
80003702:	b7 07       	ld.d	r6,r11++
80003704:	b3 26       	st.d	r9++,r6
80003706:	21 0a       	sub	r10,16
80003708:	5c 3a       	neg	r10
8000370a:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
8000370e:	d7 03       	nop
80003710:	d7 03       	nop
80003712:	f7 36 00 0e 	ld.ub	r6,r11[14]
80003716:	f3 66 00 0e 	st.b	r9[14],r6
8000371a:	f7 36 00 0d 	ld.ub	r6,r11[13]
8000371e:	f3 66 00 0d 	st.b	r9[13],r6
80003722:	f7 36 00 0c 	ld.ub	r6,r11[12]
80003726:	f3 66 00 0c 	st.b	r9[12],r6
8000372a:	f7 36 00 0b 	ld.ub	r6,r11[11]
8000372e:	f3 66 00 0b 	st.b	r9[11],r6
80003732:	f7 36 00 0a 	ld.ub	r6,r11[10]
80003736:	f3 66 00 0a 	st.b	r9[10],r6
8000373a:	f7 36 00 09 	ld.ub	r6,r11[9]
8000373e:	f3 66 00 09 	st.b	r9[9],r6
80003742:	f7 36 00 08 	ld.ub	r6,r11[8]
80003746:	f3 66 00 08 	st.b	r9[8],r6
8000374a:	f7 36 00 07 	ld.ub	r6,r11[7]
8000374e:	f3 66 00 07 	st.b	r9[7],r6
80003752:	f7 36 00 06 	ld.ub	r6,r11[6]
80003756:	f3 66 00 06 	st.b	r9[6],r6
8000375a:	f7 36 00 05 	ld.ub	r6,r11[5]
8000375e:	f3 66 00 05 	st.b	r9[5],r6
80003762:	f7 36 00 04 	ld.ub	r6,r11[4]
80003766:	f3 66 00 04 	st.b	r9[4],r6
8000376a:	f7 36 00 03 	ld.ub	r6,r11[3]
8000376e:	f3 66 00 03 	st.b	r9[3],r6
80003772:	f7 36 00 02 	ld.ub	r6,r11[2]
80003776:	f3 66 00 02 	st.b	r9[2],r6
8000377a:	f7 36 00 01 	ld.ub	r6,r11[1]
8000377e:	f3 66 00 01 	st.b	r9[1],r6
80003782:	f7 36 00 00 	ld.ub	r6,r11[0]
80003786:	f3 66 00 00 	st.b	r9[0],r6
8000378a:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000378e:	20 1a       	sub	r10,1
80003790:	f6 0a 07 09 	ld.ub	r9,r11[r10]
80003794:	f8 0a 0b 09 	st.b	r12[r10],r9
80003798:	cf b1       	brne	8000378e <memcpy+0x13a>
8000379a:	5e fc       	retal	r12

8000379c <_vsprintf_r>:
8000379c:	d4 01       	pushm	lr
8000379e:	21 7d       	sub	sp,92
800037a0:	e0 68 ff ff 	mov	r8,65535
800037a4:	ea 18 7f ff 	orh	r8,0x7fff
800037a8:	50 58       	stdsp	sp[0x14],r8
800037aa:	50 28       	stdsp	sp[0x8],r8
800037ac:	e0 68 02 08 	mov	r8,520
800037b0:	ba 68       	st.h	sp[0xc],r8
800037b2:	3f f8       	mov	r8,-1
800037b4:	50 4b       	stdsp	sp[0x10],r11
800037b6:	50 0b       	stdsp	sp[0x0],r11
800037b8:	ba 78       	st.h	sp[0xe],r8
800037ba:	1a 9b       	mov	r11,sp
800037bc:	ca 8d       	rcall	80003b0c <_vfprintf_r>
800037be:	30 09       	mov	r9,0
800037c0:	40 08       	lddsp	r8,sp[0x0]
800037c2:	b0 89       	st.b	r8[0x0],r9
800037c4:	2e 9d       	sub	sp,-92
800037c6:	d8 02       	popm	pc

800037c8 <vsprintf>:
800037c8:	d4 01       	pushm	lr
800037ca:	e0 68 01 04 	mov	r8,260
800037ce:	14 99       	mov	r9,r10
800037d0:	16 9a       	mov	r10,r11
800037d2:	18 9b       	mov	r11,r12
800037d4:	70 0c       	ld.w	r12,r8[0x0]
800037d6:	ce 3f       	rcall	8000379c <_vsprintf_r>
800037d8:	d8 02       	popm	pc
800037da:	d7 03       	nop

800037dc <get_arg>:
800037dc:	d4 31       	pushm	r0-r7,lr
800037de:	20 8d       	sub	sp,32
800037e0:	fa c4 ff bc 	sub	r4,sp,-68
800037e4:	50 4b       	stdsp	sp[0x10],r11
800037e6:	68 2e       	ld.w	lr,r4[0x8]
800037e8:	50 58       	stdsp	sp[0x14],r8
800037ea:	12 96       	mov	r6,r9
800037ec:	7c 0b       	ld.w	r11,lr[0x0]
800037ee:	70 05       	ld.w	r5,r8[0x0]
800037f0:	50 6e       	stdsp	sp[0x18],lr
800037f2:	58 0b       	cp.w	r11,0
800037f4:	f4 0b 17 00 	moveq	r11,r10
800037f8:	68 03       	ld.w	r3,r4[0x0]
800037fa:	68 11       	ld.w	r1,r4[0x4]
800037fc:	40 49       	lddsp	r9,sp[0x10]
800037fe:	30 08       	mov	r8,0
80003800:	c2 89       	rjmp	80003a50 <get_arg+0x274>
80003802:	2f fb       	sub	r11,-1
80003804:	32 5c       	mov	r12,37
80003806:	17 8a       	ld.ub	r10,r11[0x0]
80003808:	f8 0a 18 00 	cp.b	r10,r12
8000380c:	5f 1e       	srne	lr
8000380e:	f0 0a 18 00 	cp.b	r10,r8
80003812:	5f 1c       	srne	r12
80003814:	fd ec 00 0c 	and	r12,lr,r12
80003818:	f0 0c 18 00 	cp.b	r12,r8
8000381c:	cf 31       	brne	80003802 <get_arg+0x26>
8000381e:	58 0a       	cp.w	r10,0
80003820:	e0 80 01 25 	breq	80003a6a <get_arg+0x28e>
80003824:	30 0c       	mov	r12,0
80003826:	3f fa       	mov	r10,-1
80003828:	18 90       	mov	r0,r12
8000382a:	50 3a       	stdsp	sp[0xc],r10
8000382c:	18 94       	mov	r4,r12
8000382e:	18 92       	mov	r2,r12
80003830:	f8 0c 00 3c 	add	r12,r12,r12<<0x3
80003834:	16 97       	mov	r7,r11
80003836:	50 7c       	stdsp	sp[0x1c],r12
80003838:	fe cc a1 8c 	sub	r12,pc,-24180
8000383c:	0f 3a       	ld.ub	r10,r7++
8000383e:	f8 0a 07 0e 	ld.ub	lr,r12[r10]
80003842:	40 7c       	lddsp	r12,sp[0x1c]
80003844:	1c 0c       	add	r12,lr
80003846:	fe ce a2 62 	sub	lr,pc,-23966
8000384a:	fc 0c 07 0e 	ld.ub	lr,lr[r12]
8000384e:	20 1e       	sub	lr,1
80003850:	50 0e       	stdsp	sp[0x0],lr
80003852:	fe ce a2 da 	sub	lr,pc,-23846
80003856:	fc 0c 07 0c 	ld.ub	r12,lr[r12]
8000385a:	50 7c       	stdsp	sp[0x1c],r12
8000385c:	40 0c       	lddsp	r12,sp[0x0]
8000385e:	58 7c       	cp.w	r12,7
80003860:	e0 8b 00 f1 	brhi	80003a42 <get_arg+0x266>
80003864:	fe ce a4 8c 	sub	lr,pc,-23412
80003868:	fc 0c 03 2f 	ld.w	pc,lr[r12<<0x2]
8000386c:	36 8b       	mov	r11,104
8000386e:	f6 0a 18 00 	cp.b	r10,r11
80003872:	e0 80 00 e8 	breq	80003a42 <get_arg+0x266>
80003876:	37 1b       	mov	r11,113
80003878:	f6 0a 18 00 	cp.b	r10,r11
8000387c:	c0 70       	breq	8000388a <get_arg+0xae>
8000387e:	34 cb       	mov	r11,76
80003880:	f6 0a 18 00 	cp.b	r10,r11
80003884:	c0 51       	brne	8000388e <get_arg+0xb2>
80003886:	a3 b4       	sbr	r4,0x3
80003888:	cd d8       	rjmp	80003a42 <get_arg+0x266>
8000388a:	a5 b4       	sbr	r4,0x5
8000388c:	cd b8       	rjmp	80003a42 <get_arg+0x266>
8000388e:	08 9a       	mov	r10,r4
80003890:	0e 9b       	mov	r11,r7
80003892:	a5 aa       	sbr	r10,0x4
80003894:	17 3c       	ld.ub	r12,r11++
80003896:	a5 b4       	sbr	r4,0x5
80003898:	36 ce       	mov	lr,108
8000389a:	fc 0c 18 00 	cp.b	r12,lr
8000389e:	e0 80 00 d3 	breq	80003a44 <get_arg+0x268>
800038a2:	14 94       	mov	r4,r10
800038a4:	cc f8       	rjmp	80003a42 <get_arg+0x266>
800038a6:	eb d5 c0 05 	bfextu	r5,r5,0x0,0x5
800038aa:	36 7c       	mov	r12,103
800038ac:	f8 0a 18 00 	cp.b	r10,r12
800038b0:	e0 8b 00 27 	brhi	800038fe <get_arg+0x122>
800038b4:	36 5b       	mov	r11,101
800038b6:	f6 0a 18 00 	cp.b	r10,r11
800038ba:	c4 82       	brcc	8000394a <get_arg+0x16e>
800038bc:	34 fb       	mov	r11,79
800038be:	f6 0a 18 00 	cp.b	r10,r11
800038c2:	c4 80       	breq	80003952 <get_arg+0x176>
800038c4:	e0 8b 00 0c 	brhi	800038dc <get_arg+0x100>
800038c8:	34 5b       	mov	r11,69
800038ca:	f6 0a 18 00 	cp.b	r10,r11
800038ce:	c3 e0       	breq	8000394a <get_arg+0x16e>
800038d0:	34 7b       	mov	r11,71
800038d2:	f6 0a 18 00 	cp.b	r10,r11
800038d6:	c3 a0       	breq	8000394a <get_arg+0x16e>
800038d8:	34 4b       	mov	r11,68
800038da:	c0 88       	rjmp	800038ea <get_arg+0x10e>
800038dc:	35 8b       	mov	r11,88
800038de:	f6 0a 18 00 	cp.b	r10,r11
800038e2:	c2 c0       	breq	8000393a <get_arg+0x15e>
800038e4:	e0 8b 00 07 	brhi	800038f2 <get_arg+0x116>
800038e8:	35 5b       	mov	r11,85
800038ea:	f6 0a 18 00 	cp.b	r10,r11
800038ee:	c3 51       	brne	80003958 <get_arg+0x17c>
800038f0:	c3 18       	rjmp	80003952 <get_arg+0x176>
800038f2:	36 3b       	mov	r11,99
800038f4:	f6 0a 18 00 	cp.b	r10,r11
800038f8:	c2 f0       	breq	80003956 <get_arg+0x17a>
800038fa:	36 4b       	mov	r11,100
800038fc:	c0 e8       	rjmp	80003918 <get_arg+0x13c>
800038fe:	37 0b       	mov	r11,112
80003900:	f6 0a 18 00 	cp.b	r10,r11
80003904:	c2 50       	breq	8000394e <get_arg+0x172>
80003906:	e0 8b 00 0d 	brhi	80003920 <get_arg+0x144>
8000390a:	36 eb       	mov	r11,110
8000390c:	f6 0a 18 00 	cp.b	r10,r11
80003910:	c1 f0       	breq	8000394e <get_arg+0x172>
80003912:	e0 8b 00 14 	brhi	8000393a <get_arg+0x15e>
80003916:	36 9b       	mov	r11,105
80003918:	f6 0a 18 00 	cp.b	r10,r11
8000391c:	c1 e1       	brne	80003958 <get_arg+0x17c>
8000391e:	c0 e8       	rjmp	8000393a <get_arg+0x15e>
80003920:	37 5b       	mov	r11,117
80003922:	f6 0a 18 00 	cp.b	r10,r11
80003926:	c0 a0       	breq	8000393a <get_arg+0x15e>
80003928:	37 8b       	mov	r11,120
8000392a:	f6 0a 18 00 	cp.b	r10,r11
8000392e:	c0 60       	breq	8000393a <get_arg+0x15e>
80003930:	37 3b       	mov	r11,115
80003932:	f6 0a 18 00 	cp.b	r10,r11
80003936:	c1 11       	brne	80003958 <get_arg+0x17c>
80003938:	c0 b8       	rjmp	8000394e <get_arg+0x172>
8000393a:	ed b4 00 04 	bld	r4,0x4
8000393e:	c0 a0       	breq	80003952 <get_arg+0x176>
80003940:	ed b4 00 05 	bld	r4,0x5
80003944:	c0 91       	brne	80003956 <get_arg+0x17a>
80003946:	30 20       	mov	r0,2
80003948:	c0 88       	rjmp	80003958 <get_arg+0x17c>
8000394a:	30 40       	mov	r0,4
8000394c:	c0 68       	rjmp	80003958 <get_arg+0x17c>
8000394e:	30 30       	mov	r0,3
80003950:	c0 48       	rjmp	80003958 <get_arg+0x17c>
80003952:	30 10       	mov	r0,1
80003954:	c0 28       	rjmp	80003958 <get_arg+0x17c>
80003956:	30 00       	mov	r0,0
80003958:	40 3b       	lddsp	r11,sp[0xc]
8000395a:	5b fb       	cp.w	r11,-1
8000395c:	c0 40       	breq	80003964 <get_arg+0x188>
8000395e:	e2 0b 09 20 	st.w	r1[r11<<0x2],r0
80003962:	c7 08       	rjmp	80003a42 <get_arg+0x266>
80003964:	58 60       	cp.w	r0,6
80003966:	e0 8b 00 6e 	brhi	80003a42 <get_arg+0x266>
8000396a:	6c 0a       	ld.w	r10,r6[0x0]
8000396c:	ea cc ff ff 	sub	r12,r5,-1
80003970:	fe ce a5 78 	sub	lr,pc,-23176
80003974:	fc 00 03 2f 	ld.w	pc,lr[r0<<0x2]
80003978:	f4 cb ff f8 	sub	r11,r10,-8
8000397c:	8d 0b       	st.w	r6[0x0],r11
8000397e:	f4 ea 00 00 	ld.d	r10,r10[0]
80003982:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
80003986:	c0 f8       	rjmp	800039a4 <get_arg+0x1c8>
80003988:	f4 cb ff fc 	sub	r11,r10,-4
8000398c:	8d 0b       	st.w	r6[0x0],r11
8000398e:	74 0a       	ld.w	r10,r10[0x0]
80003990:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
80003994:	c0 88       	rjmp	800039a4 <get_arg+0x1c8>
80003996:	f4 cb ff f8 	sub	r11,r10,-8
8000399a:	8d 0b       	st.w	r6[0x0],r11
8000399c:	f4 ea 00 00 	ld.d	r10,r10[0]
800039a0:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
800039a4:	0e 9b       	mov	r11,r7
800039a6:	18 95       	mov	r5,r12
800039a8:	c4 e8       	rjmp	80003a44 <get_arg+0x268>
800039aa:	62 0a       	ld.w	r10,r1[0x0]
800039ac:	5b fa       	cp.w	r10,-1
800039ae:	c0 b1       	brne	800039c4 <get_arg+0x1e8>
800039b0:	50 19       	stdsp	sp[0x4],r9
800039b2:	50 28       	stdsp	sp[0x8],r8
800039b4:	e0 6a 00 80 	mov	r10,128
800039b8:	30 0b       	mov	r11,0
800039ba:	02 9c       	mov	r12,r1
800039bc:	e0 a0 1d 78 	rcall	800074ac <memset>
800039c0:	40 28       	lddsp	r8,sp[0x8]
800039c2:	40 19       	lddsp	r9,sp[0x4]
800039c4:	e4 cc 00 01 	sub	r12,r2,1
800039c8:	0e 9b       	mov	r11,r7
800039ca:	50 3c       	stdsp	sp[0xc],r12
800039cc:	f2 0c 0c 49 	max	r9,r9,r12
800039d0:	c3 a8       	rjmp	80003a44 <get_arg+0x268>
800039d2:	62 0a       	ld.w	r10,r1[0x0]
800039d4:	5b fa       	cp.w	r10,-1
800039d6:	c0 b1       	brne	800039ec <get_arg+0x210>
800039d8:	50 19       	stdsp	sp[0x4],r9
800039da:	50 28       	stdsp	sp[0x8],r8
800039dc:	e0 6a 00 80 	mov	r10,128
800039e0:	30 0b       	mov	r11,0
800039e2:	02 9c       	mov	r12,r1
800039e4:	e0 a0 1d 64 	rcall	800074ac <memset>
800039e8:	40 28       	lddsp	r8,sp[0x8]
800039ea:	40 19       	lddsp	r9,sp[0x4]
800039ec:	20 12       	sub	r2,1
800039ee:	30 0a       	mov	r10,0
800039f0:	0e 9b       	mov	r11,r7
800039f2:	e2 02 09 2a 	st.w	r1[r2<<0x2],r10
800039f6:	f2 02 0c 49 	max	r9,r9,r2
800039fa:	c2 58       	rjmp	80003a44 <get_arg+0x268>
800039fc:	16 97       	mov	r7,r11
800039fe:	6c 0a       	ld.w	r10,r6[0x0]
80003a00:	f4 cb ff fc 	sub	r11,r10,-4
80003a04:	8d 0b       	st.w	r6[0x0],r11
80003a06:	74 0a       	ld.w	r10,r10[0x0]
80003a08:	0e 9b       	mov	r11,r7
80003a0a:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
80003a0e:	2f f5       	sub	r5,-1
80003a10:	c1 a8       	rjmp	80003a44 <get_arg+0x268>
80003a12:	f4 c2 00 30 	sub	r2,r10,48
80003a16:	c0 68       	rjmp	80003a22 <get_arg+0x246>
80003a18:	e4 02 00 22 	add	r2,r2,r2<<0x2
80003a1c:	2f f7       	sub	r7,-1
80003a1e:	f4 02 00 12 	add	r2,r10,r2<<0x1
80003a22:	0f 8a       	ld.ub	r10,r7[0x0]
80003a24:	58 0a       	cp.w	r10,0
80003a26:	c0 e0       	breq	80003a42 <get_arg+0x266>
80003a28:	23 0a       	sub	r10,48
80003a2a:	58 9a       	cp.w	r10,9
80003a2c:	fe 98 ff f6 	brls	80003a18 <get_arg+0x23c>
80003a30:	c0 98       	rjmp	80003a42 <get_arg+0x266>
80003a32:	2f f7       	sub	r7,-1
80003a34:	0f 8a       	ld.ub	r10,r7[0x0]
80003a36:	58 0a       	cp.w	r10,0
80003a38:	c0 50       	breq	80003a42 <get_arg+0x266>
80003a3a:	23 0a       	sub	r10,48
80003a3c:	58 9a       	cp.w	r10,9
80003a3e:	fe 98 ff fa 	brls	80003a32 <get_arg+0x256>
80003a42:	0e 9b       	mov	r11,r7
80003a44:	40 7c       	lddsp	r12,sp[0x1c]
80003a46:	30 ba       	mov	r10,11
80003a48:	f4 0c 18 00 	cp.b	r12,r10
80003a4c:	fe 91 fe f2 	brne	80003830 <get_arg+0x54>
80003a50:	40 42       	lddsp	r2,sp[0x10]
80003a52:	17 8c       	ld.ub	r12,r11[0x0]
80003a54:	0a 32       	cp.w	r2,r5
80003a56:	5f 4a       	srge	r10
80003a58:	f0 0c 18 00 	cp.b	r12,r8
80003a5c:	5f 1c       	srne	r12
80003a5e:	f9 ea 00 0a 	and	r10,r12,r10
80003a62:	f0 0a 18 00 	cp.b	r10,r8
80003a66:	fe 91 fe cf 	brne	80003804 <get_arg+0x28>
80003a6a:	30 08       	mov	r8,0
80003a6c:	40 4e       	lddsp	lr,sp[0x10]
80003a6e:	17 8a       	ld.ub	r10,r11[0x0]
80003a70:	e2 05 00 21 	add	r1,r1,r5<<0x2
80003a74:	f0 0a 18 00 	cp.b	r10,r8
80003a78:	fc 09 17 10 	movne	r9,lr
80003a7c:	e6 05 00 38 	add	r8,r3,r5<<0x3
80003a80:	06 9e       	mov	lr,r3
80003a82:	c2 a8       	rjmp	80003ad6 <get_arg+0x2fa>
80003a84:	62 0a       	ld.w	r10,r1[0x0]
80003a86:	58 3a       	cp.w	r10,3
80003a88:	c1 e0       	breq	80003ac4 <get_arg+0x2e8>
80003a8a:	e0 89 00 07 	brgt	80003a98 <get_arg+0x2bc>
80003a8e:	58 1a       	cp.w	r10,1
80003a90:	c1 a0       	breq	80003ac4 <get_arg+0x2e8>
80003a92:	58 2a       	cp.w	r10,2
80003a94:	c1 81       	brne	80003ac4 <get_arg+0x2e8>
80003a96:	c0 58       	rjmp	80003aa0 <get_arg+0x2c4>
80003a98:	58 5a       	cp.w	r10,5
80003a9a:	c0 c0       	breq	80003ab2 <get_arg+0x2d6>
80003a9c:	c0 b5       	brlt	80003ab2 <get_arg+0x2d6>
80003a9e:	c1 38       	rjmp	80003ac4 <get_arg+0x2e8>
80003aa0:	6c 0a       	ld.w	r10,r6[0x0]
80003aa2:	f4 cc ff f8 	sub	r12,r10,-8
80003aa6:	8d 0c       	st.w	r6[0x0],r12
80003aa8:	f4 e2 00 00 	ld.d	r2,r10[0]
80003aac:	f0 e3 00 00 	st.d	r8[0],r2
80003ab0:	c1 08       	rjmp	80003ad0 <get_arg+0x2f4>
80003ab2:	6c 0a       	ld.w	r10,r6[0x0]
80003ab4:	f4 cc ff f8 	sub	r12,r10,-8
80003ab8:	8d 0c       	st.w	r6[0x0],r12
80003aba:	f4 e2 00 00 	ld.d	r2,r10[0]
80003abe:	f0 e3 00 00 	st.d	r8[0],r2
80003ac2:	c0 78       	rjmp	80003ad0 <get_arg+0x2f4>
80003ac4:	6c 0a       	ld.w	r10,r6[0x0]
80003ac6:	f4 cc ff fc 	sub	r12,r10,-4
80003aca:	8d 0c       	st.w	r6[0x0],r12
80003acc:	74 0a       	ld.w	r10,r10[0x0]
80003ace:	91 0a       	st.w	r8[0x0],r10
80003ad0:	2f f5       	sub	r5,-1
80003ad2:	2f 88       	sub	r8,-8
80003ad4:	2f c1       	sub	r1,-4
80003ad6:	12 35       	cp.w	r5,r9
80003ad8:	fe 9a ff d6 	brle	80003a84 <get_arg+0x2a8>
80003adc:	1c 93       	mov	r3,lr
80003ade:	40 52       	lddsp	r2,sp[0x14]
80003ae0:	40 6e       	lddsp	lr,sp[0x18]
80003ae2:	85 05       	st.w	r2[0x0],r5
80003ae4:	9d 0b       	st.w	lr[0x0],r11
80003ae6:	40 4b       	lddsp	r11,sp[0x10]
80003ae8:	e6 0b 00 3c 	add	r12,r3,r11<<0x3
80003aec:	2f 8d       	sub	sp,-32
80003aee:	d8 32       	popm	r0-r7,pc

80003af0 <__sprint_r>:
80003af0:	d4 21       	pushm	r4-r7,lr
80003af2:	14 97       	mov	r7,r10
80003af4:	74 28       	ld.w	r8,r10[0x8]
80003af6:	58 08       	cp.w	r8,0
80003af8:	c0 41       	brne	80003b00 <__sprint_r+0x10>
80003afa:	95 18       	st.w	r10[0x4],r8
80003afc:	10 9c       	mov	r12,r8
80003afe:	d8 22       	popm	r4-r7,pc
80003b00:	e0 a0 18 b4 	rcall	80006c68 <__sfvwrite_r>
80003b04:	30 08       	mov	r8,0
80003b06:	8f 18       	st.w	r7[0x4],r8
80003b08:	8f 28       	st.w	r7[0x8],r8
80003b0a:	d8 22       	popm	r4-r7,pc

80003b0c <_vfprintf_r>:
80003b0c:	d4 31       	pushm	r0-r7,lr
80003b0e:	fa cd 06 bc 	sub	sp,sp,1724
80003b12:	51 09       	stdsp	sp[0x40],r9
80003b14:	16 91       	mov	r1,r11
80003b16:	14 97       	mov	r7,r10
80003b18:	18 95       	mov	r5,r12
80003b1a:	e0 a0 1a 1d 	rcall	80006f54 <_localeconv_r>
80003b1e:	78 0c       	ld.w	r12,r12[0x0]
80003b20:	50 cc       	stdsp	sp[0x30],r12
80003b22:	58 05       	cp.w	r5,0
80003b24:	c0 70       	breq	80003b32 <_vfprintf_r+0x26>
80003b26:	6a 68       	ld.w	r8,r5[0x18]
80003b28:	58 08       	cp.w	r8,0
80003b2a:	c0 41       	brne	80003b32 <_vfprintf_r+0x26>
80003b2c:	0a 9c       	mov	r12,r5
80003b2e:	e0 a0 17 3d 	rcall	800069a8 <__sinit>
80003b32:	fe c8 a3 76 	sub	r8,pc,-23690
80003b36:	10 31       	cp.w	r1,r8
80003b38:	c0 31       	brne	80003b3e <_vfprintf_r+0x32>
80003b3a:	6a 01       	ld.w	r1,r5[0x0]
80003b3c:	c0 c8       	rjmp	80003b54 <_vfprintf_r+0x48>
80003b3e:	fe c8 a3 62 	sub	r8,pc,-23710
80003b42:	10 31       	cp.w	r1,r8
80003b44:	c0 31       	brne	80003b4a <_vfprintf_r+0x3e>
80003b46:	6a 11       	ld.w	r1,r5[0x4]
80003b48:	c0 68       	rjmp	80003b54 <_vfprintf_r+0x48>
80003b4a:	fe c8 a3 4e 	sub	r8,pc,-23730
80003b4e:	10 31       	cp.w	r1,r8
80003b50:	eb f1 00 02 	ld.weq	r1,r5[0x8]
80003b54:	82 68       	ld.sh	r8,r1[0xc]
80003b56:	ed b8 00 03 	bld	r8,0x3
80003b5a:	c0 41       	brne	80003b62 <_vfprintf_r+0x56>
80003b5c:	62 48       	ld.w	r8,r1[0x10]
80003b5e:	58 08       	cp.w	r8,0
80003b60:	c0 71       	brne	80003b6e <_vfprintf_r+0x62>
80003b62:	02 9b       	mov	r11,r1
80003b64:	0a 9c       	mov	r12,r5
80003b66:	e0 a0 0f 5d 	rcall	80005a20 <__swsetup_r>
80003b6a:	e0 81 0f 54 	brne	80005a12 <_vfprintf_r+0x1f06>
80003b6e:	82 68       	ld.sh	r8,r1[0xc]
80003b70:	10 99       	mov	r9,r8
80003b72:	e2 19 00 1a 	andl	r9,0x1a,COH
80003b76:	58 a9       	cp.w	r9,10
80003b78:	c3 c1       	brne	80003bf0 <_vfprintf_r+0xe4>
80003b7a:	82 79       	ld.sh	r9,r1[0xe]
80003b7c:	30 0a       	mov	r10,0
80003b7e:	f4 09 19 00 	cp.h	r9,r10
80003b82:	c3 75       	brlt	80003bf0 <_vfprintf_r+0xe4>
80003b84:	a1 d8       	cbr	r8,0x1
80003b86:	fb 58 05 d0 	st.h	sp[1488],r8
80003b8a:	62 88       	ld.w	r8,r1[0x20]
80003b8c:	fb 48 05 e4 	st.w	sp[1508],r8
80003b90:	62 a8       	ld.w	r8,r1[0x28]
80003b92:	fb 48 05 ec 	st.w	sp[1516],r8
80003b96:	fa c8 ff bc 	sub	r8,sp,-68
80003b9a:	fb 48 05 d4 	st.w	sp[1492],r8
80003b9e:	fb 48 05 c4 	st.w	sp[1476],r8
80003ba2:	e0 68 04 00 	mov	r8,1024
80003ba6:	fb 48 05 d8 	st.w	sp[1496],r8
80003baa:	fb 48 05 cc 	st.w	sp[1484],r8
80003bae:	30 08       	mov	r8,0
80003bb0:	fb 59 05 d2 	st.h	sp[1490],r9
80003bb4:	0e 9a       	mov	r10,r7
80003bb6:	41 09       	lddsp	r9,sp[0x40]
80003bb8:	fa c7 fa 3c 	sub	r7,sp,-1476
80003bbc:	fb 48 05 dc 	st.w	sp[1500],r8
80003bc0:	0a 9c       	mov	r12,r5
80003bc2:	0e 9b       	mov	r11,r7
80003bc4:	ca 4f       	rcall	80003b0c <_vfprintf_r>
80003bc6:	50 bc       	stdsp	sp[0x2c],r12
80003bc8:	c0 95       	brlt	80003bda <_vfprintf_r+0xce>
80003bca:	0e 9b       	mov	r11,r7
80003bcc:	0a 9c       	mov	r12,r5
80003bce:	e0 a0 16 15 	rcall	800067f8 <_fflush_r>
80003bd2:	40 be       	lddsp	lr,sp[0x2c]
80003bd4:	f9 be 01 ff 	movne	lr,-1
80003bd8:	50 be       	stdsp	sp[0x2c],lr
80003bda:	fb 08 05 d0 	ld.sh	r8,sp[1488]
80003bde:	ed b8 00 06 	bld	r8,0x6
80003be2:	e0 81 0f 1a 	brne	80005a16 <_vfprintf_r+0x1f0a>
80003be6:	82 68       	ld.sh	r8,r1[0xc]
80003be8:	a7 a8       	sbr	r8,0x6
80003bea:	a2 68       	st.h	r1[0xc],r8
80003bec:	e0 8f 0f 15 	bral	80005a16 <_vfprintf_r+0x1f0a>
80003bf0:	30 08       	mov	r8,0
80003bf2:	fb 48 06 b4 	st.w	sp[1716],r8
80003bf6:	fb 48 06 90 	st.w	sp[1680],r8
80003bfa:	fb 48 06 8c 	st.w	sp[1676],r8
80003bfe:	fb 48 06 b0 	st.w	sp[1712],r8
80003c02:	30 08       	mov	r8,0
80003c04:	30 09       	mov	r9,0
80003c06:	50 a7       	stdsp	sp[0x28],r7
80003c08:	50 78       	stdsp	sp[0x1c],r8
80003c0a:	fa c3 f9 e0 	sub	r3,sp,-1568
80003c0e:	3f f8       	mov	r8,-1
80003c10:	50 59       	stdsp	sp[0x14],r9
80003c12:	fb 43 06 88 	st.w	sp[1672],r3
80003c16:	fb 48 05 44 	st.w	sp[1348],r8
80003c1a:	12 9c       	mov	r12,r9
80003c1c:	50 69       	stdsp	sp[0x18],r9
80003c1e:	50 d9       	stdsp	sp[0x34],r9
80003c20:	50 e9       	stdsp	sp[0x38],r9
80003c22:	50 b9       	stdsp	sp[0x2c],r9
80003c24:	12 97       	mov	r7,r9
80003c26:	0a 94       	mov	r4,r5
80003c28:	40 a2       	lddsp	r2,sp[0x28]
80003c2a:	32 5a       	mov	r10,37
80003c2c:	30 08       	mov	r8,0
80003c2e:	c0 28       	rjmp	80003c32 <_vfprintf_r+0x126>
80003c30:	2f f2       	sub	r2,-1
80003c32:	05 89       	ld.ub	r9,r2[0x0]
80003c34:	f0 09 18 00 	cp.b	r9,r8
80003c38:	5f 1b       	srne	r11
80003c3a:	f4 09 18 00 	cp.b	r9,r10
80003c3e:	5f 19       	srne	r9
80003c40:	f3 eb 00 0b 	and	r11,r9,r11
80003c44:	f0 0b 18 00 	cp.b	r11,r8
80003c48:	cf 41       	brne	80003c30 <_vfprintf_r+0x124>
80003c4a:	40 ab       	lddsp	r11,sp[0x28]
80003c4c:	e4 0b 01 06 	sub	r6,r2,r11
80003c50:	c1 e0       	breq	80003c8c <_vfprintf_r+0x180>
80003c52:	fa f8 06 90 	ld.w	r8,sp[1680]
80003c56:	0c 08       	add	r8,r6
80003c58:	87 0b       	st.w	r3[0x0],r11
80003c5a:	fb 48 06 90 	st.w	sp[1680],r8
80003c5e:	87 16       	st.w	r3[0x4],r6
80003c60:	fa f8 06 8c 	ld.w	r8,sp[1676]
80003c64:	2f f8       	sub	r8,-1
80003c66:	fb 48 06 8c 	st.w	sp[1676],r8
80003c6a:	58 78       	cp.w	r8,7
80003c6c:	e0 89 00 04 	brgt	80003c74 <_vfprintf_r+0x168>
80003c70:	2f 83       	sub	r3,-8
80003c72:	c0 a8       	rjmp	80003c86 <_vfprintf_r+0x17a>
80003c74:	fa ca f9 78 	sub	r10,sp,-1672
80003c78:	02 9b       	mov	r11,r1
80003c7a:	08 9c       	mov	r12,r4
80003c7c:	c3 af       	rcall	80003af0 <__sprint_r>
80003c7e:	e0 81 0e c6 	brne	80005a0a <_vfprintf_r+0x1efe>
80003c82:	fa c3 f9 e0 	sub	r3,sp,-1568
80003c86:	40 ba       	lddsp	r10,sp[0x2c]
80003c88:	0c 0a       	add	r10,r6
80003c8a:	50 ba       	stdsp	sp[0x2c],r10
80003c8c:	05 89       	ld.ub	r9,r2[0x0]
80003c8e:	30 08       	mov	r8,0
80003c90:	f0 09 18 00 	cp.b	r9,r8
80003c94:	e0 80 0e aa 	breq	800059e8 <_vfprintf_r+0x1edc>
80003c98:	30 09       	mov	r9,0
80003c9a:	fb 68 06 bb 	st.b	sp[1723],r8
80003c9e:	0e 96       	mov	r6,r7
80003ca0:	e4 c8 ff ff 	sub	r8,r2,-1
80003ca4:	3f fe       	mov	lr,-1
80003ca6:	50 93       	stdsp	sp[0x24],r3
80003ca8:	50 41       	stdsp	sp[0x10],r1
80003caa:	0e 93       	mov	r3,r7
80003cac:	04 91       	mov	r1,r2
80003cae:	50 89       	stdsp	sp[0x20],r9
80003cb0:	50 a8       	stdsp	sp[0x28],r8
80003cb2:	50 2e       	stdsp	sp[0x8],lr
80003cb4:	50 39       	stdsp	sp[0xc],r9
80003cb6:	12 95       	mov	r5,r9
80003cb8:	12 90       	mov	r0,r9
80003cba:	10 97       	mov	r7,r8
80003cbc:	08 92       	mov	r2,r4
80003cbe:	c0 78       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003cc0:	3f fc       	mov	r12,-1
80003cc2:	08 97       	mov	r7,r4
80003cc4:	50 2c       	stdsp	sp[0x8],r12
80003cc6:	c0 38       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003cc8:	30 0b       	mov	r11,0
80003cca:	50 3b       	stdsp	sp[0xc],r11
80003ccc:	0f 38       	ld.ub	r8,r7++
80003cce:	c0 28       	rjmp	80003cd2 <_vfprintf_r+0x1c6>
80003cd0:	12 90       	mov	r0,r9
80003cd2:	f0 c9 00 20 	sub	r9,r8,32
80003cd6:	e0 49 00 58 	cp.w	r9,88
80003cda:	e0 8b 0a 30 	brhi	8000513a <_vfprintf_r+0x162e>
80003cde:	fe ca a8 ca 	sub	r10,pc,-22326
80003ce2:	f4 09 03 2f 	ld.w	pc,r10[r9<<0x2]
80003ce6:	50 a7       	stdsp	sp[0x28],r7
80003ce8:	50 80       	stdsp	sp[0x20],r0
80003cea:	0c 97       	mov	r7,r6
80003cec:	04 94       	mov	r4,r2
80003cee:	06 96       	mov	r6,r3
80003cf0:	02 92       	mov	r2,r1
80003cf2:	fe c9 a6 a2 	sub	r9,pc,-22878
80003cf6:	40 93       	lddsp	r3,sp[0x24]
80003cf8:	10 90       	mov	r0,r8
80003cfa:	40 41       	lddsp	r1,sp[0x10]
80003cfc:	50 d9       	stdsp	sp[0x34],r9
80003cfe:	e0 8f 08 8e 	bral	80004e1a <_vfprintf_r+0x130e>
80003d02:	30 08       	mov	r8,0
80003d04:	fb 39 06 bb 	ld.ub	r9,sp[1723]
80003d08:	f0 09 18 00 	cp.b	r9,r8
80003d0c:	ce 01       	brne	80003ccc <_vfprintf_r+0x1c0>
80003d0e:	32 08       	mov	r8,32
80003d10:	c6 e8       	rjmp	80003dec <_vfprintf_r+0x2e0>
80003d12:	a1 a5       	sbr	r5,0x0
80003d14:	cd cb       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003d16:	0f 89       	ld.ub	r9,r7[0x0]
80003d18:	f2 c8 00 30 	sub	r8,r9,48
80003d1c:	58 98       	cp.w	r8,9
80003d1e:	e0 8b 00 1d 	brhi	80003d58 <_vfprintf_r+0x24c>
80003d22:	ee c8 ff ff 	sub	r8,r7,-1
80003d26:	30 0b       	mov	r11,0
80003d28:	23 09       	sub	r9,48
80003d2a:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
80003d2e:	f2 0b 00 1b 	add	r11,r9,r11<<0x1
80003d32:	11 39       	ld.ub	r9,r8++
80003d34:	f2 ca 00 30 	sub	r10,r9,48
80003d38:	58 9a       	cp.w	r10,9
80003d3a:	fe 98 ff f7 	brls	80003d28 <_vfprintf_r+0x21c>
80003d3e:	e0 49 00 24 	cp.w	r9,36
80003d42:	cc 31       	brne	80003cc8 <_vfprintf_r+0x1bc>
80003d44:	e0 4b 00 20 	cp.w	r11,32
80003d48:	e0 89 0e 60 	brgt	80005a08 <_vfprintf_r+0x1efc>
80003d4c:	20 1b       	sub	r11,1
80003d4e:	fa f9 06 b4 	ld.w	r9,sp[1716]
80003d52:	12 3b       	cp.w	r11,r9
80003d54:	c0 95       	brlt	80003d66 <_vfprintf_r+0x25a>
80003d56:	c1 08       	rjmp	80003d76 <_vfprintf_r+0x26a>
80003d58:	fa f9 06 b4 	ld.w	r9,sp[1716]
80003d5c:	ec ca ff ff 	sub	r10,r6,-1
80003d60:	12 36       	cp.w	r6,r9
80003d62:	c1 f5       	brlt	80003da0 <_vfprintf_r+0x294>
80003d64:	c2 68       	rjmp	80003db0 <_vfprintf_r+0x2a4>
80003d66:	fa ce f9 44 	sub	lr,sp,-1724
80003d6a:	10 97       	mov	r7,r8
80003d6c:	fc 0b 00 3b 	add	r11,lr,r11<<0x3
80003d70:	f6 f0 fd 88 	ld.w	r0,r11[-632]
80003d74:	c3 58       	rjmp	80003dde <_vfprintf_r+0x2d2>
80003d76:	10 97       	mov	r7,r8
80003d78:	fa c8 f9 50 	sub	r8,sp,-1712
80003d7c:	1a d8       	st.w	--sp,r8
80003d7e:	fa c8 fa b8 	sub	r8,sp,-1352
80003d82:	1a d8       	st.w	--sp,r8
80003d84:	fa c8 fb b4 	sub	r8,sp,-1100
80003d88:	02 9a       	mov	r10,r1
80003d8a:	1a d8       	st.w	--sp,r8
80003d8c:	04 9c       	mov	r12,r2
80003d8e:	fa c8 f9 40 	sub	r8,sp,-1728
80003d92:	fa c9 ff b4 	sub	r9,sp,-76
80003d96:	fe b0 fd 23 	rcall	800037dc <get_arg>
80003d9a:	2f dd       	sub	sp,-12
80003d9c:	78 00       	ld.w	r0,r12[0x0]
80003d9e:	c2 08       	rjmp	80003dde <_vfprintf_r+0x2d2>
80003da0:	fa cc f9 44 	sub	r12,sp,-1724
80003da4:	14 96       	mov	r6,r10
80003da6:	f8 03 00 38 	add	r8,r12,r3<<0x3
80003daa:	f0 f0 fd 88 	ld.w	r0,r8[-632]
80003dae:	c1 88       	rjmp	80003dde <_vfprintf_r+0x2d2>
80003db0:	41 08       	lddsp	r8,sp[0x40]
80003db2:	59 f9       	cp.w	r9,31
80003db4:	e0 89 00 11 	brgt	80003dd6 <_vfprintf_r+0x2ca>
80003db8:	f0 cb ff fc 	sub	r11,r8,-4
80003dbc:	51 0b       	stdsp	sp[0x40],r11
80003dbe:	70 00       	ld.w	r0,r8[0x0]
80003dc0:	fa cb f9 44 	sub	r11,sp,-1724
80003dc4:	f6 09 00 38 	add	r8,r11,r9<<0x3
80003dc8:	f1 40 fd 88 	st.w	r8[-632],r0
80003dcc:	2f f9       	sub	r9,-1
80003dce:	14 96       	mov	r6,r10
80003dd0:	fb 49 06 b4 	st.w	sp[1716],r9
80003dd4:	c0 58       	rjmp	80003dde <_vfprintf_r+0x2d2>
80003dd6:	70 00       	ld.w	r0,r8[0x0]
80003dd8:	14 96       	mov	r6,r10
80003dda:	2f c8       	sub	r8,-4
80003ddc:	51 08       	stdsp	sp[0x40],r8
80003dde:	58 00       	cp.w	r0,0
80003de0:	fe 94 ff 76 	brge	80003ccc <_vfprintf_r+0x1c0>
80003de4:	5c 30       	neg	r0
80003de6:	a3 a5       	sbr	r5,0x2
80003de8:	c7 2b       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003dea:	32 b8       	mov	r8,43
80003dec:	fb 68 06 bb 	st.b	sp[1723],r8
80003df0:	c6 eb       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003df2:	0f 38       	ld.ub	r8,r7++
80003df4:	e0 48 00 2a 	cp.w	r8,42
80003df8:	c0 30       	breq	80003dfe <_vfprintf_r+0x2f2>
80003dfa:	30 09       	mov	r9,0
80003dfc:	c7 98       	rjmp	80003eee <_vfprintf_r+0x3e2>
80003dfe:	0f 88       	ld.ub	r8,r7[0x0]
80003e00:	f0 c9 00 30 	sub	r9,r8,48
80003e04:	58 99       	cp.w	r9,9
80003e06:	e0 8b 00 1f 	brhi	80003e44 <_vfprintf_r+0x338>
80003e0a:	ee c4 ff ff 	sub	r4,r7,-1
80003e0e:	30 0b       	mov	r11,0
80003e10:	23 08       	sub	r8,48
80003e12:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
80003e16:	f0 0b 00 1b 	add	r11,r8,r11<<0x1
80003e1a:	09 38       	ld.ub	r8,r4++
80003e1c:	f0 c9 00 30 	sub	r9,r8,48
80003e20:	58 99       	cp.w	r9,9
80003e22:	fe 98 ff f7 	brls	80003e10 <_vfprintf_r+0x304>
80003e26:	e0 48 00 24 	cp.w	r8,36
80003e2a:	fe 91 ff 4f 	brne	80003cc8 <_vfprintf_r+0x1bc>
80003e2e:	e0 4b 00 20 	cp.w	r11,32
80003e32:	e0 89 0d eb 	brgt	80005a08 <_vfprintf_r+0x1efc>
80003e36:	20 1b       	sub	r11,1
80003e38:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003e3c:	10 3b       	cp.w	r11,r8
80003e3e:	c0 a5       	brlt	80003e52 <_vfprintf_r+0x346>
80003e40:	c1 18       	rjmp	80003e62 <_vfprintf_r+0x356>
80003e42:	d7 03       	nop
80003e44:	fa fa 06 b4 	ld.w	r10,sp[1716]
80003e48:	ec c9 ff ff 	sub	r9,r6,-1
80003e4c:	14 36       	cp.w	r6,r10
80003e4e:	c1 f5       	brlt	80003e8c <_vfprintf_r+0x380>
80003e50:	c2 88       	rjmp	80003ea0 <_vfprintf_r+0x394>
80003e52:	fa ca f9 44 	sub	r10,sp,-1724
80003e56:	f4 0b 00 3b 	add	r11,r10,r11<<0x3
80003e5a:	f6 fb fd 88 	ld.w	r11,r11[-632]
80003e5e:	50 2b       	stdsp	sp[0x8],r11
80003e60:	c3 c8       	rjmp	80003ed8 <_vfprintf_r+0x3cc>
80003e62:	fa c8 f9 50 	sub	r8,sp,-1712
80003e66:	1a d8       	st.w	--sp,r8
80003e68:	fa c8 fa b8 	sub	r8,sp,-1352
80003e6c:	1a d8       	st.w	--sp,r8
80003e6e:	fa c8 fb b4 	sub	r8,sp,-1100
80003e72:	02 9a       	mov	r10,r1
80003e74:	1a d8       	st.w	--sp,r8
80003e76:	04 9c       	mov	r12,r2
80003e78:	fa c8 f9 40 	sub	r8,sp,-1728
80003e7c:	fa c9 ff b4 	sub	r9,sp,-76
80003e80:	fe b0 fc ae 	rcall	800037dc <get_arg>
80003e84:	2f dd       	sub	sp,-12
80003e86:	78 0c       	ld.w	r12,r12[0x0]
80003e88:	50 2c       	stdsp	sp[0x8],r12
80003e8a:	c2 78       	rjmp	80003ed8 <_vfprintf_r+0x3cc>
80003e8c:	12 96       	mov	r6,r9
80003e8e:	0e 94       	mov	r4,r7
80003e90:	fa c9 f9 44 	sub	r9,sp,-1724
80003e94:	f2 03 00 38 	add	r8,r9,r3<<0x3
80003e98:	f0 f8 fd 88 	ld.w	r8,r8[-632]
80003e9c:	50 28       	stdsp	sp[0x8],r8
80003e9e:	c1 d8       	rjmp	80003ed8 <_vfprintf_r+0x3cc>
80003ea0:	41 08       	lddsp	r8,sp[0x40]
80003ea2:	59 fa       	cp.w	r10,31
80003ea4:	e0 89 00 14 	brgt	80003ecc <_vfprintf_r+0x3c0>
80003ea8:	f0 cb ff fc 	sub	r11,r8,-4
80003eac:	70 08       	ld.w	r8,r8[0x0]
80003eae:	51 0b       	stdsp	sp[0x40],r11
80003eb0:	50 28       	stdsp	sp[0x8],r8
80003eb2:	fa c6 f9 44 	sub	r6,sp,-1724
80003eb6:	40 2e       	lddsp	lr,sp[0x8]
80003eb8:	ec 0a 00 38 	add	r8,r6,r10<<0x3
80003ebc:	f1 4e fd 88 	st.w	r8[-632],lr
80003ec0:	2f fa       	sub	r10,-1
80003ec2:	0e 94       	mov	r4,r7
80003ec4:	fb 4a 06 b4 	st.w	sp[1716],r10
80003ec8:	12 96       	mov	r6,r9
80003eca:	c0 78       	rjmp	80003ed8 <_vfprintf_r+0x3cc>
80003ecc:	70 0c       	ld.w	r12,r8[0x0]
80003ece:	0e 94       	mov	r4,r7
80003ed0:	2f c8       	sub	r8,-4
80003ed2:	50 2c       	stdsp	sp[0x8],r12
80003ed4:	12 96       	mov	r6,r9
80003ed6:	51 08       	stdsp	sp[0x40],r8
80003ed8:	40 2b       	lddsp	r11,sp[0x8]
80003eda:	58 0b       	cp.w	r11,0
80003edc:	fe 95 fe f2 	brlt	80003cc0 <_vfprintf_r+0x1b4>
80003ee0:	08 97       	mov	r7,r4
80003ee2:	cf 5a       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003ee4:	f2 09 00 29 	add	r9,r9,r9<<0x2
80003ee8:	0f 38       	ld.ub	r8,r7++
80003eea:	f4 09 00 19 	add	r9,r10,r9<<0x1
80003eee:	f0 ca 00 30 	sub	r10,r8,48
80003ef2:	58 9a       	cp.w	r10,9
80003ef4:	fe 98 ff f8 	brls	80003ee4 <_vfprintf_r+0x3d8>
80003ef8:	3f fa       	mov	r10,-1
80003efa:	f2 0a 0c 49 	max	r9,r9,r10
80003efe:	50 29       	stdsp	sp[0x8],r9
80003f00:	ce 9a       	rjmp	80003cd2 <_vfprintf_r+0x1c6>
80003f02:	a7 b5       	sbr	r5,0x7
80003f04:	ce 4a       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003f06:	30 09       	mov	r9,0
80003f08:	23 08       	sub	r8,48
80003f0a:	f2 09 00 29 	add	r9,r9,r9<<0x2
80003f0e:	f0 09 00 19 	add	r9,r8,r9<<0x1
80003f12:	0f 38       	ld.ub	r8,r7++
80003f14:	f0 ca 00 30 	sub	r10,r8,48
80003f18:	58 9a       	cp.w	r10,9
80003f1a:	fe 98 ff f7 	brls	80003f08 <_vfprintf_r+0x3fc>
80003f1e:	e0 48 00 24 	cp.w	r8,36
80003f22:	fe 91 fe d7 	brne	80003cd0 <_vfprintf_r+0x1c4>
80003f26:	e0 49 00 20 	cp.w	r9,32
80003f2a:	e0 89 0d 6f 	brgt	80005a08 <_vfprintf_r+0x1efc>
80003f2e:	f2 c3 00 01 	sub	r3,r9,1
80003f32:	30 19       	mov	r9,1
80003f34:	50 39       	stdsp	sp[0xc],r9
80003f36:	cc ba       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003f38:	a3 b5       	sbr	r5,0x3
80003f3a:	cc 9a       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003f3c:	a7 a5       	sbr	r5,0x6
80003f3e:	cc 7a       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003f40:	0a 98       	mov	r8,r5
80003f42:	a5 b5       	sbr	r5,0x5
80003f44:	a5 a8       	sbr	r8,0x4
80003f46:	0f 89       	ld.ub	r9,r7[0x0]
80003f48:	36 ce       	mov	lr,108
80003f4a:	fc 09 18 00 	cp.b	r9,lr
80003f4e:	f7 b7 00 ff 	subeq	r7,-1
80003f52:	f0 05 17 10 	movne	r5,r8
80003f56:	cb ba       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003f58:	a5 b5       	sbr	r5,0x5
80003f5a:	cb 9a       	rjmp	80003ccc <_vfprintf_r+0x1c0>
80003f5c:	50 a7       	stdsp	sp[0x28],r7
80003f5e:	50 80       	stdsp	sp[0x20],r0
80003f60:	0c 97       	mov	r7,r6
80003f62:	10 90       	mov	r0,r8
80003f64:	06 96       	mov	r6,r3
80003f66:	04 94       	mov	r4,r2
80003f68:	40 93       	lddsp	r3,sp[0x24]
80003f6a:	02 92       	mov	r2,r1
80003f6c:	0e 99       	mov	r9,r7
80003f6e:	40 41       	lddsp	r1,sp[0x10]
80003f70:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003f74:	40 3c       	lddsp	r12,sp[0xc]
80003f76:	58 0c       	cp.w	r12,0
80003f78:	c1 d0       	breq	80003fb2 <_vfprintf_r+0x4a6>
80003f7a:	10 36       	cp.w	r6,r8
80003f7c:	c0 64       	brge	80003f88 <_vfprintf_r+0x47c>
80003f7e:	fa cb f9 44 	sub	r11,sp,-1724
80003f82:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003f86:	c1 d8       	rjmp	80003fc0 <_vfprintf_r+0x4b4>
80003f88:	fa c8 f9 50 	sub	r8,sp,-1712
80003f8c:	1a d8       	st.w	--sp,r8
80003f8e:	fa c8 fa b8 	sub	r8,sp,-1352
80003f92:	1a d8       	st.w	--sp,r8
80003f94:	fa c8 fb b4 	sub	r8,sp,-1100
80003f98:	1a d8       	st.w	--sp,r8
80003f9a:	fa c8 f9 40 	sub	r8,sp,-1728
80003f9e:	fa c9 ff b4 	sub	r9,sp,-76
80003fa2:	04 9a       	mov	r10,r2
80003fa4:	0c 9b       	mov	r11,r6
80003fa6:	08 9c       	mov	r12,r4
80003fa8:	fe b0 fc 1a 	rcall	800037dc <get_arg>
80003fac:	2f dd       	sub	sp,-12
80003fae:	19 b8       	ld.ub	r8,r12[0x3]
80003fb0:	c2 28       	rjmp	80003ff4 <_vfprintf_r+0x4e8>
80003fb2:	2f f7       	sub	r7,-1
80003fb4:	10 39       	cp.w	r9,r8
80003fb6:	c0 84       	brge	80003fc6 <_vfprintf_r+0x4ba>
80003fb8:	fa ca f9 44 	sub	r10,sp,-1724
80003fbc:	f4 06 00 36 	add	r6,r10,r6<<0x3
80003fc0:	ed 38 fd 8b 	ld.ub	r8,r6[-629]
80003fc4:	c1 88       	rjmp	80003ff4 <_vfprintf_r+0x4e8>
80003fc6:	41 09       	lddsp	r9,sp[0x40]
80003fc8:	59 f8       	cp.w	r8,31
80003fca:	e0 89 00 12 	brgt	80003fee <_vfprintf_r+0x4e2>
80003fce:	f2 ca ff fc 	sub	r10,r9,-4
80003fd2:	51 0a       	stdsp	sp[0x40],r10
80003fd4:	72 09       	ld.w	r9,r9[0x0]
80003fd6:	fa c6 f9 44 	sub	r6,sp,-1724
80003fda:	ec 08 00 3a 	add	r10,r6,r8<<0x3
80003fde:	2f f8       	sub	r8,-1
80003fe0:	f5 49 fd 88 	st.w	r10[-632],r9
80003fe4:	fb 48 06 b4 	st.w	sp[1716],r8
80003fe8:	f1 d9 c0 08 	bfextu	r8,r9,0x0,0x8
80003fec:	c0 48       	rjmp	80003ff4 <_vfprintf_r+0x4e8>
80003fee:	13 b8       	ld.ub	r8,r9[0x3]
80003ff0:	2f c9       	sub	r9,-4
80003ff2:	51 09       	stdsp	sp[0x40],r9
80003ff4:	fb 68 06 60 	st.b	sp[1632],r8
80003ff8:	30 0e       	mov	lr,0
80003ffa:	30 08       	mov	r8,0
80003ffc:	30 12       	mov	r2,1
80003ffe:	fb 68 06 bb 	st.b	sp[1723],r8
80004002:	50 2e       	stdsp	sp[0x8],lr
80004004:	e0 8f 08 ad 	bral	8000515e <_vfprintf_r+0x1652>
80004008:	50 a7       	stdsp	sp[0x28],r7
8000400a:	50 80       	stdsp	sp[0x20],r0
8000400c:	0c 97       	mov	r7,r6
8000400e:	04 94       	mov	r4,r2
80004010:	06 96       	mov	r6,r3
80004012:	02 92       	mov	r2,r1
80004014:	40 93       	lddsp	r3,sp[0x24]
80004016:	10 90       	mov	r0,r8
80004018:	40 41       	lddsp	r1,sp[0x10]
8000401a:	a5 a5       	sbr	r5,0x4
8000401c:	c0 a8       	rjmp	80004030 <_vfprintf_r+0x524>
8000401e:	50 a7       	stdsp	sp[0x28],r7
80004020:	50 80       	stdsp	sp[0x20],r0
80004022:	0c 97       	mov	r7,r6
80004024:	04 94       	mov	r4,r2
80004026:	06 96       	mov	r6,r3
80004028:	02 92       	mov	r2,r1
8000402a:	40 93       	lddsp	r3,sp[0x24]
8000402c:	10 90       	mov	r0,r8
8000402e:	40 41       	lddsp	r1,sp[0x10]
80004030:	ed b5 00 05 	bld	r5,0x5
80004034:	c5 11       	brne	800040d6 <_vfprintf_r+0x5ca>
80004036:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000403a:	40 3c       	lddsp	r12,sp[0xc]
8000403c:	58 0c       	cp.w	r12,0
8000403e:	c1 e0       	breq	8000407a <_vfprintf_r+0x56e>
80004040:	10 36       	cp.w	r6,r8
80004042:	c0 64       	brge	8000404e <_vfprintf_r+0x542>
80004044:	fa cb f9 44 	sub	r11,sp,-1724
80004048:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000404c:	c2 08       	rjmp	8000408c <_vfprintf_r+0x580>
8000404e:	fa c8 f9 50 	sub	r8,sp,-1712
80004052:	1a d8       	st.w	--sp,r8
80004054:	fa c8 fa b8 	sub	r8,sp,-1352
80004058:	0c 9b       	mov	r11,r6
8000405a:	1a d8       	st.w	--sp,r8
8000405c:	fa c8 fb b4 	sub	r8,sp,-1100
80004060:	1a d8       	st.w	--sp,r8
80004062:	fa c9 ff b4 	sub	r9,sp,-76
80004066:	fa c8 f9 40 	sub	r8,sp,-1728
8000406a:	04 9a       	mov	r10,r2
8000406c:	08 9c       	mov	r12,r4
8000406e:	fe b0 fb b7 	rcall	800037dc <get_arg>
80004072:	2f dd       	sub	sp,-12
80004074:	78 1b       	ld.w	r11,r12[0x4]
80004076:	78 09       	ld.w	r9,r12[0x0]
80004078:	c2 b8       	rjmp	800040ce <_vfprintf_r+0x5c2>
8000407a:	ee ca ff ff 	sub	r10,r7,-1
8000407e:	10 37       	cp.w	r7,r8
80004080:	c0 b4       	brge	80004096 <_vfprintf_r+0x58a>
80004082:	fa c9 f9 44 	sub	r9,sp,-1724
80004086:	14 97       	mov	r7,r10
80004088:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000408c:	ec fb fd 8c 	ld.w	r11,r6[-628]
80004090:	ec f9 fd 88 	ld.w	r9,r6[-632]
80004094:	c1 d8       	rjmp	800040ce <_vfprintf_r+0x5c2>
80004096:	41 09       	lddsp	r9,sp[0x40]
80004098:	59 f8       	cp.w	r8,31
8000409a:	e0 89 00 14 	brgt	800040c2 <_vfprintf_r+0x5b6>
8000409e:	f2 cb ff f8 	sub	r11,r9,-8
800040a2:	51 0b       	stdsp	sp[0x40],r11
800040a4:	fa c6 f9 44 	sub	r6,sp,-1724
800040a8:	72 1b       	ld.w	r11,r9[0x4]
800040aa:	ec 08 00 3c 	add	r12,r6,r8<<0x3
800040ae:	72 09       	ld.w	r9,r9[0x0]
800040b0:	f9 4b fd 8c 	st.w	r12[-628],r11
800040b4:	f9 49 fd 88 	st.w	r12[-632],r9
800040b8:	2f f8       	sub	r8,-1
800040ba:	14 97       	mov	r7,r10
800040bc:	fb 48 06 b4 	st.w	sp[1716],r8
800040c0:	c0 78       	rjmp	800040ce <_vfprintf_r+0x5c2>
800040c2:	f2 c8 ff f8 	sub	r8,r9,-8
800040c6:	72 1b       	ld.w	r11,r9[0x4]
800040c8:	14 97       	mov	r7,r10
800040ca:	51 08       	stdsp	sp[0x40],r8
800040cc:	72 09       	ld.w	r9,r9[0x0]
800040ce:	16 98       	mov	r8,r11
800040d0:	fa e9 00 00 	st.d	sp[0],r8
800040d4:	ca e8       	rjmp	80004230 <_vfprintf_r+0x724>
800040d6:	ed b5 00 04 	bld	r5,0x4
800040da:	c1 71       	brne	80004108 <_vfprintf_r+0x5fc>
800040dc:	fa f8 06 b4 	ld.w	r8,sp[1716]
800040e0:	40 3e       	lddsp	lr,sp[0xc]
800040e2:	58 0e       	cp.w	lr,0
800040e4:	c0 80       	breq	800040f4 <_vfprintf_r+0x5e8>
800040e6:	10 36       	cp.w	r6,r8
800040e8:	c6 94       	brge	800041ba <_vfprintf_r+0x6ae>
800040ea:	fa cc f9 44 	sub	r12,sp,-1724
800040ee:	f8 06 00 36 	add	r6,r12,r6<<0x3
800040f2:	c8 28       	rjmp	800041f6 <_vfprintf_r+0x6ea>
800040f4:	ee ca ff ff 	sub	r10,r7,-1
800040f8:	10 37       	cp.w	r7,r8
800040fa:	e0 84 00 81 	brge	800041fc <_vfprintf_r+0x6f0>
800040fe:	fa cb f9 44 	sub	r11,sp,-1724
80004102:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004106:	c7 78       	rjmp	800041f4 <_vfprintf_r+0x6e8>
80004108:	ed b5 00 06 	bld	r5,0x6
8000410c:	c4 b1       	brne	800041a2 <_vfprintf_r+0x696>
8000410e:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004112:	40 3c       	lddsp	r12,sp[0xc]
80004114:	58 0c       	cp.w	r12,0
80004116:	c1 d0       	breq	80004150 <_vfprintf_r+0x644>
80004118:	10 36       	cp.w	r6,r8
8000411a:	c0 64       	brge	80004126 <_vfprintf_r+0x61a>
8000411c:	fa cb f9 44 	sub	r11,sp,-1724
80004120:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004124:	c1 f8       	rjmp	80004162 <_vfprintf_r+0x656>
80004126:	fa c8 f9 50 	sub	r8,sp,-1712
8000412a:	1a d8       	st.w	--sp,r8
8000412c:	fa c8 fa b8 	sub	r8,sp,-1352
80004130:	1a d8       	st.w	--sp,r8
80004132:	fa c8 fb b4 	sub	r8,sp,-1100
80004136:	1a d8       	st.w	--sp,r8
80004138:	fa c8 f9 40 	sub	r8,sp,-1728
8000413c:	fa c9 ff b4 	sub	r9,sp,-76
80004140:	04 9a       	mov	r10,r2
80004142:	0c 9b       	mov	r11,r6
80004144:	08 9c       	mov	r12,r4
80004146:	fe b0 fb 4b 	rcall	800037dc <get_arg>
8000414a:	2f dd       	sub	sp,-12
8000414c:	98 18       	ld.sh	r8,r12[0x2]
8000414e:	c2 68       	rjmp	8000419a <_vfprintf_r+0x68e>
80004150:	ee ca ff ff 	sub	r10,r7,-1
80004154:	10 37       	cp.w	r7,r8
80004156:	c0 94       	brge	80004168 <_vfprintf_r+0x65c>
80004158:	fa c9 f9 44 	sub	r9,sp,-1724
8000415c:	14 97       	mov	r7,r10
8000415e:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004162:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004166:	c1 a8       	rjmp	8000419a <_vfprintf_r+0x68e>
80004168:	41 09       	lddsp	r9,sp[0x40]
8000416a:	59 f8       	cp.w	r8,31
8000416c:	e0 89 00 13 	brgt	80004192 <_vfprintf_r+0x686>
80004170:	f2 cb ff fc 	sub	r11,r9,-4
80004174:	51 0b       	stdsp	sp[0x40],r11
80004176:	72 09       	ld.w	r9,r9[0x0]
80004178:	fa c6 f9 44 	sub	r6,sp,-1724
8000417c:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004180:	2f f8       	sub	r8,-1
80004182:	f7 49 fd 88 	st.w	r11[-632],r9
80004186:	fb 48 06 b4 	st.w	sp[1716],r8
8000418a:	14 97       	mov	r7,r10
8000418c:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004190:	c0 58       	rjmp	8000419a <_vfprintf_r+0x68e>
80004192:	92 18       	ld.sh	r8,r9[0x2]
80004194:	14 97       	mov	r7,r10
80004196:	2f c9       	sub	r9,-4
80004198:	51 09       	stdsp	sp[0x40],r9
8000419a:	50 18       	stdsp	sp[0x4],r8
8000419c:	bf 58       	asr	r8,0x1f
8000419e:	50 08       	stdsp	sp[0x0],r8
800041a0:	c4 88       	rjmp	80004230 <_vfprintf_r+0x724>
800041a2:	fa f8 06 b4 	ld.w	r8,sp[1716]
800041a6:	40 3c       	lddsp	r12,sp[0xc]
800041a8:	58 0c       	cp.w	r12,0
800041aa:	c1 d0       	breq	800041e4 <_vfprintf_r+0x6d8>
800041ac:	10 36       	cp.w	r6,r8
800041ae:	c0 64       	brge	800041ba <_vfprintf_r+0x6ae>
800041b0:	fa cb f9 44 	sub	r11,sp,-1724
800041b4:	f6 06 00 36 	add	r6,r11,r6<<0x3
800041b8:	c1 f8       	rjmp	800041f6 <_vfprintf_r+0x6ea>
800041ba:	fa c8 f9 50 	sub	r8,sp,-1712
800041be:	1a d8       	st.w	--sp,r8
800041c0:	fa c8 fa b8 	sub	r8,sp,-1352
800041c4:	0c 9b       	mov	r11,r6
800041c6:	1a d8       	st.w	--sp,r8
800041c8:	fa c8 fb b4 	sub	r8,sp,-1100
800041cc:	04 9a       	mov	r10,r2
800041ce:	1a d8       	st.w	--sp,r8
800041d0:	08 9c       	mov	r12,r4
800041d2:	fa c8 f9 40 	sub	r8,sp,-1728
800041d6:	fa c9 ff b4 	sub	r9,sp,-76
800041da:	fe b0 fb 01 	rcall	800037dc <get_arg>
800041de:	2f dd       	sub	sp,-12
800041e0:	78 0b       	ld.w	r11,r12[0x0]
800041e2:	c2 48       	rjmp	8000422a <_vfprintf_r+0x71e>
800041e4:	ee ca ff ff 	sub	r10,r7,-1
800041e8:	10 37       	cp.w	r7,r8
800041ea:	c0 94       	brge	800041fc <_vfprintf_r+0x6f0>
800041ec:	fa c9 f9 44 	sub	r9,sp,-1724
800041f0:	f2 06 00 36 	add	r6,r9,r6<<0x3
800041f4:	14 97       	mov	r7,r10
800041f6:	ec fb fd 88 	ld.w	r11,r6[-632]
800041fa:	c1 88       	rjmp	8000422a <_vfprintf_r+0x71e>
800041fc:	41 09       	lddsp	r9,sp[0x40]
800041fe:	59 f8       	cp.w	r8,31
80004200:	e0 89 00 11 	brgt	80004222 <_vfprintf_r+0x716>
80004204:	f2 cb ff fc 	sub	r11,r9,-4
80004208:	51 0b       	stdsp	sp[0x40],r11
8000420a:	fa c6 f9 44 	sub	r6,sp,-1724
8000420e:	72 0b       	ld.w	r11,r9[0x0]
80004210:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004214:	f3 4b fd 88 	st.w	r9[-632],r11
80004218:	2f f8       	sub	r8,-1
8000421a:	14 97       	mov	r7,r10
8000421c:	fb 48 06 b4 	st.w	sp[1716],r8
80004220:	c0 58       	rjmp	8000422a <_vfprintf_r+0x71e>
80004222:	72 0b       	ld.w	r11,r9[0x0]
80004224:	14 97       	mov	r7,r10
80004226:	2f c9       	sub	r9,-4
80004228:	51 09       	stdsp	sp[0x40],r9
8000422a:	50 1b       	stdsp	sp[0x4],r11
8000422c:	bf 5b       	asr	r11,0x1f
8000422e:	50 0b       	stdsp	sp[0x0],r11
80004230:	fa ea 00 00 	ld.d	r10,sp[0]
80004234:	58 0a       	cp.w	r10,0
80004236:	5c 2b       	cpc	r11
80004238:	c0 e4       	brge	80004254 <_vfprintf_r+0x748>
8000423a:	30 08       	mov	r8,0
8000423c:	fa ea 00 00 	ld.d	r10,sp[0]
80004240:	30 09       	mov	r9,0
80004242:	f0 0a 01 0a 	sub	r10,r8,r10
80004246:	f2 0b 01 4b 	sbc	r11,r9,r11
8000424a:	32 d8       	mov	r8,45
8000424c:	fa eb 00 00 	st.d	sp[0],r10
80004250:	fb 68 06 bb 	st.b	sp[1723],r8
80004254:	30 18       	mov	r8,1
80004256:	e0 8f 06 fa 	bral	8000504a <_vfprintf_r+0x153e>
8000425a:	50 a7       	stdsp	sp[0x28],r7
8000425c:	50 80       	stdsp	sp[0x20],r0
8000425e:	0c 97       	mov	r7,r6
80004260:	04 94       	mov	r4,r2
80004262:	06 96       	mov	r6,r3
80004264:	02 92       	mov	r2,r1
80004266:	40 93       	lddsp	r3,sp[0x24]
80004268:	10 90       	mov	r0,r8
8000426a:	40 41       	lddsp	r1,sp[0x10]
8000426c:	0e 99       	mov	r9,r7
8000426e:	ed b5 00 03 	bld	r5,0x3
80004272:	c4 11       	brne	800042f4 <_vfprintf_r+0x7e8>
80004274:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004278:	40 3a       	lddsp	r10,sp[0xc]
8000427a:	58 0a       	cp.w	r10,0
8000427c:	c1 90       	breq	800042ae <_vfprintf_r+0x7a2>
8000427e:	10 36       	cp.w	r6,r8
80004280:	c6 45       	brlt	80004348 <_vfprintf_r+0x83c>
80004282:	fa c8 f9 50 	sub	r8,sp,-1712
80004286:	1a d8       	st.w	--sp,r8
80004288:	fa c8 fa b8 	sub	r8,sp,-1352
8000428c:	1a d8       	st.w	--sp,r8
8000428e:	fa c8 fb b4 	sub	r8,sp,-1100
80004292:	0c 9b       	mov	r11,r6
80004294:	1a d8       	st.w	--sp,r8
80004296:	04 9a       	mov	r10,r2
80004298:	fa c8 f9 40 	sub	r8,sp,-1728
8000429c:	fa c9 ff b4 	sub	r9,sp,-76
800042a0:	08 9c       	mov	r12,r4
800042a2:	fe b0 fa 9d 	rcall	800037dc <get_arg>
800042a6:	2f dd       	sub	sp,-12
800042a8:	78 16       	ld.w	r6,r12[0x4]
800042aa:	50 76       	stdsp	sp[0x1c],r6
800042ac:	c4 88       	rjmp	8000433c <_vfprintf_r+0x830>
800042ae:	2f f7       	sub	r7,-1
800042b0:	10 39       	cp.w	r9,r8
800042b2:	c0 c4       	brge	800042ca <_vfprintf_r+0x7be>
800042b4:	fa ce f9 44 	sub	lr,sp,-1724
800042b8:	fc 06 00 36 	add	r6,lr,r6<<0x3
800042bc:	ec fc fd 8c 	ld.w	r12,r6[-628]
800042c0:	50 7c       	stdsp	sp[0x1c],r12
800042c2:	ec f6 fd 88 	ld.w	r6,r6[-632]
800042c6:	50 56       	stdsp	sp[0x14],r6
800042c8:	c6 68       	rjmp	80004394 <_vfprintf_r+0x888>
800042ca:	41 09       	lddsp	r9,sp[0x40]
800042cc:	59 f8       	cp.w	r8,31
800042ce:	e0 89 00 10 	brgt	800042ee <_vfprintf_r+0x7e2>
800042d2:	f2 ca ff f8 	sub	r10,r9,-8
800042d6:	72 1b       	ld.w	r11,r9[0x4]
800042d8:	51 0a       	stdsp	sp[0x40],r10
800042da:	72 09       	ld.w	r9,r9[0x0]
800042dc:	fa ca f9 44 	sub	r10,sp,-1724
800042e0:	50 7b       	stdsp	sp[0x1c],r11
800042e2:	50 59       	stdsp	sp[0x14],r9
800042e4:	f4 08 00 39 	add	r9,r10,r8<<0x3
800042e8:	40 5b       	lddsp	r11,sp[0x14]
800042ea:	40 7a       	lddsp	r10,sp[0x1c]
800042ec:	c4 78       	rjmp	8000437a <_vfprintf_r+0x86e>
800042ee:	72 18       	ld.w	r8,r9[0x4]
800042f0:	50 78       	stdsp	sp[0x1c],r8
800042f2:	c4 c8       	rjmp	8000438a <_vfprintf_r+0x87e>
800042f4:	fa f8 06 b4 	ld.w	r8,sp[1716]
800042f8:	40 3e       	lddsp	lr,sp[0xc]
800042fa:	58 0e       	cp.w	lr,0
800042fc:	c2 30       	breq	80004342 <_vfprintf_r+0x836>
800042fe:	10 36       	cp.w	r6,r8
80004300:	c0 94       	brge	80004312 <_vfprintf_r+0x806>
80004302:	fa cc f9 44 	sub	r12,sp,-1724
80004306:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000430a:	ec fb fd 8c 	ld.w	r11,r6[-628]
8000430e:	50 7b       	stdsp	sp[0x1c],r11
80004310:	cd 9b       	rjmp	800042c2 <_vfprintf_r+0x7b6>
80004312:	fa c8 f9 50 	sub	r8,sp,-1712
80004316:	1a d8       	st.w	--sp,r8
80004318:	fa c8 fa b8 	sub	r8,sp,-1352
8000431c:	04 9a       	mov	r10,r2
8000431e:	1a d8       	st.w	--sp,r8
80004320:	fa c8 fb b4 	sub	r8,sp,-1100
80004324:	0c 9b       	mov	r11,r6
80004326:	1a d8       	st.w	--sp,r8
80004328:	08 9c       	mov	r12,r4
8000432a:	fa c8 f9 40 	sub	r8,sp,-1728
8000432e:	fa c9 ff b4 	sub	r9,sp,-76
80004332:	fe b0 fa 55 	rcall	800037dc <get_arg>
80004336:	2f dd       	sub	sp,-12
80004338:	78 1a       	ld.w	r10,r12[0x4]
8000433a:	50 7a       	stdsp	sp[0x1c],r10
8000433c:	78 0c       	ld.w	r12,r12[0x0]
8000433e:	50 5c       	stdsp	sp[0x14],r12
80004340:	c2 a8       	rjmp	80004394 <_vfprintf_r+0x888>
80004342:	2f f7       	sub	r7,-1
80004344:	10 39       	cp.w	r9,r8
80004346:	c0 94       	brge	80004358 <_vfprintf_r+0x84c>
80004348:	fa c9 f9 44 	sub	r9,sp,-1724
8000434c:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004350:	ec f8 fd 8c 	ld.w	r8,r6[-628]
80004354:	50 78       	stdsp	sp[0x1c],r8
80004356:	cb 6b       	rjmp	800042c2 <_vfprintf_r+0x7b6>
80004358:	41 09       	lddsp	r9,sp[0x40]
8000435a:	59 f8       	cp.w	r8,31
8000435c:	e0 89 00 15 	brgt	80004386 <_vfprintf_r+0x87a>
80004360:	f2 ca ff f8 	sub	r10,r9,-8
80004364:	72 16       	ld.w	r6,r9[0x4]
80004366:	72 09       	ld.w	r9,r9[0x0]
80004368:	51 0a       	stdsp	sp[0x40],r10
8000436a:	50 59       	stdsp	sp[0x14],r9
8000436c:	fa ce f9 44 	sub	lr,sp,-1724
80004370:	50 76       	stdsp	sp[0x1c],r6
80004372:	fc 08 00 39 	add	r9,lr,r8<<0x3
80004376:	40 5b       	lddsp	r11,sp[0x14]
80004378:	0c 9a       	mov	r10,r6
8000437a:	f2 eb fd 88 	st.d	r9[-632],r10
8000437e:	2f f8       	sub	r8,-1
80004380:	fb 48 06 b4 	st.w	sp[1716],r8
80004384:	c0 88       	rjmp	80004394 <_vfprintf_r+0x888>
80004386:	72 1c       	ld.w	r12,r9[0x4]
80004388:	50 7c       	stdsp	sp[0x1c],r12
8000438a:	f2 c8 ff f8 	sub	r8,r9,-8
8000438e:	51 08       	stdsp	sp[0x40],r8
80004390:	72 09       	ld.w	r9,r9[0x0]
80004392:	50 59       	stdsp	sp[0x14],r9
80004394:	40 5b       	lddsp	r11,sp[0x14]
80004396:	40 7a       	lddsp	r10,sp[0x1c]
80004398:	e0 a0 1c de 	rcall	80007d54 <__isinfd>
8000439c:	18 96       	mov	r6,r12
8000439e:	c1 70       	breq	800043cc <_vfprintf_r+0x8c0>
800043a0:	30 08       	mov	r8,0
800043a2:	30 09       	mov	r9,0
800043a4:	40 5b       	lddsp	r11,sp[0x14]
800043a6:	40 7a       	lddsp	r10,sp[0x1c]
800043a8:	e0 a0 21 cc 	rcall	80008740 <__avr32_f64_cmp_lt>
800043ac:	c0 40       	breq	800043b4 <_vfprintf_r+0x8a8>
800043ae:	32 d8       	mov	r8,45
800043b0:	fb 68 06 bb 	st.b	sp[1723],r8
800043b4:	fe c8 ad 50 	sub	r8,pc,-21168
800043b8:	fe c6 ad 50 	sub	r6,pc,-21168
800043bc:	a7 d5       	cbr	r5,0x7
800043be:	e0 40 00 47 	cp.w	r0,71
800043c2:	f0 06 17 a0 	movle	r6,r8
800043c6:	30 32       	mov	r2,3
800043c8:	e0 8f 06 ce 	bral	80005164 <_vfprintf_r+0x1658>
800043cc:	40 5b       	lddsp	r11,sp[0x14]
800043ce:	40 7a       	lddsp	r10,sp[0x1c]
800043d0:	e0 a0 1c d7 	rcall	80007d7e <__isnand>
800043d4:	c0 e0       	breq	800043f0 <_vfprintf_r+0x8e4>
800043d6:	50 26       	stdsp	sp[0x8],r6
800043d8:	fe c8 ad 6c 	sub	r8,pc,-21140
800043dc:	fe c6 ad 6c 	sub	r6,pc,-21140
800043e0:	a7 d5       	cbr	r5,0x7
800043e2:	e0 40 00 47 	cp.w	r0,71
800043e6:	f0 06 17 a0 	movle	r6,r8
800043ea:	30 32       	mov	r2,3
800043ec:	e0 8f 06 c2 	bral	80005170 <_vfprintf_r+0x1664>
800043f0:	40 2a       	lddsp	r10,sp[0x8]
800043f2:	5b fa       	cp.w	r10,-1
800043f4:	c0 41       	brne	800043fc <_vfprintf_r+0x8f0>
800043f6:	30 69       	mov	r9,6
800043f8:	50 29       	stdsp	sp[0x8],r9
800043fa:	c1 18       	rjmp	8000441c <_vfprintf_r+0x910>
800043fc:	e0 40 00 47 	cp.w	r0,71
80004400:	5f 09       	sreq	r9
80004402:	e0 40 00 67 	cp.w	r0,103
80004406:	5f 08       	sreq	r8
80004408:	f3 e8 10 08 	or	r8,r9,r8
8000440c:	f8 08 18 00 	cp.b	r8,r12
80004410:	c0 60       	breq	8000441c <_vfprintf_r+0x910>
80004412:	40 28       	lddsp	r8,sp[0x8]
80004414:	58 08       	cp.w	r8,0
80004416:	f9 b8 00 01 	moveq	r8,1
8000441a:	50 28       	stdsp	sp[0x8],r8
8000441c:	40 78       	lddsp	r8,sp[0x1c]
8000441e:	40 59       	lddsp	r9,sp[0x14]
80004420:	fa e9 06 94 	st.d	sp[1684],r8
80004424:	a9 a5       	sbr	r5,0x8
80004426:	fa f8 06 94 	ld.w	r8,sp[1684]
8000442a:	58 08       	cp.w	r8,0
8000442c:	c0 65       	brlt	80004438 <_vfprintf_r+0x92c>
8000442e:	40 5e       	lddsp	lr,sp[0x14]
80004430:	30 0c       	mov	r12,0
80004432:	50 6e       	stdsp	sp[0x18],lr
80004434:	50 9c       	stdsp	sp[0x24],r12
80004436:	c0 78       	rjmp	80004444 <_vfprintf_r+0x938>
80004438:	40 5b       	lddsp	r11,sp[0x14]
8000443a:	32 da       	mov	r10,45
8000443c:	ee 1b 80 00 	eorh	r11,0x8000
80004440:	50 9a       	stdsp	sp[0x24],r10
80004442:	50 6b       	stdsp	sp[0x18],r11
80004444:	e0 40 00 46 	cp.w	r0,70
80004448:	5f 09       	sreq	r9
8000444a:	e0 40 00 66 	cp.w	r0,102
8000444e:	5f 08       	sreq	r8
80004450:	f3 e8 10 08 	or	r8,r9,r8
80004454:	50 48       	stdsp	sp[0x10],r8
80004456:	c0 40       	breq	8000445e <_vfprintf_r+0x952>
80004458:	40 22       	lddsp	r2,sp[0x8]
8000445a:	30 39       	mov	r9,3
8000445c:	c1 08       	rjmp	8000447c <_vfprintf_r+0x970>
8000445e:	e0 40 00 45 	cp.w	r0,69
80004462:	5f 09       	sreq	r9
80004464:	e0 40 00 65 	cp.w	r0,101
80004468:	5f 08       	sreq	r8
8000446a:	40 22       	lddsp	r2,sp[0x8]
8000446c:	10 49       	or	r9,r8
8000446e:	2f f2       	sub	r2,-1
80004470:	40 46       	lddsp	r6,sp[0x10]
80004472:	ec 09 18 00 	cp.b	r9,r6
80004476:	fb f2 00 02 	ld.weq	r2,sp[0x8]
8000447a:	30 29       	mov	r9,2
8000447c:	fa c8 f9 5c 	sub	r8,sp,-1700
80004480:	1a d8       	st.w	--sp,r8
80004482:	fa c8 f9 54 	sub	r8,sp,-1708
80004486:	1a d8       	st.w	--sp,r8
80004488:	fa c8 f9 4c 	sub	r8,sp,-1716
8000448c:	08 9c       	mov	r12,r4
8000448e:	1a d8       	st.w	--sp,r8
80004490:	04 98       	mov	r8,r2
80004492:	40 9b       	lddsp	r11,sp[0x24]
80004494:	40 aa       	lddsp	r10,sp[0x28]
80004496:	e0 a0 0b c3 	rcall	80005c1c <_dtoa_r>
8000449a:	e0 40 00 47 	cp.w	r0,71
8000449e:	5f 19       	srne	r9
800044a0:	e0 40 00 67 	cp.w	r0,103
800044a4:	5f 18       	srne	r8
800044a6:	18 96       	mov	r6,r12
800044a8:	2f dd       	sub	sp,-12
800044aa:	f3 e8 00 08 	and	r8,r9,r8
800044ae:	c0 41       	brne	800044b6 <_vfprintf_r+0x9aa>
800044b0:	ed b5 00 00 	bld	r5,0x0
800044b4:	c3 01       	brne	80004514 <_vfprintf_r+0xa08>
800044b6:	ec 02 00 0e 	add	lr,r6,r2
800044ba:	50 3e       	stdsp	sp[0xc],lr
800044bc:	40 4c       	lddsp	r12,sp[0x10]
800044be:	58 0c       	cp.w	r12,0
800044c0:	c1 50       	breq	800044ea <_vfprintf_r+0x9de>
800044c2:	0d 89       	ld.ub	r9,r6[0x0]
800044c4:	33 08       	mov	r8,48
800044c6:	f0 09 18 00 	cp.b	r9,r8
800044ca:	c0 b1       	brne	800044e0 <_vfprintf_r+0x9d4>
800044cc:	30 08       	mov	r8,0
800044ce:	30 09       	mov	r9,0
800044d0:	40 6b       	lddsp	r11,sp[0x18]
800044d2:	40 7a       	lddsp	r10,sp[0x1c]
800044d4:	e0 a0 20 ef 	rcall	800086b2 <__avr32_f64_cmp_eq>
800044d8:	fb b2 00 01 	rsubeq	r2,1
800044dc:	fb f2 0b ab 	st.weq	sp[0x6ac],r2
800044e0:	40 3b       	lddsp	r11,sp[0xc]
800044e2:	fa f8 06 ac 	ld.w	r8,sp[1708]
800044e6:	10 0b       	add	r11,r8
800044e8:	50 3b       	stdsp	sp[0xc],r11
800044ea:	40 6b       	lddsp	r11,sp[0x18]
800044ec:	30 08       	mov	r8,0
800044ee:	30 09       	mov	r9,0
800044f0:	40 7a       	lddsp	r10,sp[0x1c]
800044f2:	e0 a0 20 e0 	rcall	800086b2 <__avr32_f64_cmp_eq>
800044f6:	c0 90       	breq	80004508 <_vfprintf_r+0x9fc>
800044f8:	40 3a       	lddsp	r10,sp[0xc]
800044fa:	fb 4a 06 a4 	st.w	sp[1700],r10
800044fe:	c0 58       	rjmp	80004508 <_vfprintf_r+0x9fc>
80004500:	10 c9       	st.b	r8++,r9
80004502:	fb 48 06 a4 	st.w	sp[1700],r8
80004506:	c0 28       	rjmp	8000450a <_vfprintf_r+0x9fe>
80004508:	33 09       	mov	r9,48
8000450a:	fa f8 06 a4 	ld.w	r8,sp[1700]
8000450e:	40 3e       	lddsp	lr,sp[0xc]
80004510:	1c 38       	cp.w	r8,lr
80004512:	cf 73       	brcs	80004500 <_vfprintf_r+0x9f4>
80004514:	e0 40 00 47 	cp.w	r0,71
80004518:	5f 09       	sreq	r9
8000451a:	e0 40 00 67 	cp.w	r0,103
8000451e:	5f 08       	sreq	r8
80004520:	f3 e8 10 08 	or	r8,r9,r8
80004524:	fa f9 06 a4 	ld.w	r9,sp[1700]
80004528:	0c 19       	sub	r9,r6
8000452a:	50 69       	stdsp	sp[0x18],r9
8000452c:	58 08       	cp.w	r8,0
8000452e:	c0 b0       	breq	80004544 <_vfprintf_r+0xa38>
80004530:	fa f8 06 ac 	ld.w	r8,sp[1708]
80004534:	5b d8       	cp.w	r8,-3
80004536:	c0 55       	brlt	80004540 <_vfprintf_r+0xa34>
80004538:	40 2c       	lddsp	r12,sp[0x8]
8000453a:	18 38       	cp.w	r8,r12
8000453c:	e0 8a 00 6a 	brle	80004610 <_vfprintf_r+0xb04>
80004540:	20 20       	sub	r0,2
80004542:	c0 58       	rjmp	8000454c <_vfprintf_r+0xa40>
80004544:	e0 40 00 65 	cp.w	r0,101
80004548:	e0 89 00 46 	brgt	800045d4 <_vfprintf_r+0xac8>
8000454c:	fa fb 06 ac 	ld.w	r11,sp[1708]
80004550:	fb 60 06 9c 	st.b	sp[1692],r0
80004554:	20 1b       	sub	r11,1
80004556:	fb 4b 06 ac 	st.w	sp[1708],r11
8000455a:	c0 47       	brpl	80004562 <_vfprintf_r+0xa56>
8000455c:	5c 3b       	neg	r11
8000455e:	32 d8       	mov	r8,45
80004560:	c0 28       	rjmp	80004564 <_vfprintf_r+0xa58>
80004562:	32 b8       	mov	r8,43
80004564:	fb 68 06 9d 	st.b	sp[1693],r8
80004568:	58 9b       	cp.w	r11,9
8000456a:	e0 8a 00 1d 	brle	800045a4 <_vfprintf_r+0xa98>
8000456e:	fa c9 fa 35 	sub	r9,sp,-1483
80004572:	30 aa       	mov	r10,10
80004574:	12 98       	mov	r8,r9
80004576:	0e 9c       	mov	r12,r7
80004578:	0c 92       	mov	r2,r6
8000457a:	f6 0a 0c 06 	divs	r6,r11,r10
8000457e:	0e 9b       	mov	r11,r7
80004580:	2d 0b       	sub	r11,-48
80004582:	10 fb       	st.b	--r8,r11
80004584:	0c 9b       	mov	r11,r6
80004586:	58 96       	cp.w	r6,9
80004588:	fe 99 ff f9 	brgt	8000457a <_vfprintf_r+0xa6e>
8000458c:	2d 0b       	sub	r11,-48
8000458e:	18 97       	mov	r7,r12
80004590:	04 96       	mov	r6,r2
80004592:	10 fb       	st.b	--r8,r11
80004594:	fa ca f9 62 	sub	r10,sp,-1694
80004598:	c0 38       	rjmp	8000459e <_vfprintf_r+0xa92>
8000459a:	11 3b       	ld.ub	r11,r8++
8000459c:	14 cb       	st.b	r10++,r11
8000459e:	12 38       	cp.w	r8,r9
800045a0:	cf d3       	brcs	8000459a <_vfprintf_r+0xa8e>
800045a2:	c0 98       	rjmp	800045b4 <_vfprintf_r+0xaa8>
800045a4:	2d 0b       	sub	r11,-48
800045a6:	33 08       	mov	r8,48
800045a8:	fb 6b 06 9f 	st.b	sp[1695],r11
800045ac:	fb 68 06 9e 	st.b	sp[1694],r8
800045b0:	fa ca f9 60 	sub	r10,sp,-1696
800045b4:	fa c8 f9 64 	sub	r8,sp,-1692
800045b8:	f4 08 01 08 	sub	r8,r10,r8
800045bc:	50 e8       	stdsp	sp[0x38],r8
800045be:	10 92       	mov	r2,r8
800045c0:	40 6b       	lddsp	r11,sp[0x18]
800045c2:	16 02       	add	r2,r11
800045c4:	58 1b       	cp.w	r11,1
800045c6:	e0 89 00 05 	brgt	800045d0 <_vfprintf_r+0xac4>
800045ca:	ed b5 00 00 	bld	r5,0x0
800045ce:	c3 51       	brne	80004638 <_vfprintf_r+0xb2c>
800045d0:	2f f2       	sub	r2,-1
800045d2:	c3 38       	rjmp	80004638 <_vfprintf_r+0xb2c>
800045d4:	e0 40 00 66 	cp.w	r0,102
800045d8:	c1 c1       	brne	80004610 <_vfprintf_r+0xb04>
800045da:	fa f2 06 ac 	ld.w	r2,sp[1708]
800045de:	58 02       	cp.w	r2,0
800045e0:	e0 8a 00 0c 	brle	800045f8 <_vfprintf_r+0xaec>
800045e4:	40 2a       	lddsp	r10,sp[0x8]
800045e6:	58 0a       	cp.w	r10,0
800045e8:	c0 41       	brne	800045f0 <_vfprintf_r+0xae4>
800045ea:	ed b5 00 00 	bld	r5,0x0
800045ee:	c2 51       	brne	80004638 <_vfprintf_r+0xb2c>
800045f0:	2f f2       	sub	r2,-1
800045f2:	40 29       	lddsp	r9,sp[0x8]
800045f4:	12 02       	add	r2,r9
800045f6:	c0 b8       	rjmp	8000460c <_vfprintf_r+0xb00>
800045f8:	40 28       	lddsp	r8,sp[0x8]
800045fa:	58 08       	cp.w	r8,0
800045fc:	c0 61       	brne	80004608 <_vfprintf_r+0xafc>
800045fe:	ed b5 00 00 	bld	r5,0x0
80004602:	c0 30       	breq	80004608 <_vfprintf_r+0xafc>
80004604:	30 12       	mov	r2,1
80004606:	c1 98       	rjmp	80004638 <_vfprintf_r+0xb2c>
80004608:	40 22       	lddsp	r2,sp[0x8]
8000460a:	2f e2       	sub	r2,-2
8000460c:	36 60       	mov	r0,102
8000460e:	c1 58       	rjmp	80004638 <_vfprintf_r+0xb2c>
80004610:	fa f2 06 ac 	ld.w	r2,sp[1708]
80004614:	40 6e       	lddsp	lr,sp[0x18]
80004616:	1c 32       	cp.w	r2,lr
80004618:	c0 65       	brlt	80004624 <_vfprintf_r+0xb18>
8000461a:	ed b5 00 00 	bld	r5,0x0
8000461e:	f7 b2 00 ff 	subeq	r2,-1
80004622:	c0 a8       	rjmp	80004636 <_vfprintf_r+0xb2a>
80004624:	e4 08 11 02 	rsub	r8,r2,2
80004628:	40 6c       	lddsp	r12,sp[0x18]
8000462a:	58 02       	cp.w	r2,0
8000462c:	f0 02 17 a0 	movle	r2,r8
80004630:	f9 b2 09 01 	movgt	r2,1
80004634:	18 02       	add	r2,r12
80004636:	36 70       	mov	r0,103
80004638:	40 9b       	lddsp	r11,sp[0x24]
8000463a:	58 0b       	cp.w	r11,0
8000463c:	e0 80 05 94 	breq	80005164 <_vfprintf_r+0x1658>
80004640:	32 d8       	mov	r8,45
80004642:	fb 68 06 bb 	st.b	sp[1723],r8
80004646:	e0 8f 05 93 	bral	8000516c <_vfprintf_r+0x1660>
8000464a:	50 a7       	stdsp	sp[0x28],r7
8000464c:	04 94       	mov	r4,r2
8000464e:	0c 97       	mov	r7,r6
80004650:	02 92       	mov	r2,r1
80004652:	06 96       	mov	r6,r3
80004654:	40 41       	lddsp	r1,sp[0x10]
80004656:	40 93       	lddsp	r3,sp[0x24]
80004658:	0e 99       	mov	r9,r7
8000465a:	ed b5 00 05 	bld	r5,0x5
8000465e:	c4 81       	brne	800046ee <_vfprintf_r+0xbe2>
80004660:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004664:	40 3e       	lddsp	lr,sp[0xc]
80004666:	58 0e       	cp.w	lr,0
80004668:	c1 d0       	breq	800046a2 <_vfprintf_r+0xb96>
8000466a:	10 36       	cp.w	r6,r8
8000466c:	c0 64       	brge	80004678 <_vfprintf_r+0xb6c>
8000466e:	fa cc f9 44 	sub	r12,sp,-1724
80004672:	f8 06 00 36 	add	r6,r12,r6<<0x3
80004676:	c1 d8       	rjmp	800046b0 <_vfprintf_r+0xba4>
80004678:	fa c8 f9 50 	sub	r8,sp,-1712
8000467c:	1a d8       	st.w	--sp,r8
8000467e:	fa c8 fa b8 	sub	r8,sp,-1352
80004682:	04 9a       	mov	r10,r2
80004684:	1a d8       	st.w	--sp,r8
80004686:	fa c8 fb b4 	sub	r8,sp,-1100
8000468a:	0c 9b       	mov	r11,r6
8000468c:	1a d8       	st.w	--sp,r8
8000468e:	08 9c       	mov	r12,r4
80004690:	fa c8 f9 40 	sub	r8,sp,-1728
80004694:	fa c9 ff b4 	sub	r9,sp,-76
80004698:	fe b0 f8 a2 	rcall	800037dc <get_arg>
8000469c:	2f dd       	sub	sp,-12
8000469e:	78 0a       	ld.w	r10,r12[0x0]
800046a0:	c2 08       	rjmp	800046e0 <_vfprintf_r+0xbd4>
800046a2:	2f f7       	sub	r7,-1
800046a4:	10 39       	cp.w	r9,r8
800046a6:	c0 84       	brge	800046b6 <_vfprintf_r+0xbaa>
800046a8:	fa cb f9 44 	sub	r11,sp,-1724
800046ac:	f6 06 00 36 	add	r6,r11,r6<<0x3
800046b0:	ec fa fd 88 	ld.w	r10,r6[-632]
800046b4:	c1 68       	rjmp	800046e0 <_vfprintf_r+0xbd4>
800046b6:	41 09       	lddsp	r9,sp[0x40]
800046b8:	59 f8       	cp.w	r8,31
800046ba:	e0 89 00 10 	brgt	800046da <_vfprintf_r+0xbce>
800046be:	f2 ca ff fc 	sub	r10,r9,-4
800046c2:	51 0a       	stdsp	sp[0x40],r10
800046c4:	fa c6 f9 44 	sub	r6,sp,-1724
800046c8:	72 0a       	ld.w	r10,r9[0x0]
800046ca:	ec 08 00 39 	add	r9,r6,r8<<0x3
800046ce:	f3 4a fd 88 	st.w	r9[-632],r10
800046d2:	2f f8       	sub	r8,-1
800046d4:	fb 48 06 b4 	st.w	sp[1716],r8
800046d8:	c0 48       	rjmp	800046e0 <_vfprintf_r+0xbd4>
800046da:	72 0a       	ld.w	r10,r9[0x0]
800046dc:	2f c9       	sub	r9,-4
800046de:	51 09       	stdsp	sp[0x40],r9
800046e0:	40 be       	lddsp	lr,sp[0x2c]
800046e2:	1c 98       	mov	r8,lr
800046e4:	95 1e       	st.w	r10[0x4],lr
800046e6:	bf 58       	asr	r8,0x1f
800046e8:	95 08       	st.w	r10[0x0],r8
800046ea:	fe 9f fa 9f 	bral	80003c28 <_vfprintf_r+0x11c>
800046ee:	ed b5 00 04 	bld	r5,0x4
800046f2:	c4 80       	breq	80004782 <_vfprintf_r+0xc76>
800046f4:	e2 15 00 40 	andl	r5,0x40,COH
800046f8:	c4 50       	breq	80004782 <_vfprintf_r+0xc76>
800046fa:	fa f8 06 b4 	ld.w	r8,sp[1716]
800046fe:	40 3c       	lddsp	r12,sp[0xc]
80004700:	58 0c       	cp.w	r12,0
80004702:	c1 d0       	breq	8000473c <_vfprintf_r+0xc30>
80004704:	10 36       	cp.w	r6,r8
80004706:	c0 64       	brge	80004712 <_vfprintf_r+0xc06>
80004708:	fa cb f9 44 	sub	r11,sp,-1724
8000470c:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004710:	c1 d8       	rjmp	8000474a <_vfprintf_r+0xc3e>
80004712:	fa c8 f9 50 	sub	r8,sp,-1712
80004716:	1a d8       	st.w	--sp,r8
80004718:	fa c8 fa b8 	sub	r8,sp,-1352
8000471c:	04 9a       	mov	r10,r2
8000471e:	1a d8       	st.w	--sp,r8
80004720:	fa c8 fb b4 	sub	r8,sp,-1100
80004724:	0c 9b       	mov	r11,r6
80004726:	1a d8       	st.w	--sp,r8
80004728:	08 9c       	mov	r12,r4
8000472a:	fa c8 f9 40 	sub	r8,sp,-1728
8000472e:	fa c9 ff b4 	sub	r9,sp,-76
80004732:	fe b0 f8 55 	rcall	800037dc <get_arg>
80004736:	2f dd       	sub	sp,-12
80004738:	78 0a       	ld.w	r10,r12[0x0]
8000473a:	c2 08       	rjmp	8000477a <_vfprintf_r+0xc6e>
8000473c:	2f f7       	sub	r7,-1
8000473e:	10 39       	cp.w	r9,r8
80004740:	c0 84       	brge	80004750 <_vfprintf_r+0xc44>
80004742:	fa ca f9 44 	sub	r10,sp,-1724
80004746:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000474a:	ec fa fd 88 	ld.w	r10,r6[-632]
8000474e:	c1 68       	rjmp	8000477a <_vfprintf_r+0xc6e>
80004750:	41 09       	lddsp	r9,sp[0x40]
80004752:	59 f8       	cp.w	r8,31
80004754:	e0 89 00 10 	brgt	80004774 <_vfprintf_r+0xc68>
80004758:	f2 ca ff fc 	sub	r10,r9,-4
8000475c:	51 0a       	stdsp	sp[0x40],r10
8000475e:	fa c6 f9 44 	sub	r6,sp,-1724
80004762:	72 0a       	ld.w	r10,r9[0x0]
80004764:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004768:	f3 4a fd 88 	st.w	r9[-632],r10
8000476c:	2f f8       	sub	r8,-1
8000476e:	fb 48 06 b4 	st.w	sp[1716],r8
80004772:	c0 48       	rjmp	8000477a <_vfprintf_r+0xc6e>
80004774:	72 0a       	ld.w	r10,r9[0x0]
80004776:	2f c9       	sub	r9,-4
80004778:	51 09       	stdsp	sp[0x40],r9
8000477a:	40 be       	lddsp	lr,sp[0x2c]
8000477c:	b4 0e       	st.h	r10[0x0],lr
8000477e:	fe 9f fa 55 	bral	80003c28 <_vfprintf_r+0x11c>
80004782:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004786:	40 3c       	lddsp	r12,sp[0xc]
80004788:	58 0c       	cp.w	r12,0
8000478a:	c1 d0       	breq	800047c4 <_vfprintf_r+0xcb8>
8000478c:	10 36       	cp.w	r6,r8
8000478e:	c0 64       	brge	8000479a <_vfprintf_r+0xc8e>
80004790:	fa cb f9 44 	sub	r11,sp,-1724
80004794:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004798:	c1 d8       	rjmp	800047d2 <_vfprintf_r+0xcc6>
8000479a:	fa c8 f9 50 	sub	r8,sp,-1712
8000479e:	1a d8       	st.w	--sp,r8
800047a0:	fa c8 fa b8 	sub	r8,sp,-1352
800047a4:	04 9a       	mov	r10,r2
800047a6:	1a d8       	st.w	--sp,r8
800047a8:	fa c8 fb b4 	sub	r8,sp,-1100
800047ac:	0c 9b       	mov	r11,r6
800047ae:	1a d8       	st.w	--sp,r8
800047b0:	08 9c       	mov	r12,r4
800047b2:	fa c8 f9 40 	sub	r8,sp,-1728
800047b6:	fa c9 ff b4 	sub	r9,sp,-76
800047ba:	fe b0 f8 11 	rcall	800037dc <get_arg>
800047be:	2f dd       	sub	sp,-12
800047c0:	78 0a       	ld.w	r10,r12[0x0]
800047c2:	c2 08       	rjmp	80004802 <_vfprintf_r+0xcf6>
800047c4:	2f f7       	sub	r7,-1
800047c6:	10 39       	cp.w	r9,r8
800047c8:	c0 84       	brge	800047d8 <_vfprintf_r+0xccc>
800047ca:	fa ca f9 44 	sub	r10,sp,-1724
800047ce:	f4 06 00 36 	add	r6,r10,r6<<0x3
800047d2:	ec fa fd 88 	ld.w	r10,r6[-632]
800047d6:	c1 68       	rjmp	80004802 <_vfprintf_r+0xcf6>
800047d8:	41 09       	lddsp	r9,sp[0x40]
800047da:	59 f8       	cp.w	r8,31
800047dc:	e0 89 00 10 	brgt	800047fc <_vfprintf_r+0xcf0>
800047e0:	f2 ca ff fc 	sub	r10,r9,-4
800047e4:	51 0a       	stdsp	sp[0x40],r10
800047e6:	fa c6 f9 44 	sub	r6,sp,-1724
800047ea:	72 0a       	ld.w	r10,r9[0x0]
800047ec:	ec 08 00 39 	add	r9,r6,r8<<0x3
800047f0:	f3 4a fd 88 	st.w	r9[-632],r10
800047f4:	2f f8       	sub	r8,-1
800047f6:	fb 48 06 b4 	st.w	sp[1716],r8
800047fa:	c0 48       	rjmp	80004802 <_vfprintf_r+0xcf6>
800047fc:	72 0a       	ld.w	r10,r9[0x0]
800047fe:	2f c9       	sub	r9,-4
80004800:	51 09       	stdsp	sp[0x40],r9
80004802:	40 be       	lddsp	lr,sp[0x2c]
80004804:	95 0e       	st.w	r10[0x0],lr
80004806:	fe 9f fa 11 	bral	80003c28 <_vfprintf_r+0x11c>
8000480a:	50 a7       	stdsp	sp[0x28],r7
8000480c:	50 80       	stdsp	sp[0x20],r0
8000480e:	0c 97       	mov	r7,r6
80004810:	04 94       	mov	r4,r2
80004812:	06 96       	mov	r6,r3
80004814:	02 92       	mov	r2,r1
80004816:	40 93       	lddsp	r3,sp[0x24]
80004818:	10 90       	mov	r0,r8
8000481a:	40 41       	lddsp	r1,sp[0x10]
8000481c:	a5 a5       	sbr	r5,0x4
8000481e:	c0 a8       	rjmp	80004832 <_vfprintf_r+0xd26>
80004820:	50 a7       	stdsp	sp[0x28],r7
80004822:	50 80       	stdsp	sp[0x20],r0
80004824:	0c 97       	mov	r7,r6
80004826:	04 94       	mov	r4,r2
80004828:	06 96       	mov	r6,r3
8000482a:	02 92       	mov	r2,r1
8000482c:	40 93       	lddsp	r3,sp[0x24]
8000482e:	10 90       	mov	r0,r8
80004830:	40 41       	lddsp	r1,sp[0x10]
80004832:	ed b5 00 05 	bld	r5,0x5
80004836:	c5 d1       	brne	800048f0 <_vfprintf_r+0xde4>
80004838:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000483c:	40 3c       	lddsp	r12,sp[0xc]
8000483e:	58 0c       	cp.w	r12,0
80004840:	c2 60       	breq	8000488c <_vfprintf_r+0xd80>
80004842:	10 36       	cp.w	r6,r8
80004844:	c0 a4       	brge	80004858 <_vfprintf_r+0xd4c>
80004846:	fa cb f9 44 	sub	r11,sp,-1724
8000484a:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000484e:	ec e8 fd 88 	ld.d	r8,r6[-632]
80004852:	fa e9 00 00 	st.d	sp[0],r8
80004856:	c1 88       	rjmp	80004886 <_vfprintf_r+0xd7a>
80004858:	fa c8 f9 50 	sub	r8,sp,-1712
8000485c:	1a d8       	st.w	--sp,r8
8000485e:	fa c8 fa b8 	sub	r8,sp,-1352
80004862:	04 9a       	mov	r10,r2
80004864:	1a d8       	st.w	--sp,r8
80004866:	0c 9b       	mov	r11,r6
80004868:	fa c8 fb b4 	sub	r8,sp,-1100
8000486c:	08 9c       	mov	r12,r4
8000486e:	1a d8       	st.w	--sp,r8
80004870:	fa c8 f9 40 	sub	r8,sp,-1728
80004874:	fa c9 ff b4 	sub	r9,sp,-76
80004878:	fe b0 f7 b2 	rcall	800037dc <get_arg>
8000487c:	2f dd       	sub	sp,-12
8000487e:	f8 ea 00 00 	ld.d	r10,r12[0]
80004882:	fa eb 00 00 	st.d	sp[0],r10
80004886:	30 08       	mov	r8,0
80004888:	e0 8f 03 de 	bral	80005044 <_vfprintf_r+0x1538>
8000488c:	ee ca ff ff 	sub	r10,r7,-1
80004890:	10 37       	cp.w	r7,r8
80004892:	c0 b4       	brge	800048a8 <_vfprintf_r+0xd9c>
80004894:	fa c9 f9 44 	sub	r9,sp,-1724
80004898:	14 97       	mov	r7,r10
8000489a:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000489e:	ec ea fd 88 	ld.d	r10,r6[-632]
800048a2:	fa eb 00 00 	st.d	sp[0],r10
800048a6:	c1 88       	rjmp	800048d6 <_vfprintf_r+0xdca>
800048a8:	41 09       	lddsp	r9,sp[0x40]
800048aa:	59 f8       	cp.w	r8,31
800048ac:	e0 89 00 18 	brgt	800048dc <_vfprintf_r+0xdd0>
800048b0:	f2 e6 00 00 	ld.d	r6,r9[0]
800048b4:	f2 cb ff f8 	sub	r11,r9,-8
800048b8:	fa e7 00 00 	st.d	sp[0],r6
800048bc:	51 0b       	stdsp	sp[0x40],r11
800048be:	fa c6 f9 44 	sub	r6,sp,-1724
800048c2:	ec 08 00 39 	add	r9,r6,r8<<0x3
800048c6:	fa e6 00 00 	ld.d	r6,sp[0]
800048ca:	f2 e7 fd 88 	st.d	r9[-632],r6
800048ce:	2f f8       	sub	r8,-1
800048d0:	14 97       	mov	r7,r10
800048d2:	fb 48 06 b4 	st.w	sp[1716],r8
800048d6:	40 38       	lddsp	r8,sp[0xc]
800048d8:	e0 8f 03 b6 	bral	80005044 <_vfprintf_r+0x1538>
800048dc:	f2 e6 00 00 	ld.d	r6,r9[0]
800048e0:	40 38       	lddsp	r8,sp[0xc]
800048e2:	fa e7 00 00 	st.d	sp[0],r6
800048e6:	2f 89       	sub	r9,-8
800048e8:	14 97       	mov	r7,r10
800048ea:	51 09       	stdsp	sp[0x40],r9
800048ec:	e0 8f 03 ac 	bral	80005044 <_vfprintf_r+0x1538>
800048f0:	ed b5 00 04 	bld	r5,0x4
800048f4:	c1 61       	brne	80004920 <_vfprintf_r+0xe14>
800048f6:	fa f8 06 b4 	ld.w	r8,sp[1716]
800048fa:	40 3e       	lddsp	lr,sp[0xc]
800048fc:	58 0e       	cp.w	lr,0
800048fe:	c0 80       	breq	8000490e <_vfprintf_r+0xe02>
80004900:	10 36       	cp.w	r6,r8
80004902:	c6 74       	brge	800049d0 <_vfprintf_r+0xec4>
80004904:	fa cc f9 44 	sub	r12,sp,-1724
80004908:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000490c:	c8 08       	rjmp	80004a0c <_vfprintf_r+0xf00>
8000490e:	ee ca ff ff 	sub	r10,r7,-1
80004912:	10 37       	cp.w	r7,r8
80004914:	c7 f4       	brge	80004a12 <_vfprintf_r+0xf06>
80004916:	fa cb f9 44 	sub	r11,sp,-1724
8000491a:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000491e:	c7 68       	rjmp	80004a0a <_vfprintf_r+0xefe>
80004920:	ed b5 00 06 	bld	r5,0x6
80004924:	c4 a1       	brne	800049b8 <_vfprintf_r+0xeac>
80004926:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000492a:	40 3c       	lddsp	r12,sp[0xc]
8000492c:	58 0c       	cp.w	r12,0
8000492e:	c1 d0       	breq	80004968 <_vfprintf_r+0xe5c>
80004930:	10 36       	cp.w	r6,r8
80004932:	c0 64       	brge	8000493e <_vfprintf_r+0xe32>
80004934:	fa cb f9 44 	sub	r11,sp,-1724
80004938:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000493c:	c1 f8       	rjmp	8000497a <_vfprintf_r+0xe6e>
8000493e:	fa c8 f9 50 	sub	r8,sp,-1712
80004942:	1a d8       	st.w	--sp,r8
80004944:	fa c8 fa b8 	sub	r8,sp,-1352
80004948:	1a d8       	st.w	--sp,r8
8000494a:	fa c8 fb b4 	sub	r8,sp,-1100
8000494e:	1a d8       	st.w	--sp,r8
80004950:	fa c8 f9 40 	sub	r8,sp,-1728
80004954:	fa c9 ff b4 	sub	r9,sp,-76
80004958:	04 9a       	mov	r10,r2
8000495a:	0c 9b       	mov	r11,r6
8000495c:	08 9c       	mov	r12,r4
8000495e:	fe b0 f7 3f 	rcall	800037dc <get_arg>
80004962:	2f dd       	sub	sp,-12
80004964:	98 18       	ld.sh	r8,r12[0x2]
80004966:	c2 68       	rjmp	800049b2 <_vfprintf_r+0xea6>
80004968:	ee ca ff ff 	sub	r10,r7,-1
8000496c:	10 37       	cp.w	r7,r8
8000496e:	c0 94       	brge	80004980 <_vfprintf_r+0xe74>
80004970:	fa c9 f9 44 	sub	r9,sp,-1724
80004974:	14 97       	mov	r7,r10
80004976:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000497a:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
8000497e:	c1 a8       	rjmp	800049b2 <_vfprintf_r+0xea6>
80004980:	41 09       	lddsp	r9,sp[0x40]
80004982:	59 f8       	cp.w	r8,31
80004984:	e0 89 00 13 	brgt	800049aa <_vfprintf_r+0xe9e>
80004988:	f2 cb ff fc 	sub	r11,r9,-4
8000498c:	51 0b       	stdsp	sp[0x40],r11
8000498e:	72 09       	ld.w	r9,r9[0x0]
80004990:	fa c6 f9 44 	sub	r6,sp,-1724
80004994:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004998:	2f f8       	sub	r8,-1
8000499a:	f7 49 fd 88 	st.w	r11[-632],r9
8000499e:	fb 48 06 b4 	st.w	sp[1716],r8
800049a2:	14 97       	mov	r7,r10
800049a4:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
800049a8:	c0 58       	rjmp	800049b2 <_vfprintf_r+0xea6>
800049aa:	92 18       	ld.sh	r8,r9[0x2]
800049ac:	14 97       	mov	r7,r10
800049ae:	2f c9       	sub	r9,-4
800049b0:	51 09       	stdsp	sp[0x40],r9
800049b2:	5c 78       	castu.h	r8
800049b4:	50 18       	stdsp	sp[0x4],r8
800049b6:	c4 68       	rjmp	80004a42 <_vfprintf_r+0xf36>
800049b8:	fa f8 06 b4 	ld.w	r8,sp[1716]
800049bc:	40 3c       	lddsp	r12,sp[0xc]
800049be:	58 0c       	cp.w	r12,0
800049c0:	c1 d0       	breq	800049fa <_vfprintf_r+0xeee>
800049c2:	10 36       	cp.w	r6,r8
800049c4:	c0 64       	brge	800049d0 <_vfprintf_r+0xec4>
800049c6:	fa cb f9 44 	sub	r11,sp,-1724
800049ca:	f6 06 00 36 	add	r6,r11,r6<<0x3
800049ce:	c1 f8       	rjmp	80004a0c <_vfprintf_r+0xf00>
800049d0:	fa c8 f9 50 	sub	r8,sp,-1712
800049d4:	1a d8       	st.w	--sp,r8
800049d6:	fa c8 fa b8 	sub	r8,sp,-1352
800049da:	0c 9b       	mov	r11,r6
800049dc:	1a d8       	st.w	--sp,r8
800049de:	fa c8 fb b4 	sub	r8,sp,-1100
800049e2:	04 9a       	mov	r10,r2
800049e4:	1a d8       	st.w	--sp,r8
800049e6:	08 9c       	mov	r12,r4
800049e8:	fa c8 f9 40 	sub	r8,sp,-1728
800049ec:	fa c9 ff b4 	sub	r9,sp,-76
800049f0:	fe b0 f6 f6 	rcall	800037dc <get_arg>
800049f4:	2f dd       	sub	sp,-12
800049f6:	78 0b       	ld.w	r11,r12[0x0]
800049f8:	c2 48       	rjmp	80004a40 <_vfprintf_r+0xf34>
800049fa:	ee ca ff ff 	sub	r10,r7,-1
800049fe:	10 37       	cp.w	r7,r8
80004a00:	c0 94       	brge	80004a12 <_vfprintf_r+0xf06>
80004a02:	fa c9 f9 44 	sub	r9,sp,-1724
80004a06:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004a0a:	14 97       	mov	r7,r10
80004a0c:	ec fb fd 88 	ld.w	r11,r6[-632]
80004a10:	c1 88       	rjmp	80004a40 <_vfprintf_r+0xf34>
80004a12:	41 09       	lddsp	r9,sp[0x40]
80004a14:	59 f8       	cp.w	r8,31
80004a16:	e0 89 00 11 	brgt	80004a38 <_vfprintf_r+0xf2c>
80004a1a:	f2 cb ff fc 	sub	r11,r9,-4
80004a1e:	51 0b       	stdsp	sp[0x40],r11
80004a20:	fa c6 f9 44 	sub	r6,sp,-1724
80004a24:	72 0b       	ld.w	r11,r9[0x0]
80004a26:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004a2a:	f3 4b fd 88 	st.w	r9[-632],r11
80004a2e:	2f f8       	sub	r8,-1
80004a30:	14 97       	mov	r7,r10
80004a32:	fb 48 06 b4 	st.w	sp[1716],r8
80004a36:	c0 58       	rjmp	80004a40 <_vfprintf_r+0xf34>
80004a38:	72 0b       	ld.w	r11,r9[0x0]
80004a3a:	14 97       	mov	r7,r10
80004a3c:	2f c9       	sub	r9,-4
80004a3e:	51 09       	stdsp	sp[0x40],r9
80004a40:	50 1b       	stdsp	sp[0x4],r11
80004a42:	30 0e       	mov	lr,0
80004a44:	50 0e       	stdsp	sp[0x0],lr
80004a46:	1c 98       	mov	r8,lr
80004a48:	e0 8f 02 fe 	bral	80005044 <_vfprintf_r+0x1538>
80004a4c:	50 a7       	stdsp	sp[0x28],r7
80004a4e:	50 80       	stdsp	sp[0x20],r0
80004a50:	0c 97       	mov	r7,r6
80004a52:	04 94       	mov	r4,r2
80004a54:	06 96       	mov	r6,r3
80004a56:	02 92       	mov	r2,r1
80004a58:	40 93       	lddsp	r3,sp[0x24]
80004a5a:	40 41       	lddsp	r1,sp[0x10]
80004a5c:	0e 99       	mov	r9,r7
80004a5e:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004a62:	40 3c       	lddsp	r12,sp[0xc]
80004a64:	58 0c       	cp.w	r12,0
80004a66:	c1 d0       	breq	80004aa0 <_vfprintf_r+0xf94>
80004a68:	10 36       	cp.w	r6,r8
80004a6a:	c0 64       	brge	80004a76 <_vfprintf_r+0xf6a>
80004a6c:	fa cb f9 44 	sub	r11,sp,-1724
80004a70:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004a74:	c1 d8       	rjmp	80004aae <_vfprintf_r+0xfa2>
80004a76:	fa c8 f9 50 	sub	r8,sp,-1712
80004a7a:	1a d8       	st.w	--sp,r8
80004a7c:	fa c8 fa b8 	sub	r8,sp,-1352
80004a80:	1a d8       	st.w	--sp,r8
80004a82:	fa c8 fb b4 	sub	r8,sp,-1100
80004a86:	1a d8       	st.w	--sp,r8
80004a88:	fa c9 ff b4 	sub	r9,sp,-76
80004a8c:	fa c8 f9 40 	sub	r8,sp,-1728
80004a90:	04 9a       	mov	r10,r2
80004a92:	0c 9b       	mov	r11,r6
80004a94:	08 9c       	mov	r12,r4
80004a96:	fe b0 f6 a3 	rcall	800037dc <get_arg>
80004a9a:	2f dd       	sub	sp,-12
80004a9c:	78 09       	ld.w	r9,r12[0x0]
80004a9e:	c2 18       	rjmp	80004ae0 <_vfprintf_r+0xfd4>
80004aa0:	2f f7       	sub	r7,-1
80004aa2:	10 39       	cp.w	r9,r8
80004aa4:	c0 84       	brge	80004ab4 <_vfprintf_r+0xfa8>
80004aa6:	fa ca f9 44 	sub	r10,sp,-1724
80004aaa:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004aae:	ec f9 fd 88 	ld.w	r9,r6[-632]
80004ab2:	c1 78       	rjmp	80004ae0 <_vfprintf_r+0xfd4>
80004ab4:	41 09       	lddsp	r9,sp[0x40]
80004ab6:	59 f8       	cp.w	r8,31
80004ab8:	e0 89 00 10 	brgt	80004ad8 <_vfprintf_r+0xfcc>
80004abc:	f2 ca ff fc 	sub	r10,r9,-4
80004ac0:	51 0a       	stdsp	sp[0x40],r10
80004ac2:	fa c6 f9 44 	sub	r6,sp,-1724
80004ac6:	72 09       	ld.w	r9,r9[0x0]
80004ac8:	ec 08 00 3a 	add	r10,r6,r8<<0x3
80004acc:	f5 49 fd 88 	st.w	r10[-632],r9
80004ad0:	2f f8       	sub	r8,-1
80004ad2:	fb 48 06 b4 	st.w	sp[1716],r8
80004ad6:	c0 58       	rjmp	80004ae0 <_vfprintf_r+0xfd4>
80004ad8:	f2 c8 ff fc 	sub	r8,r9,-4
80004adc:	51 08       	stdsp	sp[0x40],r8
80004ade:	72 09       	ld.w	r9,r9[0x0]
80004ae0:	33 08       	mov	r8,48
80004ae2:	fb 68 06 b8 	st.b	sp[1720],r8
80004ae6:	37 88       	mov	r8,120
80004ae8:	30 0e       	mov	lr,0
80004aea:	fb 68 06 b9 	st.b	sp[1721],r8
80004aee:	fe cc b4 7a 	sub	r12,pc,-19334
80004af2:	50 19       	stdsp	sp[0x4],r9
80004af4:	a1 b5       	sbr	r5,0x1
80004af6:	50 0e       	stdsp	sp[0x0],lr
80004af8:	50 dc       	stdsp	sp[0x34],r12
80004afa:	30 28       	mov	r8,2
80004afc:	37 80       	mov	r0,120
80004afe:	e0 8f 02 a3 	bral	80005044 <_vfprintf_r+0x1538>
80004b02:	50 a7       	stdsp	sp[0x28],r7
80004b04:	50 80       	stdsp	sp[0x20],r0
80004b06:	10 90       	mov	r0,r8
80004b08:	30 08       	mov	r8,0
80004b0a:	fb 68 06 bb 	st.b	sp[1723],r8
80004b0e:	0c 97       	mov	r7,r6
80004b10:	04 94       	mov	r4,r2
80004b12:	06 96       	mov	r6,r3
80004b14:	02 92       	mov	r2,r1
80004b16:	40 93       	lddsp	r3,sp[0x24]
80004b18:	40 41       	lddsp	r1,sp[0x10]
80004b1a:	0e 99       	mov	r9,r7
80004b1c:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004b20:	40 3b       	lddsp	r11,sp[0xc]
80004b22:	58 0b       	cp.w	r11,0
80004b24:	c1 d0       	breq	80004b5e <_vfprintf_r+0x1052>
80004b26:	10 36       	cp.w	r6,r8
80004b28:	c0 64       	brge	80004b34 <_vfprintf_r+0x1028>
80004b2a:	fa ca f9 44 	sub	r10,sp,-1724
80004b2e:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004b32:	c1 d8       	rjmp	80004b6c <_vfprintf_r+0x1060>
80004b34:	fa c8 f9 50 	sub	r8,sp,-1712
80004b38:	1a d8       	st.w	--sp,r8
80004b3a:	fa c8 fa b8 	sub	r8,sp,-1352
80004b3e:	1a d8       	st.w	--sp,r8
80004b40:	fa c8 fb b4 	sub	r8,sp,-1100
80004b44:	0c 9b       	mov	r11,r6
80004b46:	1a d8       	st.w	--sp,r8
80004b48:	04 9a       	mov	r10,r2
80004b4a:	fa c8 f9 40 	sub	r8,sp,-1728
80004b4e:	fa c9 ff b4 	sub	r9,sp,-76
80004b52:	08 9c       	mov	r12,r4
80004b54:	fe b0 f6 44 	rcall	800037dc <get_arg>
80004b58:	2f dd       	sub	sp,-12
80004b5a:	78 06       	ld.w	r6,r12[0x0]
80004b5c:	c2 08       	rjmp	80004b9c <_vfprintf_r+0x1090>
80004b5e:	2f f7       	sub	r7,-1
80004b60:	10 39       	cp.w	r9,r8
80004b62:	c0 84       	brge	80004b72 <_vfprintf_r+0x1066>
80004b64:	fa c9 f9 44 	sub	r9,sp,-1724
80004b68:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004b6c:	ec f6 fd 88 	ld.w	r6,r6[-632]
80004b70:	c1 68       	rjmp	80004b9c <_vfprintf_r+0x1090>
80004b72:	41 09       	lddsp	r9,sp[0x40]
80004b74:	59 f8       	cp.w	r8,31
80004b76:	e0 89 00 10 	brgt	80004b96 <_vfprintf_r+0x108a>
80004b7a:	f2 ca ff fc 	sub	r10,r9,-4
80004b7e:	51 0a       	stdsp	sp[0x40],r10
80004b80:	72 06       	ld.w	r6,r9[0x0]
80004b82:	fa ce f9 44 	sub	lr,sp,-1724
80004b86:	fc 08 00 39 	add	r9,lr,r8<<0x3
80004b8a:	f3 46 fd 88 	st.w	r9[-632],r6
80004b8e:	2f f8       	sub	r8,-1
80004b90:	fb 48 06 b4 	st.w	sp[1716],r8
80004b94:	c0 48       	rjmp	80004b9c <_vfprintf_r+0x1090>
80004b96:	72 06       	ld.w	r6,r9[0x0]
80004b98:	2f c9       	sub	r9,-4
80004b9a:	51 09       	stdsp	sp[0x40],r9
80004b9c:	40 2c       	lddsp	r12,sp[0x8]
80004b9e:	58 0c       	cp.w	r12,0
80004ba0:	c1 05       	brlt	80004bc0 <_vfprintf_r+0x10b4>
80004ba2:	18 9a       	mov	r10,r12
80004ba4:	30 0b       	mov	r11,0
80004ba6:	0c 9c       	mov	r12,r6
80004ba8:	e0 a0 14 58 	rcall	80007458 <memchr>
80004bac:	e0 80 02 df 	breq	8000516a <_vfprintf_r+0x165e>
80004bb0:	f8 06 01 02 	sub	r2,r12,r6
80004bb4:	40 2b       	lddsp	r11,sp[0x8]
80004bb6:	16 32       	cp.w	r2,r11
80004bb8:	e0 89 02 d9 	brgt	8000516a <_vfprintf_r+0x165e>
80004bbc:	e0 8f 02 d4 	bral	80005164 <_vfprintf_r+0x1658>
80004bc0:	30 0a       	mov	r10,0
80004bc2:	0c 9c       	mov	r12,r6
80004bc4:	50 2a       	stdsp	sp[0x8],r10
80004bc6:	e0 a0 19 33 	rcall	80007e2c <strlen>
80004bca:	18 92       	mov	r2,r12
80004bcc:	e0 8f 02 d2 	bral	80005170 <_vfprintf_r+0x1664>
80004bd0:	50 a7       	stdsp	sp[0x28],r7
80004bd2:	50 80       	stdsp	sp[0x20],r0
80004bd4:	0c 97       	mov	r7,r6
80004bd6:	04 94       	mov	r4,r2
80004bd8:	06 96       	mov	r6,r3
80004bda:	02 92       	mov	r2,r1
80004bdc:	40 93       	lddsp	r3,sp[0x24]
80004bde:	10 90       	mov	r0,r8
80004be0:	40 41       	lddsp	r1,sp[0x10]
80004be2:	a5 a5       	sbr	r5,0x4
80004be4:	c0 a8       	rjmp	80004bf8 <_vfprintf_r+0x10ec>
80004be6:	50 a7       	stdsp	sp[0x28],r7
80004be8:	50 80       	stdsp	sp[0x20],r0
80004bea:	0c 97       	mov	r7,r6
80004bec:	04 94       	mov	r4,r2
80004bee:	06 96       	mov	r6,r3
80004bf0:	02 92       	mov	r2,r1
80004bf2:	40 93       	lddsp	r3,sp[0x24]
80004bf4:	10 90       	mov	r0,r8
80004bf6:	40 41       	lddsp	r1,sp[0x10]
80004bf8:	ed b5 00 05 	bld	r5,0x5
80004bfc:	c5 61       	brne	80004ca8 <_vfprintf_r+0x119c>
80004bfe:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004c02:	40 39       	lddsp	r9,sp[0xc]
80004c04:	58 09       	cp.w	r9,0
80004c06:	c2 10       	breq	80004c48 <_vfprintf_r+0x113c>
80004c08:	10 36       	cp.w	r6,r8
80004c0a:	c0 74       	brge	80004c18 <_vfprintf_r+0x110c>
80004c0c:	fa c8 f9 44 	sub	r8,sp,-1724
80004c10:	f0 06 00 36 	add	r6,r8,r6<<0x3
80004c14:	c2 38       	rjmp	80004c5a <_vfprintf_r+0x114e>
80004c16:	d7 03       	nop
80004c18:	fa c8 f9 50 	sub	r8,sp,-1712
80004c1c:	1a d8       	st.w	--sp,r8
80004c1e:	fa c8 fa b8 	sub	r8,sp,-1352
80004c22:	1a d8       	st.w	--sp,r8
80004c24:	fa c8 fb b4 	sub	r8,sp,-1100
80004c28:	1a d8       	st.w	--sp,r8
80004c2a:	fa c8 f9 40 	sub	r8,sp,-1728
80004c2e:	fa c9 ff b4 	sub	r9,sp,-76
80004c32:	04 9a       	mov	r10,r2
80004c34:	0c 9b       	mov	r11,r6
80004c36:	08 9c       	mov	r12,r4
80004c38:	fe b0 f5 d2 	rcall	800037dc <get_arg>
80004c3c:	2f dd       	sub	sp,-12
80004c3e:	f8 e8 00 00 	ld.d	r8,r12[0]
80004c42:	fa e9 00 00 	st.d	sp[0],r8
80004c46:	c2 e8       	rjmp	80004ca2 <_vfprintf_r+0x1196>
80004c48:	ee ca ff ff 	sub	r10,r7,-1
80004c4c:	10 37       	cp.w	r7,r8
80004c4e:	c0 b4       	brge	80004c64 <_vfprintf_r+0x1158>
80004c50:	fa c8 f9 44 	sub	r8,sp,-1724
80004c54:	14 97       	mov	r7,r10
80004c56:	f0 06 00 36 	add	r6,r8,r6<<0x3
80004c5a:	ec ea fd 88 	ld.d	r10,r6[-632]
80004c5e:	fa eb 00 00 	st.d	sp[0],r10
80004c62:	c2 08       	rjmp	80004ca2 <_vfprintf_r+0x1196>
80004c64:	41 09       	lddsp	r9,sp[0x40]
80004c66:	59 f8       	cp.w	r8,31
80004c68:	e0 89 00 16 	brgt	80004c94 <_vfprintf_r+0x1188>
80004c6c:	f2 e6 00 00 	ld.d	r6,r9[0]
80004c70:	f2 cb ff f8 	sub	r11,r9,-8
80004c74:	fa e7 00 00 	st.d	sp[0],r6
80004c78:	51 0b       	stdsp	sp[0x40],r11
80004c7a:	fa c6 f9 44 	sub	r6,sp,-1724
80004c7e:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004c82:	fa e6 00 00 	ld.d	r6,sp[0]
80004c86:	f2 e7 fd 88 	st.d	r9[-632],r6
80004c8a:	2f f8       	sub	r8,-1
80004c8c:	14 97       	mov	r7,r10
80004c8e:	fb 48 06 b4 	st.w	sp[1716],r8
80004c92:	c0 88       	rjmp	80004ca2 <_vfprintf_r+0x1196>
80004c94:	f2 e6 00 00 	ld.d	r6,r9[0]
80004c98:	2f 89       	sub	r9,-8
80004c9a:	fa e7 00 00 	st.d	sp[0],r6
80004c9e:	51 09       	stdsp	sp[0x40],r9
80004ca0:	14 97       	mov	r7,r10
80004ca2:	30 18       	mov	r8,1
80004ca4:	e0 8f 01 d0 	bral	80005044 <_vfprintf_r+0x1538>
80004ca8:	ed b5 00 04 	bld	r5,0x4
80004cac:	c1 61       	brne	80004cd8 <_vfprintf_r+0x11cc>
80004cae:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004cb2:	40 3e       	lddsp	lr,sp[0xc]
80004cb4:	58 0e       	cp.w	lr,0
80004cb6:	c0 80       	breq	80004cc6 <_vfprintf_r+0x11ba>
80004cb8:	10 36       	cp.w	r6,r8
80004cba:	c6 74       	brge	80004d88 <_vfprintf_r+0x127c>
80004cbc:	fa cc f9 44 	sub	r12,sp,-1724
80004cc0:	f8 06 00 36 	add	r6,r12,r6<<0x3
80004cc4:	c8 08       	rjmp	80004dc4 <_vfprintf_r+0x12b8>
80004cc6:	ee ca ff ff 	sub	r10,r7,-1
80004cca:	10 37       	cp.w	r7,r8
80004ccc:	c7 f4       	brge	80004dca <_vfprintf_r+0x12be>
80004cce:	fa cb f9 44 	sub	r11,sp,-1724
80004cd2:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004cd6:	c7 68       	rjmp	80004dc2 <_vfprintf_r+0x12b6>
80004cd8:	ed b5 00 06 	bld	r5,0x6
80004cdc:	c4 a1       	brne	80004d70 <_vfprintf_r+0x1264>
80004cde:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004ce2:	40 3c       	lddsp	r12,sp[0xc]
80004ce4:	58 0c       	cp.w	r12,0
80004ce6:	c1 d0       	breq	80004d20 <_vfprintf_r+0x1214>
80004ce8:	10 36       	cp.w	r6,r8
80004cea:	c0 64       	brge	80004cf6 <_vfprintf_r+0x11ea>
80004cec:	fa cb f9 44 	sub	r11,sp,-1724
80004cf0:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004cf4:	c1 f8       	rjmp	80004d32 <_vfprintf_r+0x1226>
80004cf6:	fa c8 f9 50 	sub	r8,sp,-1712
80004cfa:	1a d8       	st.w	--sp,r8
80004cfc:	fa c8 fa b8 	sub	r8,sp,-1352
80004d00:	1a d8       	st.w	--sp,r8
80004d02:	fa c8 fb b4 	sub	r8,sp,-1100
80004d06:	1a d8       	st.w	--sp,r8
80004d08:	fa c8 f9 40 	sub	r8,sp,-1728
80004d0c:	fa c9 ff b4 	sub	r9,sp,-76
80004d10:	04 9a       	mov	r10,r2
80004d12:	0c 9b       	mov	r11,r6
80004d14:	08 9c       	mov	r12,r4
80004d16:	fe b0 f5 63 	rcall	800037dc <get_arg>
80004d1a:	2f dd       	sub	sp,-12
80004d1c:	98 18       	ld.sh	r8,r12[0x2]
80004d1e:	c2 68       	rjmp	80004d6a <_vfprintf_r+0x125e>
80004d20:	ee ca ff ff 	sub	r10,r7,-1
80004d24:	10 37       	cp.w	r7,r8
80004d26:	c0 94       	brge	80004d38 <_vfprintf_r+0x122c>
80004d28:	fa c9 f9 44 	sub	r9,sp,-1724
80004d2c:	14 97       	mov	r7,r10
80004d2e:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004d32:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004d36:	c1 a8       	rjmp	80004d6a <_vfprintf_r+0x125e>
80004d38:	41 09       	lddsp	r9,sp[0x40]
80004d3a:	59 f8       	cp.w	r8,31
80004d3c:	e0 89 00 13 	brgt	80004d62 <_vfprintf_r+0x1256>
80004d40:	f2 cb ff fc 	sub	r11,r9,-4
80004d44:	51 0b       	stdsp	sp[0x40],r11
80004d46:	72 09       	ld.w	r9,r9[0x0]
80004d48:	fa c6 f9 44 	sub	r6,sp,-1724
80004d4c:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004d50:	2f f8       	sub	r8,-1
80004d52:	f7 49 fd 88 	st.w	r11[-632],r9
80004d56:	fb 48 06 b4 	st.w	sp[1716],r8
80004d5a:	14 97       	mov	r7,r10
80004d5c:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004d60:	c0 58       	rjmp	80004d6a <_vfprintf_r+0x125e>
80004d62:	92 18       	ld.sh	r8,r9[0x2]
80004d64:	14 97       	mov	r7,r10
80004d66:	2f c9       	sub	r9,-4
80004d68:	51 09       	stdsp	sp[0x40],r9
80004d6a:	5c 78       	castu.h	r8
80004d6c:	50 18       	stdsp	sp[0x4],r8
80004d6e:	c4 68       	rjmp	80004dfa <_vfprintf_r+0x12ee>
80004d70:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004d74:	40 3c       	lddsp	r12,sp[0xc]
80004d76:	58 0c       	cp.w	r12,0
80004d78:	c1 d0       	breq	80004db2 <_vfprintf_r+0x12a6>
80004d7a:	10 36       	cp.w	r6,r8
80004d7c:	c0 64       	brge	80004d88 <_vfprintf_r+0x127c>
80004d7e:	fa cb f9 44 	sub	r11,sp,-1724
80004d82:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004d86:	c1 f8       	rjmp	80004dc4 <_vfprintf_r+0x12b8>
80004d88:	fa c8 f9 50 	sub	r8,sp,-1712
80004d8c:	1a d8       	st.w	--sp,r8
80004d8e:	fa c8 fa b8 	sub	r8,sp,-1352
80004d92:	0c 9b       	mov	r11,r6
80004d94:	1a d8       	st.w	--sp,r8
80004d96:	fa c8 fb b4 	sub	r8,sp,-1100
80004d9a:	04 9a       	mov	r10,r2
80004d9c:	1a d8       	st.w	--sp,r8
80004d9e:	08 9c       	mov	r12,r4
80004da0:	fa c8 f9 40 	sub	r8,sp,-1728
80004da4:	fa c9 ff b4 	sub	r9,sp,-76
80004da8:	fe b0 f5 1a 	rcall	800037dc <get_arg>
80004dac:	2f dd       	sub	sp,-12
80004dae:	78 0b       	ld.w	r11,r12[0x0]
80004db0:	c2 48       	rjmp	80004df8 <_vfprintf_r+0x12ec>
80004db2:	ee ca ff ff 	sub	r10,r7,-1
80004db6:	10 37       	cp.w	r7,r8
80004db8:	c0 94       	brge	80004dca <_vfprintf_r+0x12be>
80004dba:	fa c9 f9 44 	sub	r9,sp,-1724
80004dbe:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004dc2:	14 97       	mov	r7,r10
80004dc4:	ec fb fd 88 	ld.w	r11,r6[-632]
80004dc8:	c1 88       	rjmp	80004df8 <_vfprintf_r+0x12ec>
80004dca:	41 09       	lddsp	r9,sp[0x40]
80004dcc:	59 f8       	cp.w	r8,31
80004dce:	e0 89 00 11 	brgt	80004df0 <_vfprintf_r+0x12e4>
80004dd2:	f2 cb ff fc 	sub	r11,r9,-4
80004dd6:	51 0b       	stdsp	sp[0x40],r11
80004dd8:	fa c6 f9 44 	sub	r6,sp,-1724
80004ddc:	72 0b       	ld.w	r11,r9[0x0]
80004dde:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004de2:	f3 4b fd 88 	st.w	r9[-632],r11
80004de6:	2f f8       	sub	r8,-1
80004de8:	14 97       	mov	r7,r10
80004dea:	fb 48 06 b4 	st.w	sp[1716],r8
80004dee:	c0 58       	rjmp	80004df8 <_vfprintf_r+0x12ec>
80004df0:	72 0b       	ld.w	r11,r9[0x0]
80004df2:	14 97       	mov	r7,r10
80004df4:	2f c9       	sub	r9,-4
80004df6:	51 09       	stdsp	sp[0x40],r9
80004df8:	50 1b       	stdsp	sp[0x4],r11
80004dfa:	30 0e       	mov	lr,0
80004dfc:	30 18       	mov	r8,1
80004dfe:	50 0e       	stdsp	sp[0x0],lr
80004e00:	c2 29       	rjmp	80005044 <_vfprintf_r+0x1538>
80004e02:	50 a7       	stdsp	sp[0x28],r7
80004e04:	50 80       	stdsp	sp[0x20],r0
80004e06:	0c 97       	mov	r7,r6
80004e08:	04 94       	mov	r4,r2
80004e0a:	06 96       	mov	r6,r3
80004e0c:	02 92       	mov	r2,r1
80004e0e:	fe cc b7 9a 	sub	r12,pc,-18534
80004e12:	40 93       	lddsp	r3,sp[0x24]
80004e14:	10 90       	mov	r0,r8
80004e16:	40 41       	lddsp	r1,sp[0x10]
80004e18:	50 dc       	stdsp	sp[0x34],r12
80004e1a:	ed b5 00 05 	bld	r5,0x5
80004e1e:	c5 51       	brne	80004ec8 <_vfprintf_r+0x13bc>
80004e20:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004e24:	40 3b       	lddsp	r11,sp[0xc]
80004e26:	58 0b       	cp.w	r11,0
80004e28:	c2 20       	breq	80004e6c <_vfprintf_r+0x1360>
80004e2a:	10 36       	cp.w	r6,r8
80004e2c:	c0 a4       	brge	80004e40 <_vfprintf_r+0x1334>
80004e2e:	fa ca f9 44 	sub	r10,sp,-1724
80004e32:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004e36:	ec e8 fd 88 	ld.d	r8,r6[-632]
80004e3a:	fa e9 00 00 	st.d	sp[0],r8
80004e3e:	cf 28       	rjmp	80005022 <_vfprintf_r+0x1516>
80004e40:	fa c8 f9 50 	sub	r8,sp,-1712
80004e44:	1a d8       	st.w	--sp,r8
80004e46:	fa c8 fa b8 	sub	r8,sp,-1352
80004e4a:	04 9a       	mov	r10,r2
80004e4c:	1a d8       	st.w	--sp,r8
80004e4e:	0c 9b       	mov	r11,r6
80004e50:	fa c8 fb b4 	sub	r8,sp,-1100
80004e54:	08 9c       	mov	r12,r4
80004e56:	1a d8       	st.w	--sp,r8
80004e58:	fa c8 f9 40 	sub	r8,sp,-1728
80004e5c:	fa c9 ff b4 	sub	r9,sp,-76
80004e60:	fe b0 f4 be 	rcall	800037dc <get_arg>
80004e64:	2f dd       	sub	sp,-12
80004e66:	f8 ea 00 00 	ld.d	r10,r12[0]
80004e6a:	c0 c8       	rjmp	80004e82 <_vfprintf_r+0x1376>
80004e6c:	ee ca ff ff 	sub	r10,r7,-1
80004e70:	10 37       	cp.w	r7,r8
80004e72:	c0 b4       	brge	80004e88 <_vfprintf_r+0x137c>
80004e74:	fa c9 f9 44 	sub	r9,sp,-1724
80004e78:	14 97       	mov	r7,r10
80004e7a:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004e7e:	ec ea fd 88 	ld.d	r10,r6[-632]
80004e82:	fa eb 00 00 	st.d	sp[0],r10
80004e86:	cc e8       	rjmp	80005022 <_vfprintf_r+0x1516>
80004e88:	41 09       	lddsp	r9,sp[0x40]
80004e8a:	59 f8       	cp.w	r8,31
80004e8c:	e0 89 00 16 	brgt	80004eb8 <_vfprintf_r+0x13ac>
80004e90:	f2 e6 00 00 	ld.d	r6,r9[0]
80004e94:	f2 cb ff f8 	sub	r11,r9,-8
80004e98:	fa e7 00 00 	st.d	sp[0],r6
80004e9c:	51 0b       	stdsp	sp[0x40],r11
80004e9e:	fa c6 f9 44 	sub	r6,sp,-1724
80004ea2:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004ea6:	fa e6 00 00 	ld.d	r6,sp[0]
80004eaa:	f2 e7 fd 88 	st.d	r9[-632],r6
80004eae:	2f f8       	sub	r8,-1
80004eb0:	14 97       	mov	r7,r10
80004eb2:	fb 48 06 b4 	st.w	sp[1716],r8
80004eb6:	cb 68       	rjmp	80005022 <_vfprintf_r+0x1516>
80004eb8:	f2 e6 00 00 	ld.d	r6,r9[0]
80004ebc:	2f 89       	sub	r9,-8
80004ebe:	fa e7 00 00 	st.d	sp[0],r6
80004ec2:	51 09       	stdsp	sp[0x40],r9
80004ec4:	14 97       	mov	r7,r10
80004ec6:	ca e8       	rjmp	80005022 <_vfprintf_r+0x1516>
80004ec8:	ed b5 00 04 	bld	r5,0x4
80004ecc:	c1 71       	brne	80004efa <_vfprintf_r+0x13ee>
80004ece:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004ed2:	40 3e       	lddsp	lr,sp[0xc]
80004ed4:	58 0e       	cp.w	lr,0
80004ed6:	c0 80       	breq	80004ee6 <_vfprintf_r+0x13da>
80004ed8:	10 36       	cp.w	r6,r8
80004eda:	c6 94       	brge	80004fac <_vfprintf_r+0x14a0>
80004edc:	fa cc f9 44 	sub	r12,sp,-1724
80004ee0:	f8 06 00 36 	add	r6,r12,r6<<0x3
80004ee4:	c8 28       	rjmp	80004fe8 <_vfprintf_r+0x14dc>
80004ee6:	ee ca ff ff 	sub	r10,r7,-1
80004eea:	10 37       	cp.w	r7,r8
80004eec:	e0 84 00 81 	brge	80004fee <_vfprintf_r+0x14e2>
80004ef0:	fa cb f9 44 	sub	r11,sp,-1724
80004ef4:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004ef8:	c7 78       	rjmp	80004fe6 <_vfprintf_r+0x14da>
80004efa:	ed b5 00 06 	bld	r5,0x6
80004efe:	c4 b1       	brne	80004f94 <_vfprintf_r+0x1488>
80004f00:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004f04:	40 3c       	lddsp	r12,sp[0xc]
80004f06:	58 0c       	cp.w	r12,0
80004f08:	c1 d0       	breq	80004f42 <_vfprintf_r+0x1436>
80004f0a:	10 36       	cp.w	r6,r8
80004f0c:	c0 64       	brge	80004f18 <_vfprintf_r+0x140c>
80004f0e:	fa cb f9 44 	sub	r11,sp,-1724
80004f12:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004f16:	c1 f8       	rjmp	80004f54 <_vfprintf_r+0x1448>
80004f18:	fa c8 f9 50 	sub	r8,sp,-1712
80004f1c:	1a d8       	st.w	--sp,r8
80004f1e:	fa c8 fa b8 	sub	r8,sp,-1352
80004f22:	1a d8       	st.w	--sp,r8
80004f24:	fa c8 fb b4 	sub	r8,sp,-1100
80004f28:	1a d8       	st.w	--sp,r8
80004f2a:	fa c8 f9 40 	sub	r8,sp,-1728
80004f2e:	fa c9 ff b4 	sub	r9,sp,-76
80004f32:	04 9a       	mov	r10,r2
80004f34:	0c 9b       	mov	r11,r6
80004f36:	08 9c       	mov	r12,r4
80004f38:	fe b0 f4 52 	rcall	800037dc <get_arg>
80004f3c:	2f dd       	sub	sp,-12
80004f3e:	98 18       	ld.sh	r8,r12[0x2]
80004f40:	c2 78       	rjmp	80004f8e <_vfprintf_r+0x1482>
80004f42:	ee ca ff ff 	sub	r10,r7,-1
80004f46:	10 37       	cp.w	r7,r8
80004f48:	c0 a4       	brge	80004f5c <_vfprintf_r+0x1450>
80004f4a:	fa c9 f9 44 	sub	r9,sp,-1724
80004f4e:	14 97       	mov	r7,r10
80004f50:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004f54:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004f58:	c1 b8       	rjmp	80004f8e <_vfprintf_r+0x1482>
80004f5a:	d7 03       	nop
80004f5c:	41 09       	lddsp	r9,sp[0x40]
80004f5e:	59 f8       	cp.w	r8,31
80004f60:	e0 89 00 13 	brgt	80004f86 <_vfprintf_r+0x147a>
80004f64:	f2 cb ff fc 	sub	r11,r9,-4
80004f68:	51 0b       	stdsp	sp[0x40],r11
80004f6a:	72 09       	ld.w	r9,r9[0x0]
80004f6c:	fa c6 f9 44 	sub	r6,sp,-1724
80004f70:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004f74:	2f f8       	sub	r8,-1
80004f76:	f7 49 fd 88 	st.w	r11[-632],r9
80004f7a:	fb 48 06 b4 	st.w	sp[1716],r8
80004f7e:	14 97       	mov	r7,r10
80004f80:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004f84:	c0 58       	rjmp	80004f8e <_vfprintf_r+0x1482>
80004f86:	92 18       	ld.sh	r8,r9[0x2]
80004f88:	14 97       	mov	r7,r10
80004f8a:	2f c9       	sub	r9,-4
80004f8c:	51 09       	stdsp	sp[0x40],r9
80004f8e:	5c 78       	castu.h	r8
80004f90:	50 18       	stdsp	sp[0x4],r8
80004f92:	c4 68       	rjmp	8000501e <_vfprintf_r+0x1512>
80004f94:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004f98:	40 3c       	lddsp	r12,sp[0xc]
80004f9a:	58 0c       	cp.w	r12,0
80004f9c:	c1 d0       	breq	80004fd6 <_vfprintf_r+0x14ca>
80004f9e:	10 36       	cp.w	r6,r8
80004fa0:	c0 64       	brge	80004fac <_vfprintf_r+0x14a0>
80004fa2:	fa cb f9 44 	sub	r11,sp,-1724
80004fa6:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004faa:	c1 f8       	rjmp	80004fe8 <_vfprintf_r+0x14dc>
80004fac:	fa c8 f9 50 	sub	r8,sp,-1712
80004fb0:	1a d8       	st.w	--sp,r8
80004fb2:	fa c8 fa b8 	sub	r8,sp,-1352
80004fb6:	0c 9b       	mov	r11,r6
80004fb8:	1a d8       	st.w	--sp,r8
80004fba:	fa c8 fb b4 	sub	r8,sp,-1100
80004fbe:	04 9a       	mov	r10,r2
80004fc0:	1a d8       	st.w	--sp,r8
80004fc2:	08 9c       	mov	r12,r4
80004fc4:	fa c8 f9 40 	sub	r8,sp,-1728
80004fc8:	fa c9 ff b4 	sub	r9,sp,-76
80004fcc:	fe b0 f4 08 	rcall	800037dc <get_arg>
80004fd0:	2f dd       	sub	sp,-12
80004fd2:	78 0b       	ld.w	r11,r12[0x0]
80004fd4:	c2 48       	rjmp	8000501c <_vfprintf_r+0x1510>
80004fd6:	ee ca ff ff 	sub	r10,r7,-1
80004fda:	10 37       	cp.w	r7,r8
80004fdc:	c0 94       	brge	80004fee <_vfprintf_r+0x14e2>
80004fde:	fa c9 f9 44 	sub	r9,sp,-1724
80004fe2:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004fe6:	14 97       	mov	r7,r10
80004fe8:	ec fb fd 88 	ld.w	r11,r6[-632]
80004fec:	c1 88       	rjmp	8000501c <_vfprintf_r+0x1510>
80004fee:	41 09       	lddsp	r9,sp[0x40]
80004ff0:	59 f8       	cp.w	r8,31
80004ff2:	e0 89 00 11 	brgt	80005014 <_vfprintf_r+0x1508>
80004ff6:	f2 cb ff fc 	sub	r11,r9,-4
80004ffa:	51 0b       	stdsp	sp[0x40],r11
80004ffc:	fa c6 f9 44 	sub	r6,sp,-1724
80005000:	72 0b       	ld.w	r11,r9[0x0]
80005002:	ec 08 00 39 	add	r9,r6,r8<<0x3
80005006:	f3 4b fd 88 	st.w	r9[-632],r11
8000500a:	2f f8       	sub	r8,-1
8000500c:	14 97       	mov	r7,r10
8000500e:	fb 48 06 b4 	st.w	sp[1716],r8
80005012:	c0 58       	rjmp	8000501c <_vfprintf_r+0x1510>
80005014:	72 0b       	ld.w	r11,r9[0x0]
80005016:	14 97       	mov	r7,r10
80005018:	2f c9       	sub	r9,-4
8000501a:	51 09       	stdsp	sp[0x40],r9
8000501c:	50 1b       	stdsp	sp[0x4],r11
8000501e:	30 0e       	mov	lr,0
80005020:	50 0e       	stdsp	sp[0x0],lr
80005022:	40 08       	lddsp	r8,sp[0x0]
80005024:	40 1c       	lddsp	r12,sp[0x4]
80005026:	18 48       	or	r8,r12
80005028:	5f 19       	srne	r9
8000502a:	0a 98       	mov	r8,r5
8000502c:	eb e9 00 09 	and	r9,r5,r9
80005030:	a1 b8       	sbr	r8,0x1
80005032:	58 09       	cp.w	r9,0
80005034:	c0 70       	breq	80005042 <_vfprintf_r+0x1536>
80005036:	10 95       	mov	r5,r8
80005038:	fb 60 06 b9 	st.b	sp[1721],r0
8000503c:	33 08       	mov	r8,48
8000503e:	fb 68 06 b8 	st.b	sp[1720],r8
80005042:	30 28       	mov	r8,2
80005044:	30 09       	mov	r9,0
80005046:	fb 69 06 bb 	st.b	sp[1723],r9
8000504a:	0a 99       	mov	r9,r5
8000504c:	a7 d9       	cbr	r9,0x7
8000504e:	40 2b       	lddsp	r11,sp[0x8]
80005050:	40 16       	lddsp	r6,sp[0x4]
80005052:	58 0b       	cp.w	r11,0
80005054:	5f 1a       	srne	r10
80005056:	f2 05 17 40 	movge	r5,r9
8000505a:	fa c2 f9 78 	sub	r2,sp,-1672
8000505e:	40 09       	lddsp	r9,sp[0x0]
80005060:	0c 49       	or	r9,r6
80005062:	5f 19       	srne	r9
80005064:	f5 e9 10 09 	or	r9,r10,r9
80005068:	c5 c0       	breq	80005120 <_vfprintf_r+0x1614>
8000506a:	30 19       	mov	r9,1
8000506c:	f2 08 18 00 	cp.b	r8,r9
80005070:	c0 60       	breq	8000507c <_vfprintf_r+0x1570>
80005072:	30 29       	mov	r9,2
80005074:	f2 08 18 00 	cp.b	r8,r9
80005078:	c0 41       	brne	80005080 <_vfprintf_r+0x1574>
8000507a:	c3 c8       	rjmp	800050f2 <_vfprintf_r+0x15e6>
8000507c:	04 96       	mov	r6,r2
8000507e:	c3 08       	rjmp	800050de <_vfprintf_r+0x15d2>
80005080:	04 96       	mov	r6,r2
80005082:	fa e8 00 00 	ld.d	r8,sp[0]
80005086:	f5 d8 c0 03 	bfextu	r10,r8,0x0,0x3
8000508a:	2d 0a       	sub	r10,-48
8000508c:	0c fa       	st.b	--r6,r10
8000508e:	f0 0b 16 03 	lsr	r11,r8,0x3
80005092:	f2 0c 16 03 	lsr	r12,r9,0x3
80005096:	f7 e9 11 db 	or	r11,r11,r9<<0x1d
8000509a:	18 99       	mov	r9,r12
8000509c:	16 98       	mov	r8,r11
8000509e:	58 08       	cp.w	r8,0
800050a0:	5c 29       	cpc	r9
800050a2:	cf 21       	brne	80005086 <_vfprintf_r+0x157a>
800050a4:	fa e9 00 00 	st.d	sp[0],r8
800050a8:	ed b5 00 00 	bld	r5,0x0
800050ac:	c4 51       	brne	80005136 <_vfprintf_r+0x162a>
800050ae:	33 09       	mov	r9,48
800050b0:	f2 0a 18 00 	cp.b	r10,r9
800050b4:	c4 10       	breq	80005136 <_vfprintf_r+0x162a>
800050b6:	0c f9       	st.b	--r6,r9
800050b8:	c3 f8       	rjmp	80005136 <_vfprintf_r+0x162a>
800050ba:	fa ea 00 00 	ld.d	r10,sp[0]
800050be:	30 a8       	mov	r8,10
800050c0:	30 09       	mov	r9,0
800050c2:	e0 a0 1e 31 	rcall	80008d24 <__avr32_umod64>
800050c6:	30 a8       	mov	r8,10
800050c8:	2d 0a       	sub	r10,-48
800050ca:	30 09       	mov	r9,0
800050cc:	ac 8a       	st.b	r6[0x0],r10
800050ce:	fa ea 00 00 	ld.d	r10,sp[0]
800050d2:	e0 a0 1c f7 	rcall	80008ac0 <__avr32_udiv64>
800050d6:	16 99       	mov	r9,r11
800050d8:	14 98       	mov	r8,r10
800050da:	fa e9 00 00 	st.d	sp[0],r8
800050de:	20 16       	sub	r6,1
800050e0:	fa ea 00 00 	ld.d	r10,sp[0]
800050e4:	58 9a       	cp.w	r10,9
800050e6:	5c 2b       	cpc	r11
800050e8:	fe 9b ff e9 	brhi	800050ba <_vfprintf_r+0x15ae>
800050ec:	1b f8       	ld.ub	r8,sp[0x7]
800050ee:	2d 08       	sub	r8,-48
800050f0:	c2 08       	rjmp	80005130 <_vfprintf_r+0x1624>
800050f2:	04 96       	mov	r6,r2
800050f4:	fa e8 00 00 	ld.d	r8,sp[0]
800050f8:	f5 d8 c0 04 	bfextu	r10,r8,0x0,0x4
800050fc:	40 de       	lddsp	lr,sp[0x34]
800050fe:	fc 0a 07 0a 	ld.ub	r10,lr[r10]
80005102:	0c fa       	st.b	--r6,r10
80005104:	f2 0b 16 04 	lsr	r11,r9,0x4
80005108:	f0 0a 16 04 	lsr	r10,r8,0x4
8000510c:	f5 e9 11 ca 	or	r10,r10,r9<<0x1c
80005110:	16 99       	mov	r9,r11
80005112:	14 98       	mov	r8,r10
80005114:	58 08       	cp.w	r8,0
80005116:	5c 29       	cpc	r9
80005118:	cf 01       	brne	800050f8 <_vfprintf_r+0x15ec>
8000511a:	fa e9 00 00 	st.d	sp[0],r8
8000511e:	c0 c8       	rjmp	80005136 <_vfprintf_r+0x162a>
80005120:	58 08       	cp.w	r8,0
80005122:	c0 91       	brne	80005134 <_vfprintf_r+0x1628>
80005124:	ed b5 00 00 	bld	r5,0x0
80005128:	c0 61       	brne	80005134 <_vfprintf_r+0x1628>
8000512a:	fa c6 f9 79 	sub	r6,sp,-1671
8000512e:	33 08       	mov	r8,48
80005130:	ac 88       	st.b	r6[0x0],r8
80005132:	c0 28       	rjmp	80005136 <_vfprintf_r+0x162a>
80005134:	04 96       	mov	r6,r2
80005136:	0c 12       	sub	r2,r6
80005138:	c1 c8       	rjmp	80005170 <_vfprintf_r+0x1664>
8000513a:	50 a7       	stdsp	sp[0x28],r7
8000513c:	50 80       	stdsp	sp[0x20],r0
8000513e:	40 93       	lddsp	r3,sp[0x24]
80005140:	0c 97       	mov	r7,r6
80005142:	10 90       	mov	r0,r8
80005144:	04 94       	mov	r4,r2
80005146:	40 41       	lddsp	r1,sp[0x10]
80005148:	58 08       	cp.w	r8,0
8000514a:	e0 80 04 4f 	breq	800059e8 <_vfprintf_r+0x1edc>
8000514e:	fb 68 06 60 	st.b	sp[1632],r8
80005152:	30 0c       	mov	r12,0
80005154:	30 08       	mov	r8,0
80005156:	30 12       	mov	r2,1
80005158:	fb 68 06 bb 	st.b	sp[1723],r8
8000515c:	50 2c       	stdsp	sp[0x8],r12
8000515e:	fa c6 f9 a0 	sub	r6,sp,-1632
80005162:	c0 78       	rjmp	80005170 <_vfprintf_r+0x1664>
80005164:	30 0b       	mov	r11,0
80005166:	50 2b       	stdsp	sp[0x8],r11
80005168:	c0 48       	rjmp	80005170 <_vfprintf_r+0x1664>
8000516a:	40 22       	lddsp	r2,sp[0x8]
8000516c:	30 0a       	mov	r10,0
8000516e:	50 2a       	stdsp	sp[0x8],r10
80005170:	40 29       	lddsp	r9,sp[0x8]
80005172:	e4 09 0c 49 	max	r9,r2,r9
80005176:	fb 38 06 bb 	ld.ub	r8,sp[1723]
8000517a:	50 39       	stdsp	sp[0xc],r9
8000517c:	0a 9e       	mov	lr,r5
8000517e:	30 09       	mov	r9,0
80005180:	e2 1e 00 02 	andl	lr,0x2,COH
80005184:	f2 08 18 00 	cp.b	r8,r9
80005188:	fb f8 10 03 	ld.wne	r8,sp[0xc]
8000518c:	f7 b8 01 ff 	subne	r8,-1
80005190:	fb f8 1a 03 	st.wne	sp[0xc],r8
80005194:	0a 9b       	mov	r11,r5
80005196:	58 0e       	cp.w	lr,0
80005198:	fb fc 10 03 	ld.wne	r12,sp[0xc]
8000519c:	f7 bc 01 fe 	subne	r12,-2
800051a0:	fb fc 1a 03 	st.wne	sp[0xc],r12
800051a4:	e2 1b 00 84 	andl	r11,0x84,COH
800051a8:	50 fe       	stdsp	sp[0x3c],lr
800051aa:	50 9b       	stdsp	sp[0x24],r11
800051ac:	c4 71       	brne	8000523a <_vfprintf_r+0x172e>
800051ae:	40 8a       	lddsp	r10,sp[0x20]
800051b0:	40 39       	lddsp	r9,sp[0xc]
800051b2:	12 1a       	sub	r10,r9
800051b4:	50 4a       	stdsp	sp[0x10],r10
800051b6:	58 0a       	cp.w	r10,0
800051b8:	e0 89 00 20 	brgt	800051f8 <_vfprintf_r+0x16ec>
800051bc:	c3 f8       	rjmp	8000523a <_vfprintf_r+0x172e>
800051be:	2f 09       	sub	r9,-16
800051c0:	2f f8       	sub	r8,-1
800051c2:	fe ce bb 36 	sub	lr,pc,-17610
800051c6:	31 0c       	mov	r12,16
800051c8:	fb 49 06 90 	st.w	sp[1680],r9
800051cc:	87 0e       	st.w	r3[0x0],lr
800051ce:	87 1c       	st.w	r3[0x4],r12
800051d0:	fb 48 06 8c 	st.w	sp[1676],r8
800051d4:	58 78       	cp.w	r8,7
800051d6:	e0 89 00 04 	brgt	800051de <_vfprintf_r+0x16d2>
800051da:	2f 83       	sub	r3,-8
800051dc:	c0 b8       	rjmp	800051f2 <_vfprintf_r+0x16e6>
800051de:	fa ca f9 78 	sub	r10,sp,-1672
800051e2:	02 9b       	mov	r11,r1
800051e4:	08 9c       	mov	r12,r4
800051e6:	fe b0 f4 85 	rcall	80003af0 <__sprint_r>
800051ea:	e0 81 04 10 	brne	80005a0a <_vfprintf_r+0x1efe>
800051ee:	fa c3 f9 e0 	sub	r3,sp,-1568
800051f2:	40 4b       	lddsp	r11,sp[0x10]
800051f4:	21 0b       	sub	r11,16
800051f6:	50 4b       	stdsp	sp[0x10],r11
800051f8:	fa f9 06 90 	ld.w	r9,sp[1680]
800051fc:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005200:	fe ca bb 74 	sub	r10,pc,-17548
80005204:	40 4e       	lddsp	lr,sp[0x10]
80005206:	59 0e       	cp.w	lr,16
80005208:	fe 99 ff db 	brgt	800051be <_vfprintf_r+0x16b2>
8000520c:	1c 09       	add	r9,lr
8000520e:	2f f8       	sub	r8,-1
80005210:	87 0a       	st.w	r3[0x0],r10
80005212:	fb 49 06 90 	st.w	sp[1680],r9
80005216:	87 1e       	st.w	r3[0x4],lr
80005218:	fb 48 06 8c 	st.w	sp[1676],r8
8000521c:	58 78       	cp.w	r8,7
8000521e:	e0 89 00 04 	brgt	80005226 <_vfprintf_r+0x171a>
80005222:	2f 83       	sub	r3,-8
80005224:	c0 b8       	rjmp	8000523a <_vfprintf_r+0x172e>
80005226:	fa ca f9 78 	sub	r10,sp,-1672
8000522a:	02 9b       	mov	r11,r1
8000522c:	08 9c       	mov	r12,r4
8000522e:	fe b0 f4 61 	rcall	80003af0 <__sprint_r>
80005232:	e0 81 03 ec 	brne	80005a0a <_vfprintf_r+0x1efe>
80005236:	fa c3 f9 e0 	sub	r3,sp,-1568
8000523a:	30 09       	mov	r9,0
8000523c:	fb 38 06 bb 	ld.ub	r8,sp[1723]
80005240:	f2 08 18 00 	cp.b	r8,r9
80005244:	c1 f0       	breq	80005282 <_vfprintf_r+0x1776>
80005246:	fa f8 06 90 	ld.w	r8,sp[1680]
8000524a:	fa c9 f9 45 	sub	r9,sp,-1723
8000524e:	2f f8       	sub	r8,-1
80005250:	87 09       	st.w	r3[0x0],r9
80005252:	fb 48 06 90 	st.w	sp[1680],r8
80005256:	30 19       	mov	r9,1
80005258:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000525c:	87 19       	st.w	r3[0x4],r9
8000525e:	2f f8       	sub	r8,-1
80005260:	fb 48 06 8c 	st.w	sp[1676],r8
80005264:	58 78       	cp.w	r8,7
80005266:	e0 89 00 04 	brgt	8000526e <_vfprintf_r+0x1762>
8000526a:	2f 83       	sub	r3,-8
8000526c:	c0 b8       	rjmp	80005282 <_vfprintf_r+0x1776>
8000526e:	fa ca f9 78 	sub	r10,sp,-1672
80005272:	02 9b       	mov	r11,r1
80005274:	08 9c       	mov	r12,r4
80005276:	fe b0 f4 3d 	rcall	80003af0 <__sprint_r>
8000527a:	e0 81 03 c8 	brne	80005a0a <_vfprintf_r+0x1efe>
8000527e:	fa c3 f9 e0 	sub	r3,sp,-1568
80005282:	40 fc       	lddsp	r12,sp[0x3c]
80005284:	58 0c       	cp.w	r12,0
80005286:	c1 f0       	breq	800052c4 <_vfprintf_r+0x17b8>
80005288:	fa f8 06 90 	ld.w	r8,sp[1680]
8000528c:	fa c9 f9 48 	sub	r9,sp,-1720
80005290:	2f e8       	sub	r8,-2
80005292:	87 09       	st.w	r3[0x0],r9
80005294:	fb 48 06 90 	st.w	sp[1680],r8
80005298:	30 29       	mov	r9,2
8000529a:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000529e:	87 19       	st.w	r3[0x4],r9
800052a0:	2f f8       	sub	r8,-1
800052a2:	fb 48 06 8c 	st.w	sp[1676],r8
800052a6:	58 78       	cp.w	r8,7
800052a8:	e0 89 00 04 	brgt	800052b0 <_vfprintf_r+0x17a4>
800052ac:	2f 83       	sub	r3,-8
800052ae:	c0 b8       	rjmp	800052c4 <_vfprintf_r+0x17b8>
800052b0:	fa ca f9 78 	sub	r10,sp,-1672
800052b4:	02 9b       	mov	r11,r1
800052b6:	08 9c       	mov	r12,r4
800052b8:	fe b0 f4 1c 	rcall	80003af0 <__sprint_r>
800052bc:	e0 81 03 a7 	brne	80005a0a <_vfprintf_r+0x1efe>
800052c0:	fa c3 f9 e0 	sub	r3,sp,-1568
800052c4:	40 9b       	lddsp	r11,sp[0x24]
800052c6:	e0 4b 00 80 	cp.w	r11,128
800052ca:	c4 71       	brne	80005358 <_vfprintf_r+0x184c>
800052cc:	40 8a       	lddsp	r10,sp[0x20]
800052ce:	40 39       	lddsp	r9,sp[0xc]
800052d0:	12 1a       	sub	r10,r9
800052d2:	50 4a       	stdsp	sp[0x10],r10
800052d4:	58 0a       	cp.w	r10,0
800052d6:	e0 89 00 20 	brgt	80005316 <_vfprintf_r+0x180a>
800052da:	c3 f8       	rjmp	80005358 <_vfprintf_r+0x184c>
800052dc:	2f 09       	sub	r9,-16
800052de:	2f f8       	sub	r8,-1
800052e0:	fe ce bc 44 	sub	lr,pc,-17340
800052e4:	31 0c       	mov	r12,16
800052e6:	fb 49 06 90 	st.w	sp[1680],r9
800052ea:	87 0e       	st.w	r3[0x0],lr
800052ec:	87 1c       	st.w	r3[0x4],r12
800052ee:	fb 48 06 8c 	st.w	sp[1676],r8
800052f2:	58 78       	cp.w	r8,7
800052f4:	e0 89 00 04 	brgt	800052fc <_vfprintf_r+0x17f0>
800052f8:	2f 83       	sub	r3,-8
800052fa:	c0 b8       	rjmp	80005310 <_vfprintf_r+0x1804>
800052fc:	fa ca f9 78 	sub	r10,sp,-1672
80005300:	02 9b       	mov	r11,r1
80005302:	08 9c       	mov	r12,r4
80005304:	fe b0 f3 f6 	rcall	80003af0 <__sprint_r>
80005308:	e0 81 03 81 	brne	80005a0a <_vfprintf_r+0x1efe>
8000530c:	fa c3 f9 e0 	sub	r3,sp,-1568
80005310:	40 4b       	lddsp	r11,sp[0x10]
80005312:	21 0b       	sub	r11,16
80005314:	50 4b       	stdsp	sp[0x10],r11
80005316:	fa f9 06 90 	ld.w	r9,sp[1680]
8000531a:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000531e:	fe ca bc 82 	sub	r10,pc,-17278
80005322:	40 4e       	lddsp	lr,sp[0x10]
80005324:	59 0e       	cp.w	lr,16
80005326:	fe 99 ff db 	brgt	800052dc <_vfprintf_r+0x17d0>
8000532a:	1c 09       	add	r9,lr
8000532c:	2f f8       	sub	r8,-1
8000532e:	87 0a       	st.w	r3[0x0],r10
80005330:	fb 49 06 90 	st.w	sp[1680],r9
80005334:	87 1e       	st.w	r3[0x4],lr
80005336:	fb 48 06 8c 	st.w	sp[1676],r8
8000533a:	58 78       	cp.w	r8,7
8000533c:	e0 89 00 04 	brgt	80005344 <_vfprintf_r+0x1838>
80005340:	2f 83       	sub	r3,-8
80005342:	c0 b8       	rjmp	80005358 <_vfprintf_r+0x184c>
80005344:	fa ca f9 78 	sub	r10,sp,-1672
80005348:	02 9b       	mov	r11,r1
8000534a:	08 9c       	mov	r12,r4
8000534c:	fe b0 f3 d2 	rcall	80003af0 <__sprint_r>
80005350:	e0 81 03 5d 	brne	80005a0a <_vfprintf_r+0x1efe>
80005354:	fa c3 f9 e0 	sub	r3,sp,-1568
80005358:	40 2c       	lddsp	r12,sp[0x8]
8000535a:	04 1c       	sub	r12,r2
8000535c:	50 2c       	stdsp	sp[0x8],r12
8000535e:	58 0c       	cp.w	r12,0
80005360:	e0 89 00 20 	brgt	800053a0 <_vfprintf_r+0x1894>
80005364:	c3 f8       	rjmp	800053e2 <_vfprintf_r+0x18d6>
80005366:	2f 09       	sub	r9,-16
80005368:	2f f8       	sub	r8,-1
8000536a:	fe cb bc ce 	sub	r11,pc,-17202
8000536e:	31 0a       	mov	r10,16
80005370:	fb 49 06 90 	st.w	sp[1680],r9
80005374:	87 0b       	st.w	r3[0x0],r11
80005376:	87 1a       	st.w	r3[0x4],r10
80005378:	fb 48 06 8c 	st.w	sp[1676],r8
8000537c:	58 78       	cp.w	r8,7
8000537e:	e0 89 00 04 	brgt	80005386 <_vfprintf_r+0x187a>
80005382:	2f 83       	sub	r3,-8
80005384:	c0 b8       	rjmp	8000539a <_vfprintf_r+0x188e>
80005386:	fa ca f9 78 	sub	r10,sp,-1672
8000538a:	02 9b       	mov	r11,r1
8000538c:	08 9c       	mov	r12,r4
8000538e:	fe b0 f3 b1 	rcall	80003af0 <__sprint_r>
80005392:	e0 81 03 3c 	brne	80005a0a <_vfprintf_r+0x1efe>
80005396:	fa c3 f9 e0 	sub	r3,sp,-1568
8000539a:	40 29       	lddsp	r9,sp[0x8]
8000539c:	21 09       	sub	r9,16
8000539e:	50 29       	stdsp	sp[0x8],r9
800053a0:	fa f9 06 90 	ld.w	r9,sp[1680]
800053a4:	fa f8 06 8c 	ld.w	r8,sp[1676]
800053a8:	fe ca bd 0c 	sub	r10,pc,-17140
800053ac:	40 2e       	lddsp	lr,sp[0x8]
800053ae:	59 0e       	cp.w	lr,16
800053b0:	fe 99 ff db 	brgt	80005366 <_vfprintf_r+0x185a>
800053b4:	1c 09       	add	r9,lr
800053b6:	2f f8       	sub	r8,-1
800053b8:	87 0a       	st.w	r3[0x0],r10
800053ba:	fb 49 06 90 	st.w	sp[1680],r9
800053be:	87 1e       	st.w	r3[0x4],lr
800053c0:	fb 48 06 8c 	st.w	sp[1676],r8
800053c4:	58 78       	cp.w	r8,7
800053c6:	e0 89 00 04 	brgt	800053ce <_vfprintf_r+0x18c2>
800053ca:	2f 83       	sub	r3,-8
800053cc:	c0 b8       	rjmp	800053e2 <_vfprintf_r+0x18d6>
800053ce:	fa ca f9 78 	sub	r10,sp,-1672
800053d2:	02 9b       	mov	r11,r1
800053d4:	08 9c       	mov	r12,r4
800053d6:	fe b0 f3 8d 	rcall	80003af0 <__sprint_r>
800053da:	e0 81 03 18 	brne	80005a0a <_vfprintf_r+0x1efe>
800053de:	fa c3 f9 e0 	sub	r3,sp,-1568
800053e2:	ed b5 00 08 	bld	r5,0x8
800053e6:	c0 b0       	breq	800053fc <_vfprintf_r+0x18f0>
800053e8:	fa f8 06 90 	ld.w	r8,sp[1680]
800053ec:	87 12       	st.w	r3[0x4],r2
800053ee:	87 06       	st.w	r3[0x0],r6
800053f0:	f0 02 00 02 	add	r2,r8,r2
800053f4:	fb 42 06 90 	st.w	sp[1680],r2
800053f8:	e0 8f 01 d4 	bral	800057a0 <_vfprintf_r+0x1c94>
800053fc:	e0 40 00 65 	cp.w	r0,101
80005400:	e0 8a 01 d6 	brle	800057ac <_vfprintf_r+0x1ca0>
80005404:	30 08       	mov	r8,0
80005406:	30 09       	mov	r9,0
80005408:	40 5b       	lddsp	r11,sp[0x14]
8000540a:	40 7a       	lddsp	r10,sp[0x1c]
8000540c:	e0 a0 19 53 	rcall	800086b2 <__avr32_f64_cmp_eq>
80005410:	c7 90       	breq	80005502 <_vfprintf_r+0x19f6>
80005412:	fa f8 06 90 	ld.w	r8,sp[1680]
80005416:	fe c9 bd 8e 	sub	r9,pc,-17010
8000541a:	2f f8       	sub	r8,-1
8000541c:	87 09       	st.w	r3[0x0],r9
8000541e:	fb 48 06 90 	st.w	sp[1680],r8
80005422:	30 19       	mov	r9,1
80005424:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005428:	87 19       	st.w	r3[0x4],r9
8000542a:	2f f8       	sub	r8,-1
8000542c:	fb 48 06 8c 	st.w	sp[1676],r8
80005430:	58 78       	cp.w	r8,7
80005432:	e0 89 00 05 	brgt	8000543c <_vfprintf_r+0x1930>
80005436:	2f 83       	sub	r3,-8
80005438:	c0 c8       	rjmp	80005450 <_vfprintf_r+0x1944>
8000543a:	d7 03       	nop
8000543c:	fa ca f9 78 	sub	r10,sp,-1672
80005440:	02 9b       	mov	r11,r1
80005442:	08 9c       	mov	r12,r4
80005444:	fe b0 f3 56 	rcall	80003af0 <__sprint_r>
80005448:	e0 81 02 e1 	brne	80005a0a <_vfprintf_r+0x1efe>
8000544c:	fa c3 f9 e0 	sub	r3,sp,-1568
80005450:	fa f8 06 ac 	ld.w	r8,sp[1708]
80005454:	40 6c       	lddsp	r12,sp[0x18]
80005456:	18 38       	cp.w	r8,r12
80005458:	c0 55       	brlt	80005462 <_vfprintf_r+0x1956>
8000545a:	ed b5 00 00 	bld	r5,0x0
8000545e:	e0 81 02 6b 	brne	80005934 <_vfprintf_r+0x1e28>
80005462:	fa f8 06 90 	ld.w	r8,sp[1680]
80005466:	2f f8       	sub	r8,-1
80005468:	40 cb       	lddsp	r11,sp[0x30]
8000546a:	fb 48 06 90 	st.w	sp[1680],r8
8000546e:	30 19       	mov	r9,1
80005470:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005474:	87 0b       	st.w	r3[0x0],r11
80005476:	2f f8       	sub	r8,-1
80005478:	87 19       	st.w	r3[0x4],r9
8000547a:	fb 48 06 8c 	st.w	sp[1676],r8
8000547e:	58 78       	cp.w	r8,7
80005480:	e0 89 00 04 	brgt	80005488 <_vfprintf_r+0x197c>
80005484:	2f 83       	sub	r3,-8
80005486:	c0 b8       	rjmp	8000549c <_vfprintf_r+0x1990>
80005488:	fa ca f9 78 	sub	r10,sp,-1672
8000548c:	02 9b       	mov	r11,r1
8000548e:	08 9c       	mov	r12,r4
80005490:	fe b0 f3 30 	rcall	80003af0 <__sprint_r>
80005494:	e0 81 02 bb 	brne	80005a0a <_vfprintf_r+0x1efe>
80005498:	fa c3 f9 e0 	sub	r3,sp,-1568
8000549c:	40 66       	lddsp	r6,sp[0x18]
8000549e:	20 16       	sub	r6,1
800054a0:	58 06       	cp.w	r6,0
800054a2:	e0 89 00 1d 	brgt	800054dc <_vfprintf_r+0x19d0>
800054a6:	e0 8f 02 47 	bral	80005934 <_vfprintf_r+0x1e28>
800054aa:	2f 09       	sub	r9,-16
800054ac:	2f f8       	sub	r8,-1
800054ae:	fb 49 06 90 	st.w	sp[1680],r9
800054b2:	87 02       	st.w	r3[0x0],r2
800054b4:	87 10       	st.w	r3[0x4],r0
800054b6:	fb 48 06 8c 	st.w	sp[1676],r8
800054ba:	58 78       	cp.w	r8,7
800054bc:	e0 89 00 04 	brgt	800054c4 <_vfprintf_r+0x19b8>
800054c0:	2f 83       	sub	r3,-8
800054c2:	c0 b8       	rjmp	800054d8 <_vfprintf_r+0x19cc>
800054c4:	fa ca f9 78 	sub	r10,sp,-1672
800054c8:	02 9b       	mov	r11,r1
800054ca:	08 9c       	mov	r12,r4
800054cc:	fe b0 f3 12 	rcall	80003af0 <__sprint_r>
800054d0:	e0 81 02 9d 	brne	80005a0a <_vfprintf_r+0x1efe>
800054d4:	fa c3 f9 e0 	sub	r3,sp,-1568
800054d8:	21 06       	sub	r6,16
800054da:	c0 48       	rjmp	800054e2 <_vfprintf_r+0x19d6>
800054dc:	fe c2 be 40 	sub	r2,pc,-16832
800054e0:	31 00       	mov	r0,16
800054e2:	fa f9 06 90 	ld.w	r9,sp[1680]
800054e6:	fa f8 06 8c 	ld.w	r8,sp[1676]
800054ea:	fe ca be 4e 	sub	r10,pc,-16818
800054ee:	59 06       	cp.w	r6,16
800054f0:	fe 99 ff dd 	brgt	800054aa <_vfprintf_r+0x199e>
800054f4:	0c 09       	add	r9,r6
800054f6:	87 0a       	st.w	r3[0x0],r10
800054f8:	fb 49 06 90 	st.w	sp[1680],r9
800054fc:	2f f8       	sub	r8,-1
800054fe:	87 16       	st.w	r3[0x4],r6
80005500:	c5 39       	rjmp	800057a6 <_vfprintf_r+0x1c9a>
80005502:	fa fa 06 ac 	ld.w	r10,sp[1708]
80005506:	58 0a       	cp.w	r10,0
80005508:	e0 89 00 92 	brgt	8000562c <_vfprintf_r+0x1b20>
8000550c:	fa f8 06 90 	ld.w	r8,sp[1680]
80005510:	fe c9 be 88 	sub	r9,pc,-16760
80005514:	2f f8       	sub	r8,-1
80005516:	87 09       	st.w	r3[0x0],r9
80005518:	fb 48 06 90 	st.w	sp[1680],r8
8000551c:	30 19       	mov	r9,1
8000551e:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005522:	87 19       	st.w	r3[0x4],r9
80005524:	2f f8       	sub	r8,-1
80005526:	fb 48 06 8c 	st.w	sp[1676],r8
8000552a:	58 78       	cp.w	r8,7
8000552c:	e0 89 00 04 	brgt	80005534 <_vfprintf_r+0x1a28>
80005530:	2f 83       	sub	r3,-8
80005532:	c0 b8       	rjmp	80005548 <_vfprintf_r+0x1a3c>
80005534:	fa ca f9 78 	sub	r10,sp,-1672
80005538:	02 9b       	mov	r11,r1
8000553a:	08 9c       	mov	r12,r4
8000553c:	fe b0 f2 da 	rcall	80003af0 <__sprint_r>
80005540:	e0 81 02 65 	brne	80005a0a <_vfprintf_r+0x1efe>
80005544:	fa c3 f9 e0 	sub	r3,sp,-1568
80005548:	fa f8 06 ac 	ld.w	r8,sp[1708]
8000554c:	58 08       	cp.w	r8,0
8000554e:	c0 81       	brne	8000555e <_vfprintf_r+0x1a52>
80005550:	40 6a       	lddsp	r10,sp[0x18]
80005552:	58 0a       	cp.w	r10,0
80005554:	c0 51       	brne	8000555e <_vfprintf_r+0x1a52>
80005556:	ed b5 00 00 	bld	r5,0x0
8000555a:	e0 81 01 ed 	brne	80005934 <_vfprintf_r+0x1e28>
8000555e:	40 c9       	lddsp	r9,sp[0x30]
80005560:	fa f8 06 90 	ld.w	r8,sp[1680]
80005564:	2f f8       	sub	r8,-1
80005566:	87 09       	st.w	r3[0x0],r9
80005568:	fb 48 06 90 	st.w	sp[1680],r8
8000556c:	30 19       	mov	r9,1
8000556e:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005572:	87 19       	st.w	r3[0x4],r9
80005574:	2f f8       	sub	r8,-1
80005576:	fb 48 06 8c 	st.w	sp[1676],r8
8000557a:	58 78       	cp.w	r8,7
8000557c:	e0 89 00 04 	brgt	80005584 <_vfprintf_r+0x1a78>
80005580:	2f 83       	sub	r3,-8
80005582:	c0 b8       	rjmp	80005598 <_vfprintf_r+0x1a8c>
80005584:	fa ca f9 78 	sub	r10,sp,-1672
80005588:	02 9b       	mov	r11,r1
8000558a:	08 9c       	mov	r12,r4
8000558c:	fe b0 f2 b2 	rcall	80003af0 <__sprint_r>
80005590:	e0 81 02 3d 	brne	80005a0a <_vfprintf_r+0x1efe>
80005594:	fa c3 f9 e0 	sub	r3,sp,-1568
80005598:	fa f2 06 ac 	ld.w	r2,sp[1708]
8000559c:	5c 32       	neg	r2
8000559e:	58 02       	cp.w	r2,0
800055a0:	e0 89 00 1d 	brgt	800055da <_vfprintf_r+0x1ace>
800055a4:	c3 d8       	rjmp	8000561e <_vfprintf_r+0x1b12>
800055a6:	2f 09       	sub	r9,-16
800055a8:	2f f8       	sub	r8,-1
800055aa:	31 0e       	mov	lr,16
800055ac:	fb 49 06 90 	st.w	sp[1680],r9
800055b0:	87 00       	st.w	r3[0x0],r0
800055b2:	87 1e       	st.w	r3[0x4],lr
800055b4:	fb 48 06 8c 	st.w	sp[1676],r8
800055b8:	58 78       	cp.w	r8,7
800055ba:	e0 89 00 04 	brgt	800055c2 <_vfprintf_r+0x1ab6>
800055be:	2f 83       	sub	r3,-8
800055c0:	c0 b8       	rjmp	800055d6 <_vfprintf_r+0x1aca>
800055c2:	fa ca f9 78 	sub	r10,sp,-1672
800055c6:	02 9b       	mov	r11,r1
800055c8:	08 9c       	mov	r12,r4
800055ca:	fe b0 f2 93 	rcall	80003af0 <__sprint_r>
800055ce:	e0 81 02 1e 	brne	80005a0a <_vfprintf_r+0x1efe>
800055d2:	fa c3 f9 e0 	sub	r3,sp,-1568
800055d6:	21 02       	sub	r2,16
800055d8:	c0 38       	rjmp	800055de <_vfprintf_r+0x1ad2>
800055da:	fe c0 bf 3e 	sub	r0,pc,-16578
800055de:	fa f9 06 90 	ld.w	r9,sp[1680]
800055e2:	fa f8 06 8c 	ld.w	r8,sp[1676]
800055e6:	fe ca bf 4a 	sub	r10,pc,-16566
800055ea:	59 02       	cp.w	r2,16
800055ec:	fe 99 ff dd 	brgt	800055a6 <_vfprintf_r+0x1a9a>
800055f0:	04 09       	add	r9,r2
800055f2:	2f f8       	sub	r8,-1
800055f4:	87 0a       	st.w	r3[0x0],r10
800055f6:	fb 49 06 90 	st.w	sp[1680],r9
800055fa:	87 12       	st.w	r3[0x4],r2
800055fc:	fb 48 06 8c 	st.w	sp[1676],r8
80005600:	58 78       	cp.w	r8,7
80005602:	e0 89 00 04 	brgt	8000560a <_vfprintf_r+0x1afe>
80005606:	2f 83       	sub	r3,-8
80005608:	c0 b8       	rjmp	8000561e <_vfprintf_r+0x1b12>
8000560a:	fa ca f9 78 	sub	r10,sp,-1672
8000560e:	02 9b       	mov	r11,r1
80005610:	08 9c       	mov	r12,r4
80005612:	fe b0 f2 6f 	rcall	80003af0 <__sprint_r>
80005616:	e0 81 01 fa 	brne	80005a0a <_vfprintf_r+0x1efe>
8000561a:	fa c3 f9 e0 	sub	r3,sp,-1568
8000561e:	40 6c       	lddsp	r12,sp[0x18]
80005620:	fa f8 06 90 	ld.w	r8,sp[1680]
80005624:	87 06       	st.w	r3[0x0],r6
80005626:	87 1c       	st.w	r3[0x4],r12
80005628:	18 08       	add	r8,r12
8000562a:	cb 98       	rjmp	8000579c <_vfprintf_r+0x1c90>
8000562c:	fa f9 06 90 	ld.w	r9,sp[1680]
80005630:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005634:	40 6b       	lddsp	r11,sp[0x18]
80005636:	16 3a       	cp.w	r10,r11
80005638:	c6 f5       	brlt	80005716 <_vfprintf_r+0x1c0a>
8000563a:	16 09       	add	r9,r11
8000563c:	2f f8       	sub	r8,-1
8000563e:	87 06       	st.w	r3[0x0],r6
80005640:	fb 49 06 90 	st.w	sp[1680],r9
80005644:	87 1b       	st.w	r3[0x4],r11
80005646:	fb 48 06 8c 	st.w	sp[1676],r8
8000564a:	58 78       	cp.w	r8,7
8000564c:	e0 89 00 04 	brgt	80005654 <_vfprintf_r+0x1b48>
80005650:	2f 83       	sub	r3,-8
80005652:	c0 b8       	rjmp	80005668 <_vfprintf_r+0x1b5c>
80005654:	fa ca f9 78 	sub	r10,sp,-1672
80005658:	02 9b       	mov	r11,r1
8000565a:	08 9c       	mov	r12,r4
8000565c:	fe b0 f2 4a 	rcall	80003af0 <__sprint_r>
80005660:	e0 81 01 d5 	brne	80005a0a <_vfprintf_r+0x1efe>
80005664:	fa c3 f9 e0 	sub	r3,sp,-1568
80005668:	fa f6 06 ac 	ld.w	r6,sp[1708]
8000566c:	40 6a       	lddsp	r10,sp[0x18]
8000566e:	14 16       	sub	r6,r10
80005670:	58 06       	cp.w	r6,0
80005672:	e0 89 00 1c 	brgt	800056aa <_vfprintf_r+0x1b9e>
80005676:	c3 d8       	rjmp	800056f0 <_vfprintf_r+0x1be4>
80005678:	2f 09       	sub	r9,-16
8000567a:	2f f8       	sub	r8,-1
8000567c:	fb 49 06 90 	st.w	sp[1680],r9
80005680:	87 02       	st.w	r3[0x0],r2
80005682:	87 10       	st.w	r3[0x4],r0
80005684:	fb 48 06 8c 	st.w	sp[1676],r8
80005688:	58 78       	cp.w	r8,7
8000568a:	e0 89 00 04 	brgt	80005692 <_vfprintf_r+0x1b86>
8000568e:	2f 83       	sub	r3,-8
80005690:	c0 b8       	rjmp	800056a6 <_vfprintf_r+0x1b9a>
80005692:	fa ca f9 78 	sub	r10,sp,-1672
80005696:	02 9b       	mov	r11,r1
80005698:	08 9c       	mov	r12,r4
8000569a:	fe b0 f2 2b 	rcall	80003af0 <__sprint_r>
8000569e:	e0 81 01 b6 	brne	80005a0a <_vfprintf_r+0x1efe>
800056a2:	fa c3 f9 e0 	sub	r3,sp,-1568
800056a6:	21 06       	sub	r6,16
800056a8:	c0 48       	rjmp	800056b0 <_vfprintf_r+0x1ba4>
800056aa:	fe c2 c0 0e 	sub	r2,pc,-16370
800056ae:	31 00       	mov	r0,16
800056b0:	fa f9 06 90 	ld.w	r9,sp[1680]
800056b4:	fa f8 06 8c 	ld.w	r8,sp[1676]
800056b8:	fe ca c0 1c 	sub	r10,pc,-16356
800056bc:	59 06       	cp.w	r6,16
800056be:	fe 99 ff dd 	brgt	80005678 <_vfprintf_r+0x1b6c>
800056c2:	0c 09       	add	r9,r6
800056c4:	2f f8       	sub	r8,-1
800056c6:	87 0a       	st.w	r3[0x0],r10
800056c8:	fb 49 06 90 	st.w	sp[1680],r9
800056cc:	87 16       	st.w	r3[0x4],r6
800056ce:	fb 48 06 8c 	st.w	sp[1676],r8
800056d2:	58 78       	cp.w	r8,7
800056d4:	e0 89 00 04 	brgt	800056dc <_vfprintf_r+0x1bd0>
800056d8:	2f 83       	sub	r3,-8
800056da:	c0 b8       	rjmp	800056f0 <_vfprintf_r+0x1be4>
800056dc:	fa ca f9 78 	sub	r10,sp,-1672
800056e0:	02 9b       	mov	r11,r1
800056e2:	08 9c       	mov	r12,r4
800056e4:	fe b0 f2 06 	rcall	80003af0 <__sprint_r>
800056e8:	e0 81 01 91 	brne	80005a0a <_vfprintf_r+0x1efe>
800056ec:	fa c3 f9 e0 	sub	r3,sp,-1568
800056f0:	ed b5 00 00 	bld	r5,0x0
800056f4:	e0 81 01 20 	brne	80005934 <_vfprintf_r+0x1e28>
800056f8:	40 c9       	lddsp	r9,sp[0x30]
800056fa:	fa f8 06 90 	ld.w	r8,sp[1680]
800056fe:	2f f8       	sub	r8,-1
80005700:	87 09       	st.w	r3[0x0],r9
80005702:	fb 48 06 90 	st.w	sp[1680],r8
80005706:	30 19       	mov	r9,1
80005708:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000570c:	87 19       	st.w	r3[0x4],r9
8000570e:	2f f8       	sub	r8,-1
80005710:	fb 48 06 8c 	st.w	sp[1676],r8
80005714:	c0 29       	rjmp	80005918 <_vfprintf_r+0x1e0c>
80005716:	14 09       	add	r9,r10
80005718:	2f f8       	sub	r8,-1
8000571a:	fb 49 06 90 	st.w	sp[1680],r9
8000571e:	87 06       	st.w	r3[0x0],r6
80005720:	87 1a       	st.w	r3[0x4],r10
80005722:	fb 48 06 8c 	st.w	sp[1676],r8
80005726:	58 78       	cp.w	r8,7
80005728:	e0 89 00 04 	brgt	80005730 <_vfprintf_r+0x1c24>
8000572c:	2f 83       	sub	r3,-8
8000572e:	c0 b8       	rjmp	80005744 <_vfprintf_r+0x1c38>
80005730:	fa ca f9 78 	sub	r10,sp,-1672
80005734:	02 9b       	mov	r11,r1
80005736:	08 9c       	mov	r12,r4
80005738:	fe b0 f1 dc 	rcall	80003af0 <__sprint_r>
8000573c:	e0 81 01 67 	brne	80005a0a <_vfprintf_r+0x1efe>
80005740:	fa c3 f9 e0 	sub	r3,sp,-1568
80005744:	40 c8       	lddsp	r8,sp[0x30]
80005746:	87 08       	st.w	r3[0x0],r8
80005748:	fa f8 06 90 	ld.w	r8,sp[1680]
8000574c:	2f f8       	sub	r8,-1
8000574e:	30 19       	mov	r9,1
80005750:	fb 48 06 90 	st.w	sp[1680],r8
80005754:	87 19       	st.w	r3[0x4],r9
80005756:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000575a:	2f f8       	sub	r8,-1
8000575c:	fb 48 06 8c 	st.w	sp[1676],r8
80005760:	fa f2 06 ac 	ld.w	r2,sp[1708]
80005764:	58 78       	cp.w	r8,7
80005766:	e0 89 00 04 	brgt	8000576e <_vfprintf_r+0x1c62>
8000576a:	2f 83       	sub	r3,-8
8000576c:	c0 b8       	rjmp	80005782 <_vfprintf_r+0x1c76>
8000576e:	fa ca f9 78 	sub	r10,sp,-1672
80005772:	02 9b       	mov	r11,r1
80005774:	08 9c       	mov	r12,r4
80005776:	fe b0 f1 bd 	rcall	80003af0 <__sprint_r>
8000577a:	e0 81 01 48 	brne	80005a0a <_vfprintf_r+0x1efe>
8000577e:	fa c3 f9 e0 	sub	r3,sp,-1568
80005782:	04 06       	add	r6,r2
80005784:	fa f8 06 ac 	ld.w	r8,sp[1708]
80005788:	87 06       	st.w	r3[0x0],r6
8000578a:	fa f9 06 90 	ld.w	r9,sp[1680]
8000578e:	40 66       	lddsp	r6,sp[0x18]
80005790:	40 6e       	lddsp	lr,sp[0x18]
80005792:	10 16       	sub	r6,r8
80005794:	f2 08 01 08 	sub	r8,r9,r8
80005798:	87 16       	st.w	r3[0x4],r6
8000579a:	1c 08       	add	r8,lr
8000579c:	fb 48 06 90 	st.w	sp[1680],r8
800057a0:	fa f8 06 8c 	ld.w	r8,sp[1676]
800057a4:	2f f8       	sub	r8,-1
800057a6:	fb 48 06 8c 	st.w	sp[1676],r8
800057aa:	cb 78       	rjmp	80005918 <_vfprintf_r+0x1e0c>
800057ac:	40 6c       	lddsp	r12,sp[0x18]
800057ae:	58 1c       	cp.w	r12,1
800057b0:	e0 89 00 06 	brgt	800057bc <_vfprintf_r+0x1cb0>
800057b4:	ed b5 00 00 	bld	r5,0x0
800057b8:	e0 81 00 85 	brne	800058c2 <_vfprintf_r+0x1db6>
800057bc:	fa f8 06 90 	ld.w	r8,sp[1680]
800057c0:	2f f8       	sub	r8,-1
800057c2:	30 19       	mov	r9,1
800057c4:	fb 48 06 90 	st.w	sp[1680],r8
800057c8:	87 06       	st.w	r3[0x0],r6
800057ca:	fa f8 06 8c 	ld.w	r8,sp[1676]
800057ce:	87 19       	st.w	r3[0x4],r9
800057d0:	2f f8       	sub	r8,-1
800057d2:	fb 48 06 8c 	st.w	sp[1676],r8
800057d6:	58 78       	cp.w	r8,7
800057d8:	e0 89 00 04 	brgt	800057e0 <_vfprintf_r+0x1cd4>
800057dc:	2f 83       	sub	r3,-8
800057de:	c0 b8       	rjmp	800057f4 <_vfprintf_r+0x1ce8>
800057e0:	fa ca f9 78 	sub	r10,sp,-1672
800057e4:	02 9b       	mov	r11,r1
800057e6:	08 9c       	mov	r12,r4
800057e8:	fe b0 f1 84 	rcall	80003af0 <__sprint_r>
800057ec:	e0 81 01 0f 	brne	80005a0a <_vfprintf_r+0x1efe>
800057f0:	fa c3 f9 e0 	sub	r3,sp,-1568
800057f4:	fa f8 06 90 	ld.w	r8,sp[1680]
800057f8:	2f f8       	sub	r8,-1
800057fa:	40 cb       	lddsp	r11,sp[0x30]
800057fc:	fb 48 06 90 	st.w	sp[1680],r8
80005800:	30 19       	mov	r9,1
80005802:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005806:	87 0b       	st.w	r3[0x0],r11
80005808:	2f f8       	sub	r8,-1
8000580a:	87 19       	st.w	r3[0x4],r9
8000580c:	fb 48 06 8c 	st.w	sp[1676],r8
80005810:	58 78       	cp.w	r8,7
80005812:	e0 89 00 05 	brgt	8000581c <_vfprintf_r+0x1d10>
80005816:	2f 83       	sub	r3,-8
80005818:	c0 c8       	rjmp	80005830 <_vfprintf_r+0x1d24>
8000581a:	d7 03       	nop
8000581c:	fa ca f9 78 	sub	r10,sp,-1672
80005820:	02 9b       	mov	r11,r1
80005822:	08 9c       	mov	r12,r4
80005824:	fe b0 f1 66 	rcall	80003af0 <__sprint_r>
80005828:	e0 81 00 f1 	brne	80005a0a <_vfprintf_r+0x1efe>
8000582c:	fa c3 f9 e0 	sub	r3,sp,-1568
80005830:	30 08       	mov	r8,0
80005832:	30 09       	mov	r9,0
80005834:	40 5b       	lddsp	r11,sp[0x14]
80005836:	40 7a       	lddsp	r10,sp[0x1c]
80005838:	e0 a0 17 3d 	rcall	800086b2 <__avr32_f64_cmp_eq>
8000583c:	40 68       	lddsp	r8,sp[0x18]
8000583e:	20 18       	sub	r8,1
80005840:	58 0c       	cp.w	r12,0
80005842:	c0 d1       	brne	8000585c <_vfprintf_r+0x1d50>
80005844:	2f f6       	sub	r6,-1
80005846:	87 18       	st.w	r3[0x4],r8
80005848:	87 06       	st.w	r3[0x0],r6
8000584a:	fa f6 06 90 	ld.w	r6,sp[1680]
8000584e:	10 06       	add	r6,r8
80005850:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005854:	fb 46 06 90 	st.w	sp[1680],r6
80005858:	2f f8       	sub	r8,-1
8000585a:	c3 18       	rjmp	800058bc <_vfprintf_r+0x1db0>
8000585c:	10 96       	mov	r6,r8
8000585e:	58 08       	cp.w	r8,0
80005860:	e0 89 00 1c 	brgt	80005898 <_vfprintf_r+0x1d8c>
80005864:	c4 b8       	rjmp	800058fa <_vfprintf_r+0x1dee>
80005866:	2f 09       	sub	r9,-16
80005868:	2f f8       	sub	r8,-1
8000586a:	fb 49 06 90 	st.w	sp[1680],r9
8000586e:	87 02       	st.w	r3[0x0],r2
80005870:	87 10       	st.w	r3[0x4],r0
80005872:	fb 48 06 8c 	st.w	sp[1676],r8
80005876:	58 78       	cp.w	r8,7
80005878:	e0 89 00 04 	brgt	80005880 <_vfprintf_r+0x1d74>
8000587c:	2f 83       	sub	r3,-8
8000587e:	c0 b8       	rjmp	80005894 <_vfprintf_r+0x1d88>
80005880:	fa ca f9 78 	sub	r10,sp,-1672
80005884:	02 9b       	mov	r11,r1
80005886:	08 9c       	mov	r12,r4
80005888:	fe b0 f1 34 	rcall	80003af0 <__sprint_r>
8000588c:	e0 81 00 bf 	brne	80005a0a <_vfprintf_r+0x1efe>
80005890:	fa c3 f9 e0 	sub	r3,sp,-1568
80005894:	21 06       	sub	r6,16
80005896:	c0 48       	rjmp	8000589e <_vfprintf_r+0x1d92>
80005898:	fe c2 c1 fc 	sub	r2,pc,-15876
8000589c:	31 00       	mov	r0,16
8000589e:	fa f9 06 90 	ld.w	r9,sp[1680]
800058a2:	fa f8 06 8c 	ld.w	r8,sp[1676]
800058a6:	fe ca c2 0a 	sub	r10,pc,-15862
800058aa:	59 06       	cp.w	r6,16
800058ac:	fe 99 ff dd 	brgt	80005866 <_vfprintf_r+0x1d5a>
800058b0:	0c 09       	add	r9,r6
800058b2:	87 0a       	st.w	r3[0x0],r10
800058b4:	fb 49 06 90 	st.w	sp[1680],r9
800058b8:	2f f8       	sub	r8,-1
800058ba:	87 16       	st.w	r3[0x4],r6
800058bc:	fb 48 06 8c 	st.w	sp[1676],r8
800058c0:	c0 e8       	rjmp	800058dc <_vfprintf_r+0x1dd0>
800058c2:	fa f8 06 90 	ld.w	r8,sp[1680]
800058c6:	2f f8       	sub	r8,-1
800058c8:	30 19       	mov	r9,1
800058ca:	fb 48 06 90 	st.w	sp[1680],r8
800058ce:	87 06       	st.w	r3[0x0],r6
800058d0:	fa f8 06 8c 	ld.w	r8,sp[1676]
800058d4:	87 19       	st.w	r3[0x4],r9
800058d6:	2f f8       	sub	r8,-1
800058d8:	fb 48 06 8c 	st.w	sp[1676],r8
800058dc:	58 78       	cp.w	r8,7
800058de:	e0 89 00 04 	brgt	800058e6 <_vfprintf_r+0x1dda>
800058e2:	2f 83       	sub	r3,-8
800058e4:	c0 b8       	rjmp	800058fa <_vfprintf_r+0x1dee>
800058e6:	fa ca f9 78 	sub	r10,sp,-1672
800058ea:	02 9b       	mov	r11,r1
800058ec:	08 9c       	mov	r12,r4
800058ee:	fe b0 f1 01 	rcall	80003af0 <__sprint_r>
800058f2:	e0 81 00 8c 	brne	80005a0a <_vfprintf_r+0x1efe>
800058f6:	fa c3 f9 e0 	sub	r3,sp,-1568
800058fa:	40 ea       	lddsp	r10,sp[0x38]
800058fc:	fa f8 06 90 	ld.w	r8,sp[1680]
80005900:	14 08       	add	r8,r10
80005902:	fa c9 f9 64 	sub	r9,sp,-1692
80005906:	fb 48 06 90 	st.w	sp[1680],r8
8000590a:	87 1a       	st.w	r3[0x4],r10
8000590c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005910:	87 09       	st.w	r3[0x0],r9
80005912:	2f f8       	sub	r8,-1
80005914:	fb 48 06 8c 	st.w	sp[1676],r8
80005918:	58 78       	cp.w	r8,7
8000591a:	e0 89 00 04 	brgt	80005922 <_vfprintf_r+0x1e16>
8000591e:	2f 83       	sub	r3,-8
80005920:	c0 a8       	rjmp	80005934 <_vfprintf_r+0x1e28>
80005922:	fa ca f9 78 	sub	r10,sp,-1672
80005926:	02 9b       	mov	r11,r1
80005928:	08 9c       	mov	r12,r4
8000592a:	fe b0 f0 e3 	rcall	80003af0 <__sprint_r>
8000592e:	c6 e1       	brne	80005a0a <_vfprintf_r+0x1efe>
80005930:	fa c3 f9 e0 	sub	r3,sp,-1568
80005934:	e2 15 00 04 	andl	r5,0x4,COH
80005938:	c3 f0       	breq	800059b6 <_vfprintf_r+0x1eaa>
8000593a:	40 86       	lddsp	r6,sp[0x20]
8000593c:	40 39       	lddsp	r9,sp[0xc]
8000593e:	12 16       	sub	r6,r9
80005940:	58 06       	cp.w	r6,0
80005942:	e0 89 00 1a 	brgt	80005976 <_vfprintf_r+0x1e6a>
80005946:	c3 88       	rjmp	800059b6 <_vfprintf_r+0x1eaa>
80005948:	2f 09       	sub	r9,-16
8000594a:	2f f8       	sub	r8,-1
8000594c:	fb 49 06 90 	st.w	sp[1680],r9
80005950:	87 05       	st.w	r3[0x0],r5
80005952:	87 12       	st.w	r3[0x4],r2
80005954:	fb 48 06 8c 	st.w	sp[1676],r8
80005958:	58 78       	cp.w	r8,7
8000595a:	e0 89 00 04 	brgt	80005962 <_vfprintf_r+0x1e56>
8000595e:	2f 83       	sub	r3,-8
80005960:	c0 98       	rjmp	80005972 <_vfprintf_r+0x1e66>
80005962:	00 9a       	mov	r10,r0
80005964:	02 9b       	mov	r11,r1
80005966:	08 9c       	mov	r12,r4
80005968:	fe b0 f0 c4 	rcall	80003af0 <__sprint_r>
8000596c:	c4 f1       	brne	80005a0a <_vfprintf_r+0x1efe>
8000596e:	fa c3 f9 e0 	sub	r3,sp,-1568
80005972:	21 06       	sub	r6,16
80005974:	c0 68       	rjmp	80005980 <_vfprintf_r+0x1e74>
80005976:	fe c5 c2 ea 	sub	r5,pc,-15638
8000597a:	31 02       	mov	r2,16
8000597c:	fa c0 f9 78 	sub	r0,sp,-1672
80005980:	fa f9 06 90 	ld.w	r9,sp[1680]
80005984:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005988:	fe ca c2 fc 	sub	r10,pc,-15620
8000598c:	59 06       	cp.w	r6,16
8000598e:	fe 99 ff dd 	brgt	80005948 <_vfprintf_r+0x1e3c>
80005992:	0c 09       	add	r9,r6
80005994:	2f f8       	sub	r8,-1
80005996:	87 0a       	st.w	r3[0x0],r10
80005998:	87 16       	st.w	r3[0x4],r6
8000599a:	fb 49 06 90 	st.w	sp[1680],r9
8000599e:	fb 48 06 8c 	st.w	sp[1676],r8
800059a2:	58 78       	cp.w	r8,7
800059a4:	e0 8a 00 09 	brle	800059b6 <_vfprintf_r+0x1eaa>
800059a8:	fa ca f9 78 	sub	r10,sp,-1672
800059ac:	02 9b       	mov	r11,r1
800059ae:	08 9c       	mov	r12,r4
800059b0:	fe b0 f0 a0 	rcall	80003af0 <__sprint_r>
800059b4:	c2 b1       	brne	80005a0a <_vfprintf_r+0x1efe>
800059b6:	40 bc       	lddsp	r12,sp[0x2c]
800059b8:	40 36       	lddsp	r6,sp[0xc]
800059ba:	40 8e       	lddsp	lr,sp[0x20]
800059bc:	ec 0e 0c 48 	max	r8,r6,lr
800059c0:	10 0c       	add	r12,r8
800059c2:	50 bc       	stdsp	sp[0x2c],r12
800059c4:	fa f8 06 90 	ld.w	r8,sp[1680]
800059c8:	58 08       	cp.w	r8,0
800059ca:	c0 80       	breq	800059da <_vfprintf_r+0x1ece>
800059cc:	fa ca f9 78 	sub	r10,sp,-1672
800059d0:	02 9b       	mov	r11,r1
800059d2:	08 9c       	mov	r12,r4
800059d4:	fe b0 f0 8e 	rcall	80003af0 <__sprint_r>
800059d8:	c1 91       	brne	80005a0a <_vfprintf_r+0x1efe>
800059da:	30 0b       	mov	r11,0
800059dc:	fa c3 f9 e0 	sub	r3,sp,-1568
800059e0:	fb 4b 06 8c 	st.w	sp[1676],r11
800059e4:	fe 9f f1 22 	bral	80003c28 <_vfprintf_r+0x11c>
800059e8:	08 95       	mov	r5,r4
800059ea:	fa f8 06 90 	ld.w	r8,sp[1680]
800059ee:	58 08       	cp.w	r8,0
800059f0:	c0 80       	breq	80005a00 <_vfprintf_r+0x1ef4>
800059f2:	08 9c       	mov	r12,r4
800059f4:	fa ca f9 78 	sub	r10,sp,-1672
800059f8:	02 9b       	mov	r11,r1
800059fa:	fe b0 f0 7b 	rcall	80003af0 <__sprint_r>
800059fe:	c0 61       	brne	80005a0a <_vfprintf_r+0x1efe>
80005a00:	30 08       	mov	r8,0
80005a02:	fb 48 06 8c 	st.w	sp[1676],r8
80005a06:	c0 28       	rjmp	80005a0a <_vfprintf_r+0x1efe>
80005a08:	40 41       	lddsp	r1,sp[0x10]
80005a0a:	82 68       	ld.sh	r8,r1[0xc]
80005a0c:	ed b8 00 06 	bld	r8,0x6
80005a10:	c0 31       	brne	80005a16 <_vfprintf_r+0x1f0a>
80005a12:	3f fa       	mov	r10,-1
80005a14:	50 ba       	stdsp	sp[0x2c],r10
80005a16:	40 bc       	lddsp	r12,sp[0x2c]
80005a18:	fe 3d f9 44 	sub	sp,-1724
80005a1c:	d8 32       	popm	r0-r7,pc
80005a1e:	d7 03       	nop

80005a20 <__swsetup_r>:
80005a20:	d4 21       	pushm	r4-r7,lr
80005a22:	e0 68 01 04 	mov	r8,260
80005a26:	18 96       	mov	r6,r12
80005a28:	16 97       	mov	r7,r11
80005a2a:	70 0c       	ld.w	r12,r8[0x0]
80005a2c:	58 0c       	cp.w	r12,0
80005a2e:	c0 60       	breq	80005a3a <__swsetup_r+0x1a>
80005a30:	78 68       	ld.w	r8,r12[0x18]
80005a32:	58 08       	cp.w	r8,0
80005a34:	c0 31       	brne	80005a3a <__swsetup_r+0x1a>
80005a36:	e0 a0 07 b9 	rcall	800069a8 <__sinit>
80005a3a:	fe c8 c2 7e 	sub	r8,pc,-15746
80005a3e:	10 37       	cp.w	r7,r8
80005a40:	c0 61       	brne	80005a4c <__swsetup_r+0x2c>
80005a42:	e0 68 01 04 	mov	r8,260
80005a46:	70 08       	ld.w	r8,r8[0x0]
80005a48:	70 07       	ld.w	r7,r8[0x0]
80005a4a:	c1 28       	rjmp	80005a6e <__swsetup_r+0x4e>
80005a4c:	fe c8 c2 70 	sub	r8,pc,-15760
80005a50:	10 37       	cp.w	r7,r8
80005a52:	c0 61       	brne	80005a5e <__swsetup_r+0x3e>
80005a54:	e0 68 01 04 	mov	r8,260
80005a58:	70 08       	ld.w	r8,r8[0x0]
80005a5a:	70 17       	ld.w	r7,r8[0x4]
80005a5c:	c0 98       	rjmp	80005a6e <__swsetup_r+0x4e>
80005a5e:	fe c8 c2 62 	sub	r8,pc,-15774
80005a62:	10 37       	cp.w	r7,r8
80005a64:	c0 51       	brne	80005a6e <__swsetup_r+0x4e>
80005a66:	e0 68 01 04 	mov	r8,260
80005a6a:	70 08       	ld.w	r8,r8[0x0]
80005a6c:	70 27       	ld.w	r7,r8[0x8]
80005a6e:	8e 68       	ld.sh	r8,r7[0xc]
80005a70:	ed b8 00 03 	bld	r8,0x3
80005a74:	c1 e0       	breq	80005ab0 <__swsetup_r+0x90>
80005a76:	ed b8 00 04 	bld	r8,0x4
80005a7a:	c3 e1       	brne	80005af6 <__swsetup_r+0xd6>
80005a7c:	ed b8 00 02 	bld	r8,0x2
80005a80:	c1 51       	brne	80005aaa <__swsetup_r+0x8a>
80005a82:	6e db       	ld.w	r11,r7[0x34]
80005a84:	58 0b       	cp.w	r11,0
80005a86:	c0 a0       	breq	80005a9a <__swsetup_r+0x7a>
80005a88:	ee c8 ff bc 	sub	r8,r7,-68
80005a8c:	10 3b       	cp.w	r11,r8
80005a8e:	c0 40       	breq	80005a96 <__swsetup_r+0x76>
80005a90:	0c 9c       	mov	r12,r6
80005a92:	e0 a0 08 25 	rcall	80006adc <_free_r>
80005a96:	30 08       	mov	r8,0
80005a98:	8f d8       	st.w	r7[0x34],r8
80005a9a:	8e 68       	ld.sh	r8,r7[0xc]
80005a9c:	e0 18 ff db 	andl	r8,0xffdb
80005aa0:	ae 68       	st.h	r7[0xc],r8
80005aa2:	30 08       	mov	r8,0
80005aa4:	8f 18       	st.w	r7[0x4],r8
80005aa6:	6e 48       	ld.w	r8,r7[0x10]
80005aa8:	8f 08       	st.w	r7[0x0],r8
80005aaa:	8e 68       	ld.sh	r8,r7[0xc]
80005aac:	a3 b8       	sbr	r8,0x3
80005aae:	ae 68       	st.h	r7[0xc],r8
80005ab0:	6e 48       	ld.w	r8,r7[0x10]
80005ab2:	58 08       	cp.w	r8,0
80005ab4:	c0 b1       	brne	80005aca <__swsetup_r+0xaa>
80005ab6:	8e 68       	ld.sh	r8,r7[0xc]
80005ab8:	e2 18 02 80 	andl	r8,0x280,COH
80005abc:	e0 48 02 00 	cp.w	r8,512
80005ac0:	c0 50       	breq	80005aca <__swsetup_r+0xaa>
80005ac2:	0c 9c       	mov	r12,r6
80005ac4:	0e 9b       	mov	r11,r7
80005ac6:	e0 a0 0a 4b 	rcall	80006f5c <__smakebuf_r>
80005aca:	8e 69       	ld.sh	r9,r7[0xc]
80005acc:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
80005ad0:	c0 70       	breq	80005ade <__swsetup_r+0xbe>
80005ad2:	30 08       	mov	r8,0
80005ad4:	8f 28       	st.w	r7[0x8],r8
80005ad6:	6e 58       	ld.w	r8,r7[0x14]
80005ad8:	5c 38       	neg	r8
80005ada:	8f 68       	st.w	r7[0x18],r8
80005adc:	c0 68       	rjmp	80005ae8 <__swsetup_r+0xc8>
80005ade:	ed b9 00 01 	bld	r9,0x1
80005ae2:	ef f8 10 05 	ld.wne	r8,r7[0x14]
80005ae6:	8f 28       	st.w	r7[0x8],r8
80005ae8:	6e 48       	ld.w	r8,r7[0x10]
80005aea:	58 08       	cp.w	r8,0
80005aec:	c0 61       	brne	80005af8 <__swsetup_r+0xd8>
80005aee:	8e 68       	ld.sh	r8,r7[0xc]
80005af0:	ed b8 00 07 	bld	r8,0x7
80005af4:	c0 21       	brne	80005af8 <__swsetup_r+0xd8>
80005af6:	dc 2a       	popm	r4-r7,pc,r12=-1
80005af8:	d8 2a       	popm	r4-r7,pc,r12=0
80005afa:	d7 03       	nop

80005afc <quorem>:
80005afc:	d4 31       	pushm	r0-r7,lr
80005afe:	20 2d       	sub	sp,8
80005b00:	18 97       	mov	r7,r12
80005b02:	78 48       	ld.w	r8,r12[0x10]
80005b04:	76 46       	ld.w	r6,r11[0x10]
80005b06:	0c 38       	cp.w	r8,r6
80005b08:	c0 34       	brge	80005b0e <quorem+0x12>
80005b0a:	30 0c       	mov	r12,0
80005b0c:	c8 58       	rjmp	80005c16 <quorem+0x11a>
80005b0e:	ec c2 ff fc 	sub	r2,r6,-4
80005b12:	f6 c3 ff ec 	sub	r3,r11,-20
80005b16:	f6 02 03 29 	ld.w	r9,r11[r2<<0x2]
80005b1a:	f8 02 03 2c 	ld.w	r12,r12[r2<<0x2]
80005b1e:	2f f9       	sub	r9,-1
80005b20:	20 16       	sub	r6,1
80005b22:	f8 09 0d 08 	divu	r8,r12,r9
80005b26:	f6 02 00 22 	add	r2,r11,r2<<0x2
80005b2a:	ee c4 ff ec 	sub	r4,r7,-20
80005b2e:	10 95       	mov	r5,r8
80005b30:	58 08       	cp.w	r8,0
80005b32:	c4 10       	breq	80005bb4 <quorem+0xb8>
80005b34:	30 09       	mov	r9,0
80005b36:	06 9a       	mov	r10,r3
80005b38:	08 98       	mov	r8,r4
80005b3a:	12 91       	mov	r1,r9
80005b3c:	50 0b       	stdsp	sp[0x0],r11
80005b3e:	70 0e       	ld.w	lr,r8[0x0]
80005b40:	b1 8e       	lsr	lr,0x10
80005b42:	50 1e       	stdsp	sp[0x4],lr
80005b44:	15 0e       	ld.w	lr,r10++
80005b46:	fc 00 16 10 	lsr	r0,lr,0x10
80005b4a:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80005b4e:	ea 0e 03 41 	mac	r1,r5,lr
80005b52:	fd d1 c0 10 	bfextu	lr,r1,0x0,0x10
80005b56:	b1 81       	lsr	r1,0x10
80005b58:	40 1b       	lddsp	r11,sp[0x4]
80005b5a:	ea 00 02 40 	mul	r0,r5,r0
80005b5e:	e2 00 00 00 	add	r0,r1,r0
80005b62:	e3 d0 c0 10 	bfextu	r1,r0,0x0,0x10
80005b66:	02 1b       	sub	r11,r1
80005b68:	50 1b       	stdsp	sp[0x4],r11
80005b6a:	70 0b       	ld.w	r11,r8[0x0]
80005b6c:	e3 db c0 10 	bfextu	r1,r11,0x0,0x10
80005b70:	02 09       	add	r9,r1
80005b72:	f2 0e 01 0e 	sub	lr,r9,lr
80005b76:	b0 1e       	st.h	r8[0x2],lr
80005b78:	fc 09 14 10 	asr	r9,lr,0x10
80005b7c:	40 1e       	lddsp	lr,sp[0x4]
80005b7e:	fc 09 00 09 	add	r9,lr,r9
80005b82:	b0 09       	st.h	r8[0x0],r9
80005b84:	e0 01 16 10 	lsr	r1,r0,0x10
80005b88:	2f c8       	sub	r8,-4
80005b8a:	b1 49       	asr	r9,0x10
80005b8c:	04 3a       	cp.w	r10,r2
80005b8e:	fe 98 ff d8 	brls	80005b3e <quorem+0x42>
80005b92:	40 0b       	lddsp	r11,sp[0x0]
80005b94:	58 0c       	cp.w	r12,0
80005b96:	c0 f1       	brne	80005bb4 <quorem+0xb8>
80005b98:	ec c8 ff fb 	sub	r8,r6,-5
80005b9c:	ee 08 00 28 	add	r8,r7,r8<<0x2
80005ba0:	c0 28       	rjmp	80005ba4 <quorem+0xa8>
80005ba2:	20 16       	sub	r6,1
80005ba4:	20 48       	sub	r8,4
80005ba6:	08 38       	cp.w	r8,r4
80005ba8:	e0 88 00 05 	brls	80005bb2 <quorem+0xb6>
80005bac:	70 09       	ld.w	r9,r8[0x0]
80005bae:	58 09       	cp.w	r9,0
80005bb0:	cf 90       	breq	80005ba2 <quorem+0xa6>
80005bb2:	8f 46       	st.w	r7[0x10],r6
80005bb4:	0e 9c       	mov	r12,r7
80005bb6:	e0 a0 0c fb 	rcall	800075ac <__mcmp>
80005bba:	c2 d5       	brlt	80005c14 <quorem+0x118>
80005bbc:	2f f5       	sub	r5,-1
80005bbe:	08 98       	mov	r8,r4
80005bc0:	30 09       	mov	r9,0
80005bc2:	07 0b       	ld.w	r11,r3++
80005bc4:	f6 0a 16 10 	lsr	r10,r11,0x10
80005bc8:	70 0c       	ld.w	r12,r8[0x0]
80005bca:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80005bce:	f8 0e 16 10 	lsr	lr,r12,0x10
80005bd2:	14 1e       	sub	lr,r10
80005bd4:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
80005bd8:	16 1a       	sub	r10,r11
80005bda:	12 0a       	add	r10,r9
80005bdc:	b0 1a       	st.h	r8[0x2],r10
80005bde:	b1 4a       	asr	r10,0x10
80005be0:	fc 0a 00 09 	add	r9,lr,r10
80005be4:	b0 09       	st.h	r8[0x0],r9
80005be6:	2f c8       	sub	r8,-4
80005be8:	b1 49       	asr	r9,0x10
80005bea:	04 33       	cp.w	r3,r2
80005bec:	fe 98 ff eb 	brls	80005bc2 <quorem+0xc6>
80005bf0:	ec c8 ff fb 	sub	r8,r6,-5
80005bf4:	ee 08 03 29 	ld.w	r9,r7[r8<<0x2]
80005bf8:	58 09       	cp.w	r9,0
80005bfa:	c0 d1       	brne	80005c14 <quorem+0x118>
80005bfc:	ee 08 00 28 	add	r8,r7,r8<<0x2
80005c00:	c0 28       	rjmp	80005c04 <quorem+0x108>
80005c02:	20 16       	sub	r6,1
80005c04:	20 48       	sub	r8,4
80005c06:	08 38       	cp.w	r8,r4
80005c08:	e0 88 00 05 	brls	80005c12 <quorem+0x116>
80005c0c:	70 09       	ld.w	r9,r8[0x0]
80005c0e:	58 09       	cp.w	r9,0
80005c10:	cf 90       	breq	80005c02 <quorem+0x106>
80005c12:	8f 46       	st.w	r7[0x10],r6
80005c14:	0a 9c       	mov	r12,r5
80005c16:	2f ed       	sub	sp,-8
80005c18:	d8 32       	popm	r0-r7,pc
80005c1a:	d7 03       	nop

80005c1c <_dtoa_r>:
80005c1c:	d4 31       	pushm	r0-r7,lr
80005c1e:	21 ad       	sub	sp,104
80005c20:	fa c4 ff 74 	sub	r4,sp,-140
80005c24:	18 97       	mov	r7,r12
80005c26:	16 95       	mov	r5,r11
80005c28:	68 2c       	ld.w	r12,r4[0x8]
80005c2a:	50 c9       	stdsp	sp[0x30],r9
80005c2c:	68 16       	ld.w	r6,r4[0x4]
80005c2e:	68 09       	ld.w	r9,r4[0x0]
80005c30:	50 e8       	stdsp	sp[0x38],r8
80005c32:	14 94       	mov	r4,r10
80005c34:	51 2c       	stdsp	sp[0x48],r12
80005c36:	fa e5 00 08 	st.d	sp[8],r4
80005c3a:	51 59       	stdsp	sp[0x54],r9
80005c3c:	6e 95       	ld.w	r5,r7[0x24]
80005c3e:	58 05       	cp.w	r5,0
80005c40:	c0 91       	brne	80005c52 <_dtoa_r+0x36>
80005c42:	31 0c       	mov	r12,16
80005c44:	e0 a0 09 ea 	rcall	80007018 <malloc>
80005c48:	99 35       	st.w	r12[0xc],r5
80005c4a:	8f 9c       	st.w	r7[0x24],r12
80005c4c:	99 15       	st.w	r12[0x4],r5
80005c4e:	99 25       	st.w	r12[0x8],r5
80005c50:	99 05       	st.w	r12[0x0],r5
80005c52:	6e 99       	ld.w	r9,r7[0x24]
80005c54:	72 08       	ld.w	r8,r9[0x0]
80005c56:	58 08       	cp.w	r8,0
80005c58:	c0 f0       	breq	80005c76 <_dtoa_r+0x5a>
80005c5a:	72 1a       	ld.w	r10,r9[0x4]
80005c5c:	91 1a       	st.w	r8[0x4],r10
80005c5e:	30 1a       	mov	r10,1
80005c60:	72 19       	ld.w	r9,r9[0x4]
80005c62:	f4 09 09 49 	lsl	r9,r10,r9
80005c66:	10 9b       	mov	r11,r8
80005c68:	91 29       	st.w	r8[0x8],r9
80005c6a:	0e 9c       	mov	r12,r7
80005c6c:	e0 a0 0c ba 	rcall	800075e0 <_Bfree>
80005c70:	6e 98       	ld.w	r8,r7[0x24]
80005c72:	30 09       	mov	r9,0
80005c74:	91 09       	st.w	r8[0x0],r9
80005c76:	40 28       	lddsp	r8,sp[0x8]
80005c78:	10 94       	mov	r4,r8
80005c7a:	58 08       	cp.w	r8,0
80005c7c:	c0 64       	brge	80005c88 <_dtoa_r+0x6c>
80005c7e:	f1 d8 c0 1f 	bfextu	r8,r8,0x0,0x1f
80005c82:	50 28       	stdsp	sp[0x8],r8
80005c84:	30 18       	mov	r8,1
80005c86:	c0 28       	rjmp	80005c8a <_dtoa_r+0x6e>
80005c88:	30 08       	mov	r8,0
80005c8a:	8d 08       	st.w	r6[0x0],r8
80005c8c:	fc 1c 7f f0 	movh	r12,0x7ff0
80005c90:	40 26       	lddsp	r6,sp[0x8]
80005c92:	0c 98       	mov	r8,r6
80005c94:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80005c98:	18 38       	cp.w	r8,r12
80005c9a:	c2 01       	brne	80005cda <_dtoa_r+0xbe>
80005c9c:	e0 68 27 0f 	mov	r8,9999
80005ca0:	41 5b       	lddsp	r11,sp[0x54]
80005ca2:	97 08       	st.w	r11[0x0],r8
80005ca4:	40 3a       	lddsp	r10,sp[0xc]
80005ca6:	58 0a       	cp.w	r10,0
80005ca8:	c0 71       	brne	80005cb6 <_dtoa_r+0x9a>
80005caa:	ed d6 c0 14 	bfextu	r6,r6,0x0,0x14
80005cae:	c0 41       	brne	80005cb6 <_dtoa_r+0x9a>
80005cb0:	fe cc c5 04 	sub	r12,pc,-15100
80005cb4:	c0 38       	rjmp	80005cba <_dtoa_r+0x9e>
80005cb6:	fe cc c4 fe 	sub	r12,pc,-15106
80005cba:	41 29       	lddsp	r9,sp[0x48]
80005cbc:	58 09       	cp.w	r9,0
80005cbe:	e0 80 05 9a 	breq	800067f2 <_dtoa_r+0xbd6>
80005cc2:	f8 c8 ff fd 	sub	r8,r12,-3
80005cc6:	f8 c9 ff f8 	sub	r9,r12,-8
80005cca:	11 8b       	ld.ub	r11,r8[0x0]
80005ccc:	30 0a       	mov	r10,0
80005cce:	41 25       	lddsp	r5,sp[0x48]
80005cd0:	f4 0b 18 00 	cp.b	r11,r10
80005cd4:	f2 08 17 10 	movne	r8,r9
80005cd8:	c1 68       	rjmp	80005d04 <_dtoa_r+0xe8>
80005cda:	fa ea 00 08 	ld.d	r10,sp[8]
80005cde:	30 08       	mov	r8,0
80005ce0:	fa eb 00 3c 	st.d	sp[60],r10
80005ce4:	30 09       	mov	r9,0
80005ce6:	e0 a0 14 e6 	rcall	800086b2 <__avr32_f64_cmp_eq>
80005cea:	c1 00       	breq	80005d0a <_dtoa_r+0xee>
80005cec:	30 18       	mov	r8,1
80005cee:	41 5a       	lddsp	r10,sp[0x54]
80005cf0:	95 08       	st.w	r10[0x0],r8
80005cf2:	fe cc c6 6a 	sub	r12,pc,-14742
80005cf6:	41 29       	lddsp	r9,sp[0x48]
80005cf8:	f8 08 00 08 	add	r8,r12,r8
80005cfc:	58 09       	cp.w	r9,0
80005cfe:	e0 80 05 7a 	breq	800067f2 <_dtoa_r+0xbd6>
80005d02:	12 95       	mov	r5,r9
80005d04:	8b 08       	st.w	r5[0x0],r8
80005d06:	e0 8f 05 76 	bral	800067f2 <_dtoa_r+0xbd6>
80005d0a:	fa c8 ff 9c 	sub	r8,sp,-100
80005d0e:	fa c9 ff a0 	sub	r9,sp,-96
80005d12:	fa ea 00 3c 	ld.d	r10,sp[60]
80005d16:	0e 9c       	mov	r12,r7
80005d18:	eb d6 c2 8b 	bfextu	r5,r6,0x14,0xb
80005d1c:	e0 a0 0c b4 	rcall	80007684 <__d2b>
80005d20:	18 93       	mov	r3,r12
80005d22:	58 05       	cp.w	r5,0
80005d24:	c0 d0       	breq	80005d3e <_dtoa_r+0x122>
80005d26:	fa ea 00 3c 	ld.d	r10,sp[60]
80005d2a:	30 04       	mov	r4,0
80005d2c:	f1 db c0 14 	bfextu	r8,r11,0x0,0x14
80005d30:	ea c5 03 ff 	sub	r5,r5,1023
80005d34:	10 9b       	mov	r11,r8
80005d36:	51 74       	stdsp	sp[0x5c],r4
80005d38:	ea 1b 3f f0 	orh	r11,0x3ff0
80005d3c:	c2 58       	rjmp	80005d86 <_dtoa_r+0x16a>
80005d3e:	41 88       	lddsp	r8,sp[0x60]
80005d40:	41 9c       	lddsp	r12,sp[0x64]
80005d42:	10 0c       	add	r12,r8
80005d44:	f8 c5 fb ce 	sub	r5,r12,-1074
80005d48:	e0 45 00 20 	cp.w	r5,32
80005d4c:	e0 8a 00 0e 	brle	80005d68 <_dtoa_r+0x14c>
80005d50:	f8 cc fb ee 	sub	r12,r12,-1042
80005d54:	40 3b       	lddsp	r11,sp[0xc]
80005d56:	ea 08 11 40 	rsub	r8,r5,64
80005d5a:	f6 0c 0a 4c 	lsr	r12,r11,r12
80005d5e:	ec 08 09 46 	lsl	r6,r6,r8
80005d62:	0c 4c       	or	r12,r6
80005d64:	c0 78       	rjmp	80005d72 <_dtoa_r+0x156>
80005d66:	d7 03       	nop
80005d68:	ea 0c 11 20 	rsub	r12,r5,32
80005d6c:	40 3a       	lddsp	r10,sp[0xc]
80005d6e:	f4 0c 09 4c 	lsl	r12,r10,r12
80005d72:	e0 a0 14 2c 	rcall	800085ca <__avr32_u32_to_f64>
80005d76:	fc 18 fe 10 	movh	r8,0xfe10
80005d7a:	30 19       	mov	r9,1
80005d7c:	ea c5 04 33 	sub	r5,r5,1075
80005d80:	f0 0b 00 0b 	add	r11,r8,r11
80005d84:	51 79       	stdsp	sp[0x5c],r9
80005d86:	30 08       	mov	r8,0
80005d88:	fc 19 3f f8 	movh	r9,0x3ff8
80005d8c:	e0 a0 12 b4 	rcall	800082f4 <__avr32_f64_sub>
80005d90:	e0 68 43 61 	mov	r8,17249
80005d94:	ea 18 63 6f 	orh	r8,0x636f
80005d98:	e0 69 87 a7 	mov	r9,34727
80005d9c:	ea 19 3f d2 	orh	r9,0x3fd2
80005da0:	e0 a0 11 be 	rcall	8000811c <__avr32_f64_mul>
80005da4:	e0 68 c8 b3 	mov	r8,51379
80005da8:	ea 18 8b 60 	orh	r8,0x8b60
80005dac:	e0 69 8a 28 	mov	r9,35368
80005db0:	ea 19 3f c6 	orh	r9,0x3fc6
80005db4:	e0 a0 13 6e 	rcall	80008490 <__avr32_f64_add>
80005db8:	0a 9c       	mov	r12,r5
80005dba:	14 90       	mov	r0,r10
80005dbc:	16 91       	mov	r1,r11
80005dbe:	e0 a0 14 0a 	rcall	800085d2 <__avr32_s32_to_f64>
80005dc2:	e0 68 79 fb 	mov	r8,31227
80005dc6:	ea 18 50 9f 	orh	r8,0x509f
80005dca:	e0 69 44 13 	mov	r9,17427
80005dce:	ea 19 3f d3 	orh	r9,0x3fd3
80005dd2:	e0 a0 11 a5 	rcall	8000811c <__avr32_f64_mul>
80005dd6:	14 98       	mov	r8,r10
80005dd8:	16 99       	mov	r9,r11
80005dda:	00 9a       	mov	r10,r0
80005ddc:	02 9b       	mov	r11,r1
80005dde:	e0 a0 13 59 	rcall	80008490 <__avr32_f64_add>
80005de2:	14 90       	mov	r0,r10
80005de4:	16 91       	mov	r1,r11
80005de6:	e0 a0 13 df 	rcall	800085a4 <__avr32_f64_to_s32>
80005dea:	30 08       	mov	r8,0
80005dec:	18 96       	mov	r6,r12
80005dee:	30 09       	mov	r9,0
80005df0:	00 9a       	mov	r10,r0
80005df2:	02 9b       	mov	r11,r1
80005df4:	e0 a0 14 a6 	rcall	80008740 <__avr32_f64_cmp_lt>
80005df8:	c0 c0       	breq	80005e10 <_dtoa_r+0x1f4>
80005dfa:	0c 9c       	mov	r12,r6
80005dfc:	e0 a0 13 eb 	rcall	800085d2 <__avr32_s32_to_f64>
80005e00:	14 98       	mov	r8,r10
80005e02:	16 99       	mov	r9,r11
80005e04:	00 9a       	mov	r10,r0
80005e06:	02 9b       	mov	r11,r1
80005e08:	e0 a0 14 55 	rcall	800086b2 <__avr32_f64_cmp_eq>
80005e0c:	f7 b6 00 01 	subeq	r6,1
80005e10:	59 66       	cp.w	r6,22
80005e12:	e0 88 00 05 	brls	80005e1c <_dtoa_r+0x200>
80005e16:	30 18       	mov	r8,1
80005e18:	51 48       	stdsp	sp[0x50],r8
80005e1a:	c1 38       	rjmp	80005e40 <_dtoa_r+0x224>
80005e1c:	fe c8 c5 b4 	sub	r8,pc,-14924
80005e20:	fa ea 00 3c 	ld.d	r10,sp[60]
80005e24:	f0 06 02 38 	ld.d	r8,r8[r6<<0x3]
80005e28:	e0 a0 14 8c 	rcall	80008740 <__avr32_f64_cmp_lt>
80005e2c:	f9 b4 00 00 	moveq	r4,0
80005e30:	fb f4 0a 14 	st.weq	sp[0x50],r4
80005e34:	f7 b6 01 01 	subne	r6,1
80005e38:	f9 bc 01 00 	movne	r12,0
80005e3c:	fb fc 1a 14 	st.wne	sp[0x50],r12
80005e40:	41 90       	lddsp	r0,sp[0x64]
80005e42:	20 10       	sub	r0,1
80005e44:	0a 10       	sub	r0,r5
80005e46:	c0 46       	brmi	80005e4e <_dtoa_r+0x232>
80005e48:	50 40       	stdsp	sp[0x10],r0
80005e4a:	30 00       	mov	r0,0
80005e4c:	c0 48       	rjmp	80005e54 <_dtoa_r+0x238>
80005e4e:	30 0b       	mov	r11,0
80005e50:	5c 30       	neg	r0
80005e52:	50 4b       	stdsp	sp[0x10],r11
80005e54:	ec 02 11 00 	rsub	r2,r6,0
80005e58:	58 06       	cp.w	r6,0
80005e5a:	fb fa 40 04 	ld.wge	r10,sp[0x10]
80005e5e:	f5 d6 e4 0a 	addge	r10,r10,r6
80005e62:	fb fa 4a 04 	st.wge	sp[0x10],r10
80005e66:	fb f6 4a 11 	st.wge	sp[0x44],r6
80005e6a:	f9 b2 04 00 	movge	r2,0
80005e6e:	e1 d6 e5 10 	sublt	r0,r0,r6
80005e72:	f9 b9 05 00 	movlt	r9,0
80005e76:	fb f9 5a 11 	st.wlt	sp[0x44],r9
80005e7a:	40 c8       	lddsp	r8,sp[0x30]
80005e7c:	58 98       	cp.w	r8,9
80005e7e:	e0 8b 00 20 	brhi	80005ebe <_dtoa_r+0x2a2>
80005e82:	58 58       	cp.w	r8,5
80005e84:	f9 b4 0a 01 	movle	r4,1
80005e88:	fb f5 90 0c 	ld.wgt	r5,sp[0x30]
80005e8c:	f7 b5 09 04 	subgt	r5,4
80005e90:	fb f5 9a 0c 	st.wgt	sp[0x30],r5
80005e94:	f9 b4 09 00 	movgt	r4,0
80005e98:	40 cc       	lddsp	r12,sp[0x30]
80005e9a:	58 3c       	cp.w	r12,3
80005e9c:	c2 d0       	breq	80005ef6 <_dtoa_r+0x2da>
80005e9e:	e0 89 00 05 	brgt	80005ea8 <_dtoa_r+0x28c>
80005ea2:	58 2c       	cp.w	r12,2
80005ea4:	c1 01       	brne	80005ec4 <_dtoa_r+0x2a8>
80005ea6:	c1 88       	rjmp	80005ed6 <_dtoa_r+0x2ba>
80005ea8:	40 cb       	lddsp	r11,sp[0x30]
80005eaa:	58 4b       	cp.w	r11,4
80005eac:	c0 60       	breq	80005eb8 <_dtoa_r+0x29c>
80005eae:	58 5b       	cp.w	r11,5
80005eb0:	c0 a1       	brne	80005ec4 <_dtoa_r+0x2a8>
80005eb2:	30 1a       	mov	r10,1
80005eb4:	50 da       	stdsp	sp[0x34],r10
80005eb6:	c2 28       	rjmp	80005efa <_dtoa_r+0x2de>
80005eb8:	30 19       	mov	r9,1
80005eba:	50 d9       	stdsp	sp[0x34],r9
80005ebc:	c0 f8       	rjmp	80005eda <_dtoa_r+0x2be>
80005ebe:	30 08       	mov	r8,0
80005ec0:	30 14       	mov	r4,1
80005ec2:	50 c8       	stdsp	sp[0x30],r8
80005ec4:	3f f5       	mov	r5,-1
80005ec6:	30 1c       	mov	r12,1
80005ec8:	30 0b       	mov	r11,0
80005eca:	50 95       	stdsp	sp[0x24],r5
80005ecc:	50 dc       	stdsp	sp[0x34],r12
80005ece:	0a 91       	mov	r1,r5
80005ed0:	31 28       	mov	r8,18
80005ed2:	50 eb       	stdsp	sp[0x38],r11
80005ed4:	c2 08       	rjmp	80005f14 <_dtoa_r+0x2f8>
80005ed6:	30 0a       	mov	r10,0
80005ed8:	50 da       	stdsp	sp[0x34],r10
80005eda:	40 e9       	lddsp	r9,sp[0x38]
80005edc:	58 09       	cp.w	r9,0
80005ede:	e0 89 00 07 	brgt	80005eec <_dtoa_r+0x2d0>
80005ee2:	30 18       	mov	r8,1
80005ee4:	50 98       	stdsp	sp[0x24],r8
80005ee6:	10 91       	mov	r1,r8
80005ee8:	50 e8       	stdsp	sp[0x38],r8
80005eea:	c1 58       	rjmp	80005f14 <_dtoa_r+0x2f8>
80005eec:	40 e5       	lddsp	r5,sp[0x38]
80005eee:	50 95       	stdsp	sp[0x24],r5
80005ef0:	0a 91       	mov	r1,r5
80005ef2:	0a 98       	mov	r8,r5
80005ef4:	c1 08       	rjmp	80005f14 <_dtoa_r+0x2f8>
80005ef6:	30 0c       	mov	r12,0
80005ef8:	50 dc       	stdsp	sp[0x34],r12
80005efa:	40 eb       	lddsp	r11,sp[0x38]
80005efc:	ec 0b 00 0b 	add	r11,r6,r11
80005f00:	50 9b       	stdsp	sp[0x24],r11
80005f02:	16 98       	mov	r8,r11
80005f04:	2f f8       	sub	r8,-1
80005f06:	58 08       	cp.w	r8,0
80005f08:	e0 89 00 05 	brgt	80005f12 <_dtoa_r+0x2f6>
80005f0c:	10 91       	mov	r1,r8
80005f0e:	30 18       	mov	r8,1
80005f10:	c0 28       	rjmp	80005f14 <_dtoa_r+0x2f8>
80005f12:	10 91       	mov	r1,r8
80005f14:	30 09       	mov	r9,0
80005f16:	6e 9a       	ld.w	r10,r7[0x24]
80005f18:	95 19       	st.w	r10[0x4],r9
80005f1a:	30 49       	mov	r9,4
80005f1c:	c0 68       	rjmp	80005f28 <_dtoa_r+0x30c>
80005f1e:	d7 03       	nop
80005f20:	6a 1a       	ld.w	r10,r5[0x4]
80005f22:	a1 79       	lsl	r9,0x1
80005f24:	2f fa       	sub	r10,-1
80005f26:	8b 1a       	st.w	r5[0x4],r10
80005f28:	6e 95       	ld.w	r5,r7[0x24]
80005f2a:	f2 ca ff ec 	sub	r10,r9,-20
80005f2e:	10 3a       	cp.w	r10,r8
80005f30:	fe 98 ff f8 	brls	80005f20 <_dtoa_r+0x304>
80005f34:	6a 1b       	ld.w	r11,r5[0x4]
80005f36:	0e 9c       	mov	r12,r7
80005f38:	e0 a0 0b 6e 	rcall	80007614 <_Balloc>
80005f3c:	58 e1       	cp.w	r1,14
80005f3e:	5f 88       	srls	r8
80005f40:	8b 0c       	st.w	r5[0x0],r12
80005f42:	f1 e4 00 04 	and	r4,r8,r4
80005f46:	6e 98       	ld.w	r8,r7[0x24]
80005f48:	70 08       	ld.w	r8,r8[0x0]
80005f4a:	50 88       	stdsp	sp[0x20],r8
80005f4c:	e0 80 01 82 	breq	80006250 <_dtoa_r+0x634>
80005f50:	58 06       	cp.w	r6,0
80005f52:	e0 8a 00 43 	brle	80005fd8 <_dtoa_r+0x3bc>
80005f56:	f3 d6 c0 04 	bfextu	r9,r6,0x0,0x4
80005f5a:	fe c8 c6 f2 	sub	r8,pc,-14606
80005f5e:	f0 09 02 34 	ld.d	r4,r8[r9<<0x3]
80005f62:	fa e5 00 18 	st.d	sp[24],r4
80005f66:	ec 04 14 04 	asr	r4,r6,0x4
80005f6a:	ed b4 00 04 	bld	r4,0x4
80005f6e:	c0 30       	breq	80005f74 <_dtoa_r+0x358>
80005f70:	30 25       	mov	r5,2
80005f72:	c1 08       	rjmp	80005f92 <_dtoa_r+0x376>
80005f74:	fe c8 c6 44 	sub	r8,pc,-14780
80005f78:	f0 e8 00 20 	ld.d	r8,r8[32]
80005f7c:	fa ea 00 3c 	ld.d	r10,sp[60]
80005f80:	e9 d4 c0 04 	bfextu	r4,r4,0x0,0x4
80005f84:	e0 a0 14 12 	rcall	800087a8 <__avr32_f64_div>
80005f88:	30 35       	mov	r5,3
80005f8a:	14 98       	mov	r8,r10
80005f8c:	16 99       	mov	r9,r11
80005f8e:	fa e9 00 08 	st.d	sp[8],r8
80005f92:	fe cc c6 62 	sub	r12,pc,-14750
80005f96:	50 a3       	stdsp	sp[0x28],r3
80005f98:	0c 93       	mov	r3,r6
80005f9a:	18 96       	mov	r6,r12
80005f9c:	c0 f8       	rjmp	80005fba <_dtoa_r+0x39e>
80005f9e:	fa ea 00 18 	ld.d	r10,sp[24]
80005fa2:	ed b4 00 00 	bld	r4,0x0
80005fa6:	c0 81       	brne	80005fb6 <_dtoa_r+0x39a>
80005fa8:	ec e8 00 00 	ld.d	r8,r6[0]
80005fac:	2f f5       	sub	r5,-1
80005fae:	e0 a0 10 b7 	rcall	8000811c <__avr32_f64_mul>
80005fb2:	fa eb 00 18 	st.d	sp[24],r10
80005fb6:	a1 54       	asr	r4,0x1
80005fb8:	2f 86       	sub	r6,-8
80005fba:	58 04       	cp.w	r4,0
80005fbc:	cf 11       	brne	80005f9e <_dtoa_r+0x382>
80005fbe:	fa e8 00 18 	ld.d	r8,sp[24]
80005fc2:	fa ea 00 08 	ld.d	r10,sp[8]
80005fc6:	06 96       	mov	r6,r3
80005fc8:	e0 a0 13 f0 	rcall	800087a8 <__avr32_f64_div>
80005fcc:	40 a3       	lddsp	r3,sp[0x28]
80005fce:	14 98       	mov	r8,r10
80005fd0:	16 99       	mov	r9,r11
80005fd2:	fa e9 00 08 	st.d	sp[8],r8
80005fd6:	c2 f8       	rjmp	80006034 <_dtoa_r+0x418>
80005fd8:	ec 08 11 00 	rsub	r8,r6,0
80005fdc:	c0 31       	brne	80005fe2 <_dtoa_r+0x3c6>
80005fde:	30 25       	mov	r5,2
80005fe0:	c2 a8       	rjmp	80006034 <_dtoa_r+0x418>
80005fe2:	fe cc c6 b2 	sub	r12,pc,-14670
80005fe6:	f0 04 14 04 	asr	r4,r8,0x4
80005fea:	50 1c       	stdsp	sp[0x4],r12
80005fec:	f1 d8 c0 04 	bfextu	r8,r8,0x0,0x4
80005ff0:	fe c9 c7 88 	sub	r9,pc,-14456
80005ff4:	fa ea 00 3c 	ld.d	r10,sp[60]
80005ff8:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
80005ffc:	e0 a0 10 90 	rcall	8000811c <__avr32_f64_mul>
80006000:	40 1c       	lddsp	r12,sp[0x4]
80006002:	50 63       	stdsp	sp[0x18],r3
80006004:	30 25       	mov	r5,2
80006006:	0c 93       	mov	r3,r6
80006008:	fa eb 00 08 	st.d	sp[8],r10
8000600c:	18 96       	mov	r6,r12
8000600e:	c0 f8       	rjmp	8000602c <_dtoa_r+0x410>
80006010:	fa ea 00 08 	ld.d	r10,sp[8]
80006014:	ed b4 00 00 	bld	r4,0x0
80006018:	c0 81       	brne	80006028 <_dtoa_r+0x40c>
8000601a:	ec e8 00 00 	ld.d	r8,r6[0]
8000601e:	2f f5       	sub	r5,-1
80006020:	e0 a0 10 7e 	rcall	8000811c <__avr32_f64_mul>
80006024:	fa eb 00 08 	st.d	sp[8],r10
80006028:	a1 54       	asr	r4,0x1
8000602a:	2f 86       	sub	r6,-8
8000602c:	58 04       	cp.w	r4,0
8000602e:	cf 11       	brne	80006010 <_dtoa_r+0x3f4>
80006030:	06 96       	mov	r6,r3
80006032:	40 63       	lddsp	r3,sp[0x18]
80006034:	41 4a       	lddsp	r10,sp[0x50]
80006036:	58 0a       	cp.w	r10,0
80006038:	c2 a0       	breq	8000608c <_dtoa_r+0x470>
8000603a:	fa e8 00 08 	ld.d	r8,sp[8]
8000603e:	58 01       	cp.w	r1,0
80006040:	5f 94       	srgt	r4
80006042:	fa e9 00 18 	st.d	sp[24],r8
80006046:	30 08       	mov	r8,0
80006048:	fc 19 3f f0 	movh	r9,0x3ff0
8000604c:	fa ea 00 18 	ld.d	r10,sp[24]
80006050:	e0 a0 13 78 	rcall	80008740 <__avr32_f64_cmp_lt>
80006054:	f9 bc 00 00 	moveq	r12,0
80006058:	f9 bc 01 01 	movne	r12,1
8000605c:	e9 ec 00 0c 	and	r12,r4,r12
80006060:	c1 60       	breq	8000608c <_dtoa_r+0x470>
80006062:	40 98       	lddsp	r8,sp[0x24]
80006064:	58 08       	cp.w	r8,0
80006066:	e0 8a 00 f1 	brle	80006248 <_dtoa_r+0x62c>
8000606a:	30 08       	mov	r8,0
8000606c:	fc 19 40 24 	movh	r9,0x4024
80006070:	ec c4 00 01 	sub	r4,r6,1
80006074:	fa ea 00 18 	ld.d	r10,sp[24]
80006078:	2f f5       	sub	r5,-1
8000607a:	50 64       	stdsp	sp[0x18],r4
8000607c:	e0 a0 10 50 	rcall	8000811c <__avr32_f64_mul>
80006080:	40 94       	lddsp	r4,sp[0x24]
80006082:	14 98       	mov	r8,r10
80006084:	16 99       	mov	r9,r11
80006086:	fa e9 00 08 	st.d	sp[8],r8
8000608a:	c0 38       	rjmp	80006090 <_dtoa_r+0x474>
8000608c:	50 66       	stdsp	sp[0x18],r6
8000608e:	02 94       	mov	r4,r1
80006090:	0a 9c       	mov	r12,r5
80006092:	e0 a0 12 a0 	rcall	800085d2 <__avr32_s32_to_f64>
80006096:	fa e8 00 08 	ld.d	r8,sp[8]
8000609a:	e0 a0 10 41 	rcall	8000811c <__avr32_f64_mul>
8000609e:	30 08       	mov	r8,0
800060a0:	fc 19 40 1c 	movh	r9,0x401c
800060a4:	e0 a0 11 f6 	rcall	80008490 <__avr32_f64_add>
800060a8:	14 98       	mov	r8,r10
800060aa:	16 99       	mov	r9,r11
800060ac:	fa e9 00 28 	st.d	sp[40],r8
800060b0:	fc 18 fc c0 	movh	r8,0xfcc0
800060b4:	40 a5       	lddsp	r5,sp[0x28]
800060b6:	10 05       	add	r5,r8
800060b8:	50 a5       	stdsp	sp[0x28],r5
800060ba:	58 04       	cp.w	r4,0
800060bc:	c2 11       	brne	800060fe <_dtoa_r+0x4e2>
800060be:	fa ea 00 08 	ld.d	r10,sp[8]
800060c2:	30 08       	mov	r8,0
800060c4:	fc 19 40 14 	movh	r9,0x4014
800060c8:	e0 a0 11 16 	rcall	800082f4 <__avr32_f64_sub>
800060cc:	40 bc       	lddsp	r12,sp[0x2c]
800060ce:	fa eb 00 08 	st.d	sp[8],r10
800060d2:	14 98       	mov	r8,r10
800060d4:	16 99       	mov	r9,r11
800060d6:	18 9a       	mov	r10,r12
800060d8:	0a 9b       	mov	r11,r5
800060da:	e0 a0 13 33 	rcall	80008740 <__avr32_f64_cmp_lt>
800060de:	e0 81 02 54 	brne	80006586 <_dtoa_r+0x96a>
800060e2:	0a 98       	mov	r8,r5
800060e4:	40 b9       	lddsp	r9,sp[0x2c]
800060e6:	ee 18 80 00 	eorh	r8,0x8000
800060ea:	fa ea 00 08 	ld.d	r10,sp[8]
800060ee:	10 95       	mov	r5,r8
800060f0:	12 98       	mov	r8,r9
800060f2:	0a 99       	mov	r9,r5
800060f4:	e0 a0 13 26 	rcall	80008740 <__avr32_f64_cmp_lt>
800060f8:	e0 81 02 3e 	brne	80006574 <_dtoa_r+0x958>
800060fc:	ca 68       	rjmp	80006248 <_dtoa_r+0x62c>
800060fe:	fe c9 c8 96 	sub	r9,pc,-14186
80006102:	e8 c8 00 01 	sub	r8,r4,1
80006106:	40 d5       	lddsp	r5,sp[0x34]
80006108:	58 05       	cp.w	r5,0
8000610a:	c4 f0       	breq	800061a8 <_dtoa_r+0x58c>
8000610c:	30 0c       	mov	r12,0
8000610e:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
80006112:	51 3c       	stdsp	sp[0x4c],r12
80006114:	30 0a       	mov	r10,0
80006116:	fc 1b 3f e0 	movh	r11,0x3fe0
8000611a:	e0 a0 13 47 	rcall	800087a8 <__avr32_f64_div>
8000611e:	fa e8 00 28 	ld.d	r8,sp[40]
80006122:	40 85       	lddsp	r5,sp[0x20]
80006124:	e0 a0 10 e8 	rcall	800082f4 <__avr32_f64_sub>
80006128:	fa eb 00 28 	st.d	sp[40],r10
8000612c:	fa ea 00 08 	ld.d	r10,sp[8]
80006130:	e0 a0 12 3a 	rcall	800085a4 <__avr32_f64_to_s32>
80006134:	51 6c       	stdsp	sp[0x58],r12
80006136:	e0 a0 12 4e 	rcall	800085d2 <__avr32_s32_to_f64>
8000613a:	14 98       	mov	r8,r10
8000613c:	16 99       	mov	r9,r11
8000613e:	fa ea 00 08 	ld.d	r10,sp[8]
80006142:	e0 a0 10 d9 	rcall	800082f4 <__avr32_f64_sub>
80006146:	fa eb 00 08 	st.d	sp[8],r10
8000614a:	41 68       	lddsp	r8,sp[0x58]
8000614c:	2d 08       	sub	r8,-48
8000614e:	0a c8       	st.b	r5++,r8
80006150:	41 39       	lddsp	r9,sp[0x4c]
80006152:	2f f9       	sub	r9,-1
80006154:	51 39       	stdsp	sp[0x4c],r9
80006156:	fa e8 00 28 	ld.d	r8,sp[40]
8000615a:	e0 a0 12 f3 	rcall	80008740 <__avr32_f64_cmp_lt>
8000615e:	e0 81 03 39 	brne	800067d0 <_dtoa_r+0xbb4>
80006162:	fa e8 00 08 	ld.d	r8,sp[8]
80006166:	30 0a       	mov	r10,0
80006168:	fc 1b 3f f0 	movh	r11,0x3ff0
8000616c:	e0 a0 10 c4 	rcall	800082f4 <__avr32_f64_sub>
80006170:	fa e8 00 28 	ld.d	r8,sp[40]
80006174:	e0 a0 12 e6 	rcall	80008740 <__avr32_f64_cmp_lt>
80006178:	fa ea 00 28 	ld.d	r10,sp[40]
8000617c:	30 08       	mov	r8,0
8000617e:	fc 19 40 24 	movh	r9,0x4024
80006182:	e0 81 00 da 	brne	80006336 <_dtoa_r+0x71a>
80006186:	41 3c       	lddsp	r12,sp[0x4c]
80006188:	08 3c       	cp.w	r12,r4
8000618a:	c5 f4       	brge	80006248 <_dtoa_r+0x62c>
8000618c:	e0 a0 0f c8 	rcall	8000811c <__avr32_f64_mul>
80006190:	30 08       	mov	r8,0
80006192:	fa eb 00 28 	st.d	sp[40],r10
80006196:	fc 19 40 24 	movh	r9,0x4024
8000619a:	fa ea 00 08 	ld.d	r10,sp[8]
8000619e:	e0 a0 0f bf 	rcall	8000811c <__avr32_f64_mul>
800061a2:	fa eb 00 08 	st.d	sp[8],r10
800061a6:	cc 3b       	rjmp	8000612c <_dtoa_r+0x510>
800061a8:	40 85       	lddsp	r5,sp[0x20]
800061aa:	08 05       	add	r5,r4
800061ac:	f2 08 02 3a 	ld.d	r10,r9[r8<<0x3]
800061b0:	51 35       	stdsp	sp[0x4c],r5
800061b2:	fa e8 00 28 	ld.d	r8,sp[40]
800061b6:	40 85       	lddsp	r5,sp[0x20]
800061b8:	e0 a0 0f b2 	rcall	8000811c <__avr32_f64_mul>
800061bc:	fa eb 00 28 	st.d	sp[40],r10
800061c0:	fa ea 00 08 	ld.d	r10,sp[8]
800061c4:	e0 a0 11 f0 	rcall	800085a4 <__avr32_f64_to_s32>
800061c8:	51 6c       	stdsp	sp[0x58],r12
800061ca:	e0 a0 12 04 	rcall	800085d2 <__avr32_s32_to_f64>
800061ce:	14 98       	mov	r8,r10
800061d0:	16 99       	mov	r9,r11
800061d2:	fa ea 00 08 	ld.d	r10,sp[8]
800061d6:	e0 a0 10 8f 	rcall	800082f4 <__avr32_f64_sub>
800061da:	fa eb 00 08 	st.d	sp[8],r10
800061de:	41 68       	lddsp	r8,sp[0x58]
800061e0:	2d 08       	sub	r8,-48
800061e2:	0a c8       	st.b	r5++,r8
800061e4:	41 3c       	lddsp	r12,sp[0x4c]
800061e6:	18 35       	cp.w	r5,r12
800061e8:	c2 81       	brne	80006238 <_dtoa_r+0x61c>
800061ea:	30 08       	mov	r8,0
800061ec:	fc 19 3f e0 	movh	r9,0x3fe0
800061f0:	fa ea 00 28 	ld.d	r10,sp[40]
800061f4:	e0 a0 11 4e 	rcall	80008490 <__avr32_f64_add>
800061f8:	40 85       	lddsp	r5,sp[0x20]
800061fa:	fa e8 00 08 	ld.d	r8,sp[8]
800061fe:	08 05       	add	r5,r4
80006200:	e0 a0 12 a0 	rcall	80008740 <__avr32_f64_cmp_lt>
80006204:	e0 81 00 99 	brne	80006336 <_dtoa_r+0x71a>
80006208:	fa e8 00 28 	ld.d	r8,sp[40]
8000620c:	30 0a       	mov	r10,0
8000620e:	fc 1b 3f e0 	movh	r11,0x3fe0
80006212:	e0 a0 10 71 	rcall	800082f4 <__avr32_f64_sub>
80006216:	14 98       	mov	r8,r10
80006218:	16 99       	mov	r9,r11
8000621a:	fa ea 00 08 	ld.d	r10,sp[8]
8000621e:	e0 a0 12 91 	rcall	80008740 <__avr32_f64_cmp_lt>
80006222:	c1 30       	breq	80006248 <_dtoa_r+0x62c>
80006224:	33 09       	mov	r9,48
80006226:	0a 98       	mov	r8,r5
80006228:	11 7a       	ld.ub	r10,--r8
8000622a:	f2 0a 18 00 	cp.b	r10,r9
8000622e:	e0 81 02 d1 	brne	800067d0 <_dtoa_r+0xbb4>
80006232:	10 95       	mov	r5,r8
80006234:	cf 9b       	rjmp	80006226 <_dtoa_r+0x60a>
80006236:	d7 03       	nop
80006238:	30 08       	mov	r8,0
8000623a:	fc 19 40 24 	movh	r9,0x4024
8000623e:	e0 a0 0f 6f 	rcall	8000811c <__avr32_f64_mul>
80006242:	fa eb 00 08 	st.d	sp[8],r10
80006246:	cb db       	rjmp	800061c0 <_dtoa_r+0x5a4>
80006248:	fa ea 00 3c 	ld.d	r10,sp[60]
8000624c:	fa eb 00 08 	st.d	sp[8],r10
80006250:	58 e6       	cp.w	r6,14
80006252:	5f ab       	srle	r11
80006254:	41 8a       	lddsp	r10,sp[0x60]
80006256:	30 08       	mov	r8,0
80006258:	f4 09 11 ff 	rsub	r9,r10,-1
8000625c:	f7 e9 03 f9 	and	r9,r11,r9>>0x1f
80006260:	f0 09 18 00 	cp.b	r9,r8
80006264:	e0 80 00 82 	breq	80006368 <_dtoa_r+0x74c>
80006268:	40 ea       	lddsp	r10,sp[0x38]
8000626a:	58 01       	cp.w	r1,0
8000626c:	5f a9       	srle	r9
8000626e:	f3 ea 03 f9 	and	r9,r9,r10>>0x1f
80006272:	fe ca ca 0a 	sub	r10,pc,-13814
80006276:	f4 06 02 34 	ld.d	r4,r10[r6<<0x3]
8000627a:	fa e5 00 10 	st.d	sp[16],r4
8000627e:	f0 09 18 00 	cp.b	r9,r8
80006282:	c1 40       	breq	800062aa <_dtoa_r+0x68e>
80006284:	58 01       	cp.w	r1,0
80006286:	e0 81 01 77 	brne	80006574 <_dtoa_r+0x958>
8000628a:	30 08       	mov	r8,0
8000628c:	fc 19 40 14 	movh	r9,0x4014
80006290:	08 9a       	mov	r10,r4
80006292:	0a 9b       	mov	r11,r5
80006294:	e0 a0 0f 44 	rcall	8000811c <__avr32_f64_mul>
80006298:	fa e8 00 08 	ld.d	r8,sp[8]
8000629c:	e0 a0 12 1e 	rcall	800086d8 <__avr32_f64_cmp_ge>
800062a0:	e0 81 01 6a 	brne	80006574 <_dtoa_r+0x958>
800062a4:	02 92       	mov	r2,r1
800062a6:	e0 8f 01 72 	bral	8000658a <_dtoa_r+0x96e>
800062aa:	40 85       	lddsp	r5,sp[0x20]
800062ac:	30 14       	mov	r4,1
800062ae:	fa e8 00 10 	ld.d	r8,sp[16]
800062b2:	fa ea 00 08 	ld.d	r10,sp[8]
800062b6:	e0 a0 12 79 	rcall	800087a8 <__avr32_f64_div>
800062ba:	e0 a0 11 75 	rcall	800085a4 <__avr32_f64_to_s32>
800062be:	18 92       	mov	r2,r12
800062c0:	e0 a0 11 89 	rcall	800085d2 <__avr32_s32_to_f64>
800062c4:	fa e8 00 10 	ld.d	r8,sp[16]
800062c8:	e0 a0 0f 2a 	rcall	8000811c <__avr32_f64_mul>
800062cc:	14 98       	mov	r8,r10
800062ce:	16 99       	mov	r9,r11
800062d0:	fa ea 00 08 	ld.d	r10,sp[8]
800062d4:	e0 a0 10 10 	rcall	800082f4 <__avr32_f64_sub>
800062d8:	fa eb 00 08 	st.d	sp[8],r10
800062dc:	e4 c8 ff d0 	sub	r8,r2,-48
800062e0:	0a c8       	st.b	r5++,r8
800062e2:	fc 19 40 24 	movh	r9,0x4024
800062e6:	30 08       	mov	r8,0
800062e8:	02 34       	cp.w	r4,r1
800062ea:	c3 31       	brne	80006350 <_dtoa_r+0x734>
800062ec:	fa e8 00 08 	ld.d	r8,sp[8]
800062f0:	e0 a0 10 d0 	rcall	80008490 <__avr32_f64_add>
800062f4:	16 91       	mov	r1,r11
800062f6:	14 90       	mov	r0,r10
800062f8:	14 98       	mov	r8,r10
800062fa:	02 99       	mov	r9,r1
800062fc:	fa ea 00 10 	ld.d	r10,sp[16]
80006300:	e0 a0 12 20 	rcall	80008740 <__avr32_f64_cmp_lt>
80006304:	c1 a1       	brne	80006338 <_dtoa_r+0x71c>
80006306:	fa e8 00 10 	ld.d	r8,sp[16]
8000630a:	00 9a       	mov	r10,r0
8000630c:	02 9b       	mov	r11,r1
8000630e:	e0 a0 11 d2 	rcall	800086b2 <__avr32_f64_cmp_eq>
80006312:	e0 80 02 5e 	breq	800067ce <_dtoa_r+0xbb2>
80006316:	e5 d2 c0 01 	bfextu	r2,r2,0x0,0x1
8000631a:	c0 f1       	brne	80006338 <_dtoa_r+0x71c>
8000631c:	e0 8f 02 59 	bral	800067ce <_dtoa_r+0xbb2>
80006320:	40 8a       	lddsp	r10,sp[0x20]
80006322:	14 38       	cp.w	r8,r10
80006324:	c0 30       	breq	8000632a <_dtoa_r+0x70e>
80006326:	10 95       	mov	r5,r8
80006328:	c0 98       	rjmp	8000633a <_dtoa_r+0x71e>
8000632a:	33 08       	mov	r8,48
8000632c:	40 89       	lddsp	r9,sp[0x20]
8000632e:	2f f6       	sub	r6,-1
80006330:	b2 88       	st.b	r9[0x0],r8
80006332:	40 88       	lddsp	r8,sp[0x20]
80006334:	c0 88       	rjmp	80006344 <_dtoa_r+0x728>
80006336:	40 66       	lddsp	r6,sp[0x18]
80006338:	33 99       	mov	r9,57
8000633a:	0a 98       	mov	r8,r5
8000633c:	11 7a       	ld.ub	r10,--r8
8000633e:	f2 0a 18 00 	cp.b	r10,r9
80006342:	ce f0       	breq	80006320 <_dtoa_r+0x704>
80006344:	50 66       	stdsp	sp[0x18],r6
80006346:	11 89       	ld.ub	r9,r8[0x0]
80006348:	2f f9       	sub	r9,-1
8000634a:	b0 89       	st.b	r8[0x0],r9
8000634c:	e0 8f 02 42 	bral	800067d0 <_dtoa_r+0xbb4>
80006350:	e0 a0 0e e6 	rcall	8000811c <__avr32_f64_mul>
80006354:	2f f4       	sub	r4,-1
80006356:	fa eb 00 08 	st.d	sp[8],r10
8000635a:	30 08       	mov	r8,0
8000635c:	30 09       	mov	r9,0
8000635e:	e0 a0 11 aa 	rcall	800086b2 <__avr32_f64_cmp_eq>
80006362:	ca 60       	breq	800062ae <_dtoa_r+0x692>
80006364:	e0 8f 02 35 	bral	800067ce <_dtoa_r+0xbb2>
80006368:	40 d8       	lddsp	r8,sp[0x34]
8000636a:	58 08       	cp.w	r8,0
8000636c:	c0 51       	brne	80006376 <_dtoa_r+0x75a>
8000636e:	04 98       	mov	r8,r2
80006370:	00 95       	mov	r5,r0
80006372:	40 d4       	lddsp	r4,sp[0x34]
80006374:	c3 78       	rjmp	800063e2 <_dtoa_r+0x7c6>
80006376:	40 c5       	lddsp	r5,sp[0x30]
80006378:	58 15       	cp.w	r5,1
8000637a:	e0 89 00 0f 	brgt	80006398 <_dtoa_r+0x77c>
8000637e:	41 74       	lddsp	r4,sp[0x5c]
80006380:	58 04       	cp.w	r4,0
80006382:	c0 40       	breq	8000638a <_dtoa_r+0x76e>
80006384:	f4 c9 fb cd 	sub	r9,r10,-1075
80006388:	c0 48       	rjmp	80006390 <_dtoa_r+0x774>
8000638a:	41 99       	lddsp	r9,sp[0x64]
8000638c:	f2 09 11 36 	rsub	r9,r9,54
80006390:	04 98       	mov	r8,r2
80006392:	00 95       	mov	r5,r0
80006394:	c1 c8       	rjmp	800063cc <_dtoa_r+0x7b0>
80006396:	d7 03       	nop
80006398:	e2 c8 00 01 	sub	r8,r1,1
8000639c:	58 01       	cp.w	r1,0
8000639e:	e0 05 17 40 	movge	r5,r0
800063a2:	e2 09 17 40 	movge	r9,r1
800063a6:	e1 d1 e5 15 	sublt	r5,r0,r1
800063aa:	f9 b9 05 00 	movlt	r9,0
800063ae:	10 32       	cp.w	r2,r8
800063b0:	e5 d8 e4 18 	subge	r8,r2,r8
800063b4:	f1 d2 e5 18 	sublt	r8,r8,r2
800063b8:	e5 d8 e5 02 	addlt	r2,r2,r8
800063bc:	fb fc 50 11 	ld.wlt	r12,sp[0x44]
800063c0:	f9 d8 e5 0c 	addlt	r12,r12,r8
800063c4:	fb fc 5a 11 	st.wlt	sp[0x44],r12
800063c8:	f9 b8 05 00 	movlt	r8,0
800063cc:	40 4b       	lddsp	r11,sp[0x10]
800063ce:	12 0b       	add	r11,r9
800063d0:	50 08       	stdsp	sp[0x0],r8
800063d2:	50 4b       	stdsp	sp[0x10],r11
800063d4:	12 00       	add	r0,r9
800063d6:	30 1b       	mov	r11,1
800063d8:	0e 9c       	mov	r12,r7
800063da:	e0 a0 0a d1 	rcall	8000797c <__i2b>
800063de:	40 08       	lddsp	r8,sp[0x0]
800063e0:	18 94       	mov	r4,r12
800063e2:	40 4a       	lddsp	r10,sp[0x10]
800063e4:	58 05       	cp.w	r5,0
800063e6:	5f 99       	srgt	r9
800063e8:	58 0a       	cp.w	r10,0
800063ea:	5f 9a       	srgt	r10
800063ec:	f5 e9 00 09 	and	r9,r10,r9
800063f0:	c0 80       	breq	80006400 <_dtoa_r+0x7e4>
800063f2:	40 4c       	lddsp	r12,sp[0x10]
800063f4:	f8 05 0d 49 	min	r9,r12,r5
800063f8:	12 1c       	sub	r12,r9
800063fa:	12 10       	sub	r0,r9
800063fc:	50 4c       	stdsp	sp[0x10],r12
800063fe:	12 15       	sub	r5,r9
80006400:	58 02       	cp.w	r2,0
80006402:	e0 8a 00 27 	brle	80006450 <_dtoa_r+0x834>
80006406:	40 db       	lddsp	r11,sp[0x34]
80006408:	58 0b       	cp.w	r11,0
8000640a:	c1 d0       	breq	80006444 <_dtoa_r+0x828>
8000640c:	58 08       	cp.w	r8,0
8000640e:	e0 8a 00 17 	brle	8000643c <_dtoa_r+0x820>
80006412:	10 9a       	mov	r10,r8
80006414:	50 08       	stdsp	sp[0x0],r8
80006416:	08 9b       	mov	r11,r4
80006418:	0e 9c       	mov	r12,r7
8000641a:	e0 a0 0a f7 	rcall	80007a08 <__pow5mult>
8000641e:	06 9a       	mov	r10,r3
80006420:	18 9b       	mov	r11,r12
80006422:	18 94       	mov	r4,r12
80006424:	0e 9c       	mov	r12,r7
80006426:	e0 a0 0a 2b 	rcall	8000787c <__multiply>
8000642a:	18 99       	mov	r9,r12
8000642c:	06 9b       	mov	r11,r3
8000642e:	50 19       	stdsp	sp[0x4],r9
80006430:	0e 9c       	mov	r12,r7
80006432:	e0 a0 08 d7 	rcall	800075e0 <_Bfree>
80006436:	40 19       	lddsp	r9,sp[0x4]
80006438:	40 08       	lddsp	r8,sp[0x0]
8000643a:	12 93       	mov	r3,r9
8000643c:	e4 08 01 0a 	sub	r10,r2,r8
80006440:	c0 80       	breq	80006450 <_dtoa_r+0x834>
80006442:	c0 28       	rjmp	80006446 <_dtoa_r+0x82a>
80006444:	04 9a       	mov	r10,r2
80006446:	06 9b       	mov	r11,r3
80006448:	0e 9c       	mov	r12,r7
8000644a:	e0 a0 0a df 	rcall	80007a08 <__pow5mult>
8000644e:	18 93       	mov	r3,r12
80006450:	30 1b       	mov	r11,1
80006452:	0e 9c       	mov	r12,r7
80006454:	e0 a0 0a 94 	rcall	8000797c <__i2b>
80006458:	41 1a       	lddsp	r10,sp[0x44]
8000645a:	18 92       	mov	r2,r12
8000645c:	58 0a       	cp.w	r10,0
8000645e:	e0 8a 00 07 	brle	8000646c <_dtoa_r+0x850>
80006462:	18 9b       	mov	r11,r12
80006464:	0e 9c       	mov	r12,r7
80006466:	e0 a0 0a d1 	rcall	80007a08 <__pow5mult>
8000646a:	18 92       	mov	r2,r12
8000646c:	40 c9       	lddsp	r9,sp[0x30]
8000646e:	58 19       	cp.w	r9,1
80006470:	e0 89 00 14 	brgt	80006498 <_dtoa_r+0x87c>
80006474:	40 38       	lddsp	r8,sp[0xc]
80006476:	58 08       	cp.w	r8,0
80006478:	c1 01       	brne	80006498 <_dtoa_r+0x87c>
8000647a:	40 29       	lddsp	r9,sp[0x8]
8000647c:	f1 d9 c0 14 	bfextu	r8,r9,0x0,0x14
80006480:	c0 c1       	brne	80006498 <_dtoa_r+0x87c>
80006482:	12 98       	mov	r8,r9
80006484:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80006488:	c0 80       	breq	80006498 <_dtoa_r+0x87c>
8000648a:	40 4c       	lddsp	r12,sp[0x10]
8000648c:	30 1b       	mov	r11,1
8000648e:	2f fc       	sub	r12,-1
80006490:	2f f0       	sub	r0,-1
80006492:	50 4c       	stdsp	sp[0x10],r12
80006494:	50 6b       	stdsp	sp[0x18],r11
80006496:	c0 38       	rjmp	8000649c <_dtoa_r+0x880>
80006498:	30 0a       	mov	r10,0
8000649a:	50 6a       	stdsp	sp[0x18],r10
8000649c:	41 19       	lddsp	r9,sp[0x44]
8000649e:	58 09       	cp.w	r9,0
800064a0:	c0 31       	brne	800064a6 <_dtoa_r+0x88a>
800064a2:	30 1c       	mov	r12,1
800064a4:	c0 98       	rjmp	800064b6 <_dtoa_r+0x89a>
800064a6:	64 48       	ld.w	r8,r2[0x10]
800064a8:	2f c8       	sub	r8,-4
800064aa:	e4 08 03 2c 	ld.w	r12,r2[r8<<0x2]
800064ae:	e0 a0 08 08 	rcall	800074be <__hi0bits>
800064b2:	f8 0c 11 20 	rsub	r12,r12,32
800064b6:	40 4b       	lddsp	r11,sp[0x10]
800064b8:	f8 0b 00 08 	add	r8,r12,r11
800064bc:	f1 d8 c0 05 	bfextu	r8,r8,0x0,0x5
800064c0:	c0 c0       	breq	800064d8 <_dtoa_r+0x8bc>
800064c2:	f0 08 11 20 	rsub	r8,r8,32
800064c6:	58 48       	cp.w	r8,4
800064c8:	e0 8a 00 06 	brle	800064d4 <_dtoa_r+0x8b8>
800064cc:	20 48       	sub	r8,4
800064ce:	10 0b       	add	r11,r8
800064d0:	50 4b       	stdsp	sp[0x10],r11
800064d2:	c0 78       	rjmp	800064e0 <_dtoa_r+0x8c4>
800064d4:	58 48       	cp.w	r8,4
800064d6:	c0 70       	breq	800064e4 <_dtoa_r+0x8c8>
800064d8:	40 4a       	lddsp	r10,sp[0x10]
800064da:	2e 48       	sub	r8,-28
800064dc:	10 0a       	add	r10,r8
800064de:	50 4a       	stdsp	sp[0x10],r10
800064e0:	10 00       	add	r0,r8
800064e2:	10 05       	add	r5,r8
800064e4:	58 00       	cp.w	r0,0
800064e6:	e0 8a 00 08 	brle	800064f6 <_dtoa_r+0x8da>
800064ea:	06 9b       	mov	r11,r3
800064ec:	00 9a       	mov	r10,r0
800064ee:	0e 9c       	mov	r12,r7
800064f0:	e0 a0 09 82 	rcall	800077f4 <__lshift>
800064f4:	18 93       	mov	r3,r12
800064f6:	40 49       	lddsp	r9,sp[0x10]
800064f8:	58 09       	cp.w	r9,0
800064fa:	e0 8a 00 08 	brle	8000650a <_dtoa_r+0x8ee>
800064fe:	04 9b       	mov	r11,r2
80006500:	12 9a       	mov	r10,r9
80006502:	0e 9c       	mov	r12,r7
80006504:	e0 a0 09 78 	rcall	800077f4 <__lshift>
80006508:	18 92       	mov	r2,r12
8000650a:	41 48       	lddsp	r8,sp[0x50]
8000650c:	58 08       	cp.w	r8,0
8000650e:	c1 b0       	breq	80006544 <_dtoa_r+0x928>
80006510:	04 9b       	mov	r11,r2
80006512:	06 9c       	mov	r12,r3
80006514:	e0 a0 08 4c 	rcall	800075ac <__mcmp>
80006518:	c1 64       	brge	80006544 <_dtoa_r+0x928>
8000651a:	06 9b       	mov	r11,r3
8000651c:	30 09       	mov	r9,0
8000651e:	30 aa       	mov	r10,10
80006520:	0e 9c       	mov	r12,r7
80006522:	e0 a0 0a 35 	rcall	8000798c <__multadd>
80006526:	20 16       	sub	r6,1
80006528:	18 93       	mov	r3,r12
8000652a:	40 dc       	lddsp	r12,sp[0x34]
8000652c:	58 0c       	cp.w	r12,0
8000652e:	c0 31       	brne	80006534 <_dtoa_r+0x918>
80006530:	40 91       	lddsp	r1,sp[0x24]
80006532:	c0 98       	rjmp	80006544 <_dtoa_r+0x928>
80006534:	08 9b       	mov	r11,r4
80006536:	40 91       	lddsp	r1,sp[0x24]
80006538:	30 09       	mov	r9,0
8000653a:	30 aa       	mov	r10,10
8000653c:	0e 9c       	mov	r12,r7
8000653e:	e0 a0 0a 27 	rcall	8000798c <__multadd>
80006542:	18 94       	mov	r4,r12
80006544:	58 01       	cp.w	r1,0
80006546:	5f a9       	srle	r9
80006548:	40 cb       	lddsp	r11,sp[0x30]
8000654a:	58 2b       	cp.w	r11,2
8000654c:	5f 98       	srgt	r8
8000654e:	f3 e8 00 08 	and	r8,r9,r8
80006552:	c2 50       	breq	8000659c <_dtoa_r+0x980>
80006554:	58 01       	cp.w	r1,0
80006556:	c1 11       	brne	80006578 <_dtoa_r+0x95c>
80006558:	04 9b       	mov	r11,r2
8000655a:	02 99       	mov	r9,r1
8000655c:	30 5a       	mov	r10,5
8000655e:	0e 9c       	mov	r12,r7
80006560:	e0 a0 0a 16 	rcall	8000798c <__multadd>
80006564:	18 92       	mov	r2,r12
80006566:	18 9b       	mov	r11,r12
80006568:	06 9c       	mov	r12,r3
8000656a:	e0 a0 08 21 	rcall	800075ac <__mcmp>
8000656e:	e0 89 00 0f 	brgt	8000658c <_dtoa_r+0x970>
80006572:	c0 38       	rjmp	80006578 <_dtoa_r+0x95c>
80006574:	30 02       	mov	r2,0
80006576:	04 94       	mov	r4,r2
80006578:	40 ea       	lddsp	r10,sp[0x38]
8000657a:	30 09       	mov	r9,0
8000657c:	5c da       	com	r10
8000657e:	40 85       	lddsp	r5,sp[0x20]
80006580:	50 6a       	stdsp	sp[0x18],r10
80006582:	50 49       	stdsp	sp[0x10],r9
80006584:	c0 f9       	rjmp	800067a2 <_dtoa_r+0xb86>
80006586:	08 92       	mov	r2,r4
80006588:	40 66       	lddsp	r6,sp[0x18]
8000658a:	04 94       	mov	r4,r2
8000658c:	2f f6       	sub	r6,-1
8000658e:	50 66       	stdsp	sp[0x18],r6
80006590:	33 18       	mov	r8,49
80006592:	40 85       	lddsp	r5,sp[0x20]
80006594:	0a c8       	st.b	r5++,r8
80006596:	30 08       	mov	r8,0
80006598:	50 48       	stdsp	sp[0x10],r8
8000659a:	c0 49       	rjmp	800067a2 <_dtoa_r+0xb86>
8000659c:	40 dc       	lddsp	r12,sp[0x34]
8000659e:	58 0c       	cp.w	r12,0
800065a0:	e0 80 00 b5 	breq	8000670a <_dtoa_r+0xaee>
800065a4:	58 05       	cp.w	r5,0
800065a6:	e0 8a 00 08 	brle	800065b6 <_dtoa_r+0x99a>
800065aa:	08 9b       	mov	r11,r4
800065ac:	0a 9a       	mov	r10,r5
800065ae:	0e 9c       	mov	r12,r7
800065b0:	e0 a0 09 22 	rcall	800077f4 <__lshift>
800065b4:	18 94       	mov	r4,r12
800065b6:	40 6b       	lddsp	r11,sp[0x18]
800065b8:	58 0b       	cp.w	r11,0
800065ba:	c0 31       	brne	800065c0 <_dtoa_r+0x9a4>
800065bc:	08 9c       	mov	r12,r4
800065be:	c1 38       	rjmp	800065e4 <_dtoa_r+0x9c8>
800065c0:	68 1b       	ld.w	r11,r4[0x4]
800065c2:	0e 9c       	mov	r12,r7
800065c4:	e0 a0 08 28 	rcall	80007614 <_Balloc>
800065c8:	68 4a       	ld.w	r10,r4[0x10]
800065ca:	18 95       	mov	r5,r12
800065cc:	e8 cb ff f4 	sub	r11,r4,-12
800065d0:	2f ea       	sub	r10,-2
800065d2:	2f 4c       	sub	r12,-12
800065d4:	a3 6a       	lsl	r10,0x2
800065d6:	fe b0 e8 3f 	rcall	80003654 <memcpy>
800065da:	0a 9b       	mov	r11,r5
800065dc:	30 1a       	mov	r10,1
800065de:	0e 9c       	mov	r12,r7
800065e0:	e0 a0 09 0a 	rcall	800077f4 <__lshift>
800065e4:	50 44       	stdsp	sp[0x10],r4
800065e6:	40 3a       	lddsp	r10,sp[0xc]
800065e8:	30 19       	mov	r9,1
800065ea:	f5 da c0 01 	bfextu	r10,r10,0x0,0x1
800065ee:	18 94       	mov	r4,r12
800065f0:	50 da       	stdsp	sp[0x34],r10
800065f2:	40 85       	lddsp	r5,sp[0x20]
800065f4:	50 99       	stdsp	sp[0x24],r9
800065f6:	50 26       	stdsp	sp[0x8],r6
800065f8:	50 e1       	stdsp	sp[0x38],r1
800065fa:	04 9b       	mov	r11,r2
800065fc:	06 9c       	mov	r12,r3
800065fe:	fe b0 fa 7f 	rcall	80005afc <quorem>
80006602:	40 4b       	lddsp	r11,sp[0x10]
80006604:	f8 c0 ff d0 	sub	r0,r12,-48
80006608:	06 9c       	mov	r12,r3
8000660a:	e0 a0 07 d1 	rcall	800075ac <__mcmp>
8000660e:	08 9a       	mov	r10,r4
80006610:	50 6c       	stdsp	sp[0x18],r12
80006612:	04 9b       	mov	r11,r2
80006614:	0e 9c       	mov	r12,r7
80006616:	e0 a0 08 87 	rcall	80007724 <__mdiff>
8000661a:	18 91       	mov	r1,r12
8000661c:	78 38       	ld.w	r8,r12[0xc]
8000661e:	58 08       	cp.w	r8,0
80006620:	c0 30       	breq	80006626 <_dtoa_r+0xa0a>
80006622:	30 16       	mov	r6,1
80006624:	c0 68       	rjmp	80006630 <_dtoa_r+0xa14>
80006626:	18 9b       	mov	r11,r12
80006628:	06 9c       	mov	r12,r3
8000662a:	e0 a0 07 c1 	rcall	800075ac <__mcmp>
8000662e:	18 96       	mov	r6,r12
80006630:	0e 9c       	mov	r12,r7
80006632:	02 9b       	mov	r11,r1
80006634:	e0 a0 07 d6 	rcall	800075e0 <_Bfree>
80006638:	40 cc       	lddsp	r12,sp[0x30]
8000663a:	ed ec 10 08 	or	r8,r6,r12
8000663e:	c0 d1       	brne	80006658 <_dtoa_r+0xa3c>
80006640:	40 db       	lddsp	r11,sp[0x34]
80006642:	58 0b       	cp.w	r11,0
80006644:	c0 a1       	brne	80006658 <_dtoa_r+0xa3c>
80006646:	40 26       	lddsp	r6,sp[0x8]
80006648:	e0 40 00 39 	cp.w	r0,57
8000664c:	c3 00       	breq	800066ac <_dtoa_r+0xa90>
8000664e:	40 6a       	lddsp	r10,sp[0x18]
80006650:	58 0a       	cp.w	r10,0
80006652:	e0 89 00 24 	brgt	8000669a <_dtoa_r+0xa7e>
80006656:	c2 f8       	rjmp	800066b4 <_dtoa_r+0xa98>
80006658:	40 69       	lddsp	r9,sp[0x18]
8000665a:	58 09       	cp.w	r9,0
8000665c:	c0 85       	brlt	8000666c <_dtoa_r+0xa50>
8000665e:	12 98       	mov	r8,r9
80006660:	40 cc       	lddsp	r12,sp[0x30]
80006662:	18 48       	or	r8,r12
80006664:	c1 d1       	brne	8000669e <_dtoa_r+0xa82>
80006666:	40 db       	lddsp	r11,sp[0x34]
80006668:	58 0b       	cp.w	r11,0
8000666a:	c1 a1       	brne	8000669e <_dtoa_r+0xa82>
8000666c:	0c 99       	mov	r9,r6
8000666e:	40 26       	lddsp	r6,sp[0x8]
80006670:	58 09       	cp.w	r9,0
80006672:	e0 8a 00 21 	brle	800066b4 <_dtoa_r+0xa98>
80006676:	06 9b       	mov	r11,r3
80006678:	30 1a       	mov	r10,1
8000667a:	0e 9c       	mov	r12,r7
8000667c:	e0 a0 08 bc 	rcall	800077f4 <__lshift>
80006680:	04 9b       	mov	r11,r2
80006682:	18 93       	mov	r3,r12
80006684:	e0 a0 07 94 	rcall	800075ac <__mcmp>
80006688:	e0 89 00 06 	brgt	80006694 <_dtoa_r+0xa78>
8000668c:	c1 41       	brne	800066b4 <_dtoa_r+0xa98>
8000668e:	ed b0 00 00 	bld	r0,0x0
80006692:	c1 11       	brne	800066b4 <_dtoa_r+0xa98>
80006694:	e0 40 00 39 	cp.w	r0,57
80006698:	c0 a0       	breq	800066ac <_dtoa_r+0xa90>
8000669a:	2f f0       	sub	r0,-1
8000669c:	c0 c8       	rjmp	800066b4 <_dtoa_r+0xa98>
8000669e:	58 06       	cp.w	r6,0
800066a0:	e0 8a 00 0c 	brle	800066b8 <_dtoa_r+0xa9c>
800066a4:	40 26       	lddsp	r6,sp[0x8]
800066a6:	e0 40 00 39 	cp.w	r0,57
800066aa:	c0 41       	brne	800066b2 <_dtoa_r+0xa96>
800066ac:	33 98       	mov	r8,57
800066ae:	0a c8       	st.b	r5++,r8
800066b0:	c6 78       	rjmp	8000677e <_dtoa_r+0xb62>
800066b2:	2f f0       	sub	r0,-1
800066b4:	0a c0       	st.b	r5++,r0
800066b6:	c7 58       	rjmp	800067a0 <_dtoa_r+0xb84>
800066b8:	0a c0       	st.b	r5++,r0
800066ba:	40 9a       	lddsp	r10,sp[0x24]
800066bc:	40 e9       	lddsp	r9,sp[0x38]
800066be:	12 3a       	cp.w	r10,r9
800066c0:	c4 30       	breq	80006746 <_dtoa_r+0xb2a>
800066c2:	06 9b       	mov	r11,r3
800066c4:	30 09       	mov	r9,0
800066c6:	30 aa       	mov	r10,10
800066c8:	0e 9c       	mov	r12,r7
800066ca:	e0 a0 09 61 	rcall	8000798c <__multadd>
800066ce:	40 48       	lddsp	r8,sp[0x10]
800066d0:	18 93       	mov	r3,r12
800066d2:	08 38       	cp.w	r8,r4
800066d4:	c0 91       	brne	800066e6 <_dtoa_r+0xaca>
800066d6:	10 9b       	mov	r11,r8
800066d8:	30 09       	mov	r9,0
800066da:	30 aa       	mov	r10,10
800066dc:	0e 9c       	mov	r12,r7
800066de:	e0 a0 09 57 	rcall	8000798c <__multadd>
800066e2:	50 4c       	stdsp	sp[0x10],r12
800066e4:	c0 e8       	rjmp	80006700 <_dtoa_r+0xae4>
800066e6:	40 4b       	lddsp	r11,sp[0x10]
800066e8:	30 09       	mov	r9,0
800066ea:	30 aa       	mov	r10,10
800066ec:	0e 9c       	mov	r12,r7
800066ee:	e0 a0 09 4f 	rcall	8000798c <__multadd>
800066f2:	08 9b       	mov	r11,r4
800066f4:	50 4c       	stdsp	sp[0x10],r12
800066f6:	30 09       	mov	r9,0
800066f8:	30 aa       	mov	r10,10
800066fa:	0e 9c       	mov	r12,r7
800066fc:	e0 a0 09 48 	rcall	8000798c <__multadd>
80006700:	18 94       	mov	r4,r12
80006702:	40 9c       	lddsp	r12,sp[0x24]
80006704:	2f fc       	sub	r12,-1
80006706:	50 9c       	stdsp	sp[0x24],r12
80006708:	c7 9b       	rjmp	800065fa <_dtoa_r+0x9de>
8000670a:	30 18       	mov	r8,1
8000670c:	06 90       	mov	r0,r3
8000670e:	40 85       	lddsp	r5,sp[0x20]
80006710:	08 93       	mov	r3,r4
80006712:	0c 94       	mov	r4,r6
80006714:	10 96       	mov	r6,r8
80006716:	04 9b       	mov	r11,r2
80006718:	00 9c       	mov	r12,r0
8000671a:	fe b0 f9 f1 	rcall	80005afc <quorem>
8000671e:	2d 0c       	sub	r12,-48
80006720:	0a cc       	st.b	r5++,r12
80006722:	02 36       	cp.w	r6,r1
80006724:	c0 a4       	brge	80006738 <_dtoa_r+0xb1c>
80006726:	00 9b       	mov	r11,r0
80006728:	30 09       	mov	r9,0
8000672a:	30 aa       	mov	r10,10
8000672c:	0e 9c       	mov	r12,r7
8000672e:	2f f6       	sub	r6,-1
80006730:	e0 a0 09 2e 	rcall	8000798c <__multadd>
80006734:	18 90       	mov	r0,r12
80006736:	cf 0b       	rjmp	80006716 <_dtoa_r+0xafa>
80006738:	08 96       	mov	r6,r4
8000673a:	30 0b       	mov	r11,0
8000673c:	06 94       	mov	r4,r3
8000673e:	50 4b       	stdsp	sp[0x10],r11
80006740:	00 93       	mov	r3,r0
80006742:	18 90       	mov	r0,r12
80006744:	c0 28       	rjmp	80006748 <_dtoa_r+0xb2c>
80006746:	40 26       	lddsp	r6,sp[0x8]
80006748:	06 9b       	mov	r11,r3
8000674a:	30 1a       	mov	r10,1
8000674c:	0e 9c       	mov	r12,r7
8000674e:	e0 a0 08 53 	rcall	800077f4 <__lshift>
80006752:	04 9b       	mov	r11,r2
80006754:	18 93       	mov	r3,r12
80006756:	e0 a0 07 2b 	rcall	800075ac <__mcmp>
8000675a:	e0 89 00 12 	brgt	8000677e <_dtoa_r+0xb62>
8000675e:	c1 b1       	brne	80006794 <_dtoa_r+0xb78>
80006760:	e1 d0 c0 01 	bfextu	r0,r0,0x0,0x1
80006764:	c0 d1       	brne	8000677e <_dtoa_r+0xb62>
80006766:	c1 78       	rjmp	80006794 <_dtoa_r+0xb78>
80006768:	40 89       	lddsp	r9,sp[0x20]
8000676a:	12 38       	cp.w	r8,r9
8000676c:	c0 30       	breq	80006772 <_dtoa_r+0xb56>
8000676e:	10 95       	mov	r5,r8
80006770:	c0 88       	rjmp	80006780 <_dtoa_r+0xb64>
80006772:	2f f6       	sub	r6,-1
80006774:	50 66       	stdsp	sp[0x18],r6
80006776:	33 18       	mov	r8,49
80006778:	40 8c       	lddsp	r12,sp[0x20]
8000677a:	b8 88       	st.b	r12[0x0],r8
8000677c:	c1 38       	rjmp	800067a2 <_dtoa_r+0xb86>
8000677e:	33 9a       	mov	r10,57
80006780:	0a 98       	mov	r8,r5
80006782:	11 79       	ld.ub	r9,--r8
80006784:	f4 09 18 00 	cp.b	r9,r10
80006788:	cf 00       	breq	80006768 <_dtoa_r+0xb4c>
8000678a:	2f f9       	sub	r9,-1
8000678c:	b0 89       	st.b	r8[0x0],r9
8000678e:	c0 98       	rjmp	800067a0 <_dtoa_r+0xb84>
80006790:	10 95       	mov	r5,r8
80006792:	c0 28       	rjmp	80006796 <_dtoa_r+0xb7a>
80006794:	33 09       	mov	r9,48
80006796:	0a 98       	mov	r8,r5
80006798:	11 7a       	ld.ub	r10,--r8
8000679a:	f2 0a 18 00 	cp.b	r10,r9
8000679e:	cf 90       	breq	80006790 <_dtoa_r+0xb74>
800067a0:	50 66       	stdsp	sp[0x18],r6
800067a2:	04 9b       	mov	r11,r2
800067a4:	0e 9c       	mov	r12,r7
800067a6:	e0 a0 07 1d 	rcall	800075e0 <_Bfree>
800067aa:	58 04       	cp.w	r4,0
800067ac:	c1 20       	breq	800067d0 <_dtoa_r+0xbb4>
800067ae:	40 4b       	lddsp	r11,sp[0x10]
800067b0:	08 3b       	cp.w	r11,r4
800067b2:	5f 19       	srne	r9
800067b4:	58 0b       	cp.w	r11,0
800067b6:	5f 18       	srne	r8
800067b8:	f3 e8 00 08 	and	r8,r9,r8
800067bc:	c0 40       	breq	800067c4 <_dtoa_r+0xba8>
800067be:	0e 9c       	mov	r12,r7
800067c0:	e0 a0 07 10 	rcall	800075e0 <_Bfree>
800067c4:	08 9b       	mov	r11,r4
800067c6:	0e 9c       	mov	r12,r7
800067c8:	e0 a0 07 0c 	rcall	800075e0 <_Bfree>
800067cc:	c0 28       	rjmp	800067d0 <_dtoa_r+0xbb4>
800067ce:	50 66       	stdsp	sp[0x18],r6
800067d0:	0e 9c       	mov	r12,r7
800067d2:	06 9b       	mov	r11,r3
800067d4:	e0 a0 07 06 	rcall	800075e0 <_Bfree>
800067d8:	30 08       	mov	r8,0
800067da:	aa 88       	st.b	r5[0x0],r8
800067dc:	40 68       	lddsp	r8,sp[0x18]
800067de:	41 5a       	lddsp	r10,sp[0x54]
800067e0:	2f f8       	sub	r8,-1
800067e2:	41 29       	lddsp	r9,sp[0x48]
800067e4:	95 08       	st.w	r10[0x0],r8
800067e6:	40 8c       	lddsp	r12,sp[0x20]
800067e8:	58 09       	cp.w	r9,0
800067ea:	fb f8 10 12 	ld.wne	r8,sp[0x48]
800067ee:	f1 f5 1a 00 	st.wne	r8[0x0],r5
800067f2:	2e 6d       	sub	sp,-104
800067f4:	d8 32       	popm	r0-r7,pc
800067f6:	d7 03       	nop

800067f8 <_fflush_r>:
800067f8:	d4 21       	pushm	r4-r7,lr
800067fa:	16 97       	mov	r7,r11
800067fc:	18 96       	mov	r6,r12
800067fe:	76 48       	ld.w	r8,r11[0x10]
80006800:	58 08       	cp.w	r8,0
80006802:	c7 f0       	breq	80006900 <_fflush_r+0x108>
80006804:	58 0c       	cp.w	r12,0
80006806:	c0 50       	breq	80006810 <_fflush_r+0x18>
80006808:	78 68       	ld.w	r8,r12[0x18]
8000680a:	58 08       	cp.w	r8,0
8000680c:	c0 21       	brne	80006810 <_fflush_r+0x18>
8000680e:	cc dc       	rcall	800069a8 <__sinit>
80006810:	fe c8 d0 54 	sub	r8,pc,-12204
80006814:	10 37       	cp.w	r7,r8
80006816:	c0 31       	brne	8000681c <_fflush_r+0x24>
80006818:	6c 07       	ld.w	r7,r6[0x0]
8000681a:	c0 c8       	rjmp	80006832 <_fflush_r+0x3a>
8000681c:	fe c8 d0 40 	sub	r8,pc,-12224
80006820:	10 37       	cp.w	r7,r8
80006822:	c0 31       	brne	80006828 <_fflush_r+0x30>
80006824:	6c 17       	ld.w	r7,r6[0x4]
80006826:	c0 68       	rjmp	80006832 <_fflush_r+0x3a>
80006828:	fe c8 d0 2c 	sub	r8,pc,-12244
8000682c:	10 37       	cp.w	r7,r8
8000682e:	ed f7 00 02 	ld.weq	r7,r6[0x8]
80006832:	8e 6a       	ld.sh	r10,r7[0xc]
80006834:	14 98       	mov	r8,r10
80006836:	ed ba 00 03 	bld	r10,0x3
8000683a:	c4 20       	breq	800068be <_fflush_r+0xc6>
8000683c:	ab ba       	sbr	r10,0xb
8000683e:	ae 6a       	st.h	r7[0xc],r10
80006840:	6e 18       	ld.w	r8,r7[0x4]
80006842:	58 08       	cp.w	r8,0
80006844:	e0 89 00 06 	brgt	80006850 <_fflush_r+0x58>
80006848:	6f 08       	ld.w	r8,r7[0x40]
8000684a:	58 08       	cp.w	r8,0
8000684c:	e0 8a 00 5a 	brle	80006900 <_fflush_r+0x108>
80006850:	6e b8       	ld.w	r8,r7[0x2c]
80006852:	58 08       	cp.w	r8,0
80006854:	c5 60       	breq	80006900 <_fflush_r+0x108>
80006856:	e2 1a 10 00 	andl	r10,0x1000,COH
8000685a:	c0 30       	breq	80006860 <_fflush_r+0x68>
8000685c:	6f 55       	ld.w	r5,r7[0x54]
8000685e:	c0 f8       	rjmp	8000687c <_fflush_r+0x84>
80006860:	30 19       	mov	r9,1
80006862:	6e 8b       	ld.w	r11,r7[0x20]
80006864:	0c 9c       	mov	r12,r6
80006866:	5d 18       	icall	r8
80006868:	18 95       	mov	r5,r12
8000686a:	5b fc       	cp.w	r12,-1
8000686c:	c0 81       	brne	8000687c <_fflush_r+0x84>
8000686e:	6c 38       	ld.w	r8,r6[0xc]
80006870:	59 d8       	cp.w	r8,29
80006872:	c4 70       	breq	80006900 <_fflush_r+0x108>
80006874:	8e 68       	ld.sh	r8,r7[0xc]
80006876:	a7 a8       	sbr	r8,0x6
80006878:	ae 68       	st.h	r7[0xc],r8
8000687a:	d8 22       	popm	r4-r7,pc
8000687c:	8e 68       	ld.sh	r8,r7[0xc]
8000687e:	ed b8 00 02 	bld	r8,0x2
80006882:	c0 91       	brne	80006894 <_fflush_r+0x9c>
80006884:	6e 18       	ld.w	r8,r7[0x4]
80006886:	10 15       	sub	r5,r8
80006888:	6e d8       	ld.w	r8,r7[0x34]
8000688a:	58 08       	cp.w	r8,0
8000688c:	ef f8 10 10 	ld.wne	r8,r7[0x40]
80006890:	eb d8 e1 15 	subne	r5,r5,r8
80006894:	6e b8       	ld.w	r8,r7[0x2c]
80006896:	0c 9c       	mov	r12,r6
80006898:	30 09       	mov	r9,0
8000689a:	0a 9a       	mov	r10,r5
8000689c:	6e 8b       	ld.w	r11,r7[0x20]
8000689e:	5d 18       	icall	r8
800068a0:	8e 68       	ld.sh	r8,r7[0xc]
800068a2:	0a 3c       	cp.w	r12,r5
800068a4:	c2 61       	brne	800068f0 <_fflush_r+0xf8>
800068a6:	ab d8       	cbr	r8,0xb
800068a8:	30 0c       	mov	r12,0
800068aa:	6e 49       	ld.w	r9,r7[0x10]
800068ac:	ae 68       	st.h	r7[0xc],r8
800068ae:	8f 1c       	st.w	r7[0x4],r12
800068b0:	8f 09       	st.w	r7[0x0],r9
800068b2:	ed b8 00 0c 	bld	r8,0xc
800068b6:	c2 51       	brne	80006900 <_fflush_r+0x108>
800068b8:	ef 45 00 54 	st.w	r7[84],r5
800068bc:	d8 22       	popm	r4-r7,pc
800068be:	6e 45       	ld.w	r5,r7[0x10]
800068c0:	58 05       	cp.w	r5,0
800068c2:	c1 f0       	breq	80006900 <_fflush_r+0x108>
800068c4:	6e 04       	ld.w	r4,r7[0x0]
800068c6:	f5 da c0 02 	bfextu	r10,r10,0x0,0x2
800068ca:	8f 05       	st.w	r7[0x0],r5
800068cc:	f9 b8 01 00 	movne	r8,0
800068d0:	ef f8 00 05 	ld.weq	r8,r7[0x14]
800068d4:	0a 14       	sub	r4,r5
800068d6:	8f 28       	st.w	r7[0x8],r8
800068d8:	c1 18       	rjmp	800068fa <_fflush_r+0x102>
800068da:	08 99       	mov	r9,r4
800068dc:	0a 9a       	mov	r10,r5
800068de:	6e a8       	ld.w	r8,r7[0x28]
800068e0:	6e 8b       	ld.w	r11,r7[0x20]
800068e2:	0c 9c       	mov	r12,r6
800068e4:	5d 18       	icall	r8
800068e6:	18 14       	sub	r4,r12
800068e8:	58 0c       	cp.w	r12,0
800068ea:	e0 89 00 07 	brgt	800068f8 <_fflush_r+0x100>
800068ee:	8e 68       	ld.sh	r8,r7[0xc]
800068f0:	a7 a8       	sbr	r8,0x6
800068f2:	3f fc       	mov	r12,-1
800068f4:	ae 68       	st.h	r7[0xc],r8
800068f6:	d8 22       	popm	r4-r7,pc
800068f8:	18 05       	add	r5,r12
800068fa:	58 04       	cp.w	r4,0
800068fc:	fe 99 ff ef 	brgt	800068da <_fflush_r+0xe2>
80006900:	d8 2a       	popm	r4-r7,pc,r12=0
80006902:	d7 03       	nop

80006904 <__sfp_lock_acquire>:
80006904:	5e fc       	retal	r12

80006906 <__sfp_lock_release>:
80006906:	5e fc       	retal	r12

80006908 <_cleanup_r>:
80006908:	d4 01       	pushm	lr
8000690a:	fe cb e8 6a 	sub	r11,pc,-6038
8000690e:	e0 a0 02 fd 	rcall	80006f08 <_fwalk>
80006912:	d8 02       	popm	pc

80006914 <__sfmoreglue>:
80006914:	d4 21       	pushm	r4-r7,lr
80006916:	16 95       	mov	r5,r11
80006918:	f6 06 10 5c 	mul	r6,r11,92
8000691c:	ec cb ff f4 	sub	r11,r6,-12
80006920:	e0 a0 03 84 	rcall	80007028 <_malloc_r>
80006924:	18 97       	mov	r7,r12
80006926:	c0 90       	breq	80006938 <__sfmoreglue+0x24>
80006928:	99 15       	st.w	r12[0x4],r5
8000692a:	30 0b       	mov	r11,0
8000692c:	2f 4c       	sub	r12,-12
8000692e:	0c 9a       	mov	r10,r6
80006930:	8f 2c       	st.w	r7[0x8],r12
80006932:	8f 0b       	st.w	r7[0x0],r11
80006934:	e0 a0 05 bc 	rcall	800074ac <memset>
80006938:	0e 9c       	mov	r12,r7
8000693a:	d8 22       	popm	r4-r7,pc

8000693c <__sfp>:
8000693c:	d4 21       	pushm	r4-r7,lr
8000693e:	fe c8 d5 6a 	sub	r8,pc,-10902
80006942:	18 96       	mov	r6,r12
80006944:	70 07       	ld.w	r7,r8[0x0]
80006946:	6e 68       	ld.w	r8,r7[0x18]
80006948:	58 08       	cp.w	r8,0
8000694a:	c0 31       	brne	80006950 <__sfp+0x14>
8000694c:	0e 9c       	mov	r12,r7
8000694e:	c2 dc       	rcall	800069a8 <__sinit>
80006950:	ee c7 ff 28 	sub	r7,r7,-216
80006954:	30 05       	mov	r5,0
80006956:	6e 2c       	ld.w	r12,r7[0x8]
80006958:	6e 18       	ld.w	r8,r7[0x4]
8000695a:	c0 68       	rjmp	80006966 <__sfp+0x2a>
8000695c:	98 69       	ld.sh	r9,r12[0xc]
8000695e:	ea 09 19 00 	cp.h	r9,r5
80006962:	c1 10       	breq	80006984 <__sfp+0x48>
80006964:	2a 4c       	sub	r12,-92
80006966:	20 18       	sub	r8,1
80006968:	cf a7       	brpl	8000695c <__sfp+0x20>
8000696a:	6e 08       	ld.w	r8,r7[0x0]
8000696c:	58 08       	cp.w	r8,0
8000696e:	c0 61       	brne	8000697a <__sfp+0x3e>
80006970:	30 4b       	mov	r11,4
80006972:	0c 9c       	mov	r12,r6
80006974:	cd 0f       	rcall	80006914 <__sfmoreglue>
80006976:	8f 0c       	st.w	r7[0x0],r12
80006978:	c0 30       	breq	8000697e <__sfp+0x42>
8000697a:	6e 07       	ld.w	r7,r7[0x0]
8000697c:	ce db       	rjmp	80006956 <__sfp+0x1a>
8000697e:	30 c8       	mov	r8,12
80006980:	8d 38       	st.w	r6[0xc],r8
80006982:	d8 22       	popm	r4-r7,pc
80006984:	30 08       	mov	r8,0
80006986:	f9 48 00 4c 	st.w	r12[76],r8
8000698a:	99 08       	st.w	r12[0x0],r8
8000698c:	99 28       	st.w	r12[0x8],r8
8000698e:	99 18       	st.w	r12[0x4],r8
80006990:	99 48       	st.w	r12[0x10],r8
80006992:	99 58       	st.w	r12[0x14],r8
80006994:	99 68       	st.w	r12[0x18],r8
80006996:	99 d8       	st.w	r12[0x34],r8
80006998:	99 e8       	st.w	r12[0x38],r8
8000699a:	f9 48 00 48 	st.w	r12[72],r8
8000699e:	3f f8       	mov	r8,-1
800069a0:	b8 78       	st.h	r12[0xe],r8
800069a2:	30 18       	mov	r8,1
800069a4:	b8 68       	st.h	r12[0xc],r8
800069a6:	d8 22       	popm	r4-r7,pc

800069a8 <__sinit>:
800069a8:	d4 21       	pushm	r4-r7,lr
800069aa:	18 96       	mov	r6,r12
800069ac:	78 67       	ld.w	r7,r12[0x18]
800069ae:	58 07       	cp.w	r7,0
800069b0:	c4 91       	brne	80006a42 <__sinit+0x9a>
800069b2:	fe c8 00 aa 	sub	r8,pc,170
800069b6:	30 15       	mov	r5,1
800069b8:	99 a8       	st.w	r12[0x28],r8
800069ba:	f9 47 00 d8 	st.w	r12[216],r7
800069be:	f9 47 00 dc 	st.w	r12[220],r7
800069c2:	f9 47 00 e0 	st.w	r12[224],r7
800069c6:	99 65       	st.w	r12[0x18],r5
800069c8:	cb af       	rcall	8000693c <__sfp>
800069ca:	8d 0c       	st.w	r6[0x0],r12
800069cc:	0c 9c       	mov	r12,r6
800069ce:	cb 7f       	rcall	8000693c <__sfp>
800069d0:	8d 1c       	st.w	r6[0x4],r12
800069d2:	0c 9c       	mov	r12,r6
800069d4:	cb 4f       	rcall	8000693c <__sfp>
800069d6:	6c 09       	ld.w	r9,r6[0x0]
800069d8:	30 48       	mov	r8,4
800069da:	93 07       	st.w	r9[0x0],r7
800069dc:	b2 68       	st.h	r9[0xc],r8
800069de:	93 17       	st.w	r9[0x4],r7
800069e0:	93 27       	st.w	r9[0x8],r7
800069e2:	6c 18       	ld.w	r8,r6[0x4]
800069e4:	b2 77       	st.h	r9[0xe],r7
800069e6:	93 47       	st.w	r9[0x10],r7
800069e8:	93 57       	st.w	r9[0x14],r7
800069ea:	93 67       	st.w	r9[0x18],r7
800069ec:	93 89       	st.w	r9[0x20],r9
800069ee:	91 07       	st.w	r8[0x0],r7
800069f0:	91 17       	st.w	r8[0x4],r7
800069f2:	91 27       	st.w	r8[0x8],r7
800069f4:	fe ce eb e4 	sub	lr,pc,-5148
800069f8:	fe cb ec 14 	sub	r11,pc,-5100
800069fc:	93 9e       	st.w	r9[0x24],lr
800069fe:	93 ab       	st.w	r9[0x28],r11
80006a00:	fe ca ec 3c 	sub	r10,pc,-5060
80006a04:	fe c4 ec 48 	sub	r4,pc,-5048
80006a08:	93 ba       	st.w	r9[0x2c],r10
80006a0a:	93 c4       	st.w	r9[0x30],r4
80006a0c:	30 99       	mov	r9,9
80006a0e:	b0 69       	st.h	r8[0xc],r9
80006a10:	b0 75       	st.h	r8[0xe],r5
80006a12:	91 c4       	st.w	r8[0x30],r4
80006a14:	91 47       	st.w	r8[0x10],r7
80006a16:	91 57       	st.w	r8[0x14],r7
80006a18:	91 67       	st.w	r8[0x18],r7
80006a1a:	91 88       	st.w	r8[0x20],r8
80006a1c:	91 9e       	st.w	r8[0x24],lr
80006a1e:	91 ab       	st.w	r8[0x28],r11
80006a20:	91 ba       	st.w	r8[0x2c],r10
80006a22:	8d 2c       	st.w	r6[0x8],r12
80006a24:	31 28       	mov	r8,18
80006a26:	99 07       	st.w	r12[0x0],r7
80006a28:	b8 68       	st.h	r12[0xc],r8
80006a2a:	99 17       	st.w	r12[0x4],r7
80006a2c:	99 27       	st.w	r12[0x8],r7
80006a2e:	30 28       	mov	r8,2
80006a30:	b8 78       	st.h	r12[0xe],r8
80006a32:	99 c4       	st.w	r12[0x30],r4
80006a34:	99 67       	st.w	r12[0x18],r7
80006a36:	99 9e       	st.w	r12[0x24],lr
80006a38:	99 ab       	st.w	r12[0x28],r11
80006a3a:	99 ba       	st.w	r12[0x2c],r10
80006a3c:	99 47       	st.w	r12[0x10],r7
80006a3e:	99 57       	st.w	r12[0x14],r7
80006a40:	99 8c       	st.w	r12[0x20],r12
80006a42:	d8 22       	popm	r4-r7,pc

80006a44 <_malloc_trim_r>:
80006a44:	d4 21       	pushm	r4-r7,lr
80006a46:	16 95       	mov	r5,r11
80006a48:	18 97       	mov	r7,r12
80006a4a:	e0 a0 05 38 	rcall	800074ba <__malloc_lock>
80006a4e:	e0 64 01 08 	mov	r4,264
80006a52:	68 28       	ld.w	r8,r4[0x8]
80006a54:	70 16       	ld.w	r6,r8[0x4]
80006a56:	e0 16 ff fc 	andl	r6,0xfffc
80006a5a:	ec c8 ff 91 	sub	r8,r6,-111
80006a5e:	f0 05 01 05 	sub	r5,r8,r5
80006a62:	e0 15 ff 80 	andl	r5,0xff80
80006a66:	ea c5 00 80 	sub	r5,r5,128
80006a6a:	e0 45 00 7f 	cp.w	r5,127
80006a6e:	e0 8a 00 25 	brle	80006ab8 <_malloc_trim_r+0x74>
80006a72:	30 0b       	mov	r11,0
80006a74:	0e 9c       	mov	r12,r7
80006a76:	e0 a0 09 93 	rcall	80007d9c <_sbrk_r>
80006a7a:	68 28       	ld.w	r8,r4[0x8]
80006a7c:	0c 08       	add	r8,r6
80006a7e:	10 3c       	cp.w	r12,r8
80006a80:	c1 c1       	brne	80006ab8 <_malloc_trim_r+0x74>
80006a82:	ea 0b 11 00 	rsub	r11,r5,0
80006a86:	0e 9c       	mov	r12,r7
80006a88:	e0 a0 09 8a 	rcall	80007d9c <_sbrk_r>
80006a8c:	5b fc       	cp.w	r12,-1
80006a8e:	c1 91       	brne	80006ac0 <_malloc_trim_r+0x7c>
80006a90:	30 0b       	mov	r11,0
80006a92:	0e 9c       	mov	r12,r7
80006a94:	e0 a0 09 84 	rcall	80007d9c <_sbrk_r>
80006a98:	68 28       	ld.w	r8,r4[0x8]
80006a9a:	f8 08 01 09 	sub	r9,r12,r8
80006a9e:	58 f9       	cp.w	r9,15
80006aa0:	e0 8a 00 0c 	brle	80006ab8 <_malloc_trim_r+0x74>
80006aa4:	a1 a9       	sbr	r9,0x0
80006aa6:	91 19       	st.w	r8[0x4],r9
80006aa8:	e0 68 05 14 	mov	r8,1300
80006aac:	70 09       	ld.w	r9,r8[0x0]
80006aae:	e0 68 06 34 	mov	r8,1588
80006ab2:	f8 09 01 09 	sub	r9,r12,r9
80006ab6:	91 09       	st.w	r8[0x0],r9
80006ab8:	0e 9c       	mov	r12,r7
80006aba:	e0 a0 05 01 	rcall	800074bc <__malloc_unlock>
80006abe:	d8 2a       	popm	r4-r7,pc,r12=0
80006ac0:	68 28       	ld.w	r8,r4[0x8]
80006ac2:	0a 16       	sub	r6,r5
80006ac4:	a1 a6       	sbr	r6,0x0
80006ac6:	91 16       	st.w	r8[0x4],r6
80006ac8:	e0 68 06 34 	mov	r8,1588
80006acc:	70 09       	ld.w	r9,r8[0x0]
80006ace:	0a 19       	sub	r9,r5
80006ad0:	0e 9c       	mov	r12,r7
80006ad2:	91 09       	st.w	r8[0x0],r9
80006ad4:	e0 a0 04 f4 	rcall	800074bc <__malloc_unlock>
80006ad8:	da 2a       	popm	r4-r7,pc,r12=1
80006ada:	d7 03       	nop

80006adc <_free_r>:
80006adc:	d4 21       	pushm	r4-r7,lr
80006ade:	16 96       	mov	r6,r11
80006ae0:	18 97       	mov	r7,r12
80006ae2:	58 0b       	cp.w	r11,0
80006ae4:	e0 80 00 c0 	breq	80006c64 <_free_r+0x188>
80006ae8:	e0 a0 04 e9 	rcall	800074ba <__malloc_lock>
80006aec:	20 86       	sub	r6,8
80006aee:	e0 6a 01 08 	mov	r10,264
80006af2:	6c 18       	ld.w	r8,r6[0x4]
80006af4:	74 2e       	ld.w	lr,r10[0x8]
80006af6:	f9 d8 c0 01 	bfextu	r12,r8,0x0,0x1
80006afa:	a1 c8       	cbr	r8,0x0
80006afc:	ec 08 00 09 	add	r9,r6,r8
80006b00:	72 1b       	ld.w	r11,r9[0x4]
80006b02:	e0 1b ff fc 	andl	r11,0xfffc
80006b06:	1c 39       	cp.w	r9,lr
80006b08:	c1 e1       	brne	80006b44 <_free_r+0x68>
80006b0a:	f6 08 00 08 	add	r8,r11,r8
80006b0e:	58 0c       	cp.w	r12,0
80006b10:	c0 81       	brne	80006b20 <_free_r+0x44>
80006b12:	6c 09       	ld.w	r9,r6[0x0]
80006b14:	12 16       	sub	r6,r9
80006b16:	12 08       	add	r8,r9
80006b18:	6c 3b       	ld.w	r11,r6[0xc]
80006b1a:	6c 29       	ld.w	r9,r6[0x8]
80006b1c:	97 29       	st.w	r11[0x8],r9
80006b1e:	93 3b       	st.w	r9[0xc],r11
80006b20:	10 99       	mov	r9,r8
80006b22:	95 26       	st.w	r10[0x8],r6
80006b24:	a1 a9       	sbr	r9,0x0
80006b26:	8d 19       	st.w	r6[0x4],r9
80006b28:	e0 69 05 10 	mov	r9,1296
80006b2c:	72 09       	ld.w	r9,r9[0x0]
80006b2e:	12 38       	cp.w	r8,r9
80006b30:	c0 63       	brcs	80006b3c <_free_r+0x60>
80006b32:	e0 68 06 30 	mov	r8,1584
80006b36:	0e 9c       	mov	r12,r7
80006b38:	70 0b       	ld.w	r11,r8[0x0]
80006b3a:	c8 5f       	rcall	80006a44 <_malloc_trim_r>
80006b3c:	0e 9c       	mov	r12,r7
80006b3e:	e0 a0 04 bf 	rcall	800074bc <__malloc_unlock>
80006b42:	d8 22       	popm	r4-r7,pc
80006b44:	93 1b       	st.w	r9[0x4],r11
80006b46:	58 0c       	cp.w	r12,0
80006b48:	c0 30       	breq	80006b4e <_free_r+0x72>
80006b4a:	30 0c       	mov	r12,0
80006b4c:	c1 08       	rjmp	80006b6c <_free_r+0x90>
80006b4e:	6c 0e       	ld.w	lr,r6[0x0]
80006b50:	f4 c5 ff f8 	sub	r5,r10,-8
80006b54:	1c 16       	sub	r6,lr
80006b56:	1c 08       	add	r8,lr
80006b58:	6c 2e       	ld.w	lr,r6[0x8]
80006b5a:	0a 3e       	cp.w	lr,r5
80006b5c:	f9 bc 00 01 	moveq	r12,1
80006b60:	ed f5 10 03 	ld.wne	r5,r6[0xc]
80006b64:	eb fe 1a 02 	st.wne	r5[0x8],lr
80006b68:	fd f5 1a 03 	st.wne	lr[0xc],r5
80006b6c:	f2 0b 00 0e 	add	lr,r9,r11
80006b70:	7c 1e       	ld.w	lr,lr[0x4]
80006b72:	ed be 00 00 	bld	lr,0x0
80006b76:	c1 40       	breq	80006b9e <_free_r+0xc2>
80006b78:	16 08       	add	r8,r11
80006b7a:	58 0c       	cp.w	r12,0
80006b7c:	c0 d1       	brne	80006b96 <_free_r+0xba>
80006b7e:	e0 6e 01 08 	mov	lr,264
80006b82:	72 2b       	ld.w	r11,r9[0x8]
80006b84:	2f 8e       	sub	lr,-8
80006b86:	1c 3b       	cp.w	r11,lr
80006b88:	c0 71       	brne	80006b96 <_free_r+0xba>
80006b8a:	97 36       	st.w	r11[0xc],r6
80006b8c:	97 26       	st.w	r11[0x8],r6
80006b8e:	8d 2b       	st.w	r6[0x8],r11
80006b90:	8d 3b       	st.w	r6[0xc],r11
80006b92:	30 1c       	mov	r12,1
80006b94:	c0 58       	rjmp	80006b9e <_free_r+0xc2>
80006b96:	72 2b       	ld.w	r11,r9[0x8]
80006b98:	72 39       	ld.w	r9,r9[0xc]
80006b9a:	93 2b       	st.w	r9[0x8],r11
80006b9c:	97 39       	st.w	r11[0xc],r9
80006b9e:	10 99       	mov	r9,r8
80006ba0:	ec 08 09 08 	st.w	r6[r8],r8
80006ba4:	a1 a9       	sbr	r9,0x0
80006ba6:	8d 19       	st.w	r6[0x4],r9
80006ba8:	58 0c       	cp.w	r12,0
80006baa:	c5 a1       	brne	80006c5e <_free_r+0x182>
80006bac:	e0 48 01 ff 	cp.w	r8,511
80006bb0:	e0 8b 00 13 	brhi	80006bd6 <_free_r+0xfa>
80006bb4:	a3 98       	lsr	r8,0x3
80006bb6:	f4 08 00 39 	add	r9,r10,r8<<0x3
80006bba:	72 2b       	ld.w	r11,r9[0x8]
80006bbc:	8d 39       	st.w	r6[0xc],r9
80006bbe:	8d 2b       	st.w	r6[0x8],r11
80006bc0:	97 36       	st.w	r11[0xc],r6
80006bc2:	93 26       	st.w	r9[0x8],r6
80006bc4:	a3 48       	asr	r8,0x2
80006bc6:	74 19       	ld.w	r9,r10[0x4]
80006bc8:	30 1b       	mov	r11,1
80006bca:	f6 08 09 48 	lsl	r8,r11,r8
80006bce:	f3 e8 10 08 	or	r8,r9,r8
80006bd2:	95 18       	st.w	r10[0x4],r8
80006bd4:	c4 58       	rjmp	80006c5e <_free_r+0x182>
80006bd6:	f0 0b 16 09 	lsr	r11,r8,0x9
80006bda:	58 4b       	cp.w	r11,4
80006bdc:	e0 8b 00 06 	brhi	80006be8 <_free_r+0x10c>
80006be0:	f0 0b 16 06 	lsr	r11,r8,0x6
80006be4:	2c 8b       	sub	r11,-56
80006be6:	c2 08       	rjmp	80006c26 <_free_r+0x14a>
80006be8:	59 4b       	cp.w	r11,20
80006bea:	e0 8b 00 04 	brhi	80006bf2 <_free_r+0x116>
80006bee:	2a 5b       	sub	r11,-91
80006bf0:	c1 b8       	rjmp	80006c26 <_free_r+0x14a>
80006bf2:	e0 4b 00 54 	cp.w	r11,84
80006bf6:	e0 8b 00 06 	brhi	80006c02 <_free_r+0x126>
80006bfa:	f0 0b 16 0c 	lsr	r11,r8,0xc
80006bfe:	29 2b       	sub	r11,-110
80006c00:	c1 38       	rjmp	80006c26 <_free_r+0x14a>
80006c02:	e0 4b 01 54 	cp.w	r11,340
80006c06:	e0 8b 00 06 	brhi	80006c12 <_free_r+0x136>
80006c0a:	f0 0b 16 0f 	lsr	r11,r8,0xf
80006c0e:	28 9b       	sub	r11,-119
80006c10:	c0 b8       	rjmp	80006c26 <_free_r+0x14a>
80006c12:	e0 4b 05 54 	cp.w	r11,1364
80006c16:	e0 88 00 05 	brls	80006c20 <_free_r+0x144>
80006c1a:	37 eb       	mov	r11,126
80006c1c:	c0 58       	rjmp	80006c26 <_free_r+0x14a>
80006c1e:	d7 03       	nop
80006c20:	f0 0b 16 12 	lsr	r11,r8,0x12
80006c24:	28 4b       	sub	r11,-124
80006c26:	f4 0b 00 3c 	add	r12,r10,r11<<0x3
80006c2a:	78 29       	ld.w	r9,r12[0x8]
80006c2c:	18 39       	cp.w	r9,r12
80006c2e:	c0 e1       	brne	80006c4a <_free_r+0x16e>
80006c30:	74 18       	ld.w	r8,r10[0x4]
80006c32:	a3 4b       	asr	r11,0x2
80006c34:	30 1c       	mov	r12,1
80006c36:	f8 0b 09 4b 	lsl	r11,r12,r11
80006c3a:	f1 eb 10 0b 	or	r11,r8,r11
80006c3e:	12 98       	mov	r8,r9
80006c40:	95 1b       	st.w	r10[0x4],r11
80006c42:	c0 a8       	rjmp	80006c56 <_free_r+0x17a>
80006c44:	72 29       	ld.w	r9,r9[0x8]
80006c46:	18 39       	cp.w	r9,r12
80006c48:	c0 60       	breq	80006c54 <_free_r+0x178>
80006c4a:	72 1a       	ld.w	r10,r9[0x4]
80006c4c:	e0 1a ff fc 	andl	r10,0xfffc
80006c50:	14 38       	cp.w	r8,r10
80006c52:	cf 93       	brcs	80006c44 <_free_r+0x168>
80006c54:	72 38       	ld.w	r8,r9[0xc]
80006c56:	8d 38       	st.w	r6[0xc],r8
80006c58:	8d 29       	st.w	r6[0x8],r9
80006c5a:	93 36       	st.w	r9[0xc],r6
80006c5c:	91 26       	st.w	r8[0x8],r6
80006c5e:	0e 9c       	mov	r12,r7
80006c60:	e0 a0 04 2e 	rcall	800074bc <__malloc_unlock>
80006c64:	d8 22       	popm	r4-r7,pc
80006c66:	d7 03       	nop

80006c68 <__sfvwrite_r>:
80006c68:	d4 31       	pushm	r0-r7,lr
80006c6a:	20 3d       	sub	sp,12
80006c6c:	14 94       	mov	r4,r10
80006c6e:	18 95       	mov	r5,r12
80006c70:	16 97       	mov	r7,r11
80006c72:	74 28       	ld.w	r8,r10[0x8]
80006c74:	58 08       	cp.w	r8,0
80006c76:	e0 80 01 45 	breq	80006f00 <__sfvwrite_r+0x298>
80006c7a:	96 68       	ld.sh	r8,r11[0xc]
80006c7c:	ed b8 00 03 	bld	r8,0x3
80006c80:	c0 41       	brne	80006c88 <__sfvwrite_r+0x20>
80006c82:	76 48       	ld.w	r8,r11[0x10]
80006c84:	58 08       	cp.w	r8,0
80006c86:	c0 c1       	brne	80006c9e <__sfvwrite_r+0x36>
80006c88:	0e 9b       	mov	r11,r7
80006c8a:	0a 9c       	mov	r12,r5
80006c8c:	fe b0 f6 ca 	rcall	80005a20 <__swsetup_r>
80006c90:	c0 70       	breq	80006c9e <__sfvwrite_r+0x36>
80006c92:	8e 68       	ld.sh	r8,r7[0xc]
80006c94:	a7 a8       	sbr	r8,0x6
80006c96:	ae 68       	st.h	r7[0xc],r8
80006c98:	30 98       	mov	r8,9
80006c9a:	8b 38       	st.w	r5[0xc],r8
80006c9c:	c3 09       	rjmp	80006efc <__sfvwrite_r+0x294>
80006c9e:	8e 63       	ld.sh	r3,r7[0xc]
80006ca0:	68 00       	ld.w	r0,r4[0x0]
80006ca2:	06 96       	mov	r6,r3
80006ca4:	e2 16 00 02 	andl	r6,0x2,COH
80006ca8:	c2 10       	breq	80006cea <__sfvwrite_r+0x82>
80006caa:	30 03       	mov	r3,0
80006cac:	e0 62 04 00 	mov	r2,1024
80006cb0:	06 96       	mov	r6,r3
80006cb2:	c0 48       	rjmp	80006cba <__sfvwrite_r+0x52>
80006cb4:	60 03       	ld.w	r3,r0[0x0]
80006cb6:	60 16       	ld.w	r6,r0[0x4]
80006cb8:	2f 80       	sub	r0,-8
80006cba:	58 06       	cp.w	r6,0
80006cbc:	cf c0       	breq	80006cb4 <__sfvwrite_r+0x4c>
80006cbe:	e0 46 04 00 	cp.w	r6,1024
80006cc2:	ec 09 17 80 	movls	r9,r6
80006cc6:	e4 09 17 b0 	movhi	r9,r2
80006cca:	06 9a       	mov	r10,r3
80006ccc:	6e a8       	ld.w	r8,r7[0x28]
80006cce:	6e 8b       	ld.w	r11,r7[0x20]
80006cd0:	0a 9c       	mov	r12,r5
80006cd2:	5d 18       	icall	r8
80006cd4:	18 16       	sub	r6,r12
80006cd6:	58 0c       	cp.w	r12,0
80006cd8:	e0 8a 01 0f 	brle	80006ef6 <__sfvwrite_r+0x28e>
80006cdc:	68 28       	ld.w	r8,r4[0x8]
80006cde:	18 18       	sub	r8,r12
80006ce0:	89 28       	st.w	r4[0x8],r8
80006ce2:	e0 80 01 0f 	breq	80006f00 <__sfvwrite_r+0x298>
80006ce6:	18 03       	add	r3,r12
80006ce8:	ce 9b       	rjmp	80006cba <__sfvwrite_r+0x52>
80006cea:	e7 d3 c0 01 	bfextu	r3,r3,0x0,0x1
80006cee:	c0 70       	breq	80006cfc <__sfvwrite_r+0x94>
80006cf0:	50 06       	stdsp	sp[0x0],r6
80006cf2:	0c 93       	mov	r3,r6
80006cf4:	0c 91       	mov	r1,r6
80006cf6:	50 15       	stdsp	sp[0x4],r5
80006cf8:	08 92       	mov	r2,r4
80006cfa:	c9 e8       	rjmp	80006e36 <__sfvwrite_r+0x1ce>
80006cfc:	06 96       	mov	r6,r3
80006cfe:	08 91       	mov	r1,r4
80006d00:	c0 48       	rjmp	80006d08 <__sfvwrite_r+0xa0>
80006d02:	60 03       	ld.w	r3,r0[0x0]
80006d04:	60 16       	ld.w	r6,r0[0x4]
80006d06:	2f 80       	sub	r0,-8
80006d08:	58 06       	cp.w	r6,0
80006d0a:	cf c0       	breq	80006d02 <__sfvwrite_r+0x9a>
80006d0c:	8e 68       	ld.sh	r8,r7[0xc]
80006d0e:	6e 24       	ld.w	r4,r7[0x8]
80006d10:	10 99       	mov	r9,r8
80006d12:	e2 19 02 00 	andl	r9,0x200,COH
80006d16:	c5 50       	breq	80006dc0 <__sfvwrite_r+0x158>
80006d18:	08 36       	cp.w	r6,r4
80006d1a:	c4 33       	brcs	80006da0 <__sfvwrite_r+0x138>
80006d1c:	10 99       	mov	r9,r8
80006d1e:	e2 19 04 80 	andl	r9,0x480,COH
80006d22:	c3 f0       	breq	80006da0 <__sfvwrite_r+0x138>
80006d24:	6e 4b       	ld.w	r11,r7[0x10]
80006d26:	6e 09       	ld.w	r9,r7[0x0]
80006d28:	16 19       	sub	r9,r11
80006d2a:	50 09       	stdsp	sp[0x0],r9
80006d2c:	6e 59       	ld.w	r9,r7[0x14]
80006d2e:	10 9c       	mov	r12,r8
80006d30:	f2 09 00 1a 	add	r10,r9,r9<<0x1
80006d34:	30 28       	mov	r8,2
80006d36:	f4 08 0c 08 	divs	r8,r10,r8
80006d3a:	fa e9 00 04 	st.d	sp[4],r8
80006d3e:	10 94       	mov	r4,r8
80006d40:	40 09       	lddsp	r9,sp[0x0]
80006d42:	e2 1c 04 00 	andl	r12,0x400,COH
80006d46:	2f f9       	sub	r9,-1
80006d48:	0c 09       	add	r9,r6
80006d4a:	12 38       	cp.w	r8,r9
80006d4c:	f2 04 17 30 	movlo	r4,r9
80006d50:	58 0c       	cp.w	r12,0
80006d52:	c1 00       	breq	80006d72 <__sfvwrite_r+0x10a>
80006d54:	08 9b       	mov	r11,r4
80006d56:	0a 9c       	mov	r12,r5
80006d58:	c6 8d       	rcall	80007028 <_malloc_r>
80006d5a:	18 92       	mov	r2,r12
80006d5c:	c1 40       	breq	80006d84 <__sfvwrite_r+0x11c>
80006d5e:	40 0a       	lddsp	r10,sp[0x0]
80006d60:	6e 4b       	ld.w	r11,r7[0x10]
80006d62:	fe b0 e4 79 	rcall	80003654 <memcpy>
80006d66:	8e 68       	ld.sh	r8,r7[0xc]
80006d68:	e0 18 fb 7f 	andl	r8,0xfb7f
80006d6c:	a7 b8       	sbr	r8,0x7
80006d6e:	ae 68       	st.h	r7[0xc],r8
80006d70:	c0 d8       	rjmp	80006d8a <__sfvwrite_r+0x122>
80006d72:	08 9a       	mov	r10,r4
80006d74:	0a 9c       	mov	r12,r5
80006d76:	e0 a0 06 8f 	rcall	80007a94 <_realloc_r>
80006d7a:	18 92       	mov	r2,r12
80006d7c:	c0 71       	brne	80006d8a <__sfvwrite_r+0x122>
80006d7e:	6e 4b       	ld.w	r11,r7[0x10]
80006d80:	0a 9c       	mov	r12,r5
80006d82:	ca de       	rcall	80006adc <_free_r>
80006d84:	30 c8       	mov	r8,12
80006d86:	8b 38       	st.w	r5[0xc],r8
80006d88:	cb 78       	rjmp	80006ef6 <__sfvwrite_r+0x28e>
80006d8a:	40 0a       	lddsp	r10,sp[0x0]
80006d8c:	40 09       	lddsp	r9,sp[0x0]
80006d8e:	e8 0a 01 0a 	sub	r10,r4,r10
80006d92:	e4 09 00 08 	add	r8,r2,r9
80006d96:	8f 54       	st.w	r7[0x14],r4
80006d98:	8f 2a       	st.w	r7[0x8],r10
80006d9a:	8f 08       	st.w	r7[0x0],r8
80006d9c:	8f 42       	st.w	r7[0x10],r2
80006d9e:	0c 94       	mov	r4,r6
80006da0:	08 36       	cp.w	r6,r4
80006da2:	ec 04 17 30 	movlo	r4,r6
80006da6:	06 9b       	mov	r11,r3
80006da8:	08 9a       	mov	r10,r4
80006daa:	6e 0c       	ld.w	r12,r7[0x0]
80006dac:	e0 a0 03 61 	rcall	8000746e <memmove>
80006db0:	6e 08       	ld.w	r8,r7[0x0]
80006db2:	08 08       	add	r8,r4
80006db4:	8f 08       	st.w	r7[0x0],r8
80006db6:	6e 28       	ld.w	r8,r7[0x8]
80006db8:	08 18       	sub	r8,r4
80006dba:	0c 94       	mov	r4,r6
80006dbc:	8f 28       	st.w	r7[0x8],r8
80006dbe:	c3 08       	rjmp	80006e1e <__sfvwrite_r+0x1b6>
80006dc0:	08 36       	cp.w	r6,r4
80006dc2:	5f ba       	srhi	r10
80006dc4:	6e 0c       	ld.w	r12,r7[0x0]
80006dc6:	6e 48       	ld.w	r8,r7[0x10]
80006dc8:	10 3c       	cp.w	r12,r8
80006dca:	5f b8       	srhi	r8
80006dcc:	f5 e8 00 08 	and	r8,r10,r8
80006dd0:	f2 08 18 00 	cp.b	r8,r9
80006dd4:	c0 e0       	breq	80006df0 <__sfvwrite_r+0x188>
80006dd6:	06 9b       	mov	r11,r3
80006dd8:	08 9a       	mov	r10,r4
80006dda:	e0 a0 03 4a 	rcall	8000746e <memmove>
80006dde:	6e 08       	ld.w	r8,r7[0x0]
80006de0:	08 08       	add	r8,r4
80006de2:	0e 9b       	mov	r11,r7
80006de4:	8f 08       	st.w	r7[0x0],r8
80006de6:	0a 9c       	mov	r12,r5
80006de8:	fe b0 fd 08 	rcall	800067f8 <_fflush_r>
80006dec:	c1 90       	breq	80006e1e <__sfvwrite_r+0x1b6>
80006dee:	c8 48       	rjmp	80006ef6 <__sfvwrite_r+0x28e>
80006df0:	6e 59       	ld.w	r9,r7[0x14]
80006df2:	12 36       	cp.w	r6,r9
80006df4:	c0 a3       	brcs	80006e08 <__sfvwrite_r+0x1a0>
80006df6:	6e a8       	ld.w	r8,r7[0x28]
80006df8:	06 9a       	mov	r10,r3
80006dfa:	6e 8b       	ld.w	r11,r7[0x20]
80006dfc:	0a 9c       	mov	r12,r5
80006dfe:	5d 18       	icall	r8
80006e00:	18 94       	mov	r4,r12
80006e02:	e0 89 00 0e 	brgt	80006e1e <__sfvwrite_r+0x1b6>
80006e06:	c7 88       	rjmp	80006ef6 <__sfvwrite_r+0x28e>
80006e08:	0c 9a       	mov	r10,r6
80006e0a:	06 9b       	mov	r11,r3
80006e0c:	e0 a0 03 31 	rcall	8000746e <memmove>
80006e10:	6e 08       	ld.w	r8,r7[0x0]
80006e12:	0c 08       	add	r8,r6
80006e14:	0c 94       	mov	r4,r6
80006e16:	8f 08       	st.w	r7[0x0],r8
80006e18:	6e 28       	ld.w	r8,r7[0x8]
80006e1a:	0c 18       	sub	r8,r6
80006e1c:	8f 28       	st.w	r7[0x8],r8
80006e1e:	62 28       	ld.w	r8,r1[0x8]
80006e20:	08 18       	sub	r8,r4
80006e22:	83 28       	st.w	r1[0x8],r8
80006e24:	c6 e0       	breq	80006f00 <__sfvwrite_r+0x298>
80006e26:	08 16       	sub	r6,r4
80006e28:	08 03       	add	r3,r4
80006e2a:	c6 fb       	rjmp	80006d08 <__sfvwrite_r+0xa0>
80006e2c:	60 03       	ld.w	r3,r0[0x0]
80006e2e:	60 11       	ld.w	r1,r0[0x4]
80006e30:	30 08       	mov	r8,0
80006e32:	2f 80       	sub	r0,-8
80006e34:	50 08       	stdsp	sp[0x0],r8
80006e36:	58 01       	cp.w	r1,0
80006e38:	cf a0       	breq	80006e2c <__sfvwrite_r+0x1c4>
80006e3a:	40 0a       	lddsp	r10,sp[0x0]
80006e3c:	58 0a       	cp.w	r10,0
80006e3e:	c1 51       	brne	80006e68 <__sfvwrite_r+0x200>
80006e40:	e2 c6 ff ff 	sub	r6,r1,-1
80006e44:	02 9a       	mov	r10,r1
80006e46:	30 ab       	mov	r11,10
80006e48:	06 9c       	mov	r12,r3
80006e4a:	e0 a0 03 07 	rcall	80007458 <memchr>
80006e4e:	f8 c8 ff ff 	sub	r8,r12,-1
80006e52:	58 0c       	cp.w	r12,0
80006e54:	f1 d3 e1 16 	subne	r6,r8,r3
80006e58:	f9 b9 01 01 	movne	r9,1
80006e5c:	fb f9 1a 00 	st.wne	sp[0x0],r9
80006e60:	f9 b8 00 01 	moveq	r8,1
80006e64:	fb f8 0a 00 	st.weq	sp[0x0],r8
80006e68:	02 36       	cp.w	r6,r1
80006e6a:	ec 04 17 80 	movls	r4,r6
80006e6e:	e2 04 17 b0 	movhi	r4,r1
80006e72:	6e 59       	ld.w	r9,r7[0x14]
80006e74:	6e 25       	ld.w	r5,r7[0x8]
80006e76:	f2 05 00 05 	add	r5,r9,r5
80006e7a:	0a 34       	cp.w	r4,r5
80006e7c:	5f 9a       	srgt	r10
80006e7e:	6e 0c       	ld.w	r12,r7[0x0]
80006e80:	6e 48       	ld.w	r8,r7[0x10]
80006e82:	10 3c       	cp.w	r12,r8
80006e84:	5f b8       	srhi	r8
80006e86:	f5 e8 00 08 	and	r8,r10,r8
80006e8a:	30 0a       	mov	r10,0
80006e8c:	f4 08 18 00 	cp.b	r8,r10
80006e90:	c0 e0       	breq	80006eac <__sfvwrite_r+0x244>
80006e92:	06 9b       	mov	r11,r3
80006e94:	0a 9a       	mov	r10,r5
80006e96:	e0 a0 02 ec 	rcall	8000746e <memmove>
80006e9a:	6e 08       	ld.w	r8,r7[0x0]
80006e9c:	0a 08       	add	r8,r5
80006e9e:	0e 9b       	mov	r11,r7
80006ea0:	8f 08       	st.w	r7[0x0],r8
80006ea2:	40 1c       	lddsp	r12,sp[0x4]
80006ea4:	fe b0 fc aa 	rcall	800067f8 <_fflush_r>
80006ea8:	c1 80       	breq	80006ed8 <__sfvwrite_r+0x270>
80006eaa:	c2 68       	rjmp	80006ef6 <__sfvwrite_r+0x28e>
80006eac:	12 34       	cp.w	r4,r9
80006eae:	c0 a5       	brlt	80006ec2 <__sfvwrite_r+0x25a>
80006eb0:	6e a8       	ld.w	r8,r7[0x28]
80006eb2:	06 9a       	mov	r10,r3
80006eb4:	6e 8b       	ld.w	r11,r7[0x20]
80006eb6:	40 1c       	lddsp	r12,sp[0x4]
80006eb8:	5d 18       	icall	r8
80006eba:	18 95       	mov	r5,r12
80006ebc:	e0 89 00 0e 	brgt	80006ed8 <__sfvwrite_r+0x270>
80006ec0:	c1 b8       	rjmp	80006ef6 <__sfvwrite_r+0x28e>
80006ec2:	08 9a       	mov	r10,r4
80006ec4:	06 9b       	mov	r11,r3
80006ec6:	e0 a0 02 d4 	rcall	8000746e <memmove>
80006eca:	6e 08       	ld.w	r8,r7[0x0]
80006ecc:	08 08       	add	r8,r4
80006ece:	08 95       	mov	r5,r4
80006ed0:	8f 08       	st.w	r7[0x0],r8
80006ed2:	6e 28       	ld.w	r8,r7[0x8]
80006ed4:	08 18       	sub	r8,r4
80006ed6:	8f 28       	st.w	r7[0x8],r8
80006ed8:	0a 16       	sub	r6,r5
80006eda:	c0 71       	brne	80006ee8 <__sfvwrite_r+0x280>
80006edc:	0e 9b       	mov	r11,r7
80006ede:	40 1c       	lddsp	r12,sp[0x4]
80006ee0:	fe b0 fc 8c 	rcall	800067f8 <_fflush_r>
80006ee4:	c0 91       	brne	80006ef6 <__sfvwrite_r+0x28e>
80006ee6:	50 06       	stdsp	sp[0x0],r6
80006ee8:	64 28       	ld.w	r8,r2[0x8]
80006eea:	0a 18       	sub	r8,r5
80006eec:	85 28       	st.w	r2[0x8],r8
80006eee:	c0 90       	breq	80006f00 <__sfvwrite_r+0x298>
80006ef0:	0a 11       	sub	r1,r5
80006ef2:	0a 03       	add	r3,r5
80006ef4:	ca 1b       	rjmp	80006e36 <__sfvwrite_r+0x1ce>
80006ef6:	8e 68       	ld.sh	r8,r7[0xc]
80006ef8:	a7 a8       	sbr	r8,0x6
80006efa:	ae 68       	st.h	r7[0xc],r8
80006efc:	3f fc       	mov	r12,-1
80006efe:	c0 28       	rjmp	80006f02 <__sfvwrite_r+0x29a>
80006f00:	30 0c       	mov	r12,0
80006f02:	2f dd       	sub	sp,-12
80006f04:	d8 32       	popm	r0-r7,pc
80006f06:	d7 03       	nop

80006f08 <_fwalk>:
80006f08:	d4 31       	pushm	r0-r7,lr
80006f0a:	30 05       	mov	r5,0
80006f0c:	16 91       	mov	r1,r11
80006f0e:	f8 c7 ff 28 	sub	r7,r12,-216
80006f12:	0a 92       	mov	r2,r5
80006f14:	fe b0 fc f8 	rcall	80006904 <__sfp_lock_acquire>
80006f18:	3f f3       	mov	r3,-1
80006f1a:	c1 68       	rjmp	80006f46 <_fwalk+0x3e>
80006f1c:	6e 26       	ld.w	r6,r7[0x8]
80006f1e:	6e 14       	ld.w	r4,r7[0x4]
80006f20:	2f 46       	sub	r6,-12
80006f22:	c0 c8       	rjmp	80006f3a <_fwalk+0x32>
80006f24:	8c 08       	ld.sh	r8,r6[0x0]
80006f26:	e4 08 19 00 	cp.h	r8,r2
80006f2a:	c0 70       	breq	80006f38 <_fwalk+0x30>
80006f2c:	8c 18       	ld.sh	r8,r6[0x2]
80006f2e:	e6 08 19 00 	cp.h	r8,r3
80006f32:	c0 30       	breq	80006f38 <_fwalk+0x30>
80006f34:	5d 11       	icall	r1
80006f36:	18 45       	or	r5,r12
80006f38:	2a 46       	sub	r6,-92
80006f3a:	20 14       	sub	r4,1
80006f3c:	ec cc 00 0c 	sub	r12,r6,12
80006f40:	58 04       	cp.w	r4,0
80006f42:	cf 14       	brge	80006f24 <_fwalk+0x1c>
80006f44:	6e 07       	ld.w	r7,r7[0x0]
80006f46:	58 07       	cp.w	r7,0
80006f48:	ce a1       	brne	80006f1c <_fwalk+0x14>
80006f4a:	fe b0 fc de 	rcall	80006906 <__sfp_lock_release>
80006f4e:	0a 9c       	mov	r12,r5
80006f50:	d8 32       	popm	r0-r7,pc
80006f52:	d7 03       	nop

80006f54 <_localeconv_r>:
80006f54:	fe cc d7 38 	sub	r12,pc,-10440
80006f58:	5e fc       	retal	r12
80006f5a:	d7 03       	nop

80006f5c <__smakebuf_r>:
80006f5c:	d4 21       	pushm	r4-r7,lr
80006f5e:	20 fd       	sub	sp,60
80006f60:	96 68       	ld.sh	r8,r11[0xc]
80006f62:	16 97       	mov	r7,r11
80006f64:	18 96       	mov	r6,r12
80006f66:	e2 18 00 02 	andl	r8,0x2,COH
80006f6a:	c3 c1       	brne	80006fe2 <__smakebuf_r+0x86>
80006f6c:	96 7b       	ld.sh	r11,r11[0xe]
80006f6e:	f0 0b 19 00 	cp.h	r11,r8
80006f72:	c0 55       	brlt	80006f7c <__smakebuf_r+0x20>
80006f74:	1a 9a       	mov	r10,sp
80006f76:	e0 a0 08 9d 	rcall	800080b0 <_fstat_r>
80006f7a:	c0 f4       	brge	80006f98 <__smakebuf_r+0x3c>
80006f7c:	8e 65       	ld.sh	r5,r7[0xc]
80006f7e:	0a 98       	mov	r8,r5
80006f80:	ab b8       	sbr	r8,0xb
80006f82:	e2 15 00 80 	andl	r5,0x80,COH
80006f86:	ae 68       	st.h	r7[0xc],r8
80006f88:	30 04       	mov	r4,0
80006f8a:	e0 68 04 00 	mov	r8,1024
80006f8e:	f9 b5 01 40 	movne	r5,64
80006f92:	f0 05 17 00 	moveq	r5,r8
80006f96:	c1 c8       	rjmp	80006fce <__smakebuf_r+0x72>
80006f98:	40 18       	lddsp	r8,sp[0x4]
80006f9a:	e2 18 f0 00 	andl	r8,0xf000,COH
80006f9e:	e0 48 20 00 	cp.w	r8,8192
80006fa2:	5f 04       	sreq	r4
80006fa4:	e0 48 80 00 	cp.w	r8,32768
80006fa8:	c0 e1       	brne	80006fc4 <__smakebuf_r+0x68>
80006faa:	6e b9       	ld.w	r9,r7[0x2c]
80006fac:	fe c8 f1 e8 	sub	r8,pc,-3608
80006fb0:	10 39       	cp.w	r9,r8
80006fb2:	c0 91       	brne	80006fc4 <__smakebuf_r+0x68>
80006fb4:	8e 68       	ld.sh	r8,r7[0xc]
80006fb6:	e0 65 04 00 	mov	r5,1024
80006fba:	ab a8       	sbr	r8,0xa
80006fbc:	ef 45 00 50 	st.w	r7[80],r5
80006fc0:	ae 68       	st.h	r7[0xc],r8
80006fc2:	c0 68       	rjmp	80006fce <__smakebuf_r+0x72>
80006fc4:	8e 68       	ld.sh	r8,r7[0xc]
80006fc6:	e0 65 04 00 	mov	r5,1024
80006fca:	ab b8       	sbr	r8,0xb
80006fcc:	ae 68       	st.h	r7[0xc],r8
80006fce:	0a 9b       	mov	r11,r5
80006fd0:	0c 9c       	mov	r12,r6
80006fd2:	c2 bc       	rcall	80007028 <_malloc_r>
80006fd4:	8e 68       	ld.sh	r8,r7[0xc]
80006fd6:	c0 d1       	brne	80006ff0 <__smakebuf_r+0x94>
80006fd8:	ed b8 00 09 	bld	r8,0x9
80006fdc:	c1 b0       	breq	80007012 <__smakebuf_r+0xb6>
80006fde:	a1 b8       	sbr	r8,0x1
80006fe0:	ae 68       	st.h	r7[0xc],r8
80006fe2:	ee c8 ff b9 	sub	r8,r7,-71
80006fe6:	8f 48       	st.w	r7[0x10],r8
80006fe8:	8f 08       	st.w	r7[0x0],r8
80006fea:	30 18       	mov	r8,1
80006fec:	8f 58       	st.w	r7[0x14],r8
80006fee:	c1 28       	rjmp	80007012 <__smakebuf_r+0xb6>
80006ff0:	a7 b8       	sbr	r8,0x7
80006ff2:	8f 4c       	st.w	r7[0x10],r12
80006ff4:	ae 68       	st.h	r7[0xc],r8
80006ff6:	8f 55       	st.w	r7[0x14],r5
80006ff8:	fe c8 06 f0 	sub	r8,pc,1776
80006ffc:	8f 0c       	st.w	r7[0x0],r12
80006ffe:	8d a8       	st.w	r6[0x28],r8
80007000:	58 04       	cp.w	r4,0
80007002:	c0 80       	breq	80007012 <__smakebuf_r+0xb6>
80007004:	8e 7c       	ld.sh	r12,r7[0xe]
80007006:	e0 a0 07 47 	rcall	80007e94 <isatty>
8000700a:	c0 40       	breq	80007012 <__smakebuf_r+0xb6>
8000700c:	8e 68       	ld.sh	r8,r7[0xc]
8000700e:	a1 a8       	sbr	r8,0x0
80007010:	ae 68       	st.h	r7[0xc],r8
80007012:	2f 1d       	sub	sp,-60
80007014:	d8 22       	popm	r4-r7,pc
80007016:	d7 03       	nop

80007018 <malloc>:
80007018:	d4 01       	pushm	lr
8000701a:	e0 68 01 04 	mov	r8,260
8000701e:	18 9b       	mov	r11,r12
80007020:	70 0c       	ld.w	r12,r8[0x0]
80007022:	c0 3c       	rcall	80007028 <_malloc_r>
80007024:	d8 02       	popm	pc
80007026:	d7 03       	nop

80007028 <_malloc_r>:
80007028:	d4 31       	pushm	r0-r7,lr
8000702a:	f6 c8 ff f5 	sub	r8,r11,-11
8000702e:	18 95       	mov	r5,r12
80007030:	10 97       	mov	r7,r8
80007032:	e0 17 ff f8 	andl	r7,0xfff8
80007036:	59 68       	cp.w	r8,22
80007038:	f9 b7 08 10 	movls	r7,16
8000703c:	16 37       	cp.w	r7,r11
8000703e:	5f 38       	srlo	r8
80007040:	f1 e7 13 f8 	or	r8,r8,r7>>0x1f
80007044:	c0 50       	breq	8000704e <_malloc_r+0x26>
80007046:	30 c8       	mov	r8,12
80007048:	99 38       	st.w	r12[0xc],r8
8000704a:	e0 8f 01 f7 	bral	80007438 <_malloc_r+0x410>
8000704e:	e0 a0 02 36 	rcall	800074ba <__malloc_lock>
80007052:	e0 47 01 f7 	cp.w	r7,503
80007056:	e0 8b 00 1d 	brhi	80007090 <_malloc_r+0x68>
8000705a:	ee 03 16 03 	lsr	r3,r7,0x3
8000705e:	e0 68 01 08 	mov	r8,264
80007062:	f0 03 00 38 	add	r8,r8,r3<<0x3
80007066:	70 36       	ld.w	r6,r8[0xc]
80007068:	10 36       	cp.w	r6,r8
8000706a:	c0 61       	brne	80007076 <_malloc_r+0x4e>
8000706c:	ec c8 ff f8 	sub	r8,r6,-8
80007070:	70 36       	ld.w	r6,r8[0xc]
80007072:	10 36       	cp.w	r6,r8
80007074:	c0 c0       	breq	8000708c <_malloc_r+0x64>
80007076:	6c 18       	ld.w	r8,r6[0x4]
80007078:	e0 18 ff fc 	andl	r8,0xfffc
8000707c:	6c 3a       	ld.w	r10,r6[0xc]
8000707e:	ec 08 00 09 	add	r9,r6,r8
80007082:	0a 9c       	mov	r12,r5
80007084:	6c 28       	ld.w	r8,r6[0x8]
80007086:	95 28       	st.w	r10[0x8],r8
80007088:	91 3a       	st.w	r8[0xc],r10
8000708a:	c4 78       	rjmp	80007118 <_malloc_r+0xf0>
8000708c:	2f e3       	sub	r3,-2
8000708e:	c4 d8       	rjmp	80007128 <_malloc_r+0x100>
80007090:	ee 03 16 09 	lsr	r3,r7,0x9
80007094:	c0 41       	brne	8000709c <_malloc_r+0x74>
80007096:	ee 03 16 03 	lsr	r3,r7,0x3
8000709a:	c2 68       	rjmp	800070e6 <_malloc_r+0xbe>
8000709c:	58 43       	cp.w	r3,4
8000709e:	e0 8b 00 06 	brhi	800070aa <_malloc_r+0x82>
800070a2:	ee 03 16 06 	lsr	r3,r7,0x6
800070a6:	2c 83       	sub	r3,-56
800070a8:	c1 f8       	rjmp	800070e6 <_malloc_r+0xbe>
800070aa:	59 43       	cp.w	r3,20
800070ac:	e0 8b 00 04 	brhi	800070b4 <_malloc_r+0x8c>
800070b0:	2a 53       	sub	r3,-91
800070b2:	c1 a8       	rjmp	800070e6 <_malloc_r+0xbe>
800070b4:	e0 43 00 54 	cp.w	r3,84
800070b8:	e0 8b 00 06 	brhi	800070c4 <_malloc_r+0x9c>
800070bc:	ee 03 16 0c 	lsr	r3,r7,0xc
800070c0:	29 23       	sub	r3,-110
800070c2:	c1 28       	rjmp	800070e6 <_malloc_r+0xbe>
800070c4:	e0 43 01 54 	cp.w	r3,340
800070c8:	e0 8b 00 06 	brhi	800070d4 <_malloc_r+0xac>
800070cc:	ee 03 16 0f 	lsr	r3,r7,0xf
800070d0:	28 93       	sub	r3,-119
800070d2:	c0 a8       	rjmp	800070e6 <_malloc_r+0xbe>
800070d4:	e0 43 05 54 	cp.w	r3,1364
800070d8:	e0 88 00 04 	brls	800070e0 <_malloc_r+0xb8>
800070dc:	37 e3       	mov	r3,126
800070de:	c0 48       	rjmp	800070e6 <_malloc_r+0xbe>
800070e0:	ee 03 16 12 	lsr	r3,r7,0x12
800070e4:	28 43       	sub	r3,-124
800070e6:	e0 6a 01 08 	mov	r10,264
800070ea:	f4 03 00 3a 	add	r10,r10,r3<<0x3
800070ee:	74 36       	ld.w	r6,r10[0xc]
800070f0:	c1 98       	rjmp	80007122 <_malloc_r+0xfa>
800070f2:	6c 19       	ld.w	r9,r6[0x4]
800070f4:	e0 19 ff fc 	andl	r9,0xfffc
800070f8:	f2 07 01 0b 	sub	r11,r9,r7
800070fc:	58 fb       	cp.w	r11,15
800070fe:	e0 8a 00 04 	brle	80007106 <_malloc_r+0xde>
80007102:	20 13       	sub	r3,1
80007104:	c1 18       	rjmp	80007126 <_malloc_r+0xfe>
80007106:	6c 38       	ld.w	r8,r6[0xc]
80007108:	58 0b       	cp.w	r11,0
8000710a:	c0 b5       	brlt	80007120 <_malloc_r+0xf8>
8000710c:	6c 2a       	ld.w	r10,r6[0x8]
8000710e:	ec 09 00 09 	add	r9,r6,r9
80007112:	0a 9c       	mov	r12,r5
80007114:	91 2a       	st.w	r8[0x8],r10
80007116:	95 38       	st.w	r10[0xc],r8
80007118:	72 18       	ld.w	r8,r9[0x4]
8000711a:	a1 a8       	sbr	r8,0x0
8000711c:	93 18       	st.w	r9[0x4],r8
8000711e:	cb c8       	rjmp	80007296 <_malloc_r+0x26e>
80007120:	10 96       	mov	r6,r8
80007122:	14 36       	cp.w	r6,r10
80007124:	ce 71       	brne	800070f2 <_malloc_r+0xca>
80007126:	2f f3       	sub	r3,-1
80007128:	e0 6a 01 08 	mov	r10,264
8000712c:	f4 cc ff f8 	sub	r12,r10,-8
80007130:	78 26       	ld.w	r6,r12[0x8]
80007132:	18 36       	cp.w	r6,r12
80007134:	c6 c0       	breq	8000720c <_malloc_r+0x1e4>
80007136:	6c 19       	ld.w	r9,r6[0x4]
80007138:	e0 19 ff fc 	andl	r9,0xfffc
8000713c:	f2 07 01 08 	sub	r8,r9,r7
80007140:	58 f8       	cp.w	r8,15
80007142:	e0 89 00 8f 	brgt	80007260 <_malloc_r+0x238>
80007146:	99 3c       	st.w	r12[0xc],r12
80007148:	99 2c       	st.w	r12[0x8],r12
8000714a:	58 08       	cp.w	r8,0
8000714c:	c0 55       	brlt	80007156 <_malloc_r+0x12e>
8000714e:	ec 09 00 09 	add	r9,r6,r9
80007152:	0a 9c       	mov	r12,r5
80007154:	ce 2b       	rjmp	80007118 <_malloc_r+0xf0>
80007156:	e0 49 01 ff 	cp.w	r9,511
8000715a:	e0 8b 00 13 	brhi	80007180 <_malloc_r+0x158>
8000715e:	a3 99       	lsr	r9,0x3
80007160:	f4 09 00 38 	add	r8,r10,r9<<0x3
80007164:	70 2b       	ld.w	r11,r8[0x8]
80007166:	8d 38       	st.w	r6[0xc],r8
80007168:	8d 2b       	st.w	r6[0x8],r11
8000716a:	97 36       	st.w	r11[0xc],r6
8000716c:	91 26       	st.w	r8[0x8],r6
8000716e:	a3 49       	asr	r9,0x2
80007170:	74 18       	ld.w	r8,r10[0x4]
80007172:	30 1b       	mov	r11,1
80007174:	f6 09 09 49 	lsl	r9,r11,r9
80007178:	f1 e9 10 09 	or	r9,r8,r9
8000717c:	95 19       	st.w	r10[0x4],r9
8000717e:	c4 78       	rjmp	8000720c <_malloc_r+0x1e4>
80007180:	f2 0a 16 09 	lsr	r10,r9,0x9
80007184:	58 4a       	cp.w	r10,4
80007186:	e0 8b 00 07 	brhi	80007194 <_malloc_r+0x16c>
8000718a:	f2 0a 16 06 	lsr	r10,r9,0x6
8000718e:	2c 8a       	sub	r10,-56
80007190:	c2 08       	rjmp	800071d0 <_malloc_r+0x1a8>
80007192:	d7 03       	nop
80007194:	59 4a       	cp.w	r10,20
80007196:	e0 8b 00 04 	brhi	8000719e <_malloc_r+0x176>
8000719a:	2a 5a       	sub	r10,-91
8000719c:	c1 a8       	rjmp	800071d0 <_malloc_r+0x1a8>
8000719e:	e0 4a 00 54 	cp.w	r10,84
800071a2:	e0 8b 00 06 	brhi	800071ae <_malloc_r+0x186>
800071a6:	f2 0a 16 0c 	lsr	r10,r9,0xc
800071aa:	29 2a       	sub	r10,-110
800071ac:	c1 28       	rjmp	800071d0 <_malloc_r+0x1a8>
800071ae:	e0 4a 01 54 	cp.w	r10,340
800071b2:	e0 8b 00 06 	brhi	800071be <_malloc_r+0x196>
800071b6:	f2 0a 16 0f 	lsr	r10,r9,0xf
800071ba:	28 9a       	sub	r10,-119
800071bc:	c0 a8       	rjmp	800071d0 <_malloc_r+0x1a8>
800071be:	e0 4a 05 54 	cp.w	r10,1364
800071c2:	e0 88 00 04 	brls	800071ca <_malloc_r+0x1a2>
800071c6:	37 ea       	mov	r10,126
800071c8:	c0 48       	rjmp	800071d0 <_malloc_r+0x1a8>
800071ca:	f2 0a 16 12 	lsr	r10,r9,0x12
800071ce:	28 4a       	sub	r10,-124
800071d0:	e0 6b 01 08 	mov	r11,264
800071d4:	f6 0a 00 34 	add	r4,r11,r10<<0x3
800071d8:	68 28       	ld.w	r8,r4[0x8]
800071da:	08 38       	cp.w	r8,r4
800071dc:	c0 e1       	brne	800071f8 <_malloc_r+0x1d0>
800071de:	76 19       	ld.w	r9,r11[0x4]
800071e0:	a3 4a       	asr	r10,0x2
800071e2:	30 1e       	mov	lr,1
800071e4:	fc 0a 09 4a 	lsl	r10,lr,r10
800071e8:	f3 ea 10 0a 	or	r10,r9,r10
800071ec:	10 99       	mov	r9,r8
800071ee:	97 1a       	st.w	r11[0x4],r10
800071f0:	c0 a8       	rjmp	80007204 <_malloc_r+0x1dc>
800071f2:	70 28       	ld.w	r8,r8[0x8]
800071f4:	08 38       	cp.w	r8,r4
800071f6:	c0 60       	breq	80007202 <_malloc_r+0x1da>
800071f8:	70 1a       	ld.w	r10,r8[0x4]
800071fa:	e0 1a ff fc 	andl	r10,0xfffc
800071fe:	14 39       	cp.w	r9,r10
80007200:	cf 93       	brcs	800071f2 <_malloc_r+0x1ca>
80007202:	70 39       	ld.w	r9,r8[0xc]
80007204:	8d 39       	st.w	r6[0xc],r9
80007206:	8d 28       	st.w	r6[0x8],r8
80007208:	91 36       	st.w	r8[0xc],r6
8000720a:	93 26       	st.w	r9[0x8],r6
8000720c:	e6 08 14 02 	asr	r8,r3,0x2
80007210:	30 1b       	mov	r11,1
80007212:	e0 64 01 08 	mov	r4,264
80007216:	f6 08 09 4b 	lsl	r11,r11,r8
8000721a:	68 18       	ld.w	r8,r4[0x4]
8000721c:	10 3b       	cp.w	r11,r8
8000721e:	e0 8b 00 69 	brhi	800072f0 <_malloc_r+0x2c8>
80007222:	f7 e8 00 09 	and	r9,r11,r8
80007226:	c0 b1       	brne	8000723c <_malloc_r+0x214>
80007228:	e0 13 ff fc 	andl	r3,0xfffc
8000722c:	a1 7b       	lsl	r11,0x1
8000722e:	2f c3       	sub	r3,-4
80007230:	c0 38       	rjmp	80007236 <_malloc_r+0x20e>
80007232:	2f c3       	sub	r3,-4
80007234:	a1 7b       	lsl	r11,0x1
80007236:	f7 e8 00 09 	and	r9,r11,r8
8000723a:	cf c0       	breq	80007232 <_malloc_r+0x20a>
8000723c:	e8 03 00 3e 	add	lr,r4,r3<<0x3
80007240:	06 92       	mov	r2,r3
80007242:	1c 91       	mov	r1,lr
80007244:	62 36       	ld.w	r6,r1[0xc]
80007246:	c2 d8       	rjmp	800072a0 <_malloc_r+0x278>
80007248:	6c 1a       	ld.w	r10,r6[0x4]
8000724a:	e0 1a ff fc 	andl	r10,0xfffc
8000724e:	f4 07 01 08 	sub	r8,r10,r7
80007252:	58 f8       	cp.w	r8,15
80007254:	e0 8a 00 15 	brle	8000727e <_malloc_r+0x256>
80007258:	6c 3a       	ld.w	r10,r6[0xc]
8000725a:	6c 29       	ld.w	r9,r6[0x8]
8000725c:	95 29       	st.w	r10[0x8],r9
8000725e:	93 3a       	st.w	r9[0xc],r10
80007260:	0e 99       	mov	r9,r7
80007262:	ec 07 00 07 	add	r7,r6,r7
80007266:	a1 a9       	sbr	r9,0x0
80007268:	99 37       	st.w	r12[0xc],r7
8000726a:	99 27       	st.w	r12[0x8],r7
8000726c:	8d 19       	st.w	r6[0x4],r9
8000726e:	ee 08 09 08 	st.w	r7[r8],r8
80007272:	8f 2c       	st.w	r7[0x8],r12
80007274:	8f 3c       	st.w	r7[0xc],r12
80007276:	a1 a8       	sbr	r8,0x0
80007278:	0a 9c       	mov	r12,r5
8000727a:	8f 18       	st.w	r7[0x4],r8
8000727c:	c0 d8       	rjmp	80007296 <_malloc_r+0x26e>
8000727e:	6c 39       	ld.w	r9,r6[0xc]
80007280:	58 08       	cp.w	r8,0
80007282:	c0 e5       	brlt	8000729e <_malloc_r+0x276>
80007284:	ec 0a 00 0a 	add	r10,r6,r10
80007288:	74 18       	ld.w	r8,r10[0x4]
8000728a:	a1 a8       	sbr	r8,0x0
8000728c:	0a 9c       	mov	r12,r5
8000728e:	95 18       	st.w	r10[0x4],r8
80007290:	6c 28       	ld.w	r8,r6[0x8]
80007292:	93 28       	st.w	r9[0x8],r8
80007294:	91 39       	st.w	r8[0xc],r9
80007296:	c1 3d       	rcall	800074bc <__malloc_unlock>
80007298:	ec cc ff f8 	sub	r12,r6,-8
8000729c:	d8 32       	popm	r0-r7,pc
8000729e:	12 96       	mov	r6,r9
800072a0:	02 36       	cp.w	r6,r1
800072a2:	cd 31       	brne	80007248 <_malloc_r+0x220>
800072a4:	2f f2       	sub	r2,-1
800072a6:	f1 d2 c0 02 	bfextu	r8,r2,0x0,0x2
800072aa:	c0 30       	breq	800072b0 <_malloc_r+0x288>
800072ac:	2f 81       	sub	r1,-8
800072ae:	cc bb       	rjmp	80007244 <_malloc_r+0x21c>
800072b0:	1c 98       	mov	r8,lr
800072b2:	f3 d3 c0 02 	bfextu	r9,r3,0x0,0x2
800072b6:	c0 81       	brne	800072c6 <_malloc_r+0x29e>
800072b8:	68 19       	ld.w	r9,r4[0x4]
800072ba:	f6 08 11 ff 	rsub	r8,r11,-1
800072be:	f3 e8 00 08 	and	r8,r9,r8
800072c2:	89 18       	st.w	r4[0x4],r8
800072c4:	c0 78       	rjmp	800072d2 <_malloc_r+0x2aa>
800072c6:	f0 c9 00 08 	sub	r9,r8,8
800072ca:	20 13       	sub	r3,1
800072cc:	70 08       	ld.w	r8,r8[0x0]
800072ce:	12 38       	cp.w	r8,r9
800072d0:	cf 10       	breq	800072b2 <_malloc_r+0x28a>
800072d2:	a1 7b       	lsl	r11,0x1
800072d4:	68 18       	ld.w	r8,r4[0x4]
800072d6:	10 3b       	cp.w	r11,r8
800072d8:	e0 8b 00 0c 	brhi	800072f0 <_malloc_r+0x2c8>
800072dc:	58 0b       	cp.w	r11,0
800072de:	c0 90       	breq	800072f0 <_malloc_r+0x2c8>
800072e0:	04 93       	mov	r3,r2
800072e2:	c0 38       	rjmp	800072e8 <_malloc_r+0x2c0>
800072e4:	2f c3       	sub	r3,-4
800072e6:	a1 7b       	lsl	r11,0x1
800072e8:	f7 e8 00 09 	and	r9,r11,r8
800072ec:	ca 81       	brne	8000723c <_malloc_r+0x214>
800072ee:	cf bb       	rjmp	800072e4 <_malloc_r+0x2bc>
800072f0:	68 23       	ld.w	r3,r4[0x8]
800072f2:	66 12       	ld.w	r2,r3[0x4]
800072f4:	e0 12 ff fc 	andl	r2,0xfffc
800072f8:	0e 32       	cp.w	r2,r7
800072fa:	5f 39       	srlo	r9
800072fc:	e4 07 01 08 	sub	r8,r2,r7
80007300:	58 f8       	cp.w	r8,15
80007302:	5f aa       	srle	r10
80007304:	f5 e9 10 09 	or	r9,r10,r9
80007308:	e0 80 00 9a 	breq	8000743c <_malloc_r+0x414>
8000730c:	e0 68 06 30 	mov	r8,1584
80007310:	70 01       	ld.w	r1,r8[0x0]
80007312:	e0 68 05 14 	mov	r8,1300
80007316:	2f 01       	sub	r1,-16
80007318:	70 08       	ld.w	r8,r8[0x0]
8000731a:	0e 01       	add	r1,r7
8000731c:	5b f8       	cp.w	r8,-1
8000731e:	c0 40       	breq	80007326 <_malloc_r+0x2fe>
80007320:	28 11       	sub	r1,-127
80007322:	e0 11 ff 80 	andl	r1,0xff80
80007326:	02 9b       	mov	r11,r1
80007328:	0a 9c       	mov	r12,r5
8000732a:	e0 a0 05 39 	rcall	80007d9c <_sbrk_r>
8000732e:	18 96       	mov	r6,r12
80007330:	5b fc       	cp.w	r12,-1
80007332:	c7 50       	breq	8000741c <_malloc_r+0x3f4>
80007334:	e6 02 00 08 	add	r8,r3,r2
80007338:	10 3c       	cp.w	r12,r8
8000733a:	c0 32       	brcc	80007340 <_malloc_r+0x318>
8000733c:	08 33       	cp.w	r3,r4
8000733e:	c6 f1       	brne	8000741c <_malloc_r+0x3f4>
80007340:	e0 6a 06 34 	mov	r10,1588
80007344:	74 09       	ld.w	r9,r10[0x0]
80007346:	e2 09 00 09 	add	r9,r1,r9
8000734a:	95 09       	st.w	r10[0x0],r9
8000734c:	10 36       	cp.w	r6,r8
8000734e:	c0 a1       	brne	80007362 <_malloc_r+0x33a>
80007350:	f5 d6 c0 07 	bfextu	r10,r6,0x0,0x7
80007354:	c0 71       	brne	80007362 <_malloc_r+0x33a>
80007356:	e2 02 00 02 	add	r2,r1,r2
8000735a:	68 28       	ld.w	r8,r4[0x8]
8000735c:	a1 a2       	sbr	r2,0x0
8000735e:	91 12       	st.w	r8[0x4],r2
80007360:	c4 f8       	rjmp	800073fe <_malloc_r+0x3d6>
80007362:	e0 6a 05 14 	mov	r10,1300
80007366:	74 0b       	ld.w	r11,r10[0x0]
80007368:	5b fb       	cp.w	r11,-1
8000736a:	c0 31       	brne	80007370 <_malloc_r+0x348>
8000736c:	95 06       	st.w	r10[0x0],r6
8000736e:	c0 78       	rjmp	8000737c <_malloc_r+0x354>
80007370:	ec 09 00 09 	add	r9,r6,r9
80007374:	e0 6a 06 34 	mov	r10,1588
80007378:	10 19       	sub	r9,r8
8000737a:	95 09       	st.w	r10[0x0],r9
8000737c:	f1 d6 c0 03 	bfextu	r8,r6,0x0,0x3
80007380:	f0 09 11 08 	rsub	r9,r8,8
80007384:	58 08       	cp.w	r8,0
80007386:	f2 08 17 10 	movne	r8,r9
8000738a:	ed d8 e1 06 	addne	r6,r6,r8
8000738e:	28 08       	sub	r8,-128
80007390:	ec 01 00 01 	add	r1,r6,r1
80007394:	0a 9c       	mov	r12,r5
80007396:	e3 d1 c0 07 	bfextu	r1,r1,0x0,0x7
8000739a:	f0 01 01 01 	sub	r1,r8,r1
8000739e:	02 9b       	mov	r11,r1
800073a0:	e0 a0 04 fe 	rcall	80007d9c <_sbrk_r>
800073a4:	e0 68 06 34 	mov	r8,1588
800073a8:	5b fc       	cp.w	r12,-1
800073aa:	ec 0c 17 00 	moveq	r12,r6
800073ae:	f9 b1 00 00 	moveq	r1,0
800073b2:	70 09       	ld.w	r9,r8[0x0]
800073b4:	0c 1c       	sub	r12,r6
800073b6:	89 26       	st.w	r4[0x8],r6
800073b8:	02 0c       	add	r12,r1
800073ba:	12 01       	add	r1,r9
800073bc:	a1 ac       	sbr	r12,0x0
800073be:	91 01       	st.w	r8[0x0],r1
800073c0:	8d 1c       	st.w	r6[0x4],r12
800073c2:	08 33       	cp.w	r3,r4
800073c4:	c1 d0       	breq	800073fe <_malloc_r+0x3d6>
800073c6:	58 f2       	cp.w	r2,15
800073c8:	e0 8b 00 05 	brhi	800073d2 <_malloc_r+0x3aa>
800073cc:	30 18       	mov	r8,1
800073ce:	8d 18       	st.w	r6[0x4],r8
800073d0:	c2 68       	rjmp	8000741c <_malloc_r+0x3f4>
800073d2:	30 59       	mov	r9,5
800073d4:	20 c2       	sub	r2,12
800073d6:	e0 12 ff f8 	andl	r2,0xfff8
800073da:	e6 02 00 08 	add	r8,r3,r2
800073de:	91 29       	st.w	r8[0x8],r9
800073e0:	91 19       	st.w	r8[0x4],r9
800073e2:	66 18       	ld.w	r8,r3[0x4]
800073e4:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800073e8:	e5 e8 10 08 	or	r8,r2,r8
800073ec:	87 18       	st.w	r3[0x4],r8
800073ee:	58 f2       	cp.w	r2,15
800073f0:	e0 88 00 07 	brls	800073fe <_malloc_r+0x3d6>
800073f4:	e6 cb ff f8 	sub	r11,r3,-8
800073f8:	0a 9c       	mov	r12,r5
800073fa:	fe b0 fb 71 	rcall	80006adc <_free_r>
800073fe:	e0 69 06 2c 	mov	r9,1580
80007402:	72 0a       	ld.w	r10,r9[0x0]
80007404:	e0 68 06 34 	mov	r8,1588
80007408:	70 08       	ld.w	r8,r8[0x0]
8000740a:	14 38       	cp.w	r8,r10
8000740c:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80007410:	e0 69 06 28 	mov	r9,1576
80007414:	72 0a       	ld.w	r10,r9[0x0]
80007416:	14 38       	cp.w	r8,r10
80007418:	f3 f8 ba 00 	st.whi	r9[0x0],r8
8000741c:	68 28       	ld.w	r8,r4[0x8]
8000741e:	70 18       	ld.w	r8,r8[0x4]
80007420:	e0 18 ff fc 	andl	r8,0xfffc
80007424:	0e 38       	cp.w	r8,r7
80007426:	5f 39       	srlo	r9
80007428:	0e 18       	sub	r8,r7
8000742a:	58 f8       	cp.w	r8,15
8000742c:	5f aa       	srle	r10
8000742e:	f5 e9 10 09 	or	r9,r10,r9
80007432:	c0 50       	breq	8000743c <_malloc_r+0x414>
80007434:	0a 9c       	mov	r12,r5
80007436:	c4 3c       	rcall	800074bc <__malloc_unlock>
80007438:	d8 3a       	popm	r0-r7,pc,r12=0
8000743a:	d7 03       	nop
8000743c:	68 26       	ld.w	r6,r4[0x8]
8000743e:	a1 a8       	sbr	r8,0x0
80007440:	0e 99       	mov	r9,r7
80007442:	a1 a9       	sbr	r9,0x0
80007444:	8d 19       	st.w	r6[0x4],r9
80007446:	ec 07 00 07 	add	r7,r6,r7
8000744a:	0a 9c       	mov	r12,r5
8000744c:	89 27       	st.w	r4[0x8],r7
8000744e:	8f 18       	st.w	r7[0x4],r8
80007450:	c3 6c       	rcall	800074bc <__malloc_unlock>
80007452:	ec cc ff f8 	sub	r12,r6,-8
80007456:	d8 32       	popm	r0-r7,pc

80007458 <memchr>:
80007458:	f7 db c0 08 	bfextu	r11,r11,0x0,0x8
8000745c:	c0 68       	rjmp	80007468 <memchr+0x10>
8000745e:	20 1a       	sub	r10,1
80007460:	19 88       	ld.ub	r8,r12[0x0]
80007462:	16 38       	cp.w	r8,r11
80007464:	5e 0c       	reteq	r12
80007466:	2f fc       	sub	r12,-1
80007468:	58 0a       	cp.w	r10,0
8000746a:	cf a1       	brne	8000745e <memchr+0x6>
8000746c:	5e fa       	retal	r10

8000746e <memmove>:
8000746e:	d4 01       	pushm	lr
80007470:	18 3b       	cp.w	r11,r12
80007472:	c1 92       	brcc	800074a4 <memmove+0x36>
80007474:	f6 0a 00 09 	add	r9,r11,r10
80007478:	12 3c       	cp.w	r12,r9
8000747a:	c1 52       	brcc	800074a4 <memmove+0x36>
8000747c:	f8 0a 00 0b 	add	r11,r12,r10
80007480:	30 08       	mov	r8,0
80007482:	c0 68       	rjmp	8000748e <memmove+0x20>
80007484:	f2 08 07 0e 	ld.ub	lr,r9[r8]
80007488:	20 1a       	sub	r10,1
8000748a:	f6 08 0b 0e 	st.b	r11[r8],lr
8000748e:	20 18       	sub	r8,1
80007490:	58 0a       	cp.w	r10,0
80007492:	cf 91       	brne	80007484 <memmove+0x16>
80007494:	d8 02       	popm	pc
80007496:	f6 08 07 09 	ld.ub	r9,r11[r8]
8000749a:	20 1a       	sub	r10,1
8000749c:	f8 08 0b 09 	st.b	r12[r8],r9
800074a0:	2f f8       	sub	r8,-1
800074a2:	c0 28       	rjmp	800074a6 <memmove+0x38>
800074a4:	30 08       	mov	r8,0
800074a6:	58 0a       	cp.w	r10,0
800074a8:	cf 71       	brne	80007496 <memmove+0x28>
800074aa:	d8 02       	popm	pc

800074ac <memset>:
800074ac:	18 98       	mov	r8,r12
800074ae:	c0 38       	rjmp	800074b4 <memset+0x8>
800074b0:	10 cb       	st.b	r8++,r11
800074b2:	20 1a       	sub	r10,1
800074b4:	58 0a       	cp.w	r10,0
800074b6:	cf d1       	brne	800074b0 <memset+0x4>
800074b8:	5e fc       	retal	r12

800074ba <__malloc_lock>:
800074ba:	5e fc       	retal	r12

800074bc <__malloc_unlock>:
800074bc:	5e fc       	retal	r12

800074be <__hi0bits>:
800074be:	18 98       	mov	r8,r12
800074c0:	e0 1c 00 00 	andl	r12,0x0
800074c4:	f0 09 15 10 	lsl	r9,r8,0x10
800074c8:	58 0c       	cp.w	r12,0
800074ca:	f2 08 17 00 	moveq	r8,r9
800074ce:	f9 bc 00 10 	moveq	r12,16
800074d2:	f9 bc 01 00 	movne	r12,0
800074d6:	10 9a       	mov	r10,r8
800074d8:	f0 09 15 08 	lsl	r9,r8,0x8
800074dc:	e6 1a ff 00 	andh	r10,0xff00,COH
800074e0:	f7 bc 00 f8 	subeq	r12,-8
800074e4:	f2 08 17 00 	moveq	r8,r9
800074e8:	10 9a       	mov	r10,r8
800074ea:	f0 09 15 04 	lsl	r9,r8,0x4
800074ee:	e6 1a f0 00 	andh	r10,0xf000,COH
800074f2:	f7 bc 00 fc 	subeq	r12,-4
800074f6:	f2 08 17 00 	moveq	r8,r9
800074fa:	10 9a       	mov	r10,r8
800074fc:	f0 09 15 02 	lsl	r9,r8,0x2
80007500:	e6 1a c0 00 	andh	r10,0xc000,COH
80007504:	f7 bc 00 fe 	subeq	r12,-2
80007508:	f2 08 17 00 	moveq	r8,r9
8000750c:	58 08       	cp.w	r8,0
8000750e:	5e 5c       	retlt	r12
80007510:	ed b8 00 1e 	bld	r8,0x1e
80007514:	f9 bc 01 20 	movne	r12,32
80007518:	f7 bc 00 ff 	subeq	r12,-1
8000751c:	5e fc       	retal	r12

8000751e <__lo0bits>:
8000751e:	18 99       	mov	r9,r12
80007520:	78 08       	ld.w	r8,r12[0x0]
80007522:	f9 d8 c0 03 	bfextu	r12,r8,0x0,0x3
80007526:	c1 50       	breq	80007550 <__lo0bits+0x32>
80007528:	ed b8 00 00 	bld	r8,0x0
8000752c:	c0 21       	brne	80007530 <__lo0bits+0x12>
8000752e:	5e fd       	retal	0
80007530:	10 9b       	mov	r11,r8
80007532:	f0 0a 16 01 	lsr	r10,r8,0x1
80007536:	e2 1b 00 02 	andl	r11,0x2,COH
8000753a:	a3 88       	lsr	r8,0x2
8000753c:	58 0b       	cp.w	r11,0
8000753e:	f3 fa 1a 00 	st.wne	r9[0x0],r10
80007542:	f9 bc 01 01 	movne	r12,1
80007546:	f3 f8 0a 00 	st.weq	r9[0x0],r8
8000754a:	f9 bc 00 02 	moveq	r12,2
8000754e:	5e fc       	retal	r12
80007550:	f5 d8 c0 10 	bfextu	r10,r8,0x0,0x10
80007554:	f0 0b 16 10 	lsr	r11,r8,0x10
80007558:	58 0a       	cp.w	r10,0
8000755a:	f6 08 17 00 	moveq	r8,r11
8000755e:	f9 bc 00 10 	moveq	r12,16
80007562:	f7 d8 c0 08 	bfextu	r11,r8,0x0,0x8
80007566:	f0 0a 16 08 	lsr	r10,r8,0x8
8000756a:	58 0b       	cp.w	r11,0
8000756c:	f7 bc 00 f8 	subeq	r12,-8
80007570:	f4 08 17 00 	moveq	r8,r10
80007574:	f7 d8 c0 04 	bfextu	r11,r8,0x0,0x4
80007578:	f0 0a 16 04 	lsr	r10,r8,0x4
8000757c:	58 0b       	cp.w	r11,0
8000757e:	f7 bc 00 fc 	subeq	r12,-4
80007582:	f4 08 17 00 	moveq	r8,r10
80007586:	f7 d8 c0 02 	bfextu	r11,r8,0x0,0x2
8000758a:	f0 0a 16 02 	lsr	r10,r8,0x2
8000758e:	58 0b       	cp.w	r11,0
80007590:	f7 bc 00 fe 	subeq	r12,-2
80007594:	f4 08 17 00 	moveq	r8,r10
80007598:	ed b8 00 00 	bld	r8,0x0
8000759c:	c0 60       	breq	800075a8 <__lo0bits+0x8a>
8000759e:	a1 98       	lsr	r8,0x1
800075a0:	c0 31       	brne	800075a6 <__lo0bits+0x88>
800075a2:	32 0c       	mov	r12,32
800075a4:	5e fc       	retal	r12
800075a6:	2f fc       	sub	r12,-1
800075a8:	93 08       	st.w	r9[0x0],r8
800075aa:	5e fc       	retal	r12

800075ac <__mcmp>:
800075ac:	d4 01       	pushm	lr
800075ae:	18 98       	mov	r8,r12
800075b0:	76 49       	ld.w	r9,r11[0x10]
800075b2:	78 4c       	ld.w	r12,r12[0x10]
800075b4:	12 1c       	sub	r12,r9
800075b6:	c1 31       	brne	800075dc <__mcmp+0x30>
800075b8:	2f b9       	sub	r9,-5
800075ba:	a3 69       	lsl	r9,0x2
800075bc:	12 0b       	add	r11,r9
800075be:	f0 09 00 09 	add	r9,r8,r9
800075c2:	2e c8       	sub	r8,-20
800075c4:	13 4e       	ld.w	lr,--r9
800075c6:	17 4a       	ld.w	r10,--r11
800075c8:	14 3e       	cp.w	lr,r10
800075ca:	c0 60       	breq	800075d6 <__mcmp+0x2a>
800075cc:	f9 bc 03 ff 	movlo	r12,-1
800075d0:	f9 bc 02 01 	movhs	r12,1
800075d4:	d8 02       	popm	pc
800075d6:	10 39       	cp.w	r9,r8
800075d8:	fe 9b ff f6 	brhi	800075c4 <__mcmp+0x18>
800075dc:	d8 02       	popm	pc
800075de:	d7 03       	nop

800075e0 <_Bfree>:
800075e0:	d4 21       	pushm	r4-r7,lr
800075e2:	18 97       	mov	r7,r12
800075e4:	16 95       	mov	r5,r11
800075e6:	78 96       	ld.w	r6,r12[0x24]
800075e8:	58 06       	cp.w	r6,0
800075ea:	c0 91       	brne	800075fc <_Bfree+0x1c>
800075ec:	31 0c       	mov	r12,16
800075ee:	fe b0 fd 15 	rcall	80007018 <malloc>
800075f2:	99 36       	st.w	r12[0xc],r6
800075f4:	8f 9c       	st.w	r7[0x24],r12
800075f6:	99 16       	st.w	r12[0x4],r6
800075f8:	99 26       	st.w	r12[0x8],r6
800075fa:	99 06       	st.w	r12[0x0],r6
800075fc:	58 05       	cp.w	r5,0
800075fe:	c0 90       	breq	80007610 <_Bfree+0x30>
80007600:	6a 19       	ld.w	r9,r5[0x4]
80007602:	6e 98       	ld.w	r8,r7[0x24]
80007604:	70 38       	ld.w	r8,r8[0xc]
80007606:	f0 09 03 2a 	ld.w	r10,r8[r9<<0x2]
8000760a:	8b 0a       	st.w	r5[0x0],r10
8000760c:	f0 09 09 25 	st.w	r8[r9<<0x2],r5
80007610:	d8 22       	popm	r4-r7,pc
80007612:	d7 03       	nop

80007614 <_Balloc>:
80007614:	d4 21       	pushm	r4-r7,lr
80007616:	18 97       	mov	r7,r12
80007618:	16 96       	mov	r6,r11
8000761a:	78 95       	ld.w	r5,r12[0x24]
8000761c:	58 05       	cp.w	r5,0
8000761e:	c0 91       	brne	80007630 <_Balloc+0x1c>
80007620:	31 0c       	mov	r12,16
80007622:	fe b0 fc fb 	rcall	80007018 <malloc>
80007626:	99 35       	st.w	r12[0xc],r5
80007628:	8f 9c       	st.w	r7[0x24],r12
8000762a:	99 15       	st.w	r12[0x4],r5
8000762c:	99 25       	st.w	r12[0x8],r5
8000762e:	99 05       	st.w	r12[0x0],r5
80007630:	6e 95       	ld.w	r5,r7[0x24]
80007632:	6a 38       	ld.w	r8,r5[0xc]
80007634:	58 08       	cp.w	r8,0
80007636:	c0 b1       	brne	8000764c <_Balloc+0x38>
80007638:	31 0a       	mov	r10,16
8000763a:	30 4b       	mov	r11,4
8000763c:	0e 9c       	mov	r12,r7
8000763e:	e0 a0 04 93 	rcall	80007f64 <_calloc_r>
80007642:	8b 3c       	st.w	r5[0xc],r12
80007644:	6e 98       	ld.w	r8,r7[0x24]
80007646:	70 3c       	ld.w	r12,r8[0xc]
80007648:	58 0c       	cp.w	r12,0
8000764a:	c1 b0       	breq	80007680 <_Balloc+0x6c>
8000764c:	6e 98       	ld.w	r8,r7[0x24]
8000764e:	70 38       	ld.w	r8,r8[0xc]
80007650:	f0 06 00 28 	add	r8,r8,r6<<0x2
80007654:	70 0c       	ld.w	r12,r8[0x0]
80007656:	58 0c       	cp.w	r12,0
80007658:	c0 40       	breq	80007660 <_Balloc+0x4c>
8000765a:	78 09       	ld.w	r9,r12[0x0]
8000765c:	91 09       	st.w	r8[0x0],r9
8000765e:	c0 e8       	rjmp	8000767a <_Balloc+0x66>
80007660:	0e 9c       	mov	r12,r7
80007662:	30 17       	mov	r7,1
80007664:	0e 9b       	mov	r11,r7
80007666:	ee 06 09 47 	lsl	r7,r7,r6
8000766a:	ee ca ff fb 	sub	r10,r7,-5
8000766e:	a3 6a       	lsl	r10,0x2
80007670:	e0 a0 04 7a 	rcall	80007f64 <_calloc_r>
80007674:	c0 60       	breq	80007680 <_Balloc+0x6c>
80007676:	99 16       	st.w	r12[0x4],r6
80007678:	99 27       	st.w	r12[0x8],r7
8000767a:	30 08       	mov	r8,0
8000767c:	99 38       	st.w	r12[0xc],r8
8000767e:	99 48       	st.w	r12[0x10],r8
80007680:	d8 22       	popm	r4-r7,pc
80007682:	d7 03       	nop

80007684 <__d2b>:
80007684:	d4 31       	pushm	r0-r7,lr
80007686:	20 2d       	sub	sp,8
80007688:	16 93       	mov	r3,r11
8000768a:	12 96       	mov	r6,r9
8000768c:	10 95       	mov	r5,r8
8000768e:	14 92       	mov	r2,r10
80007690:	30 1b       	mov	r11,1
80007692:	cc 1f       	rcall	80007614 <_Balloc>
80007694:	f3 d3 c0 14 	bfextu	r9,r3,0x0,0x14
80007698:	50 09       	stdsp	sp[0x0],r9
8000769a:	f1 d3 c0 1f 	bfextu	r8,r3,0x0,0x1f
8000769e:	b5 a9       	sbr	r9,0x14
800076a0:	f0 01 16 14 	lsr	r1,r8,0x14
800076a4:	fb f9 1a 00 	st.wne	sp[0x0],r9
800076a8:	18 94       	mov	r4,r12
800076aa:	58 02       	cp.w	r2,0
800076ac:	c1 d0       	breq	800076e6 <__d2b+0x62>
800076ae:	fa cc ff f8 	sub	r12,sp,-8
800076b2:	18 d2       	st.w	--r12,r2
800076b4:	c3 5f       	rcall	8000751e <__lo0bits>
800076b6:	40 18       	lddsp	r8,sp[0x4]
800076b8:	c0 d0       	breq	800076d2 <__d2b+0x4e>
800076ba:	40 09       	lddsp	r9,sp[0x0]
800076bc:	f8 0a 11 20 	rsub	r10,r12,32
800076c0:	f2 0a 09 4a 	lsl	r10,r9,r10
800076c4:	f5 e8 10 08 	or	r8,r10,r8
800076c8:	89 58       	st.w	r4[0x14],r8
800076ca:	f2 0c 0a 49 	lsr	r9,r9,r12
800076ce:	50 09       	stdsp	sp[0x0],r9
800076d0:	c0 28       	rjmp	800076d4 <__d2b+0x50>
800076d2:	89 58       	st.w	r4[0x14],r8
800076d4:	40 08       	lddsp	r8,sp[0x0]
800076d6:	58 08       	cp.w	r8,0
800076d8:	f9 b3 01 02 	movne	r3,2
800076dc:	f9 b3 00 01 	moveq	r3,1
800076e0:	89 68       	st.w	r4[0x18],r8
800076e2:	89 43       	st.w	r4[0x10],r3
800076e4:	c0 88       	rjmp	800076f4 <__d2b+0x70>
800076e6:	1a 9c       	mov	r12,sp
800076e8:	c1 bf       	rcall	8000751e <__lo0bits>
800076ea:	30 13       	mov	r3,1
800076ec:	40 08       	lddsp	r8,sp[0x0]
800076ee:	2e 0c       	sub	r12,-32
800076f0:	89 43       	st.w	r4[0x10],r3
800076f2:	89 58       	st.w	r4[0x14],r8
800076f4:	58 01       	cp.w	r1,0
800076f6:	c0 90       	breq	80007708 <__d2b+0x84>
800076f8:	e2 c1 04 33 	sub	r1,r1,1075
800076fc:	18 01       	add	r1,r12
800076fe:	8d 01       	st.w	r6[0x0],r1
80007700:	f8 0c 11 35 	rsub	r12,r12,53
80007704:	8b 0c       	st.w	r5[0x0],r12
80007706:	c0 c8       	rjmp	8000771e <__d2b+0x9a>
80007708:	e6 c8 ff fc 	sub	r8,r3,-4
8000770c:	f8 cc 04 32 	sub	r12,r12,1074
80007710:	a5 73       	lsl	r3,0x5
80007712:	8d 0c       	st.w	r6[0x0],r12
80007714:	e8 08 03 2c 	ld.w	r12,r4[r8<<0x2]
80007718:	cd 3e       	rcall	800074be <__hi0bits>
8000771a:	18 13       	sub	r3,r12
8000771c:	8b 03       	st.w	r5[0x0],r3
8000771e:	08 9c       	mov	r12,r4
80007720:	2f ed       	sub	sp,-8
80007722:	d8 32       	popm	r0-r7,pc

80007724 <__mdiff>:
80007724:	d4 31       	pushm	r0-r7,lr
80007726:	74 48       	ld.w	r8,r10[0x10]
80007728:	76 45       	ld.w	r5,r11[0x10]
8000772a:	16 97       	mov	r7,r11
8000772c:	14 96       	mov	r6,r10
8000772e:	10 15       	sub	r5,r8
80007730:	c1 31       	brne	80007756 <__mdiff+0x32>
80007732:	2f b8       	sub	r8,-5
80007734:	ee ce ff ec 	sub	lr,r7,-20
80007738:	a3 68       	lsl	r8,0x2
8000773a:	f4 08 00 0b 	add	r11,r10,r8
8000773e:	ee 08 00 08 	add	r8,r7,r8
80007742:	11 4a       	ld.w	r10,--r8
80007744:	17 49       	ld.w	r9,--r11
80007746:	12 3a       	cp.w	r10,r9
80007748:	c0 30       	breq	8000774e <__mdiff+0x2a>
8000774a:	c0 e2       	brcc	80007766 <__mdiff+0x42>
8000774c:	c0 78       	rjmp	8000775a <__mdiff+0x36>
8000774e:	1c 38       	cp.w	r8,lr
80007750:	fe 9b ff f9 	brhi	80007742 <__mdiff+0x1e>
80007754:	c4 98       	rjmp	800077e6 <__mdiff+0xc2>
80007756:	58 05       	cp.w	r5,0
80007758:	c0 64       	brge	80007764 <__mdiff+0x40>
8000775a:	0e 98       	mov	r8,r7
8000775c:	30 15       	mov	r5,1
8000775e:	0c 97       	mov	r7,r6
80007760:	10 96       	mov	r6,r8
80007762:	c0 28       	rjmp	80007766 <__mdiff+0x42>
80007764:	30 05       	mov	r5,0
80007766:	6e 1b       	ld.w	r11,r7[0x4]
80007768:	c5 6f       	rcall	80007614 <_Balloc>
8000776a:	6e 49       	ld.w	r9,r7[0x10]
8000776c:	6c 44       	ld.w	r4,r6[0x10]
8000776e:	99 35       	st.w	r12[0xc],r5
80007770:	2f b4       	sub	r4,-5
80007772:	f2 c5 ff fb 	sub	r5,r9,-5
80007776:	ec 04 00 24 	add	r4,r6,r4<<0x2
8000777a:	ee 05 00 25 	add	r5,r7,r5<<0x2
8000777e:	2e c6       	sub	r6,-20
80007780:	2e c7       	sub	r7,-20
80007782:	f8 c8 ff ec 	sub	r8,r12,-20
80007786:	30 0a       	mov	r10,0
80007788:	0f 0e       	ld.w	lr,r7++
8000778a:	0d 0b       	ld.w	r11,r6++
8000778c:	fc 02 16 10 	lsr	r2,lr,0x10
80007790:	f6 03 16 10 	lsr	r3,r11,0x10
80007794:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80007798:	e4 03 01 03 	sub	r3,r2,r3
8000779c:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
800077a0:	fc 0b 01 0b 	sub	r11,lr,r11
800077a4:	f6 0a 00 0a 	add	r10,r11,r10
800077a8:	b0 1a       	st.h	r8[0x2],r10
800077aa:	b1 4a       	asr	r10,0x10
800077ac:	e6 0a 00 0a 	add	r10,r3,r10
800077b0:	b0 0a       	st.h	r8[0x0],r10
800077b2:	2f c8       	sub	r8,-4
800077b4:	b1 4a       	asr	r10,0x10
800077b6:	08 36       	cp.w	r6,r4
800077b8:	ce 83       	brcs	80007788 <__mdiff+0x64>
800077ba:	c0 d8       	rjmp	800077d4 <__mdiff+0xb0>
800077bc:	0f 0b       	ld.w	r11,r7++
800077be:	f6 0e 16 10 	lsr	lr,r11,0x10
800077c2:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
800077c6:	16 0a       	add	r10,r11
800077c8:	b0 1a       	st.h	r8[0x2],r10
800077ca:	b1 4a       	asr	r10,0x10
800077cc:	1c 0a       	add	r10,lr
800077ce:	b0 0a       	st.h	r8[0x0],r10
800077d0:	2f c8       	sub	r8,-4
800077d2:	b1 4a       	asr	r10,0x10
800077d4:	0a 37       	cp.w	r7,r5
800077d6:	cf 33       	brcs	800077bc <__mdiff+0x98>
800077d8:	c0 28       	rjmp	800077dc <__mdiff+0xb8>
800077da:	20 19       	sub	r9,1
800077dc:	11 4a       	ld.w	r10,--r8
800077de:	58 0a       	cp.w	r10,0
800077e0:	cf d0       	breq	800077da <__mdiff+0xb6>
800077e2:	99 49       	st.w	r12[0x10],r9
800077e4:	d8 32       	popm	r0-r7,pc
800077e6:	30 0b       	mov	r11,0
800077e8:	c1 6f       	rcall	80007614 <_Balloc>
800077ea:	30 18       	mov	r8,1
800077ec:	99 48       	st.w	r12[0x10],r8
800077ee:	30 08       	mov	r8,0
800077f0:	99 58       	st.w	r12[0x14],r8
800077f2:	d8 32       	popm	r0-r7,pc

800077f4 <__lshift>:
800077f4:	d4 31       	pushm	r0-r7,lr
800077f6:	16 97       	mov	r7,r11
800077f8:	76 46       	ld.w	r6,r11[0x10]
800077fa:	f4 02 14 05 	asr	r2,r10,0x5
800077fe:	2f f6       	sub	r6,-1
80007800:	14 93       	mov	r3,r10
80007802:	18 94       	mov	r4,r12
80007804:	04 06       	add	r6,r2
80007806:	76 1b       	ld.w	r11,r11[0x4]
80007808:	6e 28       	ld.w	r8,r7[0x8]
8000780a:	c0 38       	rjmp	80007810 <__lshift+0x1c>
8000780c:	2f fb       	sub	r11,-1
8000780e:	a1 78       	lsl	r8,0x1
80007810:	10 36       	cp.w	r6,r8
80007812:	fe 99 ff fd 	brgt	8000780c <__lshift+0x18>
80007816:	08 9c       	mov	r12,r4
80007818:	cf ee       	rcall	80007614 <_Balloc>
8000781a:	30 09       	mov	r9,0
8000781c:	18 95       	mov	r5,r12
8000781e:	f8 c8 ff ec 	sub	r8,r12,-20
80007822:	12 9a       	mov	r10,r9
80007824:	c0 38       	rjmp	8000782a <__lshift+0x36>
80007826:	10 aa       	st.w	r8++,r10
80007828:	2f f9       	sub	r9,-1
8000782a:	04 39       	cp.w	r9,r2
8000782c:	cf d5       	brlt	80007826 <__lshift+0x32>
8000782e:	6e 4b       	ld.w	r11,r7[0x10]
80007830:	e7 d3 c0 05 	bfextu	r3,r3,0x0,0x5
80007834:	2f bb       	sub	r11,-5
80007836:	ee c9 ff ec 	sub	r9,r7,-20
8000783a:	ee 0b 00 2b 	add	r11,r7,r11<<0x2
8000783e:	58 03       	cp.w	r3,0
80007840:	c1 30       	breq	80007866 <__lshift+0x72>
80007842:	e6 0c 11 20 	rsub	r12,r3,32
80007846:	30 0a       	mov	r10,0
80007848:	72 02       	ld.w	r2,r9[0x0]
8000784a:	e4 03 09 42 	lsl	r2,r2,r3
8000784e:	04 4a       	or	r10,r2
80007850:	10 aa       	st.w	r8++,r10
80007852:	13 0a       	ld.w	r10,r9++
80007854:	f4 0c 0a 4a 	lsr	r10,r10,r12
80007858:	16 39       	cp.w	r9,r11
8000785a:	cf 73       	brcs	80007848 <__lshift+0x54>
8000785c:	91 0a       	st.w	r8[0x0],r10
8000785e:	58 0a       	cp.w	r10,0
80007860:	c0 70       	breq	8000786e <__lshift+0x7a>
80007862:	2f f6       	sub	r6,-1
80007864:	c0 58       	rjmp	8000786e <__lshift+0x7a>
80007866:	13 0a       	ld.w	r10,r9++
80007868:	10 aa       	st.w	r8++,r10
8000786a:	16 39       	cp.w	r9,r11
8000786c:	cf d3       	brcs	80007866 <__lshift+0x72>
8000786e:	08 9c       	mov	r12,r4
80007870:	20 16       	sub	r6,1
80007872:	0e 9b       	mov	r11,r7
80007874:	8b 46       	st.w	r5[0x10],r6
80007876:	cb 5e       	rcall	800075e0 <_Bfree>
80007878:	0a 9c       	mov	r12,r5
8000787a:	d8 32       	popm	r0-r7,pc

8000787c <__multiply>:
8000787c:	d4 31       	pushm	r0-r7,lr
8000787e:	20 2d       	sub	sp,8
80007880:	76 49       	ld.w	r9,r11[0x10]
80007882:	74 48       	ld.w	r8,r10[0x10]
80007884:	16 96       	mov	r6,r11
80007886:	14 95       	mov	r5,r10
80007888:	10 39       	cp.w	r9,r8
8000788a:	ec 08 17 50 	movlt	r8,r6
8000788e:	ea 06 17 50 	movlt	r6,r5
80007892:	f0 05 17 50 	movlt	r5,r8
80007896:	6c 28       	ld.w	r8,r6[0x8]
80007898:	76 43       	ld.w	r3,r11[0x10]
8000789a:	74 42       	ld.w	r2,r10[0x10]
8000789c:	76 1b       	ld.w	r11,r11[0x4]
8000789e:	e4 03 00 07 	add	r7,r2,r3
800078a2:	10 37       	cp.w	r7,r8
800078a4:	f7 bb 09 ff 	subgt	r11,-1
800078a8:	cb 6e       	rcall	80007614 <_Balloc>
800078aa:	ee c4 ff fb 	sub	r4,r7,-5
800078ae:	f8 c9 ff ec 	sub	r9,r12,-20
800078b2:	f8 04 00 24 	add	r4,r12,r4<<0x2
800078b6:	30 0a       	mov	r10,0
800078b8:	12 98       	mov	r8,r9
800078ba:	c0 28       	rjmp	800078be <__multiply+0x42>
800078bc:	10 aa       	st.w	r8++,r10
800078be:	08 38       	cp.w	r8,r4
800078c0:	cf e3       	brcs	800078bc <__multiply+0x40>
800078c2:	2f b3       	sub	r3,-5
800078c4:	2f b2       	sub	r2,-5
800078c6:	ec 03 00 23 	add	r3,r6,r3<<0x2
800078ca:	ea 02 00 22 	add	r2,r5,r2<<0x2
800078ce:	ec cb ff ec 	sub	r11,r6,-20
800078d2:	50 12       	stdsp	sp[0x4],r2
800078d4:	ea ca ff ec 	sub	r10,r5,-20
800078d8:	c4 48       	rjmp	80007960 <__multiply+0xe4>
800078da:	94 95       	ld.uh	r5,r10[0x2]
800078dc:	58 05       	cp.w	r5,0
800078de:	c2 00       	breq	8000791e <__multiply+0xa2>
800078e0:	12 98       	mov	r8,r9
800078e2:	16 96       	mov	r6,r11
800078e4:	30 0e       	mov	lr,0
800078e6:	50 09       	stdsp	sp[0x0],r9
800078e8:	0d 02       	ld.w	r2,r6++
800078ea:	e4 00 16 10 	lsr	r0,r2,0x10
800078ee:	70 01       	ld.w	r1,r8[0x0]
800078f0:	70 09       	ld.w	r9,r8[0x0]
800078f2:	b1 81       	lsr	r1,0x10
800078f4:	e5 d2 c0 10 	bfextu	r2,r2,0x0,0x10
800078f8:	e0 05 03 41 	mac	r1,r0,r5
800078fc:	ab 32       	mul	r2,r5
800078fe:	e1 d9 c0 10 	bfextu	r0,r9,0x0,0x10
80007902:	00 02       	add	r2,r0
80007904:	e4 0e 00 0e 	add	lr,r2,lr
80007908:	b0 1e       	st.h	r8[0x2],lr
8000790a:	b1 8e       	lsr	lr,0x10
8000790c:	1c 01       	add	r1,lr
8000790e:	b0 01       	st.h	r8[0x0],r1
80007910:	e2 0e 16 10 	lsr	lr,r1,0x10
80007914:	2f c8       	sub	r8,-4
80007916:	06 36       	cp.w	r6,r3
80007918:	ce 83       	brcs	800078e8 <__multiply+0x6c>
8000791a:	40 09       	lddsp	r9,sp[0x0]
8000791c:	91 0e       	st.w	r8[0x0],lr
8000791e:	94 86       	ld.uh	r6,r10[0x0]
80007920:	58 06       	cp.w	r6,0
80007922:	c1 d0       	breq	8000795c <__multiply+0xe0>
80007924:	72 02       	ld.w	r2,r9[0x0]
80007926:	12 98       	mov	r8,r9
80007928:	16 9e       	mov	lr,r11
8000792a:	30 05       	mov	r5,0
8000792c:	b0 12       	st.h	r8[0x2],r2
8000792e:	1d 01       	ld.w	r1,lr++
80007930:	90 82       	ld.uh	r2,r8[0x0]
80007932:	e1 d1 c0 10 	bfextu	r0,r1,0x0,0x10
80007936:	ad 30       	mul	r0,r6
80007938:	e0 02 00 02 	add	r2,r0,r2
8000793c:	e4 05 00 05 	add	r5,r2,r5
80007940:	b0 05       	st.h	r8[0x0],r5
80007942:	b1 85       	lsr	r5,0x10
80007944:	b1 81       	lsr	r1,0x10
80007946:	2f c8       	sub	r8,-4
80007948:	ad 31       	mul	r1,r6
8000794a:	90 92       	ld.uh	r2,r8[0x2]
8000794c:	e2 02 00 02 	add	r2,r1,r2
80007950:	0a 02       	add	r2,r5
80007952:	e4 05 16 10 	lsr	r5,r2,0x10
80007956:	06 3e       	cp.w	lr,r3
80007958:	ce a3       	brcs	8000792c <__multiply+0xb0>
8000795a:	91 02       	st.w	r8[0x0],r2
8000795c:	2f ca       	sub	r10,-4
8000795e:	2f c9       	sub	r9,-4
80007960:	40 18       	lddsp	r8,sp[0x4]
80007962:	10 3a       	cp.w	r10,r8
80007964:	cb b3       	brcs	800078da <__multiply+0x5e>
80007966:	c0 28       	rjmp	8000796a <__multiply+0xee>
80007968:	20 17       	sub	r7,1
8000796a:	58 07       	cp.w	r7,0
8000796c:	e0 8a 00 05 	brle	80007976 <__multiply+0xfa>
80007970:	09 48       	ld.w	r8,--r4
80007972:	58 08       	cp.w	r8,0
80007974:	cf a0       	breq	80007968 <__multiply+0xec>
80007976:	99 47       	st.w	r12[0x10],r7
80007978:	2f ed       	sub	sp,-8
8000797a:	d8 32       	popm	r0-r7,pc

8000797c <__i2b>:
8000797c:	d4 21       	pushm	r4-r7,lr
8000797e:	16 97       	mov	r7,r11
80007980:	30 1b       	mov	r11,1
80007982:	c4 9e       	rcall	80007614 <_Balloc>
80007984:	30 19       	mov	r9,1
80007986:	99 57       	st.w	r12[0x14],r7
80007988:	99 49       	st.w	r12[0x10],r9
8000798a:	d8 22       	popm	r4-r7,pc

8000798c <__multadd>:
8000798c:	d4 31       	pushm	r0-r7,lr
8000798e:	30 08       	mov	r8,0
80007990:	12 95       	mov	r5,r9
80007992:	16 97       	mov	r7,r11
80007994:	18 96       	mov	r6,r12
80007996:	76 44       	ld.w	r4,r11[0x10]
80007998:	f6 c9 ff ec 	sub	r9,r11,-20
8000799c:	72 0b       	ld.w	r11,r9[0x0]
8000799e:	f6 0c 16 10 	lsr	r12,r11,0x10
800079a2:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
800079a6:	f4 0c 02 4c 	mul	r12,r10,r12
800079aa:	f4 0b 03 45 	mac	r5,r10,r11
800079ae:	f7 d5 c0 10 	bfextu	r11,r5,0x0,0x10
800079b2:	b1 85       	lsr	r5,0x10
800079b4:	18 05       	add	r5,r12
800079b6:	ea 0c 15 10 	lsl	r12,r5,0x10
800079ba:	f8 0b 00 0b 	add	r11,r12,r11
800079be:	12 ab       	st.w	r9++,r11
800079c0:	2f f8       	sub	r8,-1
800079c2:	b1 85       	lsr	r5,0x10
800079c4:	08 38       	cp.w	r8,r4
800079c6:	ce b5       	brlt	8000799c <__multadd+0x10>
800079c8:	58 05       	cp.w	r5,0
800079ca:	c1 c0       	breq	80007a02 <__multadd+0x76>
800079cc:	6e 28       	ld.w	r8,r7[0x8]
800079ce:	10 34       	cp.w	r4,r8
800079d0:	c1 35       	brlt	800079f6 <__multadd+0x6a>
800079d2:	6e 1b       	ld.w	r11,r7[0x4]
800079d4:	0c 9c       	mov	r12,r6
800079d6:	2f fb       	sub	r11,-1
800079d8:	c1 ee       	rcall	80007614 <_Balloc>
800079da:	6e 4a       	ld.w	r10,r7[0x10]
800079dc:	ee cb ff f4 	sub	r11,r7,-12
800079e0:	18 93       	mov	r3,r12
800079e2:	2f ea       	sub	r10,-2
800079e4:	2f 4c       	sub	r12,-12
800079e6:	a3 6a       	lsl	r10,0x2
800079e8:	fe b0 de 36 	rcall	80003654 <memcpy>
800079ec:	0e 9b       	mov	r11,r7
800079ee:	0c 9c       	mov	r12,r6
800079f0:	fe b0 fd f8 	rcall	800075e0 <_Bfree>
800079f4:	06 97       	mov	r7,r3
800079f6:	e8 c8 ff ff 	sub	r8,r4,-1
800079fa:	2f b4       	sub	r4,-5
800079fc:	8f 48       	st.w	r7[0x10],r8
800079fe:	ee 04 09 25 	st.w	r7[r4<<0x2],r5
80007a02:	0e 9c       	mov	r12,r7
80007a04:	d8 32       	popm	r0-r7,pc
80007a06:	d7 03       	nop

80007a08 <__pow5mult>:
80007a08:	d4 31       	pushm	r0-r7,lr
80007a0a:	14 96       	mov	r6,r10
80007a0c:	18 97       	mov	r7,r12
80007a0e:	16 94       	mov	r4,r11
80007a10:	f1 da c0 02 	bfextu	r8,r10,0x0,0x2
80007a14:	c0 90       	breq	80007a26 <__pow5mult+0x1e>
80007a16:	20 18       	sub	r8,1
80007a18:	fe c9 e1 bc 	sub	r9,pc,-7748
80007a1c:	f2 08 03 2a 	ld.w	r10,r9[r8<<0x2]
80007a20:	30 09       	mov	r9,0
80007a22:	cb 5f       	rcall	8000798c <__multadd>
80007a24:	18 94       	mov	r4,r12
80007a26:	a3 46       	asr	r6,0x2
80007a28:	c3 40       	breq	80007a90 <__pow5mult+0x88>
80007a2a:	6e 95       	ld.w	r5,r7[0x24]
80007a2c:	58 05       	cp.w	r5,0
80007a2e:	c0 91       	brne	80007a40 <__pow5mult+0x38>
80007a30:	31 0c       	mov	r12,16
80007a32:	fe b0 fa f3 	rcall	80007018 <malloc>
80007a36:	99 35       	st.w	r12[0xc],r5
80007a38:	8f 9c       	st.w	r7[0x24],r12
80007a3a:	99 15       	st.w	r12[0x4],r5
80007a3c:	99 25       	st.w	r12[0x8],r5
80007a3e:	99 05       	st.w	r12[0x0],r5
80007a40:	6e 93       	ld.w	r3,r7[0x24]
80007a42:	66 25       	ld.w	r5,r3[0x8]
80007a44:	58 05       	cp.w	r5,0
80007a46:	c0 c1       	brne	80007a5e <__pow5mult+0x56>
80007a48:	e0 6b 02 71 	mov	r11,625
80007a4c:	0e 9c       	mov	r12,r7
80007a4e:	c9 7f       	rcall	8000797c <__i2b>
80007a50:	87 2c       	st.w	r3[0x8],r12
80007a52:	30 08       	mov	r8,0
80007a54:	18 95       	mov	r5,r12
80007a56:	99 08       	st.w	r12[0x0],r8
80007a58:	c0 38       	rjmp	80007a5e <__pow5mult+0x56>
80007a5a:	06 9c       	mov	r12,r3
80007a5c:	18 95       	mov	r5,r12
80007a5e:	ed b6 00 00 	bld	r6,0x0
80007a62:	c0 b1       	brne	80007a78 <__pow5mult+0x70>
80007a64:	08 9b       	mov	r11,r4
80007a66:	0a 9a       	mov	r10,r5
80007a68:	0e 9c       	mov	r12,r7
80007a6a:	c0 9f       	rcall	8000787c <__multiply>
80007a6c:	08 9b       	mov	r11,r4
80007a6e:	18 93       	mov	r3,r12
80007a70:	0e 9c       	mov	r12,r7
80007a72:	06 94       	mov	r4,r3
80007a74:	fe b0 fd b6 	rcall	800075e0 <_Bfree>
80007a78:	a1 56       	asr	r6,0x1
80007a7a:	c0 b0       	breq	80007a90 <__pow5mult+0x88>
80007a7c:	6a 03       	ld.w	r3,r5[0x0]
80007a7e:	58 03       	cp.w	r3,0
80007a80:	ce d1       	brne	80007a5a <__pow5mult+0x52>
80007a82:	0a 9a       	mov	r10,r5
80007a84:	0a 9b       	mov	r11,r5
80007a86:	0e 9c       	mov	r12,r7
80007a88:	cf ae       	rcall	8000787c <__multiply>
80007a8a:	8b 0c       	st.w	r5[0x0],r12
80007a8c:	99 03       	st.w	r12[0x0],r3
80007a8e:	ce 7b       	rjmp	80007a5c <__pow5mult+0x54>
80007a90:	08 9c       	mov	r12,r4
80007a92:	d8 32       	popm	r0-r7,pc

80007a94 <_realloc_r>:
80007a94:	d4 31       	pushm	r0-r7,lr
80007a96:	20 1d       	sub	sp,4
80007a98:	16 94       	mov	r4,r11
80007a9a:	18 92       	mov	r2,r12
80007a9c:	14 9b       	mov	r11,r10
80007a9e:	58 04       	cp.w	r4,0
80007aa0:	c0 51       	brne	80007aaa <_realloc_r+0x16>
80007aa2:	fe b0 fa c3 	rcall	80007028 <_malloc_r>
80007aa6:	18 95       	mov	r5,r12
80007aa8:	c5 39       	rjmp	80007d4e <_realloc_r+0x2ba>
80007aaa:	50 0a       	stdsp	sp[0x0],r10
80007aac:	fe b0 fd 07 	rcall	800074ba <__malloc_lock>
80007ab0:	40 0b       	lddsp	r11,sp[0x0]
80007ab2:	f6 c8 ff f5 	sub	r8,r11,-11
80007ab6:	e8 c1 00 08 	sub	r1,r4,8
80007aba:	10 96       	mov	r6,r8
80007abc:	62 1c       	ld.w	r12,r1[0x4]
80007abe:	e0 16 ff f8 	andl	r6,0xfff8
80007ac2:	59 68       	cp.w	r8,22
80007ac4:	f9 b6 08 10 	movls	r6,16
80007ac8:	16 36       	cp.w	r6,r11
80007aca:	5f 38       	srlo	r8
80007acc:	f1 e6 13 f8 	or	r8,r8,r6>>0x1f
80007ad0:	c0 50       	breq	80007ada <_realloc_r+0x46>
80007ad2:	30 c8       	mov	r8,12
80007ad4:	30 05       	mov	r5,0
80007ad6:	85 38       	st.w	r2[0xc],r8
80007ad8:	c3 b9       	rjmp	80007d4e <_realloc_r+0x2ba>
80007ada:	18 90       	mov	r0,r12
80007adc:	e0 10 ff fc 	andl	r0,0xfffc
80007ae0:	0c 30       	cp.w	r0,r6
80007ae2:	e0 84 01 0b 	brge	80007cf8 <_realloc_r+0x264>
80007ae6:	e0 68 01 08 	mov	r8,264
80007aea:	e2 00 00 09 	add	r9,r1,r0
80007aee:	70 25       	ld.w	r5,r8[0x8]
80007af0:	0a 39       	cp.w	r9,r5
80007af2:	c0 90       	breq	80007b04 <_realloc_r+0x70>
80007af4:	72 1a       	ld.w	r10,r9[0x4]
80007af6:	a1 ca       	cbr	r10,0x0
80007af8:	f2 0a 00 0a 	add	r10,r9,r10
80007afc:	74 1a       	ld.w	r10,r10[0x4]
80007afe:	ed ba 00 00 	bld	r10,0x0
80007b02:	c2 20       	breq	80007b46 <_realloc_r+0xb2>
80007b04:	72 1a       	ld.w	r10,r9[0x4]
80007b06:	e0 1a ff fc 	andl	r10,0xfffc
80007b0a:	f4 00 00 03 	add	r3,r10,r0
80007b0e:	0a 39       	cp.w	r9,r5
80007b10:	c1 31       	brne	80007b36 <_realloc_r+0xa2>
80007b12:	ec c7 ff f0 	sub	r7,r6,-16
80007b16:	0e 33       	cp.w	r3,r7
80007b18:	c1 95       	brlt	80007b4a <_realloc_r+0xb6>
80007b1a:	e2 06 00 09 	add	r9,r1,r6
80007b1e:	0c 13       	sub	r3,r6
80007b20:	a1 a3       	sbr	r3,0x0
80007b22:	93 13       	st.w	r9[0x4],r3
80007b24:	91 29       	st.w	r8[0x8],r9
80007b26:	04 9c       	mov	r12,r2
80007b28:	62 18       	ld.w	r8,r1[0x4]
80007b2a:	08 95       	mov	r5,r4
80007b2c:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007b30:	10 46       	or	r6,r8
80007b32:	83 16       	st.w	r1[0x4],r6
80007b34:	c0 b9       	rjmp	80007d4a <_realloc_r+0x2b6>
80007b36:	0c 33       	cp.w	r3,r6
80007b38:	c0 95       	brlt	80007b4a <_realloc_r+0xb6>
80007b3a:	72 28       	ld.w	r8,r9[0x8]
80007b3c:	02 97       	mov	r7,r1
80007b3e:	72 39       	ld.w	r9,r9[0xc]
80007b40:	93 28       	st.w	r9[0x8],r8
80007b42:	91 39       	st.w	r8[0xc],r9
80007b44:	cd c8       	rjmp	80007cfc <_realloc_r+0x268>
80007b46:	30 0a       	mov	r10,0
80007b48:	14 99       	mov	r9,r10
80007b4a:	ed bc 00 00 	bld	r12,0x0
80007b4e:	e0 80 00 95 	breq	80007c78 <_realloc_r+0x1e4>
80007b52:	62 07       	ld.w	r7,r1[0x0]
80007b54:	e2 07 01 07 	sub	r7,r1,r7
80007b58:	6e 1c       	ld.w	r12,r7[0x4]
80007b5a:	e0 1c ff fc 	andl	r12,0xfffc
80007b5e:	58 09       	cp.w	r9,0
80007b60:	c5 60       	breq	80007c0c <_realloc_r+0x178>
80007b62:	f8 00 00 03 	add	r3,r12,r0
80007b66:	0a 39       	cp.w	r9,r5
80007b68:	c4 81       	brne	80007bf8 <_realloc_r+0x164>
80007b6a:	14 03       	add	r3,r10
80007b6c:	ec c9 ff f0 	sub	r9,r6,-16
80007b70:	12 33       	cp.w	r3,r9
80007b72:	c4 d5       	brlt	80007c0c <_realloc_r+0x178>
80007b74:	6e 3a       	ld.w	r10,r7[0xc]
80007b76:	6e 29       	ld.w	r9,r7[0x8]
80007b78:	95 29       	st.w	r10[0x8],r9
80007b7a:	93 3a       	st.w	r9[0xc],r10
80007b7c:	ee c5 ff f8 	sub	r5,r7,-8
80007b80:	e0 ca 00 04 	sub	r10,r0,4
80007b84:	e0 4a 00 24 	cp.w	r10,36
80007b88:	e0 8b 00 25 	brhi	80007bd2 <_realloc_r+0x13e>
80007b8c:	0a 99       	mov	r9,r5
80007b8e:	59 3a       	cp.w	r10,19
80007b90:	e0 88 00 1a 	brls	80007bc4 <_realloc_r+0x130>
80007b94:	09 09       	ld.w	r9,r4++
80007b96:	8b 09       	st.w	r5[0x0],r9
80007b98:	09 09       	ld.w	r9,r4++
80007b9a:	8f 39       	st.w	r7[0xc],r9
80007b9c:	ee c9 ff f0 	sub	r9,r7,-16
80007ba0:	59 ba       	cp.w	r10,27
80007ba2:	e0 88 00 11 	brls	80007bc4 <_realloc_r+0x130>
80007ba6:	09 0b       	ld.w	r11,r4++
80007ba8:	93 0b       	st.w	r9[0x0],r11
80007baa:	09 09       	ld.w	r9,r4++
80007bac:	8f 59       	st.w	r7[0x14],r9
80007bae:	ee c9 ff e8 	sub	r9,r7,-24
80007bb2:	e0 4a 00 24 	cp.w	r10,36
80007bb6:	c0 71       	brne	80007bc4 <_realloc_r+0x130>
80007bb8:	09 0a       	ld.w	r10,r4++
80007bba:	93 0a       	st.w	r9[0x0],r10
80007bbc:	ee c9 ff e0 	sub	r9,r7,-32
80007bc0:	09 0a       	ld.w	r10,r4++
80007bc2:	8f 7a       	st.w	r7[0x1c],r10
80007bc4:	09 0a       	ld.w	r10,r4++
80007bc6:	12 aa       	st.w	r9++,r10
80007bc8:	68 0a       	ld.w	r10,r4[0x0]
80007bca:	93 0a       	st.w	r9[0x0],r10
80007bcc:	68 1a       	ld.w	r10,r4[0x4]
80007bce:	93 1a       	st.w	r9[0x4],r10
80007bd0:	c0 78       	rjmp	80007bde <_realloc_r+0x14a>
80007bd2:	50 08       	stdsp	sp[0x0],r8
80007bd4:	08 9b       	mov	r11,r4
80007bd6:	0a 9c       	mov	r12,r5
80007bd8:	fe b0 fc 4b 	rcall	8000746e <memmove>
80007bdc:	40 08       	lddsp	r8,sp[0x0]
80007bde:	ee 06 00 09 	add	r9,r7,r6
80007be2:	0c 13       	sub	r3,r6
80007be4:	a1 a3       	sbr	r3,0x0
80007be6:	93 13       	st.w	r9[0x4],r3
80007be8:	91 29       	st.w	r8[0x8],r9
80007bea:	04 9c       	mov	r12,r2
80007bec:	6e 18       	ld.w	r8,r7[0x4]
80007bee:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007bf2:	10 46       	or	r6,r8
80007bf4:	8f 16       	st.w	r7[0x4],r6
80007bf6:	ca a8       	rjmp	80007d4a <_realloc_r+0x2b6>
80007bf8:	14 03       	add	r3,r10
80007bfa:	0c 33       	cp.w	r3,r6
80007bfc:	c0 85       	brlt	80007c0c <_realloc_r+0x178>
80007bfe:	72 28       	ld.w	r8,r9[0x8]
80007c00:	72 39       	ld.w	r9,r9[0xc]
80007c02:	93 28       	st.w	r9[0x8],r8
80007c04:	91 39       	st.w	r8[0xc],r9
80007c06:	6e 28       	ld.w	r8,r7[0x8]
80007c08:	6e 39       	ld.w	r9,r7[0xc]
80007c0a:	c0 78       	rjmp	80007c18 <_realloc_r+0x184>
80007c0c:	f8 00 00 03 	add	r3,r12,r0
80007c10:	0c 33       	cp.w	r3,r6
80007c12:	c3 35       	brlt	80007c78 <_realloc_r+0x1e4>
80007c14:	6e 39       	ld.w	r9,r7[0xc]
80007c16:	6e 28       	ld.w	r8,r7[0x8]
80007c18:	93 28       	st.w	r9[0x8],r8
80007c1a:	91 39       	st.w	r8[0xc],r9
80007c1c:	e0 ca 00 04 	sub	r10,r0,4
80007c20:	ee cc ff f8 	sub	r12,r7,-8
80007c24:	e0 4a 00 24 	cp.w	r10,36
80007c28:	e0 8b 00 24 	brhi	80007c70 <_realloc_r+0x1dc>
80007c2c:	59 3a       	cp.w	r10,19
80007c2e:	e0 88 00 1a 	brls	80007c62 <_realloc_r+0x1ce>
80007c32:	09 08       	ld.w	r8,r4++
80007c34:	99 08       	st.w	r12[0x0],r8
80007c36:	09 08       	ld.w	r8,r4++
80007c38:	8f 38       	st.w	r7[0xc],r8
80007c3a:	ee cc ff f0 	sub	r12,r7,-16
80007c3e:	59 ba       	cp.w	r10,27
80007c40:	e0 88 00 11 	brls	80007c62 <_realloc_r+0x1ce>
80007c44:	09 08       	ld.w	r8,r4++
80007c46:	99 08       	st.w	r12[0x0],r8
80007c48:	09 08       	ld.w	r8,r4++
80007c4a:	8f 58       	st.w	r7[0x14],r8
80007c4c:	ee cc ff e8 	sub	r12,r7,-24
80007c50:	e0 4a 00 24 	cp.w	r10,36
80007c54:	c0 71       	brne	80007c62 <_realloc_r+0x1ce>
80007c56:	09 08       	ld.w	r8,r4++
80007c58:	99 08       	st.w	r12[0x0],r8
80007c5a:	ee cc ff e0 	sub	r12,r7,-32
80007c5e:	09 08       	ld.w	r8,r4++
80007c60:	8f 78       	st.w	r7[0x1c],r8
80007c62:	09 08       	ld.w	r8,r4++
80007c64:	18 a8       	st.w	r12++,r8
80007c66:	68 08       	ld.w	r8,r4[0x0]
80007c68:	99 08       	st.w	r12[0x0],r8
80007c6a:	68 18       	ld.w	r8,r4[0x4]
80007c6c:	99 18       	st.w	r12[0x4],r8
80007c6e:	c4 78       	rjmp	80007cfc <_realloc_r+0x268>
80007c70:	08 9b       	mov	r11,r4
80007c72:	fe b0 fb fe 	rcall	8000746e <memmove>
80007c76:	c4 38       	rjmp	80007cfc <_realloc_r+0x268>
80007c78:	04 9c       	mov	r12,r2
80007c7a:	fe b0 f9 d7 	rcall	80007028 <_malloc_r>
80007c7e:	18 95       	mov	r5,r12
80007c80:	c3 a0       	breq	80007cf4 <_realloc_r+0x260>
80007c82:	62 18       	ld.w	r8,r1[0x4]
80007c84:	f8 c9 00 08 	sub	r9,r12,8
80007c88:	a1 c8       	cbr	r8,0x0
80007c8a:	e2 08 00 08 	add	r8,r1,r8
80007c8e:	10 39       	cp.w	r9,r8
80007c90:	c0 71       	brne	80007c9e <_realloc_r+0x20a>
80007c92:	72 13       	ld.w	r3,r9[0x4]
80007c94:	02 97       	mov	r7,r1
80007c96:	e0 13 ff fc 	andl	r3,0xfffc
80007c9a:	00 03       	add	r3,r0
80007c9c:	c3 08       	rjmp	80007cfc <_realloc_r+0x268>
80007c9e:	e0 ca 00 04 	sub	r10,r0,4
80007ca2:	e0 4a 00 24 	cp.w	r10,36
80007ca6:	e0 8b 00 20 	brhi	80007ce6 <_realloc_r+0x252>
80007caa:	08 99       	mov	r9,r4
80007cac:	18 98       	mov	r8,r12
80007cae:	59 3a       	cp.w	r10,19
80007cb0:	e0 88 00 14 	brls	80007cd8 <_realloc_r+0x244>
80007cb4:	13 0b       	ld.w	r11,r9++
80007cb6:	10 ab       	st.w	r8++,r11
80007cb8:	13 0b       	ld.w	r11,r9++
80007cba:	10 ab       	st.w	r8++,r11
80007cbc:	59 ba       	cp.w	r10,27
80007cbe:	e0 88 00 0d 	brls	80007cd8 <_realloc_r+0x244>
80007cc2:	13 0b       	ld.w	r11,r9++
80007cc4:	10 ab       	st.w	r8++,r11
80007cc6:	13 0b       	ld.w	r11,r9++
80007cc8:	10 ab       	st.w	r8++,r11
80007cca:	e0 4a 00 24 	cp.w	r10,36
80007cce:	c0 51       	brne	80007cd8 <_realloc_r+0x244>
80007cd0:	13 0a       	ld.w	r10,r9++
80007cd2:	10 aa       	st.w	r8++,r10
80007cd4:	13 0a       	ld.w	r10,r9++
80007cd6:	10 aa       	st.w	r8++,r10
80007cd8:	13 0a       	ld.w	r10,r9++
80007cda:	10 aa       	st.w	r8++,r10
80007cdc:	72 0a       	ld.w	r10,r9[0x0]
80007cde:	91 0a       	st.w	r8[0x0],r10
80007ce0:	72 19       	ld.w	r9,r9[0x4]
80007ce2:	91 19       	st.w	r8[0x4],r9
80007ce4:	c0 48       	rjmp	80007cec <_realloc_r+0x258>
80007ce6:	08 9b       	mov	r11,r4
80007ce8:	fe b0 fb c3 	rcall	8000746e <memmove>
80007cec:	08 9b       	mov	r11,r4
80007cee:	04 9c       	mov	r12,r2
80007cf0:	fe b0 f6 f6 	rcall	80006adc <_free_r>
80007cf4:	04 9c       	mov	r12,r2
80007cf6:	c2 a8       	rjmp	80007d4a <_realloc_r+0x2b6>
80007cf8:	00 93       	mov	r3,r0
80007cfa:	02 97       	mov	r7,r1
80007cfc:	e6 06 01 09 	sub	r9,r3,r6
80007d00:	6e 18       	ld.w	r8,r7[0x4]
80007d02:	58 f9       	cp.w	r9,15
80007d04:	e0 88 00 16 	brls	80007d30 <_realloc_r+0x29c>
80007d08:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007d0c:	ed e8 10 08 	or	r8,r6,r8
80007d10:	8f 18       	st.w	r7[0x4],r8
80007d12:	12 98       	mov	r8,r9
80007d14:	a1 a8       	sbr	r8,0x0
80007d16:	ee 06 00 0b 	add	r11,r7,r6
80007d1a:	f6 09 00 09 	add	r9,r11,r9
80007d1e:	97 18       	st.w	r11[0x4],r8
80007d20:	72 18       	ld.w	r8,r9[0x4]
80007d22:	a1 a8       	sbr	r8,0x0
80007d24:	2f 8b       	sub	r11,-8
80007d26:	93 18       	st.w	r9[0x4],r8
80007d28:	04 9c       	mov	r12,r2
80007d2a:	fe b0 f6 d9 	rcall	80006adc <_free_r>
80007d2e:	c0 b8       	rjmp	80007d44 <_realloc_r+0x2b0>
80007d30:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007d34:	e7 e8 10 08 	or	r8,r3,r8
80007d38:	8f 18       	st.w	r7[0x4],r8
80007d3a:	ee 03 00 03 	add	r3,r7,r3
80007d3e:	66 18       	ld.w	r8,r3[0x4]
80007d40:	a1 a8       	sbr	r8,0x0
80007d42:	87 18       	st.w	r3[0x4],r8
80007d44:	04 9c       	mov	r12,r2
80007d46:	ee c5 ff f8 	sub	r5,r7,-8
80007d4a:	fe b0 fb b9 	rcall	800074bc <__malloc_unlock>
80007d4e:	0a 9c       	mov	r12,r5
80007d50:	2f fd       	sub	sp,-4
80007d52:	d8 32       	popm	r0-r7,pc

80007d54 <__isinfd>:
80007d54:	14 98       	mov	r8,r10
80007d56:	fc 19 7f f0 	movh	r9,0x7ff0
80007d5a:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
80007d5e:	f0 0b 11 00 	rsub	r11,r8,0
80007d62:	f7 e8 10 08 	or	r8,r11,r8
80007d66:	f5 e8 13 f8 	or	r8,r10,r8>>0x1f
80007d6a:	f2 08 01 08 	sub	r8,r9,r8
80007d6e:	f0 0c 11 00 	rsub	r12,r8,0
80007d72:	f9 e8 10 08 	or	r8,r12,r8
80007d76:	f0 0c 14 1f 	asr	r12,r8,0x1f
80007d7a:	2f fc       	sub	r12,-1
80007d7c:	5e fc       	retal	r12

80007d7e <__isnand>:
80007d7e:	14 98       	mov	r8,r10
80007d80:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
80007d84:	f0 0c 11 00 	rsub	r12,r8,0
80007d88:	10 4c       	or	r12,r8
80007d8a:	fc 18 7f f0 	movh	r8,0x7ff0
80007d8e:	f5 ec 13 fc 	or	r12,r10,r12>>0x1f
80007d92:	f0 0c 01 0c 	sub	r12,r8,r12
80007d96:	bf 9c       	lsr	r12,0x1f
80007d98:	5e fc       	retal	r12
80007d9a:	d7 03       	nop

80007d9c <_sbrk_r>:
80007d9c:	d4 21       	pushm	r4-r7,lr
80007d9e:	30 08       	mov	r8,0
80007da0:	18 97       	mov	r7,r12
80007da2:	e0 66 06 78 	mov	r6,1656
80007da6:	16 9c       	mov	r12,r11
80007da8:	8d 08       	st.w	r6[0x0],r8
80007daa:	ca fc       	rcall	80007f08 <_sbrk>
80007dac:	5b fc       	cp.w	r12,-1
80007dae:	c0 51       	brne	80007db8 <_sbrk_r+0x1c>
80007db0:	6c 08       	ld.w	r8,r6[0x0]
80007db2:	58 08       	cp.w	r8,0
80007db4:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007db8:	d8 22       	popm	r4-r7,pc
80007dba:	d7 03       	nop

80007dbc <__sclose>:
80007dbc:	d4 01       	pushm	lr
80007dbe:	96 7b       	ld.sh	r11,r11[0xe]
80007dc0:	cf ec       	rcall	80007fbc <_close_r>
80007dc2:	d8 02       	popm	pc

80007dc4 <__sseek>:
80007dc4:	d4 21       	pushm	r4-r7,lr
80007dc6:	16 97       	mov	r7,r11
80007dc8:	96 7b       	ld.sh	r11,r11[0xe]
80007dca:	c8 5d       	rcall	800080d4 <_lseek_r>
80007dcc:	8e 68       	ld.sh	r8,r7[0xc]
80007dce:	10 99       	mov	r9,r8
80007dd0:	ad c8       	cbr	r8,0xc
80007dd2:	ad a9       	sbr	r9,0xc
80007dd4:	5b fc       	cp.w	r12,-1
80007dd6:	ef f8 0c 06 	st.heq	r7[0xc],r8
80007dda:	ef f9 1c 06 	st.hne	r7[0xc],r9
80007dde:	ef fc 1a 15 	st.wne	r7[0x54],r12
80007de2:	d8 22       	popm	r4-r7,pc

80007de4 <__swrite>:
80007de4:	d4 21       	pushm	r4-r7,lr
80007de6:	96 68       	ld.sh	r8,r11[0xc]
80007de8:	16 97       	mov	r7,r11
80007dea:	14 95       	mov	r5,r10
80007dec:	12 94       	mov	r4,r9
80007dee:	e2 18 01 00 	andl	r8,0x100,COH
80007df2:	18 96       	mov	r6,r12
80007df4:	c0 50       	breq	80007dfe <__swrite+0x1a>
80007df6:	30 29       	mov	r9,2
80007df8:	30 0a       	mov	r10,0
80007dfa:	96 7b       	ld.sh	r11,r11[0xe]
80007dfc:	c6 cd       	rcall	800080d4 <_lseek_r>
80007dfe:	8e 68       	ld.sh	r8,r7[0xc]
80007e00:	ad c8       	cbr	r8,0xc
80007e02:	08 99       	mov	r9,r4
80007e04:	0a 9a       	mov	r10,r5
80007e06:	8e 7b       	ld.sh	r11,r7[0xe]
80007e08:	0c 9c       	mov	r12,r6
80007e0a:	ae 68       	st.h	r7[0xc],r8
80007e0c:	c9 ac       	rcall	80007f40 <_write_r>
80007e0e:	d8 22       	popm	r4-r7,pc

80007e10 <__sread>:
80007e10:	d4 21       	pushm	r4-r7,lr
80007e12:	16 97       	mov	r7,r11
80007e14:	96 7b       	ld.sh	r11,r11[0xe]
80007e16:	c7 1d       	rcall	800080f8 <_read_r>
80007e18:	c0 65       	brlt	80007e24 <__sread+0x14>
80007e1a:	6f 58       	ld.w	r8,r7[0x54]
80007e1c:	18 08       	add	r8,r12
80007e1e:	ef 48 00 54 	st.w	r7[84],r8
80007e22:	d8 22       	popm	r4-r7,pc
80007e24:	8e 68       	ld.sh	r8,r7[0xc]
80007e26:	ad c8       	cbr	r8,0xc
80007e28:	ae 68       	st.h	r7[0xc],r8
80007e2a:	d8 22       	popm	r4-r7,pc

80007e2c <strlen>:
80007e2c:	30 09       	mov	r9,0
80007e2e:	18 98       	mov	r8,r12
80007e30:	c0 28       	rjmp	80007e34 <strlen+0x8>
80007e32:	2f f8       	sub	r8,-1
80007e34:	11 8a       	ld.ub	r10,r8[0x0]
80007e36:	f2 0a 18 00 	cp.b	r10,r9
80007e3a:	cf c1       	brne	80007e32 <strlen+0x6>
80007e3c:	f0 0c 01 0c 	sub	r12,r8,r12
80007e40:	5e fc       	retal	r12
80007e42:	d7 03       	nop

80007e44 <_close>:
80007e44:	30 28       	mov	r8,2
80007e46:	d6 73       	breakpoint
80007e48:	3f fc       	mov	r12,-1
80007e4a:	35 8b       	mov	r11,88
80007e4c:	58 0c       	cp.w	r12,0
80007e4e:	5e 4c       	retge	r12
80007e50:	e0 6a 06 78 	mov	r10,1656
80007e54:	95 0b       	st.w	r10[0x0],r11
80007e56:	5e fc       	retal	r12

80007e58 <_lseek>:
80007e58:	30 58       	mov	r8,5
80007e5a:	d6 73       	breakpoint
80007e5c:	3f fc       	mov	r12,-1
80007e5e:	35 8b       	mov	r11,88
80007e60:	58 0c       	cp.w	r12,0
80007e62:	5e 4c       	retge	r12
80007e64:	e0 6a 06 78 	mov	r10,1656
80007e68:	95 0b       	st.w	r10[0x0],r11
80007e6a:	5e fc       	retal	r12

80007e6c <_read>:
80007e6c:	30 38       	mov	r8,3
80007e6e:	d6 73       	breakpoint
80007e70:	3f fc       	mov	r12,-1
80007e72:	35 8b       	mov	r11,88
80007e74:	58 0c       	cp.w	r12,0
80007e76:	5e 4c       	retge	r12
80007e78:	e0 6a 06 78 	mov	r10,1656
80007e7c:	95 0b       	st.w	r10[0x0],r11
80007e7e:	5e fc       	retal	r12

80007e80 <_write>:
80007e80:	30 48       	mov	r8,4
80007e82:	d6 73       	breakpoint
80007e84:	3f fc       	mov	r12,-1
80007e86:	35 8b       	mov	r11,88
80007e88:	58 0c       	cp.w	r12,0
80007e8a:	5e 4c       	retge	r12
80007e8c:	e0 6a 06 78 	mov	r10,1656
80007e90:	95 0b       	st.w	r10[0x0],r11
80007e92:	5e fc       	retal	r12

80007e94 <isatty>:
80007e94:	30 b8       	mov	r8,11
80007e96:	d6 73       	breakpoint
80007e98:	3f fc       	mov	r12,-1
80007e9a:	35 8b       	mov	r11,88
80007e9c:	58 0c       	cp.w	r12,0
80007e9e:	5e 4c       	retge	r12
80007ea0:	e0 6a 06 78 	mov	r10,1656
80007ea4:	95 0b       	st.w	r10[0x0],r11
80007ea6:	5e fc       	retal	r12

80007ea8 <_fstat_host>:
80007ea8:	30 98       	mov	r8,9
80007eaa:	d6 73       	breakpoint
80007eac:	3f fc       	mov	r12,-1
80007eae:	35 8b       	mov	r11,88
80007eb0:	58 0c       	cp.w	r12,0
80007eb2:	5e 4c       	retge	r12
80007eb4:	e0 6a 06 78 	mov	r10,1656
80007eb8:	95 0b       	st.w	r10[0x0],r11
80007eba:	5e fc       	retal	r12

80007ebc <_fstat>:
80007ebc:	d4 21       	pushm	r4-r7,lr
80007ebe:	21 0d       	sub	sp,64
80007ec0:	16 97       	mov	r7,r11
80007ec2:	1a 9b       	mov	r11,sp
80007ec4:	cf 2f       	rcall	80007ea8 <_fstat_host>
80007ec6:	c0 34       	brge	80007ecc <_fstat+0x10>
80007ec8:	3f fc       	mov	r12,-1
80007eca:	c1 c8       	rjmp	80007f02 <_fstat+0x46>
80007ecc:	40 08       	lddsp	r8,sp[0x0]
80007ece:	ae 08       	st.h	r7[0x0],r8
80007ed0:	40 18       	lddsp	r8,sp[0x4]
80007ed2:	ae 18       	st.h	r7[0x2],r8
80007ed4:	40 28       	lddsp	r8,sp[0x8]
80007ed6:	8f 18       	st.w	r7[0x4],r8
80007ed8:	40 38       	lddsp	r8,sp[0xc]
80007eda:	ae 48       	st.h	r7[0x8],r8
80007edc:	40 48       	lddsp	r8,sp[0x10]
80007ede:	ae 58       	st.h	r7[0xa],r8
80007ee0:	40 58       	lddsp	r8,sp[0x14]
80007ee2:	ae 68       	st.h	r7[0xc],r8
80007ee4:	40 68       	lddsp	r8,sp[0x18]
80007ee6:	ae 78       	st.h	r7[0xe],r8
80007ee8:	40 88       	lddsp	r8,sp[0x20]
80007eea:	8f 48       	st.w	r7[0x10],r8
80007eec:	40 a8       	lddsp	r8,sp[0x28]
80007eee:	8f b8       	st.w	r7[0x2c],r8
80007ef0:	40 c8       	lddsp	r8,sp[0x30]
80007ef2:	8f c8       	st.w	r7[0x30],r8
80007ef4:	40 d8       	lddsp	r8,sp[0x34]
80007ef6:	8f 58       	st.w	r7[0x14],r8
80007ef8:	40 e8       	lddsp	r8,sp[0x38]
80007efa:	30 0c       	mov	r12,0
80007efc:	8f 78       	st.w	r7[0x1c],r8
80007efe:	40 f8       	lddsp	r8,sp[0x3c]
80007f00:	8f 98       	st.w	r7[0x24],r8
80007f02:	2f 0d       	sub	sp,-64
80007f04:	d8 22       	popm	r4-r7,pc
80007f06:	d7 03       	nop

80007f08 <_sbrk>:
80007f08:	d4 01       	pushm	lr
80007f0a:	e0 68 06 5c 	mov	r8,1628
80007f0e:	70 09       	ld.w	r9,r8[0x0]
80007f10:	58 09       	cp.w	r9,0
80007f12:	c0 41       	brne	80007f1a <_sbrk+0x12>
80007f14:	e0 69 06 80 	mov	r9,1664
80007f18:	91 09       	st.w	r8[0x0],r9
80007f1a:	e0 69 06 5c 	mov	r9,1628
80007f1e:	e0 6a f0 00 	mov	r10,61440
80007f22:	72 08       	ld.w	r8,r9[0x0]
80007f24:	f0 0c 00 0c 	add	r12,r8,r12
80007f28:	14 3c       	cp.w	r12,r10
80007f2a:	e0 8b 00 04 	brhi	80007f32 <_sbrk+0x2a>
80007f2e:	93 0c       	st.w	r9[0x0],r12
80007f30:	c0 58       	rjmp	80007f3a <_sbrk+0x32>
80007f32:	c5 5c       	rcall	80007fdc <__errno>
80007f34:	30 c8       	mov	r8,12
80007f36:	99 08       	st.w	r12[0x0],r8
80007f38:	3f f8       	mov	r8,-1
80007f3a:	10 9c       	mov	r12,r8
80007f3c:	d8 02       	popm	pc
80007f3e:	d7 03       	nop

80007f40 <_write_r>:
80007f40:	d4 21       	pushm	r4-r7,lr
80007f42:	16 98       	mov	r8,r11
80007f44:	18 97       	mov	r7,r12
80007f46:	10 9c       	mov	r12,r8
80007f48:	30 08       	mov	r8,0
80007f4a:	14 9b       	mov	r11,r10
80007f4c:	e0 66 06 78 	mov	r6,1656
80007f50:	12 9a       	mov	r10,r9
80007f52:	8d 08       	st.w	r6[0x0],r8
80007f54:	c9 6f       	rcall	80007e80 <_write>
80007f56:	5b fc       	cp.w	r12,-1
80007f58:	c0 51       	brne	80007f62 <_write_r+0x22>
80007f5a:	6c 08       	ld.w	r8,r6[0x0]
80007f5c:	58 08       	cp.w	r8,0
80007f5e:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007f62:	d8 22       	popm	r4-r7,pc

80007f64 <_calloc_r>:
80007f64:	d4 21       	pushm	r4-r7,lr
80007f66:	f4 0b 02 4b 	mul	r11,r10,r11
80007f6a:	fe b0 f8 5f 	rcall	80007028 <_malloc_r>
80007f6e:	18 97       	mov	r7,r12
80007f70:	c2 30       	breq	80007fb6 <_calloc_r+0x52>
80007f72:	f8 fa ff fc 	ld.w	r10,r12[-4]
80007f76:	e0 1a ff fc 	andl	r10,0xfffc
80007f7a:	20 4a       	sub	r10,4
80007f7c:	e0 4a 00 24 	cp.w	r10,36
80007f80:	e0 8b 00 18 	brhi	80007fb0 <_calloc_r+0x4c>
80007f84:	18 98       	mov	r8,r12
80007f86:	59 3a       	cp.w	r10,19
80007f88:	e0 88 00 0f 	brls	80007fa6 <_calloc_r+0x42>
80007f8c:	30 09       	mov	r9,0
80007f8e:	10 a9       	st.w	r8++,r9
80007f90:	10 a9       	st.w	r8++,r9
80007f92:	59 ba       	cp.w	r10,27
80007f94:	e0 88 00 09 	brls	80007fa6 <_calloc_r+0x42>
80007f98:	10 a9       	st.w	r8++,r9
80007f9a:	10 a9       	st.w	r8++,r9
80007f9c:	e0 4a 00 24 	cp.w	r10,36
80007fa0:	c0 31       	brne	80007fa6 <_calloc_r+0x42>
80007fa2:	10 a9       	st.w	r8++,r9
80007fa4:	10 a9       	st.w	r8++,r9
80007fa6:	30 09       	mov	r9,0
80007fa8:	10 a9       	st.w	r8++,r9
80007faa:	91 19       	st.w	r8[0x4],r9
80007fac:	91 09       	st.w	r8[0x0],r9
80007fae:	c0 48       	rjmp	80007fb6 <_calloc_r+0x52>
80007fb0:	30 0b       	mov	r11,0
80007fb2:	fe b0 fa 7d 	rcall	800074ac <memset>
80007fb6:	0e 9c       	mov	r12,r7
80007fb8:	d8 22       	popm	r4-r7,pc
80007fba:	d7 03       	nop

80007fbc <_close_r>:
80007fbc:	d4 21       	pushm	r4-r7,lr
80007fbe:	30 08       	mov	r8,0
80007fc0:	18 97       	mov	r7,r12
80007fc2:	e0 66 06 78 	mov	r6,1656
80007fc6:	16 9c       	mov	r12,r11
80007fc8:	8d 08       	st.w	r6[0x0],r8
80007fca:	c3 df       	rcall	80007e44 <_close>
80007fcc:	5b fc       	cp.w	r12,-1
80007fce:	c0 51       	brne	80007fd8 <_close_r+0x1c>
80007fd0:	6c 08       	ld.w	r8,r6[0x0]
80007fd2:	58 08       	cp.w	r8,0
80007fd4:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007fd8:	d8 22       	popm	r4-r7,pc
80007fda:	d7 03       	nop

80007fdc <__errno>:
80007fdc:	e0 68 01 04 	mov	r8,260
80007fe0:	70 0c       	ld.w	r12,r8[0x0]
80007fe2:	2f 4c       	sub	r12,-12
80007fe4:	5e fc       	retal	r12
80007fe6:	d7 03       	nop

80007fe8 <_fclose_r>:
80007fe8:	d4 21       	pushm	r4-r7,lr
80007fea:	18 96       	mov	r6,r12
80007fec:	16 97       	mov	r7,r11
80007fee:	58 0b       	cp.w	r11,0
80007ff0:	c0 31       	brne	80007ff6 <_fclose_r+0xe>
80007ff2:	16 95       	mov	r5,r11
80007ff4:	c5 38       	rjmp	8000809a <_fclose_r+0xb2>
80007ff6:	fe b0 f4 87 	rcall	80006904 <__sfp_lock_acquire>
80007ffa:	58 06       	cp.w	r6,0
80007ffc:	c0 70       	breq	8000800a <_fclose_r+0x22>
80007ffe:	6c 68       	ld.w	r8,r6[0x18]
80008000:	58 08       	cp.w	r8,0
80008002:	c0 41       	brne	8000800a <_fclose_r+0x22>
80008004:	0c 9c       	mov	r12,r6
80008006:	fe b0 f4 d1 	rcall	800069a8 <__sinit>
8000800a:	fe c8 e8 4e 	sub	r8,pc,-6066
8000800e:	10 37       	cp.w	r7,r8
80008010:	c0 31       	brne	80008016 <_fclose_r+0x2e>
80008012:	6c 07       	ld.w	r7,r6[0x0]
80008014:	c0 c8       	rjmp	8000802c <_fclose_r+0x44>
80008016:	fe c8 e8 3a 	sub	r8,pc,-6086
8000801a:	10 37       	cp.w	r7,r8
8000801c:	c0 31       	brne	80008022 <_fclose_r+0x3a>
8000801e:	6c 17       	ld.w	r7,r6[0x4]
80008020:	c0 68       	rjmp	8000802c <_fclose_r+0x44>
80008022:	fe c8 e8 26 	sub	r8,pc,-6106
80008026:	10 37       	cp.w	r7,r8
80008028:	ed f7 00 02 	ld.weq	r7,r6[0x8]
8000802c:	8e 69       	ld.sh	r9,r7[0xc]
8000802e:	30 08       	mov	r8,0
80008030:	f0 09 19 00 	cp.h	r9,r8
80008034:	c0 51       	brne	8000803e <_fclose_r+0x56>
80008036:	fe b0 f4 68 	rcall	80006906 <__sfp_lock_release>
8000803a:	30 05       	mov	r5,0
8000803c:	c2 f8       	rjmp	8000809a <_fclose_r+0xb2>
8000803e:	0e 9b       	mov	r11,r7
80008040:	0c 9c       	mov	r12,r6
80008042:	fe b0 f3 db 	rcall	800067f8 <_fflush_r>
80008046:	6e c8       	ld.w	r8,r7[0x30]
80008048:	18 95       	mov	r5,r12
8000804a:	58 08       	cp.w	r8,0
8000804c:	c0 60       	breq	80008058 <_fclose_r+0x70>
8000804e:	6e 8b       	ld.w	r11,r7[0x20]
80008050:	0c 9c       	mov	r12,r6
80008052:	5d 18       	icall	r8
80008054:	f9 b5 05 ff 	movlt	r5,-1
80008058:	8e 68       	ld.sh	r8,r7[0xc]
8000805a:	ed b8 00 07 	bld	r8,0x7
8000805e:	c0 51       	brne	80008068 <_fclose_r+0x80>
80008060:	6e 4b       	ld.w	r11,r7[0x10]
80008062:	0c 9c       	mov	r12,r6
80008064:	fe b0 f5 3c 	rcall	80006adc <_free_r>
80008068:	6e db       	ld.w	r11,r7[0x34]
8000806a:	58 0b       	cp.w	r11,0
8000806c:	c0 a0       	breq	80008080 <_fclose_r+0x98>
8000806e:	ee c8 ff bc 	sub	r8,r7,-68
80008072:	10 3b       	cp.w	r11,r8
80008074:	c0 40       	breq	8000807c <_fclose_r+0x94>
80008076:	0c 9c       	mov	r12,r6
80008078:	fe b0 f5 32 	rcall	80006adc <_free_r>
8000807c:	30 08       	mov	r8,0
8000807e:	8f d8       	st.w	r7[0x34],r8
80008080:	6f 2b       	ld.w	r11,r7[0x48]
80008082:	58 0b       	cp.w	r11,0
80008084:	c0 70       	breq	80008092 <_fclose_r+0xaa>
80008086:	0c 9c       	mov	r12,r6
80008088:	fe b0 f5 2a 	rcall	80006adc <_free_r>
8000808c:	30 08       	mov	r8,0
8000808e:	ef 48 00 48 	st.w	r7[72],r8
80008092:	30 08       	mov	r8,0
80008094:	ae 68       	st.h	r7[0xc],r8
80008096:	fe b0 f4 38 	rcall	80006906 <__sfp_lock_release>
8000809a:	0a 9c       	mov	r12,r5
8000809c:	d8 22       	popm	r4-r7,pc
8000809e:	d7 03       	nop

800080a0 <fclose>:
800080a0:	d4 01       	pushm	lr
800080a2:	e0 68 01 04 	mov	r8,260
800080a6:	18 9b       	mov	r11,r12
800080a8:	70 0c       	ld.w	r12,r8[0x0]
800080aa:	c9 ff       	rcall	80007fe8 <_fclose_r>
800080ac:	d8 02       	popm	pc
800080ae:	d7 03       	nop

800080b0 <_fstat_r>:
800080b0:	d4 21       	pushm	r4-r7,lr
800080b2:	16 98       	mov	r8,r11
800080b4:	18 97       	mov	r7,r12
800080b6:	10 9c       	mov	r12,r8
800080b8:	30 08       	mov	r8,0
800080ba:	e0 66 06 78 	mov	r6,1656
800080be:	14 9b       	mov	r11,r10
800080c0:	8d 08       	st.w	r6[0x0],r8
800080c2:	cf de       	rcall	80007ebc <_fstat>
800080c4:	5b fc       	cp.w	r12,-1
800080c6:	c0 51       	brne	800080d0 <_fstat_r+0x20>
800080c8:	6c 08       	ld.w	r8,r6[0x0]
800080ca:	58 08       	cp.w	r8,0
800080cc:	ef f8 1a 03 	st.wne	r7[0xc],r8
800080d0:	d8 22       	popm	r4-r7,pc
800080d2:	d7 03       	nop

800080d4 <_lseek_r>:
800080d4:	d4 21       	pushm	r4-r7,lr
800080d6:	16 98       	mov	r8,r11
800080d8:	18 97       	mov	r7,r12
800080da:	10 9c       	mov	r12,r8
800080dc:	30 08       	mov	r8,0
800080de:	14 9b       	mov	r11,r10
800080e0:	e0 66 06 78 	mov	r6,1656
800080e4:	12 9a       	mov	r10,r9
800080e6:	8d 08       	st.w	r6[0x0],r8
800080e8:	cb 8e       	rcall	80007e58 <_lseek>
800080ea:	5b fc       	cp.w	r12,-1
800080ec:	c0 51       	brne	800080f6 <_lseek_r+0x22>
800080ee:	6c 08       	ld.w	r8,r6[0x0]
800080f0:	58 08       	cp.w	r8,0
800080f2:	ef f8 1a 03 	st.wne	r7[0xc],r8
800080f6:	d8 22       	popm	r4-r7,pc

800080f8 <_read_r>:
800080f8:	d4 21       	pushm	r4-r7,lr
800080fa:	16 98       	mov	r8,r11
800080fc:	18 97       	mov	r7,r12
800080fe:	10 9c       	mov	r12,r8
80008100:	30 08       	mov	r8,0
80008102:	14 9b       	mov	r11,r10
80008104:	e0 66 06 78 	mov	r6,1656
80008108:	12 9a       	mov	r10,r9
8000810a:	8d 08       	st.w	r6[0x0],r8
8000810c:	cb 0e       	rcall	80007e6c <_read>
8000810e:	5b fc       	cp.w	r12,-1
80008110:	c0 51       	brne	8000811a <_read_r+0x22>
80008112:	6c 08       	ld.w	r8,r6[0x0]
80008114:	58 08       	cp.w	r8,0
80008116:	ef f8 1a 03 	st.wne	r7[0xc],r8
8000811a:	d8 22       	popm	r4-r7,pc

8000811c <__avr32_f64_mul>:
8000811c:	f5 eb 10 1c 	or	r12,r10,r11<<0x1
80008120:	e0 80 00 dc 	breq	800082d8 <__avr32_f64_mul_op1_zero>
80008124:	d4 21       	pushm	r4-r7,lr
80008126:	f7 e9 20 0e 	eor	lr,r11,r9
8000812a:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
8000812e:	30 15       	mov	r5,1
80008130:	c4 30       	breq	800081b6 <__avr32_f64_mul_op1_subnormal>
80008132:	ab 6b       	lsl	r11,0xa
80008134:	f7 ea 13 6b 	or	r11,r11,r10>>0x16
80008138:	ab 6a       	lsl	r10,0xa
8000813a:	f7 d5 d3 c2 	bfins	r11,r5,0x1e,0x2
8000813e:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80008142:	c5 c0       	breq	800081fa <__avr32_f64_mul_op2_subnormal>
80008144:	a1 78       	lsl	r8,0x1
80008146:	5c f9       	rol	r9
80008148:	f3 d5 d2 ab 	bfins	r9,r5,0x15,0xb
8000814c:	e0 47 07 ff 	cp.w	r7,2047
80008150:	c7 70       	breq	8000823e <__avr32_f64_mul_op_nan_or_inf>
80008152:	e0 46 07 ff 	cp.w	r6,2047
80008156:	c7 40       	breq	8000823e <__avr32_f64_mul_op_nan_or_inf>
80008158:	ee 06 00 0c 	add	r12,r7,r6
8000815c:	e0 2c 03 fe 	sub	r12,1022
80008160:	f6 08 06 44 	mulu.d	r4,r11,r8
80008164:	f4 09 07 44 	macu.d	r4,r10,r9
80008168:	f4 08 06 46 	mulu.d	r6,r10,r8
8000816c:	f6 09 06 4a 	mulu.d	r10,r11,r9
80008170:	08 07       	add	r7,r4
80008172:	f4 05 00 4a 	adc	r10,r10,r5
80008176:	5c 0b       	acr	r11
80008178:	ed bb 00 14 	bld	r11,0x14
8000817c:	c0 50       	breq	80008186 <__avr32_f64_mul+0x6a>
8000817e:	a1 77       	lsl	r7,0x1
80008180:	5c fa       	rol	r10
80008182:	5c fb       	rol	r11
80008184:	20 1c       	sub	r12,1
80008186:	58 0c       	cp.w	r12,0
80008188:	e0 8a 00 6f 	brle	80008266 <__avr32_f64_mul_res_subnormal>
8000818c:	e0 4c 07 ff 	cp.w	r12,2047
80008190:	e0 84 00 9c 	brge	800082c8 <__avr32_f64_mul_res_inf>
80008194:	f7 dc d2 8b 	bfins	r11,r12,0x14,0xb
80008198:	ed ea 11 f6 	or	r6,r6,r10<<0x1f
8000819c:	ef e6 12 17 	or	r7,r7,r6>>0x1
800081a0:	ee 17 80 00 	eorh	r7,0x8000
800081a4:	f1 b7 04 20 	satu	r7,0x1
800081a8:	0e 0a       	add	r10,r7
800081aa:	5c 0b       	acr	r11
800081ac:	ed be 00 1f 	bld	lr,0x1f
800081b0:	ef bb 00 1f 	bst	r11,0x1f
800081b4:	d8 22       	popm	r4-r7,pc

800081b6 <__avr32_f64_mul_op1_subnormal>:
800081b6:	e4 1b 00 0f 	andh	r11,0xf
800081ba:	f4 0c 12 00 	clz	r12,r10
800081be:	f6 06 12 00 	clz	r6,r11
800081c2:	f7 bc 03 e1 	sublo	r12,-31
800081c6:	f8 06 17 30 	movlo	r6,r12
800081ca:	f7 b6 02 01 	subhs	r6,1
800081ce:	e0 46 00 20 	cp.w	r6,32
800081d2:	c0 d4       	brge	800081ec <__avr32_f64_mul_op1_subnormal+0x36>
800081d4:	ec 0c 11 20 	rsub	r12,r6,32
800081d8:	f6 06 09 4b 	lsl	r11,r11,r6
800081dc:	f4 0c 0a 4c 	lsr	r12,r10,r12
800081e0:	18 4b       	or	r11,r12
800081e2:	f4 06 09 4a 	lsl	r10,r10,r6
800081e6:	20 b6       	sub	r6,11
800081e8:	0c 17       	sub	r7,r6
800081ea:	ca ab       	rjmp	8000813e <__avr32_f64_mul+0x22>
800081ec:	f4 06 09 4b 	lsl	r11,r10,r6
800081f0:	c6 40       	breq	800082b8 <__avr32_f64_mul_res_zero>
800081f2:	30 0a       	mov	r10,0
800081f4:	20 b6       	sub	r6,11
800081f6:	0c 17       	sub	r7,r6
800081f8:	ca 3b       	rjmp	8000813e <__avr32_f64_mul+0x22>

800081fa <__avr32_f64_mul_op2_subnormal>:
800081fa:	e4 19 00 0f 	andh	r9,0xf
800081fe:	f0 0c 12 00 	clz	r12,r8
80008202:	f2 05 12 00 	clz	r5,r9
80008206:	f7 bc 03 ea 	sublo	r12,-22
8000820a:	f8 05 17 30 	movlo	r5,r12
8000820e:	f7 b5 02 0a 	subhs	r5,10
80008212:	e0 45 00 20 	cp.w	r5,32
80008216:	c0 d4       	brge	80008230 <__avr32_f64_mul_op2_subnormal+0x36>
80008218:	ea 0c 11 20 	rsub	r12,r5,32
8000821c:	f2 05 09 49 	lsl	r9,r9,r5
80008220:	f0 0c 0a 4c 	lsr	r12,r8,r12
80008224:	18 49       	or	r9,r12
80008226:	f0 05 09 48 	lsl	r8,r8,r5
8000822a:	20 25       	sub	r5,2
8000822c:	0a 16       	sub	r6,r5
8000822e:	c8 fb       	rjmp	8000814c <__avr32_f64_mul+0x30>
80008230:	f0 05 09 49 	lsl	r9,r8,r5
80008234:	c4 20       	breq	800082b8 <__avr32_f64_mul_res_zero>
80008236:	30 08       	mov	r8,0
80008238:	20 25       	sub	r5,2
8000823a:	0a 16       	sub	r6,r5
8000823c:	c8 8b       	rjmp	8000814c <__avr32_f64_mul+0x30>

8000823e <__avr32_f64_mul_op_nan_or_inf>:
8000823e:	e4 19 00 0f 	andh	r9,0xf
80008242:	e4 1b 00 0f 	andh	r11,0xf
80008246:	14 4b       	or	r11,r10
80008248:	10 49       	or	r9,r8
8000824a:	e0 47 07 ff 	cp.w	r7,2047
8000824e:	c0 91       	brne	80008260 <__avr32_f64_mul_op1_not_naninf>
80008250:	58 0b       	cp.w	r11,0
80008252:	c3 81       	brne	800082c2 <__avr32_f64_mul_res_nan>
80008254:	e0 46 07 ff 	cp.w	r6,2047
80008258:	c3 81       	brne	800082c8 <__avr32_f64_mul_res_inf>
8000825a:	58 09       	cp.w	r9,0
8000825c:	c3 60       	breq	800082c8 <__avr32_f64_mul_res_inf>
8000825e:	c3 28       	rjmp	800082c2 <__avr32_f64_mul_res_nan>

80008260 <__avr32_f64_mul_op1_not_naninf>:
80008260:	58 09       	cp.w	r9,0
80008262:	c3 30       	breq	800082c8 <__avr32_f64_mul_res_inf>
80008264:	c2 f8       	rjmp	800082c2 <__avr32_f64_mul_res_nan>

80008266 <__avr32_f64_mul_res_subnormal>:
80008266:	5c 3c       	neg	r12
80008268:	2f fc       	sub	r12,-1
8000826a:	f1 bc 04 c0 	satu	r12,0x6
8000826e:	e0 4c 00 20 	cp.w	r12,32
80008272:	c1 14       	brge	80008294 <__avr32_f64_mul_res_subnormal+0x2e>
80008274:	f8 08 11 20 	rsub	r8,r12,32
80008278:	0e 46       	or	r6,r7
8000827a:	ee 0c 0a 47 	lsr	r7,r7,r12
8000827e:	f4 08 09 49 	lsl	r9,r10,r8
80008282:	12 47       	or	r7,r9
80008284:	f4 0c 0a 4a 	lsr	r10,r10,r12
80008288:	f6 08 09 49 	lsl	r9,r11,r8
8000828c:	12 4a       	or	r10,r9
8000828e:	f6 0c 0a 4b 	lsr	r11,r11,r12
80008292:	c8 3b       	rjmp	80008198 <__avr32_f64_mul+0x7c>
80008294:	f8 08 11 20 	rsub	r8,r12,32
80008298:	f9 b9 00 00 	moveq	r9,0
8000829c:	c0 30       	breq	800082a2 <__avr32_f64_mul_res_subnormal+0x3c>
8000829e:	f6 08 09 49 	lsl	r9,r11,r8
800082a2:	0e 46       	or	r6,r7
800082a4:	ed ea 10 16 	or	r6,r6,r10<<0x1
800082a8:	f4 0c 0a 4a 	lsr	r10,r10,r12
800082ac:	f3 ea 10 07 	or	r7,r9,r10
800082b0:	f6 0c 0a 4a 	lsr	r10,r11,r12
800082b4:	30 0b       	mov	r11,0
800082b6:	c7 1b       	rjmp	80008198 <__avr32_f64_mul+0x7c>

800082b8 <__avr32_f64_mul_res_zero>:
800082b8:	1c 9b       	mov	r11,lr
800082ba:	e6 1b 80 00 	andh	r11,0x8000,COH
800082be:	30 0a       	mov	r10,0
800082c0:	d8 22       	popm	r4-r7,pc

800082c2 <__avr32_f64_mul_res_nan>:
800082c2:	3f fb       	mov	r11,-1
800082c4:	3f fa       	mov	r10,-1
800082c6:	d8 22       	popm	r4-r7,pc

800082c8 <__avr32_f64_mul_res_inf>:
800082c8:	f0 6b 00 00 	mov	r11,-1048576
800082cc:	ed be 00 1f 	bld	lr,0x1f
800082d0:	ef bb 00 1f 	bst	r11,0x1f
800082d4:	30 0a       	mov	r10,0
800082d6:	d8 22       	popm	r4-r7,pc

800082d8 <__avr32_f64_mul_op1_zero>:
800082d8:	f7 e9 20 0b 	eor	r11,r11,r9
800082dc:	e6 1b 80 00 	andh	r11,0x8000,COH
800082e0:	f9 d9 c2 8b 	bfextu	r12,r9,0x14,0xb
800082e4:	e0 4c 07 ff 	cp.w	r12,2047
800082e8:	5e 1c       	retne	r12
800082ea:	3f fa       	mov	r10,-1
800082ec:	3f fb       	mov	r11,-1
800082ee:	5e fc       	retal	r12

800082f0 <__avr32_f64_sub_from_add>:
800082f0:	ee 19 80 00 	eorh	r9,0x8000

800082f4 <__avr32_f64_sub>:
800082f4:	f7 e9 20 0c 	eor	r12,r11,r9
800082f8:	e0 86 00 ca 	brmi	8000848c <__avr32_f64_add_from_sub>
800082fc:	eb cd 40 e0 	pushm	r5-r7,lr
80008300:	16 9c       	mov	r12,r11
80008302:	e6 1c 80 00 	andh	r12,0x8000,COH
80008306:	bf db       	cbr	r11,0x1f
80008308:	bf d9       	cbr	r9,0x1f
8000830a:	10 3a       	cp.w	r10,r8
8000830c:	f2 0b 13 00 	cpc	r11,r9
80008310:	c0 92       	brcc	80008322 <__avr32_f64_sub+0x2e>
80008312:	16 97       	mov	r7,r11
80008314:	12 9b       	mov	r11,r9
80008316:	0e 99       	mov	r9,r7
80008318:	14 97       	mov	r7,r10
8000831a:	10 9a       	mov	r10,r8
8000831c:	0e 98       	mov	r8,r7
8000831e:	ee 1c 80 00 	eorh	r12,0x8000
80008322:	f6 07 16 14 	lsr	r7,r11,0x14
80008326:	ab 7b       	lsl	r11,0xb
80008328:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
8000832c:	ab 7a       	lsl	r10,0xb
8000832e:	bf bb       	sbr	r11,0x1f
80008330:	f2 06 16 14 	lsr	r6,r9,0x14
80008334:	c4 40       	breq	800083bc <__avr32_f64_sub_opL_subnormal>
80008336:	ab 79       	lsl	r9,0xb
80008338:	f3 e8 13 59 	or	r9,r9,r8>>0x15
8000833c:	ab 78       	lsl	r8,0xb
8000833e:	bf b9       	sbr	r9,0x1f

80008340 <__avr32_f64_sub_opL_subnormal_done>:
80008340:	e0 47 07 ff 	cp.w	r7,2047
80008344:	c4 f0       	breq	800083e2 <__avr32_f64_sub_opH_nan_or_inf>
80008346:	0e 26       	rsub	r6,r7
80008348:	c1 20       	breq	8000836c <__avr32_f64_sub_shift_done>
8000834a:	ec 05 11 20 	rsub	r5,r6,32
8000834e:	e0 46 00 20 	cp.w	r6,32
80008352:	c7 c2       	brcc	8000844a <__avr32_f64_sub_longshift>
80008354:	f0 05 09 4e 	lsl	lr,r8,r5
80008358:	f2 05 09 45 	lsl	r5,r9,r5
8000835c:	f0 06 0a 48 	lsr	r8,r8,r6
80008360:	f2 06 0a 49 	lsr	r9,r9,r6
80008364:	0a 48       	or	r8,r5
80008366:	58 0e       	cp.w	lr,0
80008368:	5f 1e       	srne	lr
8000836a:	1c 48       	or	r8,lr

8000836c <__avr32_f64_sub_shift_done>:
8000836c:	10 1a       	sub	r10,r8
8000836e:	f6 09 01 4b 	sbc	r11,r11,r9
80008372:	f6 06 12 00 	clz	r6,r11
80008376:	c0 e0       	breq	80008392 <__avr32_f64_sub_longnormalize_done>
80008378:	c7 83       	brcs	80008468 <__avr32_f64_sub_longnormalize>
8000837a:	ec 0e 11 20 	rsub	lr,r6,32
8000837e:	f6 06 09 4b 	lsl	r11,r11,r6
80008382:	f4 0e 0a 4e 	lsr	lr,r10,lr
80008386:	1c 4b       	or	r11,lr
80008388:	f4 06 09 4a 	lsl	r10,r10,r6
8000838c:	0c 17       	sub	r7,r6
8000838e:	e0 8a 00 39 	brle	80008400 <__avr32_f64_sub_subnormal_result>

80008392 <__avr32_f64_sub_longnormalize_done>:
80008392:	f4 09 15 15 	lsl	r9,r10,0x15
80008396:	ab 9a       	lsr	r10,0xb
80008398:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
8000839c:	ab 9b       	lsr	r11,0xb
8000839e:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
800083a2:	18 4b       	or	r11,r12

800083a4 <__avr32_f64_sub_round>:
800083a4:	fc 17 80 00 	movh	r7,0x8000
800083a8:	ed ba 00 00 	bld	r10,0x0
800083ac:	f7 b7 01 ff 	subne	r7,-1
800083b0:	0e 39       	cp.w	r9,r7
800083b2:	5f 29       	srhs	r9
800083b4:	12 0a       	add	r10,r9
800083b6:	5c 0b       	acr	r11
800083b8:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800083bc <__avr32_f64_sub_opL_subnormal>:
800083bc:	ab 79       	lsl	r9,0xb
800083be:	f3 e8 13 59 	or	r9,r9,r8>>0x15
800083c2:	ab 78       	lsl	r8,0xb
800083c4:	f3 e8 10 0e 	or	lr,r9,r8
800083c8:	f9 b6 01 01 	movne	r6,1
800083cc:	ee 0e 11 00 	rsub	lr,r7,0
800083d0:	f9 b7 00 01 	moveq	r7,1
800083d4:	ef bb 00 1f 	bst	r11,0x1f
800083d8:	f7 ea 10 0e 	or	lr,r11,r10
800083dc:	f9 b7 00 00 	moveq	r7,0
800083e0:	cb 0b       	rjmp	80008340 <__avr32_f64_sub_opL_subnormal_done>

800083e2 <__avr32_f64_sub_opH_nan_or_inf>:
800083e2:	bf db       	cbr	r11,0x1f
800083e4:	f7 ea 10 0e 	or	lr,r11,r10
800083e8:	c0 81       	brne	800083f8 <__avr32_f64_sub_return_nan>
800083ea:	e0 46 07 ff 	cp.w	r6,2047
800083ee:	c0 50       	breq	800083f8 <__avr32_f64_sub_return_nan>
800083f0:	f9 e7 11 4b 	or	r11,r12,r7<<0x14
800083f4:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800083f8 <__avr32_f64_sub_return_nan>:
800083f8:	3f fa       	mov	r10,-1
800083fa:	3f fb       	mov	r11,-1
800083fc:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008400 <__avr32_f64_sub_subnormal_result>:
80008400:	5c 37       	neg	r7
80008402:	2f f7       	sub	r7,-1
80008404:	f1 b7 04 c0 	satu	r7,0x6
80008408:	e0 47 00 20 	cp.w	r7,32
8000840c:	c1 14       	brge	8000842e <__avr32_f64_sub_subnormal_result+0x2e>
8000840e:	ee 08 11 20 	rsub	r8,r7,32
80008412:	f4 08 09 49 	lsl	r9,r10,r8
80008416:	5f 16       	srne	r6
80008418:	f4 07 0a 4a 	lsr	r10,r10,r7
8000841c:	0c 4a       	or	r10,r6
8000841e:	f6 08 09 49 	lsl	r9,r11,r8
80008422:	f5 e9 10 0a 	or	r10,r10,r9
80008426:	f4 07 0a 4b 	lsr	r11,r10,r7
8000842a:	30 07       	mov	r7,0
8000842c:	cb 3b       	rjmp	80008392 <__avr32_f64_sub_longnormalize_done>
8000842e:	ee 08 11 40 	rsub	r8,r7,64
80008432:	f6 08 09 49 	lsl	r9,r11,r8
80008436:	14 49       	or	r9,r10
80008438:	5f 16       	srne	r6
8000843a:	f6 07 0a 4a 	lsr	r10,r11,r7
8000843e:	0c 4a       	or	r10,r6
80008440:	30 0b       	mov	r11,0
80008442:	30 07       	mov	r7,0
80008444:	ca 7b       	rjmp	80008392 <__avr32_f64_sub_longnormalize_done>
80008446:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

8000844a <__avr32_f64_sub_longshift>:
8000844a:	f1 b6 04 c0 	satu	r6,0x6
8000844e:	f0 0e 17 00 	moveq	lr,r8
80008452:	c0 40       	breq	8000845a <__avr32_f64_sub_longshift+0x10>
80008454:	f2 05 09 4e 	lsl	lr,r9,r5
80008458:	10 4e       	or	lr,r8
8000845a:	f2 06 0a 48 	lsr	r8,r9,r6
8000845e:	30 09       	mov	r9,0
80008460:	58 0e       	cp.w	lr,0
80008462:	5f 1e       	srne	lr
80008464:	1c 48       	or	r8,lr
80008466:	c8 3b       	rjmp	8000836c <__avr32_f64_sub_shift_done>

80008468 <__avr32_f64_sub_longnormalize>:
80008468:	f4 06 12 00 	clz	r6,r10
8000846c:	f9 b7 03 00 	movlo	r7,0
80008470:	f9 b6 03 00 	movlo	r6,0
80008474:	f9 bc 03 00 	movlo	r12,0
80008478:	f7 b6 02 e0 	subhs	r6,-32
8000847c:	f4 06 09 4b 	lsl	r11,r10,r6
80008480:	30 0a       	mov	r10,0
80008482:	0c 17       	sub	r7,r6
80008484:	fe 9a ff be 	brle	80008400 <__avr32_f64_sub_subnormal_result>
80008488:	c8 5b       	rjmp	80008392 <__avr32_f64_sub_longnormalize_done>
8000848a:	d7 03       	nop

8000848c <__avr32_f64_add_from_sub>:
8000848c:	ee 19 80 00 	eorh	r9,0x8000

80008490 <__avr32_f64_add>:
80008490:	f7 e9 20 0c 	eor	r12,r11,r9
80008494:	fe 96 ff 2e 	brmi	800082f0 <__avr32_f64_sub_from_add>
80008498:	eb cd 40 e0 	pushm	r5-r7,lr
8000849c:	16 9c       	mov	r12,r11
8000849e:	e6 1c 80 00 	andh	r12,0x8000,COH
800084a2:	bf db       	cbr	r11,0x1f
800084a4:	bf d9       	cbr	r9,0x1f
800084a6:	12 3b       	cp.w	r11,r9
800084a8:	c0 72       	brcc	800084b6 <__avr32_f64_add+0x26>
800084aa:	16 97       	mov	r7,r11
800084ac:	12 9b       	mov	r11,r9
800084ae:	0e 99       	mov	r9,r7
800084b0:	14 97       	mov	r7,r10
800084b2:	10 9a       	mov	r10,r8
800084b4:	0e 98       	mov	r8,r7
800084b6:	30 0e       	mov	lr,0
800084b8:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
800084bc:	f7 db c0 14 	bfextu	r11,r11,0x0,0x14
800084c0:	b5 ab       	sbr	r11,0x14
800084c2:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
800084c6:	c6 20       	breq	8000858a <__avr32_f64_add_op2_subnormal>
800084c8:	f3 d9 c0 14 	bfextu	r9,r9,0x0,0x14
800084cc:	b5 a9       	sbr	r9,0x14
800084ce:	e0 47 07 ff 	cp.w	r7,2047
800084d2:	c2 80       	breq	80008522 <__avr32_f64_add_opH_nan_or_inf>
800084d4:	0e 26       	rsub	r6,r7
800084d6:	c1 20       	breq	800084fa <__avr32_f64_add_shift_done>
800084d8:	e0 46 00 36 	cp.w	r6,54
800084dc:	c1 52       	brcc	80008506 <__avr32_f64_add_res_of_done>
800084de:	ec 05 11 20 	rsub	r5,r6,32
800084e2:	e0 46 00 20 	cp.w	r6,32
800084e6:	c3 52       	brcc	80008550 <__avr32_f64_add_longshift>
800084e8:	f0 05 09 4e 	lsl	lr,r8,r5
800084ec:	f2 05 09 45 	lsl	r5,r9,r5
800084f0:	f0 06 0a 48 	lsr	r8,r8,r6
800084f4:	f2 06 0a 49 	lsr	r9,r9,r6
800084f8:	0a 48       	or	r8,r5

800084fa <__avr32_f64_add_shift_done>:
800084fa:	10 0a       	add	r10,r8
800084fc:	f6 09 00 4b 	adc	r11,r11,r9
80008500:	ed bb 00 15 	bld	r11,0x15
80008504:	c3 40       	breq	8000856c <__avr32_f64_add_res_of>

80008506 <__avr32_f64_add_res_of_done>:
80008506:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
8000850a:	18 4b       	or	r11,r12

8000850c <__avr32_f64_add_round>:
8000850c:	f9 da c0 01 	bfextu	r12,r10,0x0,0x1
80008510:	18 4e       	or	lr,r12
80008512:	ee 1e 80 00 	eorh	lr,0x8000
80008516:	f1 be 04 20 	satu	lr,0x1
8000851a:	1c 0a       	add	r10,lr
8000851c:	5c 0b       	acr	r11
8000851e:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008522 <__avr32_f64_add_opH_nan_or_inf>:
80008522:	b5 cb       	cbr	r11,0x14
80008524:	f7 ea 10 0e 	or	lr,r11,r10
80008528:	c1 01       	brne	80008548 <__avr32_f64_add_return_nan>
8000852a:	e0 46 07 ff 	cp.w	r6,2047
8000852e:	c0 30       	breq	80008534 <__avr32_f64_add_opL_nan_or_inf>
80008530:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008534 <__avr32_f64_add_opL_nan_or_inf>:
80008534:	b5 c9       	cbr	r9,0x14
80008536:	f3 e8 10 0e 	or	lr,r9,r8
8000853a:	c0 71       	brne	80008548 <__avr32_f64_add_return_nan>
8000853c:	30 0a       	mov	r10,0
8000853e:	fc 1b 7f f0 	movh	r11,0x7ff0
80008542:	18 4b       	or	r11,r12
80008544:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008548 <__avr32_f64_add_return_nan>:
80008548:	3f fa       	mov	r10,-1
8000854a:	3f fb       	mov	r11,-1
8000854c:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008550 <__avr32_f64_add_longshift>:
80008550:	f1 b6 04 c0 	satu	r6,0x6
80008554:	f0 0e 17 00 	moveq	lr,r8
80008558:	c0 60       	breq	80008564 <__avr32_f64_add_longshift+0x14>
8000855a:	f2 05 09 4e 	lsl	lr,r9,r5
8000855e:	58 08       	cp.w	r8,0
80008560:	5f 18       	srne	r8
80008562:	10 4e       	or	lr,r8
80008564:	f2 06 0a 48 	lsr	r8,r9,r6
80008568:	30 09       	mov	r9,0
8000856a:	cc 8b       	rjmp	800084fa <__avr32_f64_add_shift_done>

8000856c <__avr32_f64_add_res_of>:
8000856c:	fd ee 10 1e 	or	lr,lr,lr<<0x1
80008570:	a1 9b       	lsr	r11,0x1
80008572:	5d 0a       	ror	r10
80008574:	5d 0e       	ror	lr
80008576:	2f f7       	sub	r7,-1
80008578:	e0 47 07 ff 	cp.w	r7,2047
8000857c:	f9 ba 00 00 	moveq	r10,0
80008580:	f9 bb 00 00 	moveq	r11,0
80008584:	f9 be 00 00 	moveq	lr,0
80008588:	cb fb       	rjmp	80008506 <__avr32_f64_add_res_of_done>

8000858a <__avr32_f64_add_op2_subnormal>:
8000858a:	30 16       	mov	r6,1
8000858c:	58 07       	cp.w	r7,0
8000858e:	ca 01       	brne	800084ce <__avr32_f64_add+0x3e>
80008590:	b5 cb       	cbr	r11,0x14
80008592:	10 0a       	add	r10,r8
80008594:	f6 09 00 4b 	adc	r11,r11,r9
80008598:	18 4b       	or	r11,r12
8000859a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000859e:	d7 03       	nop

800085a0 <__avr32_f64_to_u32>:
800085a0:	58 0b       	cp.w	r11,0
800085a2:	5e 6d       	retmi	0

800085a4 <__avr32_f64_to_s32>:
800085a4:	f6 0c 15 01 	lsl	r12,r11,0x1
800085a8:	b5 9c       	lsr	r12,0x15
800085aa:	e0 2c 03 ff 	sub	r12,1023
800085ae:	5e 3d       	retlo	0
800085b0:	f8 0c 11 1f 	rsub	r12,r12,31
800085b4:	16 99       	mov	r9,r11
800085b6:	ab 7b       	lsl	r11,0xb
800085b8:	bf bb       	sbr	r11,0x1f
800085ba:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
800085be:	f6 0c 0a 4b 	lsr	r11,r11,r12
800085c2:	a1 79       	lsl	r9,0x1
800085c4:	5e 2b       	reths	r11
800085c6:	5c 3b       	neg	r11
800085c8:	5e fb       	retal	r11

800085ca <__avr32_u32_to_f64>:
800085ca:	f8 cb 00 00 	sub	r11,r12,0
800085ce:	30 0c       	mov	r12,0
800085d0:	c0 38       	rjmp	800085d6 <__avr32_s32_to_f64+0x4>

800085d2 <__avr32_s32_to_f64>:
800085d2:	18 9b       	mov	r11,r12
800085d4:	5c 4b       	abs	r11
800085d6:	30 0a       	mov	r10,0
800085d8:	5e 0b       	reteq	r11
800085da:	d4 01       	pushm	lr
800085dc:	e0 69 04 1e 	mov	r9,1054
800085e0:	f6 08 12 00 	clz	r8,r11
800085e4:	c1 70       	breq	80008612 <__avr32_s32_to_f64+0x40>
800085e6:	c0 c3       	brcs	800085fe <__avr32_s32_to_f64+0x2c>
800085e8:	f0 0e 11 20 	rsub	lr,r8,32
800085ec:	f6 08 09 4b 	lsl	r11,r11,r8
800085f0:	f4 0e 0a 4e 	lsr	lr,r10,lr
800085f4:	1c 4b       	or	r11,lr
800085f6:	f4 08 09 4a 	lsl	r10,r10,r8
800085fa:	10 19       	sub	r9,r8
800085fc:	c0 b8       	rjmp	80008612 <__avr32_s32_to_f64+0x40>
800085fe:	f4 08 12 00 	clz	r8,r10
80008602:	f9 b8 03 00 	movlo	r8,0
80008606:	f7 b8 02 e0 	subhs	r8,-32
8000860a:	f4 08 09 4b 	lsl	r11,r10,r8
8000860e:	30 0a       	mov	r10,0
80008610:	10 19       	sub	r9,r8
80008612:	58 09       	cp.w	r9,0
80008614:	e0 89 00 30 	brgt	80008674 <__avr32_s32_to_f64+0xa2>
80008618:	5c 39       	neg	r9
8000861a:	2f f9       	sub	r9,-1
8000861c:	e0 49 00 36 	cp.w	r9,54
80008620:	c0 43       	brcs	80008628 <__avr32_s32_to_f64+0x56>
80008622:	30 0b       	mov	r11,0
80008624:	30 0a       	mov	r10,0
80008626:	c2 68       	rjmp	80008672 <__avr32_s32_to_f64+0xa0>
80008628:	2f 69       	sub	r9,-10
8000862a:	f2 08 11 20 	rsub	r8,r9,32
8000862e:	e0 49 00 20 	cp.w	r9,32
80008632:	c0 b2       	brcc	80008648 <__avr32_s32_to_f64+0x76>
80008634:	f4 08 09 4e 	lsl	lr,r10,r8
80008638:	f6 08 09 48 	lsl	r8,r11,r8
8000863c:	f4 09 0a 4a 	lsr	r10,r10,r9
80008640:	f6 09 0a 4b 	lsr	r11,r11,r9
80008644:	10 4b       	or	r11,r8
80008646:	c0 88       	rjmp	80008656 <__avr32_s32_to_f64+0x84>
80008648:	f6 08 09 4e 	lsl	lr,r11,r8
8000864c:	14 4e       	or	lr,r10
8000864e:	16 9a       	mov	r10,r11
80008650:	30 0b       	mov	r11,0
80008652:	f4 09 0a 4a 	lsr	r10,r10,r9
80008656:	ed ba 00 00 	bld	r10,0x0
8000865a:	c0 92       	brcc	8000866c <__avr32_s32_to_f64+0x9a>
8000865c:	1c 7e       	tst	lr,lr
8000865e:	c0 41       	brne	80008666 <__avr32_s32_to_f64+0x94>
80008660:	ed ba 00 01 	bld	r10,0x1
80008664:	c0 42       	brcc	8000866c <__avr32_s32_to_f64+0x9a>
80008666:	2f fa       	sub	r10,-1
80008668:	f7 bb 02 ff 	subhs	r11,-1
8000866c:	5c fc       	rol	r12
8000866e:	5d 0b       	ror	r11
80008670:	5d 0a       	ror	r10
80008672:	d8 02       	popm	pc
80008674:	e0 68 03 ff 	mov	r8,1023
80008678:	ed ba 00 0b 	bld	r10,0xb
8000867c:	f7 b8 00 ff 	subeq	r8,-1
80008680:	10 0a       	add	r10,r8
80008682:	5c 0b       	acr	r11
80008684:	f7 b9 03 fe 	sublo	r9,-2
80008688:	e0 49 07 ff 	cp.w	r9,2047
8000868c:	c0 55       	brlt	80008696 <__avr32_s32_to_f64+0xc4>
8000868e:	30 0a       	mov	r10,0
80008690:	fc 1b ff e0 	movh	r11,0xffe0
80008694:	c0 c8       	rjmp	800086ac <__floatsidf_return_op1>
80008696:	ed bb 00 1f 	bld	r11,0x1f
8000869a:	f7 b9 01 01 	subne	r9,1
8000869e:	ab 9a       	lsr	r10,0xb
800086a0:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
800086a4:	a1 7b       	lsl	r11,0x1
800086a6:	ab 9b       	lsr	r11,0xb
800086a8:	f7 e9 11 5b 	or	r11,r11,r9<<0x15

800086ac <__floatsidf_return_op1>:
800086ac:	a1 7c       	lsl	r12,0x1
800086ae:	5d 0b       	ror	r11
800086b0:	d8 02       	popm	pc

800086b2 <__avr32_f64_cmp_eq>:
800086b2:	10 3a       	cp.w	r10,r8
800086b4:	f2 0b 13 00 	cpc	r11,r9
800086b8:	c0 80       	breq	800086c8 <__avr32_f64_cmp_eq+0x16>
800086ba:	a1 7b       	lsl	r11,0x1
800086bc:	a1 79       	lsl	r9,0x1
800086be:	14 4b       	or	r11,r10
800086c0:	12 4b       	or	r11,r9
800086c2:	10 4b       	or	r11,r8
800086c4:	5e 0f       	reteq	1
800086c6:	5e fd       	retal	0
800086c8:	a1 7b       	lsl	r11,0x1
800086ca:	fc 1c ff e0 	movh	r12,0xffe0
800086ce:	58 0a       	cp.w	r10,0
800086d0:	f8 0b 13 00 	cpc	r11,r12
800086d4:	5e 8f       	retls	1
800086d6:	5e fd       	retal	0

800086d8 <__avr32_f64_cmp_ge>:
800086d8:	1a de       	st.w	--sp,lr
800086da:	1a d7       	st.w	--sp,r7
800086dc:	a1 7b       	lsl	r11,0x1
800086de:	5f 3c       	srlo	r12
800086e0:	a1 79       	lsl	r9,0x1
800086e2:	5f 37       	srlo	r7
800086e4:	5c fc       	rol	r12
800086e6:	fc 1e ff e0 	movh	lr,0xffe0
800086ea:	58 0a       	cp.w	r10,0
800086ec:	fc 0b 13 00 	cpc	r11,lr
800086f0:	e0 8b 00 1d 	brhi	8000872a <__avr32_f64_cmp_ge+0x52>
800086f4:	58 08       	cp.w	r8,0
800086f6:	fc 09 13 00 	cpc	r9,lr
800086fa:	e0 8b 00 18 	brhi	8000872a <__avr32_f64_cmp_ge+0x52>
800086fe:	58 0b       	cp.w	r11,0
80008700:	f5 ba 00 00 	subfeq	r10,0
80008704:	c1 50       	breq	8000872e <__avr32_f64_cmp_ge+0x56>
80008706:	1b 07       	ld.w	r7,sp++
80008708:	1b 0e       	ld.w	lr,sp++
8000870a:	58 3c       	cp.w	r12,3
8000870c:	c0 a0       	breq	80008720 <__avr32_f64_cmp_ge+0x48>
8000870e:	58 1c       	cp.w	r12,1
80008710:	c0 33       	brcs	80008716 <__avr32_f64_cmp_ge+0x3e>
80008712:	5e 0f       	reteq	1
80008714:	5e 1d       	retne	0
80008716:	10 3a       	cp.w	r10,r8
80008718:	f2 0b 13 00 	cpc	r11,r9
8000871c:	5e 2f       	reths	1
8000871e:	5e 3d       	retlo	0
80008720:	14 38       	cp.w	r8,r10
80008722:	f6 09 13 00 	cpc	r9,r11
80008726:	5e 2f       	reths	1
80008728:	5e 3d       	retlo	0
8000872a:	1b 07       	ld.w	r7,sp++
8000872c:	d8 0a       	popm	pc,r12=0
8000872e:	58 17       	cp.w	r7,1
80008730:	5f 0c       	sreq	r12
80008732:	58 09       	cp.w	r9,0
80008734:	f5 b8 00 00 	subfeq	r8,0
80008738:	1b 07       	ld.w	r7,sp++
8000873a:	1b 0e       	ld.w	lr,sp++
8000873c:	5e 0f       	reteq	1
8000873e:	5e fc       	retal	r12

80008740 <__avr32_f64_cmp_lt>:
80008740:	1a de       	st.w	--sp,lr
80008742:	1a d7       	st.w	--sp,r7
80008744:	a1 7b       	lsl	r11,0x1
80008746:	5f 3c       	srlo	r12
80008748:	a1 79       	lsl	r9,0x1
8000874a:	5f 37       	srlo	r7
8000874c:	5c fc       	rol	r12
8000874e:	fc 1e ff e0 	movh	lr,0xffe0
80008752:	58 0a       	cp.w	r10,0
80008754:	fc 0b 13 00 	cpc	r11,lr
80008758:	e0 8b 00 1d 	brhi	80008792 <__avr32_f64_cmp_lt+0x52>
8000875c:	58 08       	cp.w	r8,0
8000875e:	fc 09 13 00 	cpc	r9,lr
80008762:	e0 8b 00 18 	brhi	80008792 <__avr32_f64_cmp_lt+0x52>
80008766:	58 0b       	cp.w	r11,0
80008768:	f5 ba 00 00 	subfeq	r10,0
8000876c:	c1 50       	breq	80008796 <__avr32_f64_cmp_lt+0x56>
8000876e:	1b 07       	ld.w	r7,sp++
80008770:	1b 0e       	ld.w	lr,sp++
80008772:	58 3c       	cp.w	r12,3
80008774:	c0 a0       	breq	80008788 <__avr32_f64_cmp_lt+0x48>
80008776:	58 1c       	cp.w	r12,1
80008778:	c0 33       	brcs	8000877e <__avr32_f64_cmp_lt+0x3e>
8000877a:	5e 0d       	reteq	0
8000877c:	5e 1f       	retne	1
8000877e:	10 3a       	cp.w	r10,r8
80008780:	f2 0b 13 00 	cpc	r11,r9
80008784:	5e 2d       	reths	0
80008786:	5e 3f       	retlo	1
80008788:	14 38       	cp.w	r8,r10
8000878a:	f6 09 13 00 	cpc	r9,r11
8000878e:	5e 2d       	reths	0
80008790:	5e 3f       	retlo	1
80008792:	1b 07       	ld.w	r7,sp++
80008794:	d8 0a       	popm	pc,r12=0
80008796:	58 17       	cp.w	r7,1
80008798:	5f 1c       	srne	r12
8000879a:	58 09       	cp.w	r9,0
8000879c:	f5 b8 00 00 	subfeq	r8,0
800087a0:	1b 07       	ld.w	r7,sp++
800087a2:	1b 0e       	ld.w	lr,sp++
800087a4:	5e 0d       	reteq	0
800087a6:	5e fc       	retal	r12

800087a8 <__avr32_f64_div>:
800087a8:	eb cd 40 ff 	pushm	r0-r7,lr
800087ac:	f7 e9 20 0e 	eor	lr,r11,r9
800087b0:	f6 07 16 14 	lsr	r7,r11,0x14
800087b4:	a9 7b       	lsl	r11,0x9
800087b6:	f7 ea 13 7b 	or	r11,r11,r10>>0x17
800087ba:	a9 7a       	lsl	r10,0x9
800087bc:	bd bb       	sbr	r11,0x1d
800087be:	e4 1b 3f ff 	andh	r11,0x3fff
800087c2:	ab d7       	cbr	r7,0xb
800087c4:	e0 80 00 cc 	breq	8000895c <__avr32_f64_div_round_subnormal+0x54>
800087c8:	e0 47 07 ff 	cp.w	r7,2047
800087cc:	e0 84 00 b5 	brge	80008936 <__avr32_f64_div_round_subnormal+0x2e>
800087d0:	f2 06 16 14 	lsr	r6,r9,0x14
800087d4:	a9 79       	lsl	r9,0x9
800087d6:	f3 e8 13 79 	or	r9,r9,r8>>0x17
800087da:	a9 78       	lsl	r8,0x9
800087dc:	bd b9       	sbr	r9,0x1d
800087de:	e4 19 3f ff 	andh	r9,0x3fff
800087e2:	ab d6       	cbr	r6,0xb
800087e4:	e0 80 00 e2 	breq	800089a8 <__avr32_f64_div_round_subnormal+0xa0>
800087e8:	e0 46 07 ff 	cp.w	r6,2047
800087ec:	e0 84 00 b2 	brge	80008950 <__avr32_f64_div_round_subnormal+0x48>
800087f0:	0c 17       	sub	r7,r6
800087f2:	fe 37 fc 01 	sub	r7,-1023
800087f6:	fc 1c 80 00 	movh	r12,0x8000
800087fa:	f8 03 16 01 	lsr	r3,r12,0x1
800087fe:	e9 d9 c3 62 	bfextu	r4,r9,0x1b,0x2
80008802:	5c d4       	com	r4
80008804:	e7 d4 d3 82 	bfins	r3,r4,0x1c,0x2
80008808:	e6 09 06 44 	mulu.d	r4,r3,r9
8000880c:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80008810:	e6 05 06 44 	mulu.d	r4,r3,r5
80008814:	ea 03 15 02 	lsl	r3,r5,0x2
80008818:	e6 09 06 44 	mulu.d	r4,r3,r9
8000881c:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80008820:	e6 05 06 44 	mulu.d	r4,r3,r5
80008824:	ea 03 15 02 	lsl	r3,r5,0x2
80008828:	e6 09 06 44 	mulu.d	r4,r3,r9
8000882c:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80008830:	e6 05 06 44 	mulu.d	r4,r3,r5
80008834:	ea 03 15 02 	lsl	r3,r5,0x2
80008838:	e6 08 06 40 	mulu.d	r0,r3,r8
8000883c:	e4 09 07 40 	macu.d	r0,r2,r9
80008840:	e6 09 06 44 	mulu.d	r4,r3,r9
80008844:	02 04       	add	r4,r1
80008846:	5c 05       	acr	r5
80008848:	a3 65       	lsl	r5,0x2
8000884a:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
8000884e:	a3 64       	lsl	r4,0x2
80008850:	5c 34       	neg	r4
80008852:	f8 05 01 45 	sbc	r5,r12,r5
80008856:	e6 04 06 40 	mulu.d	r0,r3,r4
8000885a:	e4 05 07 40 	macu.d	r0,r2,r5
8000885e:	e6 05 06 44 	mulu.d	r4,r3,r5
80008862:	02 04       	add	r4,r1
80008864:	5c 05       	acr	r5
80008866:	ea 03 15 02 	lsl	r3,r5,0x2
8000886a:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
8000886e:	e8 02 15 02 	lsl	r2,r4,0x2
80008872:	e6 08 06 40 	mulu.d	r0,r3,r8
80008876:	e4 09 07 40 	macu.d	r0,r2,r9
8000887a:	e6 09 06 44 	mulu.d	r4,r3,r9
8000887e:	02 04       	add	r4,r1
80008880:	5c 05       	acr	r5
80008882:	a3 65       	lsl	r5,0x2
80008884:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80008888:	a3 64       	lsl	r4,0x2
8000888a:	5c 34       	neg	r4
8000888c:	f8 05 01 45 	sbc	r5,r12,r5
80008890:	e6 04 06 40 	mulu.d	r0,r3,r4
80008894:	e4 05 07 40 	macu.d	r0,r2,r5
80008898:	e6 05 06 44 	mulu.d	r4,r3,r5
8000889c:	02 04       	add	r4,r1
8000889e:	5c 05       	acr	r5
800088a0:	ea 03 15 02 	lsl	r3,r5,0x2
800088a4:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
800088a8:	e8 02 15 02 	lsl	r2,r4,0x2
800088ac:	e6 0a 06 40 	mulu.d	r0,r3,r10
800088b0:	e4 0b 07 40 	macu.d	r0,r2,r11
800088b4:	e6 0b 06 42 	mulu.d	r2,r3,r11
800088b8:	02 02       	add	r2,r1
800088ba:	5c 03       	acr	r3
800088bc:	ed b3 00 1c 	bld	r3,0x1c
800088c0:	c0 90       	breq	800088d2 <__avr32_f64_div+0x12a>
800088c2:	a1 72       	lsl	r2,0x1
800088c4:	5c f3       	rol	r3
800088c6:	20 17       	sub	r7,1
800088c8:	a3 9a       	lsr	r10,0x3
800088ca:	f5 eb 11 da 	or	r10,r10,r11<<0x1d
800088ce:	a3 9b       	lsr	r11,0x3
800088d0:	c0 58       	rjmp	800088da <__avr32_f64_div+0x132>
800088d2:	a5 8a       	lsr	r10,0x4
800088d4:	f5 eb 11 ca 	or	r10,r10,r11<<0x1c
800088d8:	a5 8b       	lsr	r11,0x4
800088da:	58 07       	cp.w	r7,0
800088dc:	e0 8a 00 8b 	brle	800089f2 <__avr32_f64_div_res_subnormal>
800088e0:	e0 12 ff 00 	andl	r2,0xff00
800088e4:	e8 12 00 80 	orl	r2,0x80
800088e8:	e6 08 06 40 	mulu.d	r0,r3,r8
800088ec:	e4 09 07 40 	macu.d	r0,r2,r9
800088f0:	e4 08 06 44 	mulu.d	r4,r2,r8
800088f4:	e6 09 06 48 	mulu.d	r8,r3,r9
800088f8:	00 05       	add	r5,r0
800088fa:	f0 01 00 48 	adc	r8,r8,r1
800088fe:	5c 09       	acr	r9
80008900:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80008904:	58 04       	cp.w	r4,0
80008906:	5c 25       	cpc	r5

80008908 <__avr32_f64_div_round_subnormal>:
80008908:	f4 08 13 00 	cpc	r8,r10
8000890c:	f6 09 13 00 	cpc	r9,r11
80008910:	5f 36       	srlo	r6
80008912:	f8 06 17 00 	moveq	r6,r12
80008916:	e4 0a 16 08 	lsr	r10,r2,0x8
8000891a:	f5 e3 11 8a 	or	r10,r10,r3<<0x18
8000891e:	e6 0b 16 08 	lsr	r11,r3,0x8
80008922:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80008926:	ed be 00 1f 	bld	lr,0x1f
8000892a:	ef bb 00 1f 	bst	r11,0x1f
8000892e:	0c 0a       	add	r10,r6
80008930:	5c 0b       	acr	r11
80008932:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008936:	e4 1b 00 0f 	andh	r11,0xf
8000893a:	14 4b       	or	r11,r10
8000893c:	e0 81 00 a7 	brne	80008a8a <__avr32_f64_div_res_subnormal+0x98>
80008940:	f2 06 16 14 	lsr	r6,r9,0x14
80008944:	ab d6       	cbr	r6,0xb
80008946:	e0 46 07 ff 	cp.w	r6,2047
8000894a:	e0 81 00 a4 	brne	80008a92 <__avr32_f64_div_res_subnormal+0xa0>
8000894e:	c9 e8       	rjmp	80008a8a <__avr32_f64_div_res_subnormal+0x98>
80008950:	e4 19 00 0f 	andh	r9,0xf
80008954:	10 49       	or	r9,r8
80008956:	e0 81 00 9a 	brne	80008a8a <__avr32_f64_div_res_subnormal+0x98>
8000895a:	c9 28       	rjmp	80008a7e <__avr32_f64_div_res_subnormal+0x8c>
8000895c:	a3 7b       	lsl	r11,0x3
8000895e:	f7 ea 13 db 	or	r11,r11,r10>>0x1d
80008962:	a3 7a       	lsl	r10,0x3
80008964:	f5 eb 10 04 	or	r4,r10,r11
80008968:	e0 80 00 a0 	breq	80008aa8 <__avr32_f64_div_op1_zero>
8000896c:	f6 04 12 00 	clz	r4,r11
80008970:	c1 70       	breq	8000899e <__avr32_f64_div_round_subnormal+0x96>
80008972:	c0 c3       	brcs	8000898a <__avr32_f64_div_round_subnormal+0x82>
80008974:	e8 05 11 20 	rsub	r5,r4,32
80008978:	f6 04 09 4b 	lsl	r11,r11,r4
8000897c:	f4 05 0a 45 	lsr	r5,r10,r5
80008980:	0a 4b       	or	r11,r5
80008982:	f4 04 09 4a 	lsl	r10,r10,r4
80008986:	08 17       	sub	r7,r4
80008988:	c0 b8       	rjmp	8000899e <__avr32_f64_div_round_subnormal+0x96>
8000898a:	f4 04 12 00 	clz	r4,r10
8000898e:	f9 b4 03 00 	movlo	r4,0
80008992:	f7 b4 02 e0 	subhs	r4,-32
80008996:	f4 04 09 4b 	lsl	r11,r10,r4
8000899a:	30 0a       	mov	r10,0
8000899c:	08 17       	sub	r7,r4
8000899e:	a3 8a       	lsr	r10,0x2
800089a0:	f5 eb 11 ea 	or	r10,r10,r11<<0x1e
800089a4:	a3 8b       	lsr	r11,0x2
800089a6:	c1 1b       	rjmp	800087c8 <__avr32_f64_div+0x20>
800089a8:	a3 79       	lsl	r9,0x3
800089aa:	f3 e8 13 d9 	or	r9,r9,r8>>0x1d
800089ae:	a3 78       	lsl	r8,0x3
800089b0:	f3 e8 10 04 	or	r4,r9,r8
800089b4:	c6 f0       	breq	80008a92 <__avr32_f64_div_res_subnormal+0xa0>
800089b6:	f2 04 12 00 	clz	r4,r9
800089ba:	c1 70       	breq	800089e8 <__avr32_f64_div_round_subnormal+0xe0>
800089bc:	c0 c3       	brcs	800089d4 <__avr32_f64_div_round_subnormal+0xcc>
800089be:	e8 05 11 20 	rsub	r5,r4,32
800089c2:	f2 04 09 49 	lsl	r9,r9,r4
800089c6:	f0 05 0a 45 	lsr	r5,r8,r5
800089ca:	0a 49       	or	r9,r5
800089cc:	f0 04 09 48 	lsl	r8,r8,r4
800089d0:	08 16       	sub	r6,r4
800089d2:	c0 b8       	rjmp	800089e8 <__avr32_f64_div_round_subnormal+0xe0>
800089d4:	f0 04 12 00 	clz	r4,r8
800089d8:	f9 b4 03 00 	movlo	r4,0
800089dc:	f7 b4 02 e0 	subhs	r4,-32
800089e0:	f0 04 09 49 	lsl	r9,r8,r4
800089e4:	30 08       	mov	r8,0
800089e6:	08 16       	sub	r6,r4
800089e8:	a3 88       	lsr	r8,0x2
800089ea:	f1 e9 11 e8 	or	r8,r8,r9<<0x1e
800089ee:	a3 89       	lsr	r9,0x2
800089f0:	cf ca       	rjmp	800087e8 <__avr32_f64_div+0x40>

800089f2 <__avr32_f64_div_res_subnormal>:
800089f2:	5c 37       	neg	r7
800089f4:	2f f7       	sub	r7,-1
800089f6:	f1 b7 04 c0 	satu	r7,0x6
800089fa:	e0 47 00 20 	cp.w	r7,32
800089fe:	c1 54       	brge	80008a28 <__avr32_f64_div_res_subnormal+0x36>
80008a00:	ee 06 11 20 	rsub	r6,r7,32
80008a04:	e4 07 0a 42 	lsr	r2,r2,r7
80008a08:	e6 06 09 4c 	lsl	r12,r3,r6
80008a0c:	18 42       	or	r2,r12
80008a0e:	e6 07 0a 43 	lsr	r3,r3,r7
80008a12:	f4 06 09 41 	lsl	r1,r10,r6
80008a16:	f4 07 0a 4a 	lsr	r10,r10,r7
80008a1a:	f6 06 09 4c 	lsl	r12,r11,r6
80008a1e:	18 4a       	or	r10,r12
80008a20:	f6 07 0a 4b 	lsr	r11,r11,r7
80008a24:	30 00       	mov	r0,0
80008a26:	c1 58       	rjmp	80008a50 <__avr32_f64_div_res_subnormal+0x5e>
80008a28:	ee 06 11 20 	rsub	r6,r7,32
80008a2c:	f9 b0 00 00 	moveq	r0,0
80008a30:	f9 bc 00 00 	moveq	r12,0
80008a34:	c0 50       	breq	80008a3e <__avr32_f64_div_res_subnormal+0x4c>
80008a36:	f4 06 09 40 	lsl	r0,r10,r6
80008a3a:	f6 06 09 4c 	lsl	r12,r11,r6
80008a3e:	e6 07 0a 42 	lsr	r2,r3,r7
80008a42:	30 03       	mov	r3,0
80008a44:	f4 07 0a 41 	lsr	r1,r10,r7
80008a48:	18 41       	or	r1,r12
80008a4a:	f6 07 0a 4a 	lsr	r10,r11,r7
80008a4e:	30 0b       	mov	r11,0
80008a50:	e0 12 ff 00 	andl	r2,0xff00
80008a54:	e8 12 00 80 	orl	r2,0x80
80008a58:	e6 08 06 46 	mulu.d	r6,r3,r8
80008a5c:	e4 09 07 46 	macu.d	r6,r2,r9
80008a60:	e4 08 06 44 	mulu.d	r4,r2,r8
80008a64:	e6 09 06 48 	mulu.d	r8,r3,r9
80008a68:	0c 05       	add	r5,r6
80008a6a:	f0 07 00 48 	adc	r8,r8,r7
80008a6e:	5c 09       	acr	r9
80008a70:	30 07       	mov	r7,0
80008a72:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80008a76:	00 34       	cp.w	r4,r0
80008a78:	e2 05 13 00 	cpc	r5,r1
80008a7c:	c4 6b       	rjmp	80008908 <__avr32_f64_div_round_subnormal>
80008a7e:	1c 9b       	mov	r11,lr
80008a80:	e6 1b 80 00 	andh	r11,0x8000,COH
80008a84:	30 0a       	mov	r10,0
80008a86:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008a8a:	3f fb       	mov	r11,-1
80008a8c:	30 0a       	mov	r10,0
80008a8e:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008a92:	f5 eb 10 04 	or	r4,r10,r11
80008a96:	c0 90       	breq	80008aa8 <__avr32_f64_div_op1_zero>
80008a98:	1c 9b       	mov	r11,lr
80008a9a:	e6 1b 80 00 	andh	r11,0x8000,COH
80008a9e:	ea 1b 7f f0 	orh	r11,0x7ff0
80008aa2:	30 0a       	mov	r10,0
80008aa4:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc

80008aa8 <__avr32_f64_div_op1_zero>:
80008aa8:	f1 e9 10 15 	or	r5,r8,r9<<0x1
80008aac:	ce f0       	breq	80008a8a <__avr32_f64_div_res_subnormal+0x98>
80008aae:	e9 d9 c2 8b 	bfextu	r4,r9,0x14,0xb
80008ab2:	e0 44 07 ff 	cp.w	r4,2047
80008ab6:	ce 41       	brne	80008a7e <__avr32_f64_div_res_subnormal+0x8c>
80008ab8:	f1 e9 10 c5 	or	r5,r8,r9<<0xc
80008abc:	ce 10       	breq	80008a7e <__avr32_f64_div_res_subnormal+0x8c>
80008abe:	ce 6b       	rjmp	80008a8a <__avr32_f64_div_res_subnormal+0x98>

80008ac0 <__avr32_udiv64>:
80008ac0:	d4 31       	pushm	r0-r7,lr
80008ac2:	1a 97       	mov	r7,sp
80008ac4:	20 3d       	sub	sp,12
80008ac6:	10 9c       	mov	r12,r8
80008ac8:	12 9e       	mov	lr,r9
80008aca:	14 93       	mov	r3,r10
80008acc:	58 09       	cp.w	r9,0
80008ace:	e0 81 00 bd 	brne	80008c48 <__avr32_udiv64+0x188>
80008ad2:	16 38       	cp.w	r8,r11
80008ad4:	e0 88 00 40 	brls	80008b54 <__avr32_udiv64+0x94>
80008ad8:	f0 08 12 00 	clz	r8,r8
80008adc:	c0 d0       	breq	80008af6 <__avr32_udiv64+0x36>
80008ade:	f6 08 09 4b 	lsl	r11,r11,r8
80008ae2:	f0 09 11 20 	rsub	r9,r8,32
80008ae6:	f8 08 09 4c 	lsl	r12,r12,r8
80008aea:	f4 09 0a 49 	lsr	r9,r10,r9
80008aee:	f4 08 09 43 	lsl	r3,r10,r8
80008af2:	f3 eb 10 0b 	or	r11,r9,r11
80008af6:	f8 0e 16 10 	lsr	lr,r12,0x10
80008afa:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
80008afe:	f6 0e 0d 00 	divu	r0,r11,lr
80008b02:	e6 0b 16 10 	lsr	r11,r3,0x10
80008b06:	00 99       	mov	r9,r0
80008b08:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80008b0c:	e0 0a 02 48 	mul	r8,r0,r10
80008b10:	10 3b       	cp.w	r11,r8
80008b12:	c0 a2       	brcc	80008b26 <__avr32_udiv64+0x66>
80008b14:	20 19       	sub	r9,1
80008b16:	18 0b       	add	r11,r12
80008b18:	18 3b       	cp.w	r11,r12
80008b1a:	c0 63       	brcs	80008b26 <__avr32_udiv64+0x66>
80008b1c:	10 3b       	cp.w	r11,r8
80008b1e:	f7 b9 03 01 	sublo	r9,1
80008b22:	f7 dc e3 0b 	addcs	r11,r11,r12
80008b26:	f6 08 01 01 	sub	r1,r11,r8
80008b2a:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
80008b2e:	e2 0e 0d 00 	divu	r0,r1,lr
80008b32:	e7 e1 11 03 	or	r3,r3,r1<<0x10
80008b36:	00 98       	mov	r8,r0
80008b38:	e0 0a 02 4a 	mul	r10,r0,r10
80008b3c:	14 33       	cp.w	r3,r10
80008b3e:	c0 82       	brcc	80008b4e <__avr32_udiv64+0x8e>
80008b40:	20 18       	sub	r8,1
80008b42:	18 03       	add	r3,r12
80008b44:	18 33       	cp.w	r3,r12
80008b46:	c0 43       	brcs	80008b4e <__avr32_udiv64+0x8e>
80008b48:	14 33       	cp.w	r3,r10
80008b4a:	f7 b8 03 01 	sublo	r8,1
80008b4e:	f1 e9 11 08 	or	r8,r8,r9<<0x10
80008b52:	cd f8       	rjmp	80008d10 <__avr32_udiv64+0x250>
80008b54:	58 08       	cp.w	r8,0
80008b56:	c0 51       	brne	80008b60 <__avr32_udiv64+0xa0>
80008b58:	30 19       	mov	r9,1
80008b5a:	f2 08 0d 08 	divu	r8,r9,r8
80008b5e:	10 9c       	mov	r12,r8
80008b60:	f8 06 12 00 	clz	r6,r12
80008b64:	c0 41       	brne	80008b6c <__avr32_udiv64+0xac>
80008b66:	18 1b       	sub	r11,r12
80008b68:	30 19       	mov	r9,1
80008b6a:	c4 08       	rjmp	80008bea <__avr32_udiv64+0x12a>
80008b6c:	ec 01 11 20 	rsub	r1,r6,32
80008b70:	f4 01 0a 49 	lsr	r9,r10,r1
80008b74:	f8 06 09 4c 	lsl	r12,r12,r6
80008b78:	f6 06 09 48 	lsl	r8,r11,r6
80008b7c:	f6 01 0a 41 	lsr	r1,r11,r1
80008b80:	f3 e8 10 08 	or	r8,r9,r8
80008b84:	f8 03 16 10 	lsr	r3,r12,0x10
80008b88:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80008b8c:	e2 03 0d 00 	divu	r0,r1,r3
80008b90:	f0 0b 16 10 	lsr	r11,r8,0x10
80008b94:	00 9e       	mov	lr,r0
80008b96:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80008b9a:	e0 05 02 49 	mul	r9,r0,r5
80008b9e:	12 3b       	cp.w	r11,r9
80008ba0:	c0 a2       	brcc	80008bb4 <__avr32_udiv64+0xf4>
80008ba2:	20 1e       	sub	lr,1
80008ba4:	18 0b       	add	r11,r12
80008ba6:	18 3b       	cp.w	r11,r12
80008ba8:	c0 63       	brcs	80008bb4 <__avr32_udiv64+0xf4>
80008baa:	12 3b       	cp.w	r11,r9
80008bac:	f7 be 03 01 	sublo	lr,1
80008bb0:	f7 dc e3 0b 	addcs	r11,r11,r12
80008bb4:	12 1b       	sub	r11,r9
80008bb6:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
80008bba:	f6 03 0d 02 	divu	r2,r11,r3
80008bbe:	f1 e3 11 08 	or	r8,r8,r3<<0x10
80008bc2:	04 99       	mov	r9,r2
80008bc4:	e4 05 02 4b 	mul	r11,r2,r5
80008bc8:	16 38       	cp.w	r8,r11
80008bca:	c0 a2       	brcc	80008bde <__avr32_udiv64+0x11e>
80008bcc:	20 19       	sub	r9,1
80008bce:	18 08       	add	r8,r12
80008bd0:	18 38       	cp.w	r8,r12
80008bd2:	c0 63       	brcs	80008bde <__avr32_udiv64+0x11e>
80008bd4:	16 38       	cp.w	r8,r11
80008bd6:	f7 b9 03 01 	sublo	r9,1
80008bda:	f1 dc e3 08 	addcs	r8,r8,r12
80008bde:	f4 06 09 43 	lsl	r3,r10,r6
80008be2:	f0 0b 01 0b 	sub	r11,r8,r11
80008be6:	f3 ee 11 09 	or	r9,r9,lr<<0x10
80008bea:	f8 06 16 10 	lsr	r6,r12,0x10
80008bee:	fd dc c0 10 	bfextu	lr,r12,0x0,0x10
80008bf2:	f6 06 0d 00 	divu	r0,r11,r6
80008bf6:	e6 0b 16 10 	lsr	r11,r3,0x10
80008bfa:	00 9a       	mov	r10,r0
80008bfc:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80008c00:	e0 0e 02 48 	mul	r8,r0,lr
80008c04:	10 3b       	cp.w	r11,r8
80008c06:	c0 a2       	brcc	80008c1a <__avr32_udiv64+0x15a>
80008c08:	20 1a       	sub	r10,1
80008c0a:	18 0b       	add	r11,r12
80008c0c:	18 3b       	cp.w	r11,r12
80008c0e:	c0 63       	brcs	80008c1a <__avr32_udiv64+0x15a>
80008c10:	10 3b       	cp.w	r11,r8
80008c12:	f7 ba 03 01 	sublo	r10,1
80008c16:	f7 dc e3 0b 	addcs	r11,r11,r12
80008c1a:	f6 08 01 01 	sub	r1,r11,r8
80008c1e:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
80008c22:	e2 06 0d 00 	divu	r0,r1,r6
80008c26:	e7 e1 11 03 	or	r3,r3,r1<<0x10
80008c2a:	00 98       	mov	r8,r0
80008c2c:	e0 0e 02 4b 	mul	r11,r0,lr
80008c30:	16 33       	cp.w	r3,r11
80008c32:	c0 82       	brcc	80008c42 <__avr32_udiv64+0x182>
80008c34:	20 18       	sub	r8,1
80008c36:	18 03       	add	r3,r12
80008c38:	18 33       	cp.w	r3,r12
80008c3a:	c0 43       	brcs	80008c42 <__avr32_udiv64+0x182>
80008c3c:	16 33       	cp.w	r3,r11
80008c3e:	f7 b8 03 01 	sublo	r8,1
80008c42:	f1 ea 11 08 	or	r8,r8,r10<<0x10
80008c46:	c6 98       	rjmp	80008d18 <__avr32_udiv64+0x258>
80008c48:	16 39       	cp.w	r9,r11
80008c4a:	e0 8b 00 65 	brhi	80008d14 <__avr32_udiv64+0x254>
80008c4e:	f2 09 12 00 	clz	r9,r9
80008c52:	c0 b1       	brne	80008c68 <__avr32_udiv64+0x1a8>
80008c54:	10 3a       	cp.w	r10,r8
80008c56:	5f 2a       	srhs	r10
80008c58:	1c 3b       	cp.w	r11,lr
80008c5a:	5f b8       	srhi	r8
80008c5c:	10 4a       	or	r10,r8
80008c5e:	f2 0a 18 00 	cp.b	r10,r9
80008c62:	c5 90       	breq	80008d14 <__avr32_udiv64+0x254>
80008c64:	30 18       	mov	r8,1
80008c66:	c5 98       	rjmp	80008d18 <__avr32_udiv64+0x258>
80008c68:	f0 09 09 46 	lsl	r6,r8,r9
80008c6c:	f2 03 11 20 	rsub	r3,r9,32
80008c70:	fc 09 09 4e 	lsl	lr,lr,r9
80008c74:	f0 03 0a 48 	lsr	r8,r8,r3
80008c78:	f6 09 09 4c 	lsl	r12,r11,r9
80008c7c:	f4 03 0a 42 	lsr	r2,r10,r3
80008c80:	ef 46 ff f4 	st.w	r7[-12],r6
80008c84:	f6 03 0a 43 	lsr	r3,r11,r3
80008c88:	18 42       	or	r2,r12
80008c8a:	f1 ee 10 0c 	or	r12,r8,lr
80008c8e:	f8 01 16 10 	lsr	r1,r12,0x10
80008c92:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
80008c96:	e6 01 0d 04 	divu	r4,r3,r1
80008c9a:	e4 03 16 10 	lsr	r3,r2,0x10
80008c9e:	08 9e       	mov	lr,r4
80008ca0:	e7 e5 11 03 	or	r3,r3,r5<<0x10
80008ca4:	e8 06 02 48 	mul	r8,r4,r6
80008ca8:	10 33       	cp.w	r3,r8
80008caa:	c0 a2       	brcc	80008cbe <__avr32_udiv64+0x1fe>
80008cac:	20 1e       	sub	lr,1
80008cae:	18 03       	add	r3,r12
80008cb0:	18 33       	cp.w	r3,r12
80008cb2:	c0 63       	brcs	80008cbe <__avr32_udiv64+0x1fe>
80008cb4:	10 33       	cp.w	r3,r8
80008cb6:	f7 be 03 01 	sublo	lr,1
80008cba:	e7 dc e3 03 	addcs	r3,r3,r12
80008cbe:	10 13       	sub	r3,r8
80008cc0:	f7 d2 c0 10 	bfextu	r11,r2,0x0,0x10
80008cc4:	e6 01 0d 00 	divu	r0,r3,r1
80008cc8:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80008ccc:	00 98       	mov	r8,r0
80008cce:	e0 06 02 46 	mul	r6,r0,r6
80008cd2:	0c 3b       	cp.w	r11,r6
80008cd4:	c0 a2       	brcc	80008ce8 <__avr32_udiv64+0x228>
80008cd6:	20 18       	sub	r8,1
80008cd8:	18 0b       	add	r11,r12
80008cda:	18 3b       	cp.w	r11,r12
80008cdc:	c0 63       	brcs	80008ce8 <__avr32_udiv64+0x228>
80008cde:	0c 3b       	cp.w	r11,r6
80008ce0:	f7 dc e3 0b 	addcs	r11,r11,r12
80008ce4:	f7 b8 03 01 	sublo	r8,1
80008ce8:	f1 ee 11 08 	or	r8,r8,lr<<0x10
80008cec:	ee f4 ff f4 	ld.w	r4,r7[-12]
80008cf0:	0c 1b       	sub	r11,r6
80008cf2:	f0 04 06 42 	mulu.d	r2,r8,r4
80008cf6:	06 95       	mov	r5,r3
80008cf8:	16 35       	cp.w	r5,r11
80008cfa:	e0 8b 00 0a 	brhi	80008d0e <__avr32_udiv64+0x24e>
80008cfe:	5f 0b       	sreq	r11
80008d00:	f4 09 09 49 	lsl	r9,r10,r9
80008d04:	12 32       	cp.w	r2,r9
80008d06:	5f b9       	srhi	r9
80008d08:	f7 e9 00 09 	and	r9,r11,r9
80008d0c:	c0 60       	breq	80008d18 <__avr32_udiv64+0x258>
80008d0e:	20 18       	sub	r8,1
80008d10:	30 09       	mov	r9,0
80008d12:	c0 38       	rjmp	80008d18 <__avr32_udiv64+0x258>
80008d14:	30 09       	mov	r9,0
80008d16:	12 98       	mov	r8,r9
80008d18:	10 9a       	mov	r10,r8
80008d1a:	12 93       	mov	r3,r9
80008d1c:	10 92       	mov	r2,r8
80008d1e:	12 9b       	mov	r11,r9
80008d20:	2f dd       	sub	sp,-12
80008d22:	d8 32       	popm	r0-r7,pc

80008d24 <__avr32_umod64>:
80008d24:	d4 31       	pushm	r0-r7,lr
80008d26:	1a 97       	mov	r7,sp
80008d28:	20 3d       	sub	sp,12
80008d2a:	10 9c       	mov	r12,r8
80008d2c:	12 95       	mov	r5,r9
80008d2e:	14 9e       	mov	lr,r10
80008d30:	16 91       	mov	r1,r11
80008d32:	16 96       	mov	r6,r11
80008d34:	58 09       	cp.w	r9,0
80008d36:	e0 81 00 81 	brne	80008e38 <__avr32_umod64+0x114>
80008d3a:	16 38       	cp.w	r8,r11
80008d3c:	e0 88 00 12 	brls	80008d60 <__avr32_umod64+0x3c>
80008d40:	f0 08 12 00 	clz	r8,r8
80008d44:	c4 e0       	breq	80008de0 <__avr32_umod64+0xbc>
80008d46:	f6 08 09 46 	lsl	r6,r11,r8
80008d4a:	f8 08 09 4c 	lsl	r12,r12,r8
80008d4e:	f0 0b 11 20 	rsub	r11,r8,32
80008d52:	f4 08 09 4e 	lsl	lr,r10,r8
80008d56:	f4 0b 0a 4b 	lsr	r11,r10,r11
80008d5a:	f7 e6 10 06 	or	r6,r11,r6
80008d5e:	c4 18       	rjmp	80008de0 <__avr32_umod64+0xbc>
80008d60:	58 08       	cp.w	r8,0
80008d62:	c0 51       	brne	80008d6c <__avr32_umod64+0x48>
80008d64:	30 19       	mov	r9,1
80008d66:	f2 08 0d 08 	divu	r8,r9,r8
80008d6a:	10 9c       	mov	r12,r8
80008d6c:	f8 08 12 00 	clz	r8,r12
80008d70:	c0 31       	brne	80008d76 <__avr32_umod64+0x52>
80008d72:	18 16       	sub	r6,r12
80008d74:	c3 68       	rjmp	80008de0 <__avr32_umod64+0xbc>
80008d76:	f0 03 11 20 	rsub	r3,r8,32
80008d7a:	f4 03 0a 4b 	lsr	r11,r10,r3
80008d7e:	f8 08 09 4c 	lsl	r12,r12,r8
80008d82:	ec 08 09 49 	lsl	r9,r6,r8
80008d86:	ec 03 0a 43 	lsr	r3,r6,r3
80008d8a:	f7 e9 10 09 	or	r9,r11,r9
80008d8e:	f8 05 16 10 	lsr	r5,r12,0x10
80008d92:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
80008d96:	e6 05 0d 02 	divu	r2,r3,r5
80008d9a:	f2 0e 16 10 	lsr	lr,r9,0x10
80008d9e:	ec 02 02 4b 	mul	r11,r6,r2
80008da2:	fd e3 11 0e 	or	lr,lr,r3<<0x10
80008da6:	16 3e       	cp.w	lr,r11
80008da8:	c0 72       	brcc	80008db6 <__avr32_umod64+0x92>
80008daa:	18 0e       	add	lr,r12
80008dac:	18 3e       	cp.w	lr,r12
80008dae:	c0 43       	brcs	80008db6 <__avr32_umod64+0x92>
80008db0:	16 3e       	cp.w	lr,r11
80008db2:	fd dc e3 0e 	addcs	lr,lr,r12
80008db6:	fc 0b 01 03 	sub	r3,lr,r11
80008dba:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
80008dbe:	e6 05 0d 02 	divu	r2,r3,r5
80008dc2:	f3 e3 11 09 	or	r9,r9,r3<<0x10
80008dc6:	a5 36       	mul	r6,r2
80008dc8:	0c 39       	cp.w	r9,r6
80008dca:	c0 72       	brcc	80008dd8 <__avr32_umod64+0xb4>
80008dcc:	18 09       	add	r9,r12
80008dce:	18 39       	cp.w	r9,r12
80008dd0:	c0 43       	brcs	80008dd8 <__avr32_umod64+0xb4>
80008dd2:	0c 39       	cp.w	r9,r6
80008dd4:	f3 dc e3 09 	addcs	r9,r9,r12
80008dd8:	f2 06 01 06 	sub	r6,r9,r6
80008ddc:	f4 08 09 4e 	lsl	lr,r10,r8
80008de0:	f8 0a 16 10 	lsr	r10,r12,0x10
80008de4:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80008de8:	ec 0a 0d 02 	divu	r2,r6,r10
80008dec:	fc 09 16 10 	lsr	r9,lr,0x10
80008df0:	ea 02 02 4b 	mul	r11,r5,r2
80008df4:	f3 e3 11 09 	or	r9,r9,r3<<0x10
80008df8:	16 39       	cp.w	r9,r11
80008dfa:	c0 72       	brcc	80008e08 <__avr32_umod64+0xe4>
80008dfc:	18 09       	add	r9,r12
80008dfe:	18 39       	cp.w	r9,r12
80008e00:	c0 43       	brcs	80008e08 <__avr32_umod64+0xe4>
80008e02:	16 39       	cp.w	r9,r11
80008e04:	f3 dc e3 09 	addcs	r9,r9,r12
80008e08:	f2 0b 01 0b 	sub	r11,r9,r11
80008e0c:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80008e10:	f6 0a 0d 0a 	divu	r10,r11,r10
80008e14:	fd eb 11 0e 	or	lr,lr,r11<<0x10
80008e18:	ea 0a 02 4a 	mul	r10,r5,r10
80008e1c:	14 3e       	cp.w	lr,r10
80008e1e:	c0 72       	brcc	80008e2c <__avr32_umod64+0x108>
80008e20:	18 0e       	add	lr,r12
80008e22:	18 3e       	cp.w	lr,r12
80008e24:	c0 43       	brcs	80008e2c <__avr32_umod64+0x108>
80008e26:	14 3e       	cp.w	lr,r10
80008e28:	fd dc e3 0e 	addcs	lr,lr,r12
80008e2c:	fc 0a 01 0a 	sub	r10,lr,r10
80008e30:	30 0b       	mov	r11,0
80008e32:	f4 08 0a 4a 	lsr	r10,r10,r8
80008e36:	c7 b8       	rjmp	80008f2c <__avr32_umod64+0x208>
80008e38:	16 39       	cp.w	r9,r11
80008e3a:	e0 8b 00 79 	brhi	80008f2c <__avr32_umod64+0x208>
80008e3e:	f2 09 12 00 	clz	r9,r9
80008e42:	c1 21       	brne	80008e66 <__avr32_umod64+0x142>
80008e44:	10 3a       	cp.w	r10,r8
80008e46:	5f 2b       	srhs	r11
80008e48:	0a 31       	cp.w	r1,r5
80008e4a:	5f ba       	srhi	r10
80008e4c:	f7 ea 10 0a 	or	r10,r11,r10
80008e50:	f2 0a 18 00 	cp.b	r10,r9
80008e54:	c0 60       	breq	80008e60 <__avr32_umod64+0x13c>
80008e56:	fc 08 01 0c 	sub	r12,lr,r8
80008e5a:	e2 05 01 46 	sbc	r6,r1,r5
80008e5e:	18 9e       	mov	lr,r12
80008e60:	0c 9b       	mov	r11,r6
80008e62:	1c 9a       	mov	r10,lr
80008e64:	c6 48       	rjmp	80008f2c <__avr32_umod64+0x208>
80008e66:	ea 09 09 4c 	lsl	r12,r5,r9
80008e6a:	f2 06 11 20 	rsub	r6,r9,32
80008e6e:	f6 09 09 4b 	lsl	r11,r11,r9
80008e72:	f0 09 09 42 	lsl	r2,r8,r9
80008e76:	ef 46 ff f4 	st.w	r7[-12],r6
80008e7a:	f0 06 0a 48 	lsr	r8,r8,r6
80008e7e:	18 48       	or	r8,r12
80008e80:	e2 06 0a 4c 	lsr	r12,r1,r6
80008e84:	f4 09 09 43 	lsl	r3,r10,r9
80008e88:	fd d8 c0 10 	bfextu	lr,r8,0x0,0x10
80008e8c:	f4 06 0a 4a 	lsr	r10,r10,r6
80008e90:	16 4a       	or	r10,r11
80008e92:	f0 0b 16 10 	lsr	r11,r8,0x10
80008e96:	f8 0b 0d 04 	divu	r4,r12,r11
80008e9a:	f4 0c 16 10 	lsr	r12,r10,0x10
80008e9e:	08 91       	mov	r1,r4
80008ea0:	f9 e5 11 0c 	or	r12,r12,r5<<0x10
80008ea4:	e8 0e 02 46 	mul	r6,r4,lr
80008ea8:	0c 3c       	cp.w	r12,r6
80008eaa:	c0 a2       	brcc	80008ebe <__avr32_umod64+0x19a>
80008eac:	20 11       	sub	r1,1
80008eae:	10 0c       	add	r12,r8
80008eb0:	10 3c       	cp.w	r12,r8
80008eb2:	c0 63       	brcs	80008ebe <__avr32_umod64+0x19a>
80008eb4:	0c 3c       	cp.w	r12,r6
80008eb6:	f7 b1 03 01 	sublo	r1,1
80008eba:	f9 d8 e3 0c 	addcs	r12,r12,r8
80008ebe:	0c 1c       	sub	r12,r6
80008ec0:	f5 da c0 10 	bfextu	r10,r10,0x0,0x10
80008ec4:	f8 0b 0d 04 	divu	r4,r12,r11
80008ec8:	f5 e5 11 0b 	or	r11,r10,r5<<0x10
80008ecc:	08 96       	mov	r6,r4
80008ece:	e8 0e 02 4e 	mul	lr,r4,lr
80008ed2:	1c 3b       	cp.w	r11,lr
80008ed4:	c0 a2       	brcc	80008ee8 <__avr32_umod64+0x1c4>
80008ed6:	20 16       	sub	r6,1
80008ed8:	10 0b       	add	r11,r8
80008eda:	10 3b       	cp.w	r11,r8
80008edc:	c0 63       	brcs	80008ee8 <__avr32_umod64+0x1c4>
80008ede:	1c 3b       	cp.w	r11,lr
80008ee0:	f7 b6 03 01 	sublo	r6,1
80008ee4:	f7 d8 e3 0b 	addcs	r11,r11,r8
80008ee8:	ed e1 11 01 	or	r1,r6,r1<<0x10
80008eec:	1c 1b       	sub	r11,lr
80008eee:	e2 02 06 40 	mulu.d	r0,r1,r2
80008ef2:	00 9e       	mov	lr,r0
80008ef4:	02 9c       	mov	r12,r1
80008ef6:	16 3c       	cp.w	r12,r11
80008ef8:	e0 8b 00 08 	brhi	80008f08 <__avr32_umod64+0x1e4>
80008efc:	5f 06       	sreq	r6
80008efe:	06 30       	cp.w	r0,r3
80008f00:	5f ba       	srhi	r10
80008f02:	ed ea 00 0a 	and	r10,r6,r10
80008f06:	c0 60       	breq	80008f12 <__avr32_umod64+0x1ee>
80008f08:	fc 02 01 04 	sub	r4,lr,r2
80008f0c:	f8 08 01 4c 	sbc	r12,r12,r8
80008f10:	08 9e       	mov	lr,r4
80008f12:	e6 0e 01 0a 	sub	r10,r3,lr
80008f16:	f6 0c 01 4c 	sbc	r12,r11,r12
80008f1a:	ee f1 ff f4 	ld.w	r1,r7[-12]
80008f1e:	f8 09 0a 4b 	lsr	r11,r12,r9
80008f22:	f4 09 0a 4a 	lsr	r10,r10,r9
80008f26:	f8 01 09 4c 	lsl	r12,r12,r1
80008f2a:	18 4a       	or	r10,r12
80008f2c:	2f dd       	sub	sp,-12
80008f2e:	d8 32       	popm	r0-r7,pc

Disassembly of section .exception:

80009000 <_evba>:
_evba:

	.org  0x000
	// Unrecoverable Exception.
_handle_Unrecoverable_Exception:
	rjmp $
80009000:	c0 08       	rjmp	80009000 <_evba>
	...

80009004 <_handle_TLB_Multiple_Hit>:

	.org  0x004
	// TLB Multiple Hit.
_handle_TLB_Multiple_Hit:
	rjmp $
80009004:	c0 08       	rjmp	80009004 <_handle_TLB_Multiple_Hit>
	...

80009008 <_handle_Bus_Error_Data_Fetch>:

	.org  0x008
	// Bus Error Data Fetch.
_handle_Bus_Error_Data_Fetch:
	rjmp $
80009008:	c0 08       	rjmp	80009008 <_handle_Bus_Error_Data_Fetch>
	...

8000900c <_handle_Bus_Error_Instruction_Fetch>:

	.org  0x00C
	// Bus Error Instruction Fetch.
_handle_Bus_Error_Instruction_Fetch:
	rjmp $
8000900c:	c0 08       	rjmp	8000900c <_handle_Bus_Error_Instruction_Fetch>
	...

80009010 <_handle_NMI>:

	.org  0x010
	// NMI.
_handle_NMI:
	rjmp $
80009010:	c0 08       	rjmp	80009010 <_handle_NMI>
	...

80009014 <_handle_Instruction_Address>:

	.org  0x014
	// Instruction Address.
_handle_Instruction_Address:
	rjmp $
80009014:	c0 08       	rjmp	80009014 <_handle_Instruction_Address>
	...

80009018 <_handle_ITLB_Protection>:

	.org  0x018
	// ITLB Protection.
_handle_ITLB_Protection:
	rjmp $
80009018:	c0 08       	rjmp	80009018 <_handle_ITLB_Protection>
	...

8000901c <_handle_Breakpoint>:

	.org  0x01C
	// Breakpoint.
_handle_Breakpoint:
	rjmp $
8000901c:	c0 08       	rjmp	8000901c <_handle_Breakpoint>
	...

80009020 <_handle_Illegal_Opcode>:

	.org  0x020
	// Illegal Opcode.
_handle_Illegal_Opcode:
	rjmp $
80009020:	c0 08       	rjmp	80009020 <_handle_Illegal_Opcode>
	...

80009024 <_handle_Unimplemented_Instruction>:

	.org  0x024
	// Unimplemented Instruction.
_handle_Unimplemented_Instruction:
	rjmp $
80009024:	c0 08       	rjmp	80009024 <_handle_Unimplemented_Instruction>
	...

80009028 <_handle_Privilege_Violation>:

	.org  0x028
	// Privilege Violation.
_handle_Privilege_Violation:
	rjmp $
80009028:	c0 08       	rjmp	80009028 <_handle_Privilege_Violation>
	...

8000902c <_handle_Floating_Point>:

	.org  0x02C
	// Floating-Point: UNUSED IN AVR32UC and AVR32AP.
_handle_Floating_Point:
	rjmp $
8000902c:	c0 08       	rjmp	8000902c <_handle_Floating_Point>
	...

80009030 <_handle_Coprocessor_Absent>:

	.org  0x030
	// Coprocessor Absent: UNUSED IN AVR32UC.
_handle_Coprocessor_Absent:
	rjmp $
80009030:	c0 08       	rjmp	80009030 <_handle_Coprocessor_Absent>
	...

80009034 <_handle_Data_Address_Read>:

	.org  0x034
	// Data Address (Read).
_handle_Data_Address_Read:
	rjmp $
80009034:	c0 08       	rjmp	80009034 <_handle_Data_Address_Read>
	...

80009038 <_handle_Data_Address_Write>:

	.org  0x038
	// Data Address (Write).
_handle_Data_Address_Write:
	rjmp $
80009038:	c0 08       	rjmp	80009038 <_handle_Data_Address_Write>
	...

8000903c <_handle_DTLB_Protection_Read>:

	.org  0x03C
	// DTLB Protection (Read).
_handle_DTLB_Protection_Read:
	rjmp $
8000903c:	c0 08       	rjmp	8000903c <_handle_DTLB_Protection_Read>
	...

80009040 <_handle_DTLB_Protection_Write>:

	.org  0x040
	// DTLB Protection (Write).
_handle_DTLB_Protection_Write:
	rjmp $
80009040:	c0 08       	rjmp	80009040 <_handle_DTLB_Protection_Write>
	...

80009044 <_handle_DTLB_Modified>:

	.org  0x044
	// DTLB Modified: UNUSED IN AVR32UC.
_handle_DTLB_Modified:
	rjmp $
80009044:	c0 08       	rjmp	80009044 <_handle_DTLB_Modified>
	...

80009050 <_handle_ITLB_Miss>:

	.org  0x050
	// ITLB Miss.
_handle_ITLB_Miss:
	rjmp $
80009050:	c0 08       	rjmp	80009050 <_handle_ITLB_Miss>
	...

80009060 <_handle_DTLB_Miss_Read>:

	.org  0x060
	// DTLB Miss (Read).
_handle_DTLB_Miss_Read:
	rjmp $
80009060:	c0 08       	rjmp	80009060 <_handle_DTLB_Miss_Read>
	...

80009070 <_handle_DTLB_Miss_Write>:

	.org  0x070
	// DTLB Miss (Write).
_handle_DTLB_Miss_Write:
	rjmp $
80009070:	c0 08       	rjmp	80009070 <_handle_DTLB_Miss_Write>
	...

80009100 <_handle_Supervisor_Call>:

	.org  0x100
	// Supervisor Call.
_handle_Supervisor_Call:
	rjmp $
80009100:	c0 08       	rjmp	80009100 <_handle_Supervisor_Call>
80009102:	d7 03       	nop

80009104 <_int0>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80009104:	30 0c       	mov	r12,0
80009106:	fe b0 d0 cb 	rcall	8000329c <_get_interrupt_handler>
8000910a:	58 0c       	cp.w	r12,0
8000910c:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
80009110:	d6 03       	rete

80009112 <_int1>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80009112:	30 1c       	mov	r12,1
80009114:	fe b0 d0 c4 	rcall	8000329c <_get_interrupt_handler>
80009118:	58 0c       	cp.w	r12,0
8000911a:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000911e:	d6 03       	rete

80009120 <_int2>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80009120:	30 2c       	mov	r12,2
80009122:	fe b0 d0 bd 	rcall	8000329c <_get_interrupt_handler>
80009126:	58 0c       	cp.w	r12,0
80009128:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000912c:	d6 03       	rete

8000912e <_int3>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
8000912e:	30 3c       	mov	r12,3
80009130:	fe b0 d0 b6 	rcall	8000329c <_get_interrupt_handler>
80009134:	58 0c       	cp.w	r12,0
80009136:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000913a:	d6 03       	rete
8000913c:	d7 03       	nop
8000913e:	d7 03       	nop
80009140:	d7 03       	nop
80009142:	d7 03       	nop
80009144:	d7 03       	nop
80009146:	d7 03       	nop
80009148:	d7 03       	nop
8000914a:	d7 03       	nop
8000914c:	d7 03       	nop
8000914e:	d7 03       	nop
80009150:	d7 03       	nop
80009152:	d7 03       	nop
80009154:	d7 03       	nop
80009156:	d7 03       	nop
80009158:	d7 03       	nop
8000915a:	d7 03       	nop
8000915c:	d7 03       	nop
8000915e:	d7 03       	nop
80009160:	d7 03       	nop
80009162:	d7 03       	nop
80009164:	d7 03       	nop
80009166:	d7 03       	nop
80009168:	d7 03       	nop
8000916a:	d7 03       	nop
8000916c:	d7 03       	nop
8000916e:	d7 03       	nop
80009170:	d7 03       	nop
80009172:	d7 03       	nop
80009174:	d7 03       	nop
80009176:	d7 03       	nop
80009178:	d7 03       	nop
8000917a:	d7 03       	nop
8000917c:	d7 03       	nop
8000917e:	d7 03       	nop
80009180:	d7 03       	nop
80009182:	d7 03       	nop
80009184:	d7 03       	nop
80009186:	d7 03       	nop
80009188:	d7 03       	nop
8000918a:	d7 03       	nop
8000918c:	d7 03       	nop
8000918e:	d7 03       	nop
80009190:	d7 03       	nop
80009192:	d7 03       	nop
80009194:	d7 03       	nop
80009196:	d7 03       	nop
80009198:	d7 03       	nop
8000919a:	d7 03       	nop
8000919c:	d7 03       	nop
8000919e:	d7 03       	nop
800091a0:	d7 03       	nop
800091a2:	d7 03       	nop
800091a4:	d7 03       	nop
800091a6:	d7 03       	nop
800091a8:	d7 03       	nop
800091aa:	d7 03       	nop
800091ac:	d7 03       	nop
800091ae:	d7 03       	nop
800091b0:	d7 03       	nop
800091b2:	d7 03       	nop
800091b4:	d7 03       	nop
800091b6:	d7 03       	nop
800091b8:	d7 03       	nop
800091ba:	d7 03       	nop
800091bc:	d7 03       	nop
800091be:	d7 03       	nop
800091c0:	d7 03       	nop
800091c2:	d7 03       	nop
800091c4:	d7 03       	nop
800091c6:	d7 03       	nop
800091c8:	d7 03       	nop
800091ca:	d7 03       	nop
800091cc:	d7 03       	nop
800091ce:	d7 03       	nop
800091d0:	d7 03       	nop
800091d2:	d7 03       	nop
800091d4:	d7 03       	nop
800091d6:	d7 03       	nop
800091d8:	d7 03       	nop
800091da:	d7 03       	nop
800091dc:	d7 03       	nop
800091de:	d7 03       	nop
800091e0:	d7 03       	nop
800091e2:	d7 03       	nop
800091e4:	d7 03       	nop
800091e6:	d7 03       	nop
800091e8:	d7 03       	nop
800091ea:	d7 03       	nop
800091ec:	d7 03       	nop
800091ee:	d7 03       	nop
800091f0:	d7 03       	nop
800091f2:	d7 03       	nop
800091f4:	d7 03       	nop
800091f6:	d7 03       	nop
800091f8:	d7 03       	nop
800091fa:	d7 03       	nop
800091fc:	d7 03       	nop
800091fe:	d7 03       	nop

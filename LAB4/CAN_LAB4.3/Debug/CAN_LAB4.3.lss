
CAN_LAB4.3.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00002008  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00006ee0  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .exception    00000200  80009000  80009000  00009400  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       00000750  80009200  80009200  00009600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dalign       00000004  00000004  00000004  00000000  2**0
                  ALLOC
  6 .data         00000510  00000008  80009950  0000a008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00000180  00000518  00000518  00000000  2**2
                  ALLOC
  8 .heap         0000e968  00000698  00000698  00000000  2**0
                  ALLOC
  9 .comment      00000030  00000000  00000000  0000a518  2**0
                  CONTENTS, READONLY
 10 .debug_aranges 00000d60  00000000  00000000  0000a548  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubnames 000018e2  00000000  00000000  0000b2a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_info   0001f75d  00000000  00000000  0000cb8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000525c  00000000  00000000  0002c2e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000dd8f  00000000  00000000  00031543  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001f58  00000000  00000000  0003f2d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    0000412f  00000000  00000000  0004122c  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    00009dc0  00000000  00000000  0004535b  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_macinfo 00936d18  00000000  00000000  0004f11b  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .stack        00001000  0000f000  0000f000  00000000  2**0
                  ALLOC
 20 .debug_ranges 00000f30  00000000  00000000  00985e38  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_start>:
80000000:	fe cf ca 34 	sub	pc,pc,-13772

80000004 <_trampoline>:
80000004:	e0 8f 10 00 	bral	80002004 <program_start>
	...

80002004 <program_start>:
80002004:	fe cf ea 38 	sub	pc,pc,-5576

Disassembly of section .text:

80002008 <adc_start>:
80002008:	30 28       	mov	r8,2
8000200a:	99 08       	st.w	r12[0x0],r8
{
	Assert( adc != NULL );

	/* start conversion */
	adc->cr = AVR32_ADC_START_MASK;
}
8000200c:	5e fc       	retal	r12

8000200e <adc_enable>:
	Assert( adc != NULL );
	Assert( channel <= AVR32_ADC_CHANNELS_MSB ); /* check if channel exist
	                                              **/

	/* enable channel */
	adc->cher = (1 << channel);
8000200e:	30 18       	mov	r8,1
80002010:	f0 0b 09 48 	lsl	r8,r8,r11
80002014:	99 48       	st.w	r12[0x10],r8
}
80002016:	5e fc       	retal	r12

80002018 <adc_check_eoc>:
	Assert( adc != NULL );
	Assert( channel <= AVR32_ADC_CHANNELS_MSB ); /* check if channel exist
	                                              **/

	/* get SR register : EOC bit for channel */
	return ((adc->sr & (1 << channel)) ? true : false);
80002018:	78 78       	ld.w	r8,r12[0x1c]
8000201a:	30 19       	mov	r9,1
8000201c:	f2 0b 09 49 	lsl	r9,r9,r11
80002020:	f3 e8 00 08 	and	r8,r9,r8
}
80002024:	5f 1c       	srne	r12
80002026:	5e fc       	retal	r12

80002028 <adc_get_value>:
 * \param *adc Base address of the ADC
 * \param  channel   channel to handle (0 to 7)
 * \return The value acquired (unsigned long)
 */
uint32_t adc_get_value(volatile avr32_adc_t *adc, uint16_t channel)
{
80002028:	eb cd 40 e0 	pushm	r5-r7,lr
8000202c:	18 97       	mov	r7,r12
8000202e:	16 95       	mov	r5,r11
	Assert( adc != NULL );
	Assert( channel <= AVR32_ADC_CHANNELS_MSB );

	/* wait for end of conversion */
	while (adc_check_eoc(adc, channel) != true) {
80002030:	ed db c0 10 	bfextu	r6,r11,0x0,0x10
80002034:	0c 9b       	mov	r11,r6
80002036:	0e 9c       	mov	r12,r7
80002038:	f0 1f 00 05 	mcall	8000204c <adc_get_value+0x24>
8000203c:	cf c0       	breq	80002034 <adc_get_value+0xc>
	}

	return *((uint32_t *)((&(adc->cdr0)) + channel));
8000203e:	2d 07       	sub	r7,-48
80002040:	5c 75       	castu.h	r5
}
80002042:	ee 05 03 2c 	ld.w	r12,r7[r5<<0x2]
80002046:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000204a:	00 00       	add	r0,r0
8000204c:	80 00       	ld.sh	r0,r0[0x0]
8000204e:	20 18       	sub	r8,1

80002050 <ClearMessages>:
80002050:	30 08       	mov	r8,0
80002052:	b8 88       	st.b	r12[0x0],r8
80002054:	b8 98       	st.b	r12[0x1],r8
80002056:	b8 a8       	st.b	r12[0x2],r8
80002058:	b8 b8       	st.b	r12[0x3],r8
8000205a:	b8 c8       	st.b	r12[0x4],r8
8000205c:	b8 d8       	st.b	r12[0x5],r8
8000205e:	b8 e8       	st.b	r12[0x6],r8
80002060:	b8 f8       	st.b	r12[0x7],r8
80002062:	5e fc       	retal	r12

80002064 <config_dpi204>:
80002064:	eb cd 40 80 	pushm	r7,lr
80002068:	20 4d       	sub	sp,16
8000206a:	49 68       	lddpc	r8,800020c0 <config_dpi204+0x5c>
8000206c:	1a 97       	mov	r7,sp
8000206e:	f0 ea 00 00 	ld.d	r10,r8[0]
80002072:	fa eb 00 00 	st.d	sp[0],r10
80002076:	f0 e8 00 08 	ld.d	r8,r8[8]
8000207a:	fa e9 00 08 	st.d	sp[8],r8
8000207e:	30 4b       	mov	r11,4
80002080:	49 1c       	lddpc	r12,800020c4 <config_dpi204+0x60>
80002082:	f0 1f 00 12 	mcall	800020c8 <config_dpi204+0x64>
80002086:	1a 9b       	mov	r11,sp
80002088:	fe 7c 28 00 	mov	r12,-55296
8000208c:	f0 1f 00 10 	mcall	800020cc <config_dpi204+0x68>
80002090:	30 09       	mov	r9,0
80002092:	12 9a       	mov	r10,r9
80002094:	12 9b       	mov	r11,r9
80002096:	fe 7c 28 00 	mov	r12,-55296
8000209a:	f0 1f 00 0e 	mcall	800020d0 <config_dpi204+0x6c>
8000209e:	fe 7c 28 00 	mov	r12,-55296
800020a2:	f0 1f 00 0d 	mcall	800020d4 <config_dpi204+0x70>
800020a6:	e0 6a 1b 00 	mov	r10,6912
800020aa:	ea 1a 00 b7 	orh	r10,0xb7
800020ae:	1a 9b       	mov	r11,sp
800020b0:	fe 7c 28 00 	mov	r12,-55296
800020b4:	f0 1f 00 09 	mcall	800020d8 <config_dpi204+0x74>
800020b8:	2f cd       	sub	sp,-16
800020ba:	e3 cd 80 80 	ldm	sp++,r7,pc
800020be:	00 00       	add	r0,r0
800020c0:	80 00       	ld.sh	r0,r0[0x0]
800020c2:	92 30       	ld.sh	r0,r9[0x6]
800020c4:	80 00       	ld.sh	r0,r0[0x0]
800020c6:	92 40       	ld.sh	r0,r9[0x8]
800020c8:	80 00       	ld.sh	r0,r0[0x0]
800020ca:	31 94       	mov	r4,25
800020cc:	80 00       	ld.sh	r0,r0[0x0]
800020ce:	33 f2       	mov	r2,63
800020d0:	80 00       	ld.sh	r0,r0[0x0]
800020d2:	34 2a       	mov	r10,66
800020d4:	80 00       	ld.sh	r0,r0[0x0]
800020d6:	35 80       	mov	r0,88
800020d8:	80 00       	ld.sh	r0,r0[0x0]
800020da:	34 c8       	mov	r8,76

800020dc <mASSERT_CS>:
800020dc:	d4 01       	pushm	lr
800020de:	18 9b       	mov	r11,r12
800020e0:	fe 7c 24 00 	mov	r12,-56320
800020e4:	f0 1f 00 02 	mcall	800020ec <mASSERT_CS+0x10>
800020e8:	d8 02       	popm	pc
800020ea:	00 00       	add	r0,r0
800020ec:	80 00       	ld.sh	r0,r0[0x0]
800020ee:	34 56       	mov	r6,69

800020f0 <config_SPI_SPARE>:
800020f0:	eb cd 40 80 	pushm	r7,lr
800020f4:	20 4d       	sub	sp,16
800020f6:	49 88       	lddpc	r8,80002154 <config_SPI_SPARE+0x64>
800020f8:	1a 97       	mov	r7,sp
800020fa:	f0 ea 00 00 	ld.d	r10,r8[0]
800020fe:	fa eb 00 00 	st.d	sp[0],r10
80002102:	f0 e8 00 08 	ld.d	r8,r8[8]
80002106:	fa e9 00 08 	st.d	sp[8],r8
8000210a:	30 4b       	mov	r11,4
8000210c:	49 3c       	lddpc	r12,80002158 <config_SPI_SPARE+0x68>
8000210e:	f0 1f 00 14 	mcall	8000215c <config_SPI_SPARE+0x6c>
80002112:	1a 9b       	mov	r11,sp
80002114:	fe 7c 24 00 	mov	r12,-56320
80002118:	f0 1f 00 12 	mcall	80002160 <config_SPI_SPARE+0x70>
8000211c:	30 09       	mov	r9,0
8000211e:	12 9a       	mov	r10,r9
80002120:	12 9b       	mov	r11,r9
80002122:	fe 7c 24 00 	mov	r12,-56320
80002126:	f0 1f 00 10 	mcall	80002164 <config_SPI_SPARE+0x74>
8000212a:	30 0b       	mov	r11,0
8000212c:	fe 7c 24 00 	mov	r12,-56320
80002130:	f0 1f 00 0e 	mcall	80002168 <config_SPI_SPARE+0x78>
80002134:	e0 6a 1b 00 	mov	r10,6912
80002138:	ea 1a 00 b7 	orh	r10,0xb7
8000213c:	1a 9b       	mov	r11,sp
8000213e:	fe 7c 24 00 	mov	r12,-56320
80002142:	f0 1f 00 0b 	mcall	8000216c <config_SPI_SPARE+0x7c>
80002146:	fe 7c 24 00 	mov	r12,-56320
8000214a:	f0 1f 00 0a 	mcall	80002170 <config_SPI_SPARE+0x80>
8000214e:	2f cd       	sub	sp,-16
80002150:	e3 cd 80 80 	ldm	sp++,r7,pc
80002154:	80 00       	ld.sh	r0,r0[0x0]
80002156:	92 20       	ld.sh	r0,r9[0x4]
80002158:	80 00       	ld.sh	r0,r0[0x0]
8000215a:	92 00       	ld.sh	r0,r9[0x0]
8000215c:	80 00       	ld.sh	r0,r0[0x0]
8000215e:	31 94       	mov	r4,25
80002160:	80 00       	ld.sh	r0,r0[0x0]
80002162:	33 f2       	mov	r2,63
80002164:	80 00       	ld.sh	r0,r0[0x0]
80002166:	34 2a       	mov	r10,66
80002168:	80 00       	ld.sh	r0,r0[0x0]
8000216a:	34 56       	mov	r6,69
8000216c:	80 00       	ld.sh	r0,r0[0x0]
8000216e:	34 c8       	mov	r8,76
80002170:	80 00       	ld.sh	r0,r0[0x0]
80002172:	35 80       	mov	r0,88

80002174 <XferSPI_send>:
80002174:	d4 01       	pushm	lr
80002176:	fe 7c 24 00 	mov	r12,-56320
8000217a:	f0 1f 00 02 	mcall	80002180 <XferSPI_send+0xc>
8000217e:	d8 0a       	popm	pc,r12=0
80002180:	80 00       	ld.sh	r0,r0[0x0]
80002182:	35 86       	mov	r6,88

80002184 <ReadStatus2515>:
80002184:	d4 01       	pushm	lr
80002186:	20 1d       	sub	sp,4
80002188:	30 0b       	mov	r11,0
8000218a:	fe 7c 24 00 	mov	r12,-56320
8000218e:	f0 1f 00 0e 	mcall	800021c4 <ReadStatus2515+0x40>
80002192:	e0 6b 00 a0 	mov	r11,160
80002196:	fe 7c 24 00 	mov	r12,-56320
8000219a:	f0 1f 00 0c 	mcall	800021c8 <ReadStatus2515+0x44>
8000219e:	30 0b       	mov	r11,0
800021a0:	fe 7c 24 00 	mov	r12,-56320
800021a4:	f0 1f 00 09 	mcall	800021c8 <ReadStatus2515+0x44>
800021a8:	fa cb ff fe 	sub	r11,sp,-2
800021ac:	fe 7c 24 00 	mov	r12,-56320
800021b0:	f0 1f 00 07 	mcall	800021cc <ReadStatus2515+0x48>
800021b4:	30 0b       	mov	r11,0
800021b6:	fe 7c 24 00 	mov	r12,-56320
800021ba:	f0 1f 00 06 	mcall	800021d0 <ReadStatus2515+0x4c>
800021be:	1b bc       	ld.ub	r12,sp[0x3]
800021c0:	2f fd       	sub	sp,-4
800021c2:	d8 02       	popm	pc
800021c4:	80 00       	ld.sh	r0,r0[0x0]
800021c6:	34 56       	mov	r6,69
800021c8:	80 00       	ld.sh	r0,r0[0x0]
800021ca:	35 86       	mov	r6,88
800021cc:	80 00       	ld.sh	r0,r0[0x0]
800021ce:	35 aa       	mov	r10,90
800021d0:	80 00       	ld.sh	r0,r0[0x0]
800021d2:	34 a2       	mov	r2,74

800021d4 <CANRxReady>:
800021d4:	d4 01       	pushm	lr
800021d6:	f0 1f 00 04 	mcall	800021e4 <CANRxReady+0x10>
800021da:	f9 dc c0 02 	bfextu	r12,r12,0x0,0x2
800021de:	5f 1c       	srne	r12
800021e0:	d8 02       	popm	pc
800021e2:	00 00       	add	r0,r0
800021e4:	80 00       	ld.sh	r0,r0[0x0]
800021e6:	21 84       	sub	r4,24

800021e8 <CANTxReady>:
800021e8:	d4 01       	pushm	lr
800021ea:	f0 1f 00 04 	mcall	800021f8 <CANTxReady+0x10>
800021ee:	ec 1c 00 04 	eorl	r12,0x4
800021f2:	f9 dc c0 41 	bfextu	r12,r12,0x2,0x1
800021f6:	d8 02       	popm	pc
800021f8:	80 00       	ld.sh	r0,r0[0x0]
800021fa:	21 84       	sub	r4,24

800021fc <mDEASSERT_CS>:
800021fc:	d4 01       	pushm	lr
800021fe:	18 9b       	mov	r11,r12
80002200:	fe 7c 24 00 	mov	r12,-56320
80002204:	f0 1f 00 02 	mcall	8000220c <mDEASSERT_CS+0x10>
80002208:	d8 02       	popm	pc
8000220a:	00 00       	add	r0,r0
8000220c:	80 00       	ld.sh	r0,r0[0x0]
8000220e:	34 a2       	mov	r2,74

80002210 <CAN2515ByteWrite>:
80002210:	d4 21       	pushm	r4-r7,lr
80002212:	18 97       	mov	r7,r12
80002214:	16 95       	mov	r5,r11
80002216:	14 94       	mov	r4,r10
80002218:	18 96       	mov	r6,r12
8000221a:	5c 56       	castu.b	r6
8000221c:	0c 9c       	mov	r12,r6
8000221e:	f0 1f 00 0a 	mcall	80002244 <CAN2515ByteWrite+0x34>
80002222:	30 2b       	mov	r11,2
80002224:	0e 9c       	mov	r12,r7
80002226:	f0 1f 00 09 	mcall	80002248 <CAN2515ByteWrite+0x38>
8000222a:	0a 9b       	mov	r11,r5
8000222c:	0e 9c       	mov	r12,r7
8000222e:	f0 1f 00 07 	mcall	80002248 <CAN2515ByteWrite+0x38>
80002232:	08 9b       	mov	r11,r4
80002234:	0e 9c       	mov	r12,r7
80002236:	f0 1f 00 05 	mcall	80002248 <CAN2515ByteWrite+0x38>
8000223a:	0c 9c       	mov	r12,r6
8000223c:	f0 1f 00 04 	mcall	8000224c <CAN2515ByteWrite+0x3c>
80002240:	d8 22       	popm	r4-r7,pc
80002242:	00 00       	add	r0,r0
80002244:	80 00       	ld.sh	r0,r0[0x0]
80002246:	20 dc       	sub	r12,13
80002248:	80 00       	ld.sh	r0,r0[0x0]
8000224a:	21 74       	sub	r4,23
8000224c:	80 00       	ld.sh	r0,r0[0x0]
8000224e:	21 fc       	sub	r12,31

80002250 <CAN2515SetRXB1FiltersEx>:
80002250:	eb cd 40 e0 	pushm	r5-r7,lr
80002254:	18 97       	mov	r7,r12
80002256:	16 96       	mov	r6,r11
80002258:	14 95       	mov	r5,r10
8000225a:	f5 db c0 08 	bfextu	r10,r11,0x0,0x8
8000225e:	32 7b       	mov	r11,39
80002260:	f0 1f 00 50 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002264:	f5 d6 c1 08 	bfextu	r10,r6,0x8,0x8
80002268:	32 6b       	mov	r11,38
8000226a:	0e 9c       	mov	r12,r7
8000226c:	f0 1f 00 4d 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002270:	f1 d6 c2 02 	bfextu	r8,r6,0x10,0x2
80002274:	ec 0a 16 0d 	lsr	r10,r6,0xd
80002278:	e2 1a 00 e0 	andl	r10,0xe0,COH
8000227c:	10 4a       	or	r10,r8
8000227e:	32 5b       	mov	r11,37
80002280:	0e 9c       	mov	r12,r7
80002282:	f0 1f 00 48 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002286:	f5 d6 c2 a8 	bfextu	r10,r6,0x15,0x8
8000228a:	32 4b       	mov	r11,36
8000228c:	0e 9c       	mov	r12,r7
8000228e:	f0 1f 00 45 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002292:	0b ba       	ld.ub	r10,r5[0x3]
80002294:	30 bb       	mov	r11,11
80002296:	0e 9c       	mov	r12,r7
80002298:	f0 1f 00 42 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000229c:	0b aa       	ld.ub	r10,r5[0x2]
8000229e:	30 ab       	mov	r11,10
800022a0:	0e 9c       	mov	r12,r7
800022a2:	f0 1f 00 40 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
800022a6:	6a 08       	ld.w	r8,r5[0x0]
800022a8:	f0 0a 16 0d 	lsr	r10,r8,0xd
800022ac:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
800022b0:	e2 1a 00 e0 	andl	r10,0xe0,COH
800022b4:	f1 ea 10 0a 	or	r10,r8,r10
800022b8:	a3 ba       	sbr	r10,0x3
800022ba:	e2 1a 00 eb 	andl	r10,0xeb,COH
800022be:	30 9b       	mov	r11,9
800022c0:	0e 9c       	mov	r12,r7
800022c2:	f0 1f 00 38 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
800022c6:	0b 0a       	ld.w	r10,r5++
800022c8:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
800022cc:	30 8b       	mov	r11,8
800022ce:	0e 9c       	mov	r12,r7
800022d0:	f0 1f 00 34 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
800022d4:	0b ba       	ld.ub	r10,r5[0x3]
800022d6:	31 3b       	mov	r11,19
800022d8:	0e 9c       	mov	r12,r7
800022da:	f0 1f 00 32 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
800022de:	0b aa       	ld.ub	r10,r5[0x2]
800022e0:	31 2b       	mov	r11,18
800022e2:	0e 9c       	mov	r12,r7
800022e4:	f0 1f 00 2f 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
800022e8:	6a 08       	ld.w	r8,r5[0x0]
800022ea:	f0 0a 16 0d 	lsr	r10,r8,0xd
800022ee:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
800022f2:	e2 1a 00 e0 	andl	r10,0xe0,COH
800022f6:	f1 ea 10 0a 	or	r10,r8,r10
800022fa:	a3 ba       	sbr	r10,0x3
800022fc:	e2 1a 00 eb 	andl	r10,0xeb,COH
80002300:	31 1b       	mov	r11,17
80002302:	0e 9c       	mov	r12,r7
80002304:	f0 1f 00 27 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002308:	0b 0a       	ld.w	r10,r5++
8000230a:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
8000230e:	31 0b       	mov	r11,16
80002310:	0e 9c       	mov	r12,r7
80002312:	f0 1f 00 24 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002316:	0b ba       	ld.ub	r10,r5[0x3]
80002318:	31 7b       	mov	r11,23
8000231a:	0e 9c       	mov	r12,r7
8000231c:	f0 1f 00 21 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002320:	0b aa       	ld.ub	r10,r5[0x2]
80002322:	31 6b       	mov	r11,22
80002324:	0e 9c       	mov	r12,r7
80002326:	f0 1f 00 1f 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000232a:	6a 08       	ld.w	r8,r5[0x0]
8000232c:	f0 0a 16 0d 	lsr	r10,r8,0xd
80002330:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002334:	e2 1a 00 e0 	andl	r10,0xe0,COH
80002338:	f1 ea 10 0a 	or	r10,r8,r10
8000233c:	a3 ba       	sbr	r10,0x3
8000233e:	e2 1a 00 eb 	andl	r10,0xeb,COH
80002342:	31 5b       	mov	r11,21
80002344:	0e 9c       	mov	r12,r7
80002346:	f0 1f 00 17 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000234a:	0b 0a       	ld.w	r10,r5++
8000234c:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
80002350:	31 4b       	mov	r11,20
80002352:	0e 9c       	mov	r12,r7
80002354:	f0 1f 00 13 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002358:	0b ba       	ld.ub	r10,r5[0x3]
8000235a:	31 bb       	mov	r11,27
8000235c:	0e 9c       	mov	r12,r7
8000235e:	f0 1f 00 11 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
80002362:	0b aa       	ld.ub	r10,r5[0x2]
80002364:	31 ab       	mov	r11,26
80002366:	0e 9c       	mov	r12,r7
80002368:	f0 1f 00 0e 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000236c:	6a 08       	ld.w	r8,r5[0x0]
8000236e:	f0 0a 16 0d 	lsr	r10,r8,0xd
80002372:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002376:	e2 1a 00 e0 	andl	r10,0xe0,COH
8000237a:	f1 ea 10 0a 	or	r10,r8,r10
8000237e:	a3 ba       	sbr	r10,0x3
80002380:	e2 1a 00 eb 	andl	r10,0xeb,COH
80002384:	31 9b       	mov	r11,25
80002386:	0e 9c       	mov	r12,r7
80002388:	f0 1f 00 06 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000238c:	6a 0a       	ld.w	r10,r5[0x0]
8000238e:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
80002392:	31 8b       	mov	r11,24
80002394:	0e 9c       	mov	r12,r7
80002396:	f0 1f 00 03 	mcall	800023a0 <CAN2515SetRXB1FiltersEx+0x150>
8000239a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000239e:	00 00       	add	r0,r0
800023a0:	80 00       	ld.sh	r0,r0[0x0]
800023a2:	22 10       	sub	r0,33

800023a4 <CAN2515SetRXB0FiltersEx>:
800023a4:	eb cd 40 e0 	pushm	r5-r7,lr
800023a8:	18 97       	mov	r7,r12
800023aa:	16 96       	mov	r6,r11
800023ac:	14 95       	mov	r5,r10
800023ae:	f5 db c0 08 	bfextu	r10,r11,0x0,0x8
800023b2:	32 3b       	mov	r11,35
800023b4:	f0 1f 00 2f 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023b8:	f5 d6 c1 08 	bfextu	r10,r6,0x8,0x8
800023bc:	32 2b       	mov	r11,34
800023be:	0e 9c       	mov	r12,r7
800023c0:	f0 1f 00 2c 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023c4:	f1 d6 c2 02 	bfextu	r8,r6,0x10,0x2
800023c8:	ec 0a 16 0d 	lsr	r10,r6,0xd
800023cc:	e2 1a 00 e0 	andl	r10,0xe0,COH
800023d0:	10 4a       	or	r10,r8
800023d2:	32 1b       	mov	r11,33
800023d4:	0e 9c       	mov	r12,r7
800023d6:	f0 1f 00 27 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023da:	f5 d6 c2 a8 	bfextu	r10,r6,0x15,0x8
800023de:	32 0b       	mov	r11,32
800023e0:	0e 9c       	mov	r12,r7
800023e2:	f0 1f 00 24 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023e6:	0b ba       	ld.ub	r10,r5[0x3]
800023e8:	30 3b       	mov	r11,3
800023ea:	0e 9c       	mov	r12,r7
800023ec:	f0 1f 00 21 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023f0:	0b aa       	ld.ub	r10,r5[0x2]
800023f2:	30 2b       	mov	r11,2
800023f4:	0e 9c       	mov	r12,r7
800023f6:	f0 1f 00 1f 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
800023fa:	6a 08       	ld.w	r8,r5[0x0]
800023fc:	f0 0a 16 0d 	lsr	r10,r8,0xd
80002400:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002404:	e2 1a 00 e0 	andl	r10,0xe0,COH
80002408:	f1 ea 10 0a 	or	r10,r8,r10
8000240c:	a3 ba       	sbr	r10,0x3
8000240e:	e2 1a 00 eb 	andl	r10,0xeb,COH
80002412:	30 1b       	mov	r11,1
80002414:	0e 9c       	mov	r12,r7
80002416:	f0 1f 00 17 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
8000241a:	0b 0a       	ld.w	r10,r5++
8000241c:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
80002420:	30 0b       	mov	r11,0
80002422:	0e 9c       	mov	r12,r7
80002424:	f0 1f 00 13 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
80002428:	0b ba       	ld.ub	r10,r5[0x3]
8000242a:	30 7b       	mov	r11,7
8000242c:	0e 9c       	mov	r12,r7
8000242e:	f0 1f 00 11 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
80002432:	0b aa       	ld.ub	r10,r5[0x2]
80002434:	30 6b       	mov	r11,6
80002436:	0e 9c       	mov	r12,r7
80002438:	f0 1f 00 0e 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
8000243c:	6a 08       	ld.w	r8,r5[0x0]
8000243e:	f0 0a 16 0d 	lsr	r10,r8,0xd
80002442:	f1 d8 c2 02 	bfextu	r8,r8,0x10,0x2
80002446:	e2 1a 00 e0 	andl	r10,0xe0,COH
8000244a:	f1 ea 10 0a 	or	r10,r8,r10
8000244e:	a3 ba       	sbr	r10,0x3
80002450:	e2 1a 00 eb 	andl	r10,0xeb,COH
80002454:	30 5b       	mov	r11,5
80002456:	0e 9c       	mov	r12,r7
80002458:	f0 1f 00 06 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
8000245c:	6a 0a       	ld.w	r10,r5[0x0]
8000245e:	f5 da c2 a8 	bfextu	r10,r10,0x15,0x8
80002462:	30 4b       	mov	r11,4
80002464:	0e 9c       	mov	r12,r7
80002466:	f0 1f 00 03 	mcall	80002470 <CAN2515SetRXB0FiltersEx+0xcc>
8000246a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000246e:	00 00       	add	r0,r0
80002470:	80 00       	ld.sh	r0,r0[0x0]
80002472:	22 10       	sub	r0,33

80002474 <CANReset>:
80002474:	eb cd 40 c0 	pushm	r6-r7,lr
80002478:	18 96       	mov	r6,r12
8000247a:	ef dc c0 08 	bfextu	r7,r12,0x0,0x8
8000247e:	0e 9c       	mov	r12,r7
80002480:	f0 1f 00 06 	mcall	80002498 <CANReset+0x24>
80002484:	e0 6b 00 c0 	mov	r11,192
80002488:	0c 9c       	mov	r12,r6
8000248a:	f0 1f 00 05 	mcall	8000249c <CANReset+0x28>
8000248e:	0e 9c       	mov	r12,r7
80002490:	f0 1f 00 04 	mcall	800024a0 <CANReset+0x2c>
80002494:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002498:	80 00       	ld.sh	r0,r0[0x0]
8000249a:	20 dc       	sub	r12,13
8000249c:	80 00       	ld.sh	r0,r0[0x0]
8000249e:	21 74       	sub	r4,23
800024a0:	80 00       	ld.sh	r0,r0[0x0]
800024a2:	21 fc       	sub	r12,31

800024a4 <CAN2515ByteRead>:
800024a4:	eb cd 40 e0 	pushm	r5-r7,lr
800024a8:	20 1d       	sub	sp,4
800024aa:	18 97       	mov	r7,r12
800024ac:	16 95       	mov	r5,r11
800024ae:	18 96       	mov	r6,r12
800024b0:	5c 56       	castu.b	r6
800024b2:	0c 9c       	mov	r12,r6
800024b4:	f0 1f 00 13 	mcall	80002500 <CAN2515ByteRead+0x5c>
800024b8:	30 3b       	mov	r11,3
800024ba:	0e 9c       	mov	r12,r7
800024bc:	f0 1f 00 12 	mcall	80002504 <CAN2515ByteRead+0x60>
800024c0:	0a 9b       	mov	r11,r5
800024c2:	0e 9c       	mov	r12,r7
800024c4:	f0 1f 00 10 	mcall	80002504 <CAN2515ByteRead+0x60>
800024c8:	30 0b       	mov	r11,0
800024ca:	fe 7c 24 00 	mov	r12,-56320
800024ce:	f0 1f 00 0f 	mcall	80002508 <CAN2515ByteRead+0x64>
800024d2:	fe 77 24 00 	mov	r7,-56320
800024d6:	c0 28       	rjmp	800024da <CAN2515ByteRead+0x36>
800024d8:	d7 03       	nop
800024da:	0e 9c       	mov	r12,r7
800024dc:	f0 1f 00 0c 	mcall	8000250c <CAN2515ByteRead+0x68>
800024e0:	cf c0       	breq	800024d8 <CAN2515ByteRead+0x34>
800024e2:	fa cb ff fe 	sub	r11,sp,-2
800024e6:	fe 7c 24 00 	mov	r12,-56320
800024ea:	f0 1f 00 0a 	mcall	80002510 <CAN2515ByteRead+0x6c>
800024ee:	1b b7       	ld.ub	r7,sp[0x3]
800024f0:	0c 9c       	mov	r12,r6
800024f2:	f0 1f 00 09 	mcall	80002514 <CAN2515ByteRead+0x70>
800024f6:	0e 9c       	mov	r12,r7
800024f8:	2f fd       	sub	sp,-4
800024fa:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
800024fe:	00 00       	add	r0,r0
80002500:	80 00       	ld.sh	r0,r0[0x0]
80002502:	20 dc       	sub	r12,13
80002504:	80 00       	ld.sh	r0,r0[0x0]
80002506:	21 74       	sub	r4,23
80002508:	80 00       	ld.sh	r0,r0[0x0]
8000250a:	35 86       	mov	r6,88
8000250c:	80 00       	ld.sh	r0,r0[0x0]
8000250e:	35 a2       	mov	r2,90
80002510:	80 00       	ld.sh	r0,r0[0x0]
80002512:	35 aa       	mov	r10,90
80002514:	80 00       	ld.sh	r0,r0[0x0]
80002516:	21 fc       	sub	r12,31

80002518 <CANEnable>:
80002518:	eb cd 40 80 	pushm	r7,lr
8000251c:	18 97       	mov	r7,r12
8000251e:	58 ab       	cp.w	r11,10
80002520:	c1 11       	brne	80002542 <CANEnable+0x2a>
80002522:	30 3a       	mov	r10,3
80002524:	32 ab       	mov	r11,42
80002526:	f0 1f 00 30 	mcall	800025e4 <CANEnable+0xcc>
8000252a:	e0 6a 00 ac 	mov	r10,172
8000252e:	32 9b       	mov	r11,41
80002530:	0e 9c       	mov	r12,r7
80002532:	f0 1f 00 2d 	mcall	800025e4 <CANEnable+0xcc>
80002536:	30 7a       	mov	r10,7
80002538:	32 8b       	mov	r11,40
8000253a:	0e 9c       	mov	r12,r7
8000253c:	f0 1f 00 2a 	mcall	800025e4 <CANEnable+0xcc>
80002540:	c3 68       	rjmp	800025ac <CANEnable+0x94>
80002542:	58 7b       	cp.w	r11,7
80002544:	c1 11       	brne	80002566 <CANEnable+0x4e>
80002546:	30 1a       	mov	r10,1
80002548:	32 ab       	mov	r11,42
8000254a:	f0 1f 00 27 	mcall	800025e4 <CANEnable+0xcc>
8000254e:	e0 6a 00 ac 	mov	r10,172
80002552:	32 9b       	mov	r11,41
80002554:	0e 9c       	mov	r12,r7
80002556:	f0 1f 00 24 	mcall	800025e4 <CANEnable+0xcc>
8000255a:	30 7a       	mov	r10,7
8000255c:	32 8b       	mov	r11,40
8000255e:	0e 9c       	mov	r12,r7
80002560:	f0 1f 00 21 	mcall	800025e4 <CANEnable+0xcc>
80002564:	c2 48       	rjmp	800025ac <CANEnable+0x94>
80002566:	58 5b       	cp.w	r11,5
80002568:	c1 11       	brne	8000258a <CANEnable+0x72>
8000256a:	30 0a       	mov	r10,0
8000256c:	32 ab       	mov	r11,42
8000256e:	f0 1f 00 1e 	mcall	800025e4 <CANEnable+0xcc>
80002572:	e0 6a 00 ac 	mov	r10,172
80002576:	32 9b       	mov	r11,41
80002578:	0e 9c       	mov	r12,r7
8000257a:	f0 1f 00 1b 	mcall	800025e4 <CANEnable+0xcc>
8000257e:	30 7a       	mov	r10,7
80002580:	32 8b       	mov	r11,40
80002582:	0e 9c       	mov	r12,r7
80002584:	f0 1f 00 18 	mcall	800025e4 <CANEnable+0xcc>
80002588:	c1 28       	rjmp	800025ac <CANEnable+0x94>
8000258a:	58 1b       	cp.w	r11,1
8000258c:	c1 01       	brne	800025ac <CANEnable+0x94>
8000258e:	30 0a       	mov	r10,0
80002590:	32 ab       	mov	r11,42
80002592:	f0 1f 00 15 	mcall	800025e4 <CANEnable+0xcc>
80002596:	e0 6a 00 91 	mov	r10,145
8000259a:	32 9b       	mov	r11,41
8000259c:	0e 9c       	mov	r12,r7
8000259e:	f0 1f 00 12 	mcall	800025e4 <CANEnable+0xcc>
800025a2:	30 3a       	mov	r10,3
800025a4:	32 8b       	mov	r11,40
800025a6:	0e 9c       	mov	r12,r7
800025a8:	f0 1f 00 0f 	mcall	800025e4 <CANEnable+0xcc>
800025ac:	30 3a       	mov	r10,3
800025ae:	32 bb       	mov	r11,43
800025b0:	0e 9c       	mov	r12,r7
800025b2:	f0 1f 00 0d 	mcall	800025e4 <CANEnable+0xcc>
800025b6:	30 4a       	mov	r10,4
800025b8:	30 fb       	mov	r11,15
800025ba:	0e 9c       	mov	r12,r7
800025bc:	f0 1f 00 0a 	mcall	800025e4 <CANEnable+0xcc>
800025c0:	30 eb       	mov	r11,14
800025c2:	0e 9c       	mov	r12,r7
800025c4:	f0 1f 00 09 	mcall	800025e8 <CANEnable+0xd0>
800025c8:	30 eb       	mov	r11,14
800025ca:	0e 9c       	mov	r12,r7
800025cc:	f0 1f 00 07 	mcall	800025e8 <CANEnable+0xd0>
800025d0:	e2 1c 00 e0 	andl	r12,0xe0,COH
800025d4:	c0 60       	breq	800025e0 <CANEnable+0xc8>
800025d6:	30 4a       	mov	r10,4
800025d8:	30 fb       	mov	r11,15
800025da:	0e 9c       	mov	r12,r7
800025dc:	f0 1f 00 02 	mcall	800025e4 <CANEnable+0xcc>
800025e0:	e3 cd 80 80 	ldm	sp++,r7,pc
800025e4:	80 00       	ld.sh	r0,r0[0x0]
800025e6:	22 10       	sub	r0,33
800025e8:	80 00       	ld.sh	r0,r0[0x0]
800025ea:	24 a4       	sub	r4,74

800025ec <InitializeCANExtended>:
800025ec:	d4 21       	pushm	r4-r7,lr
800025ee:	18 97       	mov	r7,r12
800025f0:	16 94       	mov	r4,r11
800025f2:	14 95       	mov	r5,r10
800025f4:	12 96       	mov	r6,r9
800025f6:	f0 1f 00 0f 	mcall	80002630 <InitializeCANExtended+0x44>
800025fa:	34 0a       	mov	r10,64
800025fc:	36 0b       	mov	r11,96
800025fe:	0e 9c       	mov	r12,r7
80002600:	f0 1f 00 0d 	mcall	80002634 <InitializeCANExtended+0x48>
80002604:	34 0a       	mov	r10,64
80002606:	37 0b       	mov	r11,112
80002608:	0e 9c       	mov	r12,r7
8000260a:	f0 1f 00 0b 	mcall	80002634 <InitializeCANExtended+0x48>
8000260e:	0c 9a       	mov	r10,r6
80002610:	0a 9b       	mov	r11,r5
80002612:	0e 9c       	mov	r12,r7
80002614:	f0 1f 00 09 	mcall	80002638 <InitializeCANExtended+0x4c>
80002618:	ec ca ff f8 	sub	r10,r6,-8
8000261c:	0a 9b       	mov	r11,r5
8000261e:	0e 9c       	mov	r12,r7
80002620:	f0 1f 00 07 	mcall	8000263c <InitializeCANExtended+0x50>
80002624:	08 9b       	mov	r11,r4
80002626:	0e 9c       	mov	r12,r7
80002628:	f0 1f 00 06 	mcall	80002640 <InitializeCANExtended+0x54>
8000262c:	d8 22       	popm	r4-r7,pc
8000262e:	00 00       	add	r0,r0
80002630:	80 00       	ld.sh	r0,r0[0x0]
80002632:	24 74       	sub	r4,71
80002634:	80 00       	ld.sh	r0,r0[0x0]
80002636:	22 10       	sub	r0,33
80002638:	80 00       	ld.sh	r0,r0[0x0]
8000263a:	23 a4       	sub	r4,58
8000263c:	80 00       	ld.sh	r0,r0[0x0]
8000263e:	22 50       	sub	r0,37
80002640:	80 00       	ld.sh	r0,r0[0x0]
80002642:	25 18       	sub	r8,81

80002644 <CANSendMsg>:
80002644:	eb cd 40 fe 	pushm	r1-r7,lr
80002648:	18 96       	mov	r6,r12
8000264a:	16 93       	mov	r3,r11
8000264c:	14 94       	mov	r4,r10
8000264e:	12 92       	mov	r2,r9
80002650:	10 91       	mov	r1,r8
80002652:	30 07       	mov	r7,0
80002654:	33 05       	mov	r5,48
80002656:	c1 78       	rjmp	80002684 <CANSendMsg+0x40>
80002658:	e1 b8 00 42 	mfsr	r8,0x108
8000265c:	f0 ca d1 20 	sub	r10,r8,-12000
80002660:	e1 b9 00 42 	mfsr	r9,0x108
80002664:	14 38       	cp.w	r8,r10
80002666:	e0 88 00 08 	brls	80002676 <CANSendMsg+0x32>
8000266a:	12 38       	cp.w	r8,r9
8000266c:	fe 98 ff fa 	brls	80002660 <CANSendMsg+0x1c>
80002670:	12 3a       	cp.w	r10,r9
80002672:	c7 63       	brcs	8000275e <CANSendMsg+0x11a>
80002674:	cf 6b       	rjmp	80002660 <CANSendMsg+0x1c>
80002676:	12 38       	cp.w	r8,r9
80002678:	e0 8b 00 73 	brhi	8000275e <CANSendMsg+0x11a>
8000267c:	12 3a       	cp.w	r10,r9
8000267e:	c7 03       	brcs	8000275e <CANSendMsg+0x11a>
80002680:	cf 0b       	rjmp	80002660 <CANSendMsg+0x1c>
80002682:	2f f7       	sub	r7,-1
80002684:	0a 9b       	mov	r11,r5
80002686:	0c 9c       	mov	r12,r6
80002688:	f0 1f 00 38 	mcall	80002768 <CANSendMsg+0x124>
8000268c:	e2 1c 00 08 	andl	r12,0x8,COH
80002690:	ce 41       	brne	80002658 <CANSendMsg+0x14>
80002692:	e6 08 16 0b 	lsr	r8,r3,0xb
80002696:	c1 01       	brne	800026b6 <CANSendMsg+0x72>
80002698:	f5 d3 c0 68 	bfextu	r10,r3,0x3,0x8
8000269c:	33 1b       	mov	r11,49
8000269e:	0c 9c       	mov	r12,r6
800026a0:	f0 1f 00 33 	mcall	8000276c <CANSendMsg+0x128>
800026a4:	e6 0a 15 05 	lsl	r10,r3,0x5
800026a8:	e2 1a 00 e0 	andl	r10,0xe0,COH
800026ac:	33 2b       	mov	r11,50
800026ae:	0c 9c       	mov	r12,r6
800026b0:	f0 1f 00 2f 	mcall	8000276c <CANSendMsg+0x128>
800026b4:	c2 18       	rjmp	800026f6 <CANSendMsg+0xb2>
800026b6:	f5 d3 c2 a8 	bfextu	r10,r3,0x15,0x8
800026ba:	33 1b       	mov	r11,49
800026bc:	0c 9c       	mov	r12,r6
800026be:	f0 1f 00 2c 	mcall	8000276c <CANSendMsg+0x128>
800026c2:	e6 08 16 0d 	lsr	r8,r3,0xd
800026c6:	f5 d3 c2 02 	bfextu	r10,r3,0x10,0x2
800026ca:	e2 18 00 e0 	andl	r8,0xe0,COH
800026ce:	10 4a       	or	r10,r8
800026d0:	a3 ba       	sbr	r10,0x3
800026d2:	e2 1a 00 eb 	andl	r10,0xeb,COH
800026d6:	33 2b       	mov	r11,50
800026d8:	0c 9c       	mov	r12,r6
800026da:	f0 1f 00 25 	mcall	8000276c <CANSendMsg+0x128>
800026de:	f5 d3 c1 08 	bfextu	r10,r3,0x8,0x8
800026e2:	33 3b       	mov	r11,51
800026e4:	0c 9c       	mov	r12,r6
800026e6:	f0 1f 00 22 	mcall	8000276c <CANSendMsg+0x128>
800026ea:	f5 d3 c0 08 	bfextu	r10,r3,0x0,0x8
800026ee:	33 4b       	mov	r11,52
800026f0:	0c 9c       	mov	r12,r6
800026f2:	f0 1f 00 1f 	mcall	8000276c <CANSendMsg+0x128>
800026f6:	30 85       	mov	r5,8
800026f8:	ea 02 18 00 	cp.b	r2,r5
800026fc:	e4 05 17 80 	movls	r5,r2
80002700:	f9 b5 0b 08 	movhi	r5,8
80002704:	e0 41 00 52 	cp.w	r1,82
80002708:	c1 01       	brne	80002728 <CANSendMsg+0xe4>
8000270a:	a7 a5       	sbr	r5,0x6
8000270c:	5c 55       	castu.b	r5
8000270e:	0a 9a       	mov	r10,r5
80002710:	33 5b       	mov	r11,53
80002712:	0c 9c       	mov	r12,r6
80002714:	f0 1f 00 16 	mcall	8000276c <CANSendMsg+0x128>
80002718:	30 4b       	mov	r11,4
8000271a:	31 1c       	mov	r12,17
8000271c:	f0 1f 00 15 	mcall	80002770 <CANSendMsg+0x12c>
80002720:	49 5c       	lddpc	r12,80002774 <CANSendMsg+0x130>
80002722:	f0 1f 00 16 	mcall	80002778 <CANSendMsg+0x134>
80002726:	c0 68       	rjmp	80002732 <CANSendMsg+0xee>
80002728:	0a 9a       	mov	r10,r5
8000272a:	33 5b       	mov	r11,53
8000272c:	0c 9c       	mov	r12,r6
8000272e:	f0 1f 00 10 	mcall	8000276c <CANSendMsg+0x128>
80002732:	58 05       	cp.w	r5,0
80002734:	e0 8a 00 0e 	brle	80002750 <CANSendMsg+0x10c>
80002738:	30 07       	mov	r7,0
8000273a:	0e 9b       	mov	r11,r7
8000273c:	2c ab       	sub	r11,-54
8000273e:	e8 07 07 0a 	ld.ub	r10,r4[r7]
80002742:	5c 5b       	castu.b	r11
80002744:	0c 9c       	mov	r12,r6
80002746:	f0 1f 00 0a 	mcall	8000276c <CANSendMsg+0x128>
8000274a:	2f f7       	sub	r7,-1
8000274c:	0a 37       	cp.w	r7,r5
8000274e:	cf 65       	brlt	8000273a <CANSendMsg+0xf6>
80002750:	30 8a       	mov	r10,8
80002752:	33 0b       	mov	r11,48
80002754:	0c 9c       	mov	r12,r6
80002756:	f0 1f 00 06 	mcall	8000276c <CANSendMsg+0x128>
8000275a:	e3 cf 90 fe 	ldm	sp++,r1-r7,pc,r12=1
8000275e:	e0 47 00 64 	cp.w	r7,100
80002762:	c9 01       	brne	80002682 <CANSendMsg+0x3e>
80002764:	e3 cf 80 fe 	ldm	sp++,r1-r7,pc,r12=0
80002768:	80 00       	ld.sh	r0,r0[0x0]
8000276a:	24 a4       	sub	r4,74
8000276c:	80 00       	ld.sh	r0,r0[0x0]
8000276e:	22 10       	sub	r0,33
80002770:	80 00       	ld.sh	r0,r0[0x0]
80002772:	2e 30       	sub	r0,-29
80002774:	80 00       	ld.sh	r0,r0[0x0]
80002776:	92 74       	ld.sh	r4,r9[0xe]
80002778:	80 00       	ld.sh	r0,r0[0x0]
8000277a:	2d 98       	sub	r8,-39

8000277c <CANGetMsg>:
8000277c:	d4 31       	pushm	r0-r7,lr
8000277e:	18 95       	mov	r5,r12
80002780:	16 92       	mov	r2,r11
80002782:	14 93       	mov	r3,r10
80002784:	12 94       	mov	r4,r9
80002786:	f0 1f 00 55 	mcall	800028d8 <CANGetMsg+0x15c>
8000278a:	f9 dc c0 02 	bfextu	r12,r12,0x0,0x2
8000278e:	e0 80 00 a3 	breq	800028d4 <CANGetMsg+0x158>
80002792:	58 1c       	cp.w	r12,1
80002794:	c0 31       	brne	8000279a <CANGetMsg+0x1e>
80002796:	36 16       	mov	r6,97
80002798:	c0 58       	rjmp	800027a2 <CANGetMsg+0x26>
8000279a:	58 2c       	cp.w	r12,2
8000279c:	e0 81 00 9c 	brne	800028d4 <CANGetMsg+0x158>
800027a0:	37 16       	mov	r6,113
800027a2:	0c 9b       	mov	r11,r6
800027a4:	0a 9c       	mov	r12,r5
800027a6:	f0 1f 00 4e 	mcall	800028dc <CANGetMsg+0x160>
800027aa:	18 91       	mov	r1,r12
800027ac:	ec cb ff ff 	sub	r11,r6,-1
800027b0:	5c 5b       	castu.b	r11
800027b2:	0a 9c       	mov	r12,r5
800027b4:	f0 1f 00 4a 	mcall	800028dc <CANGetMsg+0x160>
800027b8:	18 97       	mov	r7,r12
800027ba:	ec cb ff fe 	sub	r11,r6,-2
800027be:	5c 5b       	castu.b	r11
800027c0:	0a 9c       	mov	r12,r5
800027c2:	f0 1f 00 47 	mcall	800028dc <CANGetMsg+0x160>
800027c6:	18 90       	mov	r0,r12
800027c8:	ec cb ff fd 	sub	r11,r6,-3
800027cc:	5c 5b       	castu.b	r11
800027ce:	0a 9c       	mov	r12,r5
800027d0:	f0 1f 00 43 	mcall	800028dc <CANGetMsg+0x160>
800027d4:	f1 d7 c0 68 	bfextu	r8,r7,0x3,0x8
800027d8:	f3 d8 c0 01 	bfextu	r9,r8,0x0,0x1
800027dc:	c0 d1       	brne	800027f6 <CANGetMsg+0x7a>
800027de:	ef d7 c0 a8 	bfextu	r7,r7,0x5,0x8
800027e2:	ef e1 10 31 	or	r1,r7,r1<<0x3
800027e6:	85 01       	st.w	r2[0x0],r1
800027e8:	30 1c       	mov	r12,1
800027ea:	f0 1f 00 3e 	mcall	800028e0 <CANGetMsg+0x164>
800027ee:	30 2c       	mov	r12,2
800027f0:	f0 1f 00 3d 	mcall	800028e4 <CANGetMsg+0x168>
800027f4:	c1 48       	rjmp	8000281c <CANGetMsg+0xa0>
800027f6:	a9 60       	lsl	r0,0x8
800027f8:	e1 e1 11 51 	or	r1,r0,r1<<0x15
800027fc:	e3 ec 10 0c 	or	r12,r1,r12
80002800:	e2 18 00 1c 	andl	r8,0x1c,COH
80002804:	ef d7 c0 02 	bfextu	r7,r7,0x0,0x2
80002808:	0e 48       	or	r8,r7
8000280a:	f9 e8 11 0c 	or	r12,r12,r8<<0x10
8000280e:	85 0c       	st.w	r2[0x0],r12
80002810:	30 2c       	mov	r12,2
80002812:	f0 1f 00 34 	mcall	800028e0 <CANGetMsg+0x164>
80002816:	30 1c       	mov	r12,1
80002818:	f0 1f 00 33 	mcall	800028e4 <CANGetMsg+0x168>
8000281c:	ec cb ff fc 	sub	r11,r6,-4
80002820:	5c 5b       	castu.b	r11
80002822:	0a 9c       	mov	r12,r5
80002824:	f0 1f 00 2e 	mcall	800028dc <CANGetMsg+0x160>
80002828:	f9 dc c0 04 	bfextu	r12,r12,0x0,0x4
8000282c:	a8 8c       	st.b	r4[0x0],r12
8000282e:	30 88       	mov	r8,8
80002830:	f0 0c 18 00 	cp.b	r12,r8
80002834:	e0 88 00 07 	brls	80002842 <CANGetMsg+0xc6>
80002838:	a8 88       	st.b	r4[0x0],r8
8000283a:	2f b6       	sub	r6,-5
8000283c:	5c 56       	castu.b	r6
8000283e:	30 07       	mov	r7,0
80002840:	c0 58       	rjmp	8000284a <CANGetMsg+0xce>
80002842:	58 0c       	cp.w	r12,0
80002844:	fe 99 ff fb 	brgt	8000283a <CANGetMsg+0xbe>
80002848:	c0 e8       	rjmp	80002864 <CANGetMsg+0xe8>
8000284a:	0c 9b       	mov	r11,r6
8000284c:	0a 9c       	mov	r12,r5
8000284e:	f0 1f 00 24 	mcall	800028dc <CANGetMsg+0x160>
80002852:	e6 07 0b 0c 	st.b	r3[r7],r12
80002856:	2f f7       	sub	r7,-1
80002858:	2f f6       	sub	r6,-1
8000285a:	5c 56       	castu.b	r6
8000285c:	09 88       	ld.ub	r8,r4[0x0]
8000285e:	0e 38       	cp.w	r8,r7
80002860:	fe 99 ff f5 	brgt	8000284a <CANGetMsg+0xce>
80002864:	30 4c       	mov	r12,4
80002866:	f0 1f 00 20 	mcall	800028e4 <CANGetMsg+0x168>
8000286a:	36 0b       	mov	r11,96
8000286c:	0a 9c       	mov	r12,r5
8000286e:	f0 1f 00 1c 	mcall	800028dc <CANGetMsg+0x160>
80002872:	e2 1c 00 08 	andl	r12,0x8,COH
80002876:	c0 81       	brne	80002886 <CANGetMsg+0x10a>
80002878:	37 0b       	mov	r11,112
8000287a:	0a 9c       	mov	r12,r5
8000287c:	f0 1f 00 18 	mcall	800028dc <CANGetMsg+0x160>
80002880:	e2 1c 00 08 	andl	r12,0x8,COH
80002884:	c1 d0       	breq	800028be <CANGetMsg+0x142>
80002886:	64 08       	ld.w	r8,r2[0x0]
80002888:	58 18       	cp.w	r8,1
8000288a:	c1 a1       	brne	800028be <CANGetMsg+0x142>
8000288c:	30 08       	mov	r8,0
8000288e:	a6 88       	st.b	r3[0x0],r8
80002890:	30 18       	mov	r8,1
80002892:	a6 98       	st.b	r3[0x1],r8
80002894:	30 28       	mov	r8,2
80002896:	a6 a8       	st.b	r3[0x2],r8
80002898:	30 38       	mov	r8,3
8000289a:	a6 b8       	st.b	r3[0x3],r8
8000289c:	30 08       	mov	r8,0
8000289e:	30 49       	mov	r9,4
800028a0:	06 9a       	mov	r10,r3
800028a2:	64 0b       	ld.w	r11,r2[0x0]
800028a4:	0a 9c       	mov	r12,r5
800028a6:	f0 1f 00 11 	mcall	800028e8 <CANGetMsg+0x16c>
800028aa:	30 4b       	mov	r11,4
800028ac:	31 1c       	mov	r12,17
800028ae:	f0 1f 00 10 	mcall	800028ec <CANGetMsg+0x170>
800028b2:	49 0c       	lddpc	r12,800028f0 <CANGetMsg+0x174>
800028b4:	f0 1f 00 10 	mcall	800028f4 <CANGetMsg+0x178>
800028b8:	30 4c       	mov	r12,4
800028ba:	f0 1f 00 0a 	mcall	800028e0 <CANGetMsg+0x164>
800028be:	30 0a       	mov	r10,0
800028c0:	32 cb       	mov	r11,44
800028c2:	14 9c       	mov	r12,r10
800028c4:	f0 1f 00 0d 	mcall	800028f8 <CANGetMsg+0x17c>
800028c8:	30 0a       	mov	r10,0
800028ca:	32 cb       	mov	r11,44
800028cc:	14 9c       	mov	r12,r10
800028ce:	f0 1f 00 0b 	mcall	800028f8 <CANGetMsg+0x17c>
800028d2:	da 3a       	popm	r0-r7,pc,r12=1
800028d4:	d8 3a       	popm	r0-r7,pc,r12=0
800028d6:	00 00       	add	r0,r0
800028d8:	80 00       	ld.sh	r0,r0[0x0]
800028da:	21 84       	sub	r4,24
800028dc:	80 00       	ld.sh	r0,r0[0x0]
800028de:	24 a4       	sub	r4,74
800028e0:	80 00       	ld.sh	r0,r0[0x0]
800028e2:	2c 04       	sub	r4,-64
800028e4:	80 00       	ld.sh	r0,r0[0x0]
800028e6:	2c 54       	sub	r4,-59
800028e8:	80 00       	ld.sh	r0,r0[0x0]
800028ea:	26 44       	sub	r4,100
800028ec:	80 00       	ld.sh	r0,r0[0x0]
800028ee:	2e 30       	sub	r0,-29
800028f0:	80 00       	ld.sh	r0,r0[0x0]
800028f2:	92 74       	ld.sh	r4,r9[0xe]
800028f4:	80 00       	ld.sh	r0,r0[0x0]
800028f6:	2d 98       	sub	r8,-39
800028f8:	80 00       	ld.sh	r0,r0[0x0]
800028fa:	22 10       	sub	r0,33

800028fc <main>:
UINT32 Ident;

UINT32 readPot, readLight, readTemp;
UINT16 potMSB, potLSB, lightMSB, lightLSB, tempMSB, tempLSB;

int main(void) {
800028fc:	d4 31       	pushm	r0-r7,lr
800028fe:	20 3d       	sub	sp,12
	
	//spidatareadpointer=&spidataread;
	pm_switch_to_osc0(&AVR32_PM, FOSC0, OSC0_STARTUP);
80002900:	30 3a       	mov	r10,3
80002902:	e0 6b 1b 00 	mov	r11,6912
80002906:	ea 1b 00 b7 	orh	r11,0xb7
8000290a:	fe 7c 0c 00 	mov	r12,-62464
8000290e:	f0 1f 00 96 	mcall	80002b64 <main+0x268>
	
	// Configures the MCP2515 SPI communication.
	config_SPI_SPARE();
80002912:	f0 1f 00 96 	mcall	80002b68 <main+0x26c>

	// Enables receive interrupts.
	Disable_global_interrupt();
80002916:	d3 03       	ssrf	0x10
	INTC_init_interrupts();
80002918:	f0 1f 00 95 	mcall	80002b6c <main+0x270>
	Enable_global_interrupt();
8000291c:	d5 03       	csrf	0x10
	
	// Delay to let the Oscillator get started
	delay_init( FOSC0 );
	
	// Initializes the display
	config_dpi204();
8000291e:	f0 1f 00 95 	mcall	80002b70 <main+0x274>
	dip204_init(100,1);
80002922:	30 1b       	mov	r11,1
80002924:	36 4c       	mov	r12,100
80002926:	f0 1f 00 94 	mcall	80002b74 <main+0x278>
	dip204_clear_display();
8000292a:	f0 1f 00 94 	mcall	80002b78 <main+0x27c>
	
	UINT16 Mask = 0xFFFF; 
	UINT16 flt = 0x1200;
	UINT16 Flt[] = {flt,flt,flt,flt,flt,flt};
8000292e:	e0 68 12 00 	mov	r8,4608
80002932:	ba 08       	st.h	sp[0x0],r8
80002934:	ba 18       	st.h	sp[0x2],r8
80002936:	ba 28       	st.h	sp[0x4],r8
80002938:	ba 38       	st.h	sp[0x6],r8
8000293a:	ba 48       	st.h	sp[0x8],r8
8000293c:	ba 58       	st.h	sp[0xa],r8
	InitializeCANExtended(0, CAN_250kbps, Mask, Flt);
8000293e:	1a 99       	mov	r9,sp
80002940:	e0 6a ff ff 	mov	r10,65535
80002944:	30 7b       	mov	r11,7
80002946:	30 0c       	mov	r12,0
80002948:	f0 1f 00 8d 	mcall	80002b7c <main+0x280>
	
	adc_enable( &AVR32_ADC, ADC_POTENTIOMETER_CHANNEL );
8000294c:	30 1b       	mov	r11,1
8000294e:	fe 7c 3c 00 	mov	r12,-50176
80002952:	f0 1f 00 8c 	mcall	80002b80 <main+0x284>

	while(1){
		
		adc_start(&AVR32_ADC);
80002956:	fe 75 3c 00 	mov	r5,-50176
		//Clear memory contents
		ClearMessages(msg);
8000295a:	fe f7 02 2a 	ld.w	r7,pc[554]
		//Read any message available
		if(CANRxReady(0)){
8000295e:	30 06       	mov	r6,0
			if( CANGetMsg(0, &Ident, msg, &mSize )) // Gets message and returns //TRUE if message received.
80002960:	fe f2 02 28 	ld.w	r2,pc[552]
80002964:	fe f3 02 28 	ld.w	r3,pc[552]
	
	adc_enable( &AVR32_ADC, ADC_POTENTIOMETER_CHANNEL );

	while(1){
		
		adc_start(&AVR32_ADC);
80002968:	0a 9c       	mov	r12,r5
8000296a:	f0 1f 00 8a 	mcall	80002b90 <main+0x294>
		//Clear memory contents
		ClearMessages(msg);
8000296e:	0e 9c       	mov	r12,r7
80002970:	f0 1f 00 89 	mcall	80002b94 <main+0x298>
		//Read any message available
		if(CANRxReady(0)){
80002974:	0c 9c       	mov	r12,r6
80002976:	f0 1f 00 89 	mcall	80002b98 <main+0x29c>
8000297a:	e0 80 00 ab 	breq	80002ad0 <main+0x1d4>
			if( CANGetMsg(0, &Ident, msg, &mSize )) // Gets message and returns //TRUE if message received.
8000297e:	04 99       	mov	r9,r2
80002980:	0e 9a       	mov	r10,r7
80002982:	06 9b       	mov	r11,r3
80002984:	0c 9c       	mov	r12,r6
80002986:	f0 1f 00 86 	mcall	80002b9c <main+0x2a0>
8000298a:	e0 80 00 a3 	breq	80002ad0 <main+0x1d4>
			{	
					// Read light, 2 MSB msg[2], 8 LSB msg[3]
					light = (((UINT16)msg[2]) << 8 ) | msg[3];
8000298e:	0f a9       	ld.ub	r9,r7[0x2]
80002990:	0f b8       	ld.ub	r8,r7[0x3]
80002992:	f1 e9 10 88 	or	r8,r8,r9<<0x8
80002996:	fe fc 02 0a 	ld.w	r12,pc[522]
8000299a:	b8 08       	st.h	r12[0x0],r8
					
					// Read temp, 2 MSB msg[0], 8 LSB msg[1]
					temper = ((UINT16)msg[0] << 8) | msg[1];
8000299c:	0f 8a       	ld.ub	r10,r7[0x0]
8000299e:	0f 99       	ld.ub	r9,r7[0x1]
800029a0:	f3 ea 10 89 	or	r9,r9,r10<<0x8
800029a4:	fe fa 02 00 	ld.w	r10,pc[512]
800029a8:	b4 09       	st.h	r10[0x0],r9
					
					//Calculate percentages
					lightPro = (100*light)/divid;
800029aa:	f7 d8 c0 10 	bfextu	r11,r8,0x0,0x10
800029ae:	f6 0b 10 64 	mul	r11,r11,100
800029b2:	4f ec       	lddpc	r12,80002ba8 <main+0x2ac>
800029b4:	98 88       	ld.uh	r8,r12[0x0]
800029b6:	f6 08 0c 0a 	divs	r10,r11,r8
800029ba:	4f dc       	lddpc	r12,80002bac <main+0x2b0>
800029bc:	b8 0a       	st.h	r12[0x0],r10
					temperPro = (100*temper)/divid;
800029be:	4f d1       	lddpc	r1,80002bb0 <main+0x2b4>
800029c0:	f7 d9 c0 10 	bfextu	r11,r9,0x0,0x10
800029c4:	f6 0b 10 64 	mul	r11,r11,100
800029c8:	f6 08 0c 0a 	divs	r10,r11,r8
800029cc:	a2 0a       	st.h	r1[0x0],r10
					potPro = (100*msg[5])/divid;
800029ce:	4f a0       	lddpc	r0,80002bb4 <main+0x2b8>
800029d0:	0f d9       	ld.ub	r9,r7[0x5]
800029d2:	f2 09 10 64 	mul	r9,r9,100
800029d6:	f2 08 0c 08 	divs	r8,r9,r8
800029da:	a0 08       	st.h	r0[0x0],r8
					
					
					dip204_clear_display();
800029dc:	f0 1f 00 67 	mcall	80002b78 <main+0x27c>
					dip204_set_cursor_position(1, 1);
800029e0:	30 1b       	mov	r11,1
800029e2:	16 9c       	mov	r12,r11
800029e4:	f0 1f 00 75 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("Rx ID:");
800029e8:	4f 5c       	lddpc	r12,80002bbc <main+0x2c0>
800029ea:	f0 1f 00 76 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(1, 2);
800029ee:	30 2b       	mov	r11,2
800029f0:	30 1c       	mov	r12,1
800029f2:	f0 1f 00 72 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("Temp:");
800029f6:	4f 4c       	lddpc	r12,80002bc4 <main+0x2c8>
800029f8:	f0 1f 00 72 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(1, 3);
800029fc:	30 3b       	mov	r11,3
800029fe:	30 1c       	mov	r12,1
80002a00:	f0 1f 00 6e 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("Light:");
80002a04:	4f 1c       	lddpc	r12,80002bc8 <main+0x2cc>
80002a06:	f0 1f 00 6f 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(1, 4);
80002a0a:	30 4b       	mov	r11,4
80002a0c:	30 1c       	mov	r12,1
80002a0e:	f0 1f 00 6b 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("Pot:");
80002a12:	4e fc       	lddpc	r12,80002bcc <main+0x2d0>
80002a14:	f0 1f 00 6b 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(12, 2);
80002a18:	30 2b       	mov	r11,2
80002a1a:	30 cc       	mov	r12,12
80002a1c:	f0 1f 00 67 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("Abs:");
80002a20:	4e c4       	lddpc	r4,80002bd0 <main+0x2d4>
80002a22:	08 9c       	mov	r12,r4
80002a24:	f0 1f 00 67 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(12, 3);
80002a28:	30 3b       	mov	r11,3
80002a2a:	30 cc       	mov	r12,12
80002a2c:	f0 1f 00 63 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("Abs:");
80002a30:	08 9c       	mov	r12,r4
80002a32:	f0 1f 00 64 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(12, 4);
80002a36:	30 4b       	mov	r11,4
80002a38:	30 cc       	mov	r12,12
80002a3a:	f0 1f 00 60 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("Abs:");
80002a3e:	08 9c       	mov	r12,r4
80002a40:	f0 1f 00 60 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(8, 1);
80002a44:	30 1b       	mov	r11,1
80002a46:	30 8c       	mov	r12,8
80002a48:	f0 1f 00 5c 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("%x", Ident);
80002a4c:	66 08       	ld.w	r8,r3[0x0]
80002a4e:	1a d8       	st.w	--sp,r8
80002a50:	4e 1c       	lddpc	r12,80002bd4 <main+0x2d8>
80002a52:	f0 1f 00 5c 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(8, 2);
80002a56:	30 2b       	mov	r11,2
80002a58:	30 8c       	mov	r12,8
80002a5a:	f0 1f 00 58 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("%d", temperPro);
80002a5e:	4d f4       	lddpc	r4,80002bd8 <main+0x2dc>
80002a60:	82 88       	ld.uh	r8,r1[0x0]
80002a62:	1a d8       	st.w	--sp,r8
80002a64:	08 9c       	mov	r12,r4
80002a66:	f0 1f 00 57 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(8, 3);
80002a6a:	30 3b       	mov	r11,3
80002a6c:	30 8c       	mov	r12,8
80002a6e:	f0 1f 00 53 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("%d", lightPro);
80002a72:	4c fa       	lddpc	r10,80002bac <main+0x2b0>
80002a74:	94 88       	ld.uh	r8,r10[0x0]
80002a76:	1a d8       	st.w	--sp,r8
80002a78:	08 9c       	mov	r12,r4
80002a7a:	f0 1f 00 52 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(8, 4);
80002a7e:	30 4b       	mov	r11,4
80002a80:	30 8c       	mov	r12,8
80002a82:	f0 1f 00 4e 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("%d", potPro);
80002a86:	80 88       	ld.uh	r8,r0[0x0]
80002a88:	1a d8       	st.w	--sp,r8
80002a8a:	08 9c       	mov	r12,r4
80002a8c:	f0 1f 00 4d 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(17, 2);
80002a90:	30 2b       	mov	r11,2
80002a92:	31 1c       	mov	r12,17
80002a94:	f0 1f 00 49 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("%d", temper);
80002a98:	4c 39       	lddpc	r9,80002ba4 <main+0x2a8>
80002a9a:	92 88       	ld.uh	r8,r9[0x0]
80002a9c:	1a d8       	st.w	--sp,r8
80002a9e:	08 9c       	mov	r12,r4
80002aa0:	f0 1f 00 48 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(17, 3);
80002aa4:	30 3b       	mov	r11,3
80002aa6:	31 1c       	mov	r12,17
80002aa8:	f0 1f 00 44 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("%d", light);
80002aac:	4b dc       	lddpc	r12,80002ba0 <main+0x2a4>
80002aae:	98 88       	ld.uh	r8,r12[0x0]
80002ab0:	1a d8       	st.w	--sp,r8
80002ab2:	08 9c       	mov	r12,r4
80002ab4:	f0 1f 00 43 	mcall	80002bc0 <main+0x2c4>
					dip204_set_cursor_position(17, 4);
80002ab8:	30 4b       	mov	r11,4
80002aba:	31 1c       	mov	r12,17
80002abc:	f0 1f 00 3f 	mcall	80002bb8 <main+0x2bc>
					dip204_printf_string("%d", msg[5]);
80002ac0:	0f d8       	ld.ub	r8,r7[0x5]
80002ac2:	1a d8       	st.w	--sp,r8
80002ac4:	08 9c       	mov	r12,r4
80002ac6:	f0 1f 00 3f 	mcall	80002bc0 <main+0x2c4>
					dip204_hide_cursor();
80002aca:	f0 1f 00 45 	mcall	80002bdc <main+0x2e0>
80002ace:	2f 9d       	sub	sp,-28
			}
			
		}
		
		if(CANTxReady(0))
80002ad0:	0c 9c       	mov	r12,r6
80002ad2:	f0 1f 00 44 	mcall	80002be0 <main+0x2e4>
80002ad6:	fe 90 ff 49 	breq	80002968 <main+0x6c>
		{
			//Reading ADC channels
			readLight = adc_get_value(&AVR32_ADC, ADC_LIGHT_CHANNEL);
80002ada:	30 2b       	mov	r11,2
80002adc:	0a 9c       	mov	r12,r5
80002ade:	f0 1f 00 42 	mcall	80002be4 <main+0x2e8>
80002ae2:	4c 24       	lddpc	r4,80002be8 <main+0x2ec>
80002ae4:	89 0c       	st.w	r4[0x0],r12
			readTemp = adc_get_value(&AVR32_ADC, ADC_TEMPERATURE_CHANNEL);
80002ae6:	0c 9b       	mov	r11,r6
80002ae8:	0a 9c       	mov	r12,r5
80002aea:	f0 1f 00 3f 	mcall	80002be4 <main+0x2e8>
80002aee:	4c 08       	lddpc	r8,80002bec <main+0x2f0>
80002af0:	91 0c       	st.w	r8[0x0],r12
			
			//Setting MSB and LSB for the ADC channels, to be able to send over CAN			
			lightMSB = (readLight >> 8) & 0x00000003;
80002af2:	68 08       	ld.w	r8,r4[0x0]
80002af4:	f3 d8 c1 02 	bfextu	r9,r8,0x8,0x2
80002af8:	4b ea       	lddpc	r10,80002bf0 <main+0x2f4>
80002afa:	b4 09       	st.h	r10[0x0],r9
			lightLSB = readLight & 0x000000FF;
80002afc:	4b ea       	lddpc	r10,80002bf4 <main+0x2f8>
80002afe:	b4 08       	st.h	r10[0x0],r8
			
			tempMSB = (readTemp >> 8) & 0x00000003;
80002b00:	f5 dc c1 02 	bfextu	r10,r12,0x8,0x2
80002b04:	4b db       	lddpc	r11,80002bf8 <main+0x2fc>
80002b06:	b6 0a       	st.h	r11[0x0],r10
			tempLSB = readTemp & 0x000000FF;
80002b08:	4b db       	lddpc	r11,80002bfc <main+0x300>
80002b0a:	b6 0c       	st.h	r11[0x0],r12
			
			
			msg[0] = tempMSB;
80002b0c:	ae 8a       	st.b	r7[0x0],r10
			msg[1] = tempLSB;
80002b0e:	ae 9c       	st.b	r7[0x1],r12
			msg[2] = lightMSB;
80002b10:	ae a9       	st.b	r7[0x2],r9
			msg[3] = lightLSB;
80002b12:	ae b8       	st.b	r7[0x3],r8
			msg[4] = 0;
80002b14:	30 08       	mov	r8,0
80002b16:	ae c8       	st.b	r7[0x4],r8
			msg[5] = 0;
80002b18:	ae d8       	st.b	r7[0x5],r8
			msg[6] = 0;
80002b1a:	ae e8       	st.b	r7[0x6],r8
			msg[7] = 0;
80002b1c:	ae f8       	st.b	r7[0x7],r8
			
			CANSendMsg(0, 0x120E, msg, 8, 0);
80002b1e:	0c 98       	mov	r8,r6
80002b20:	30 89       	mov	r9,8
80002b22:	0e 9a       	mov	r10,r7
80002b24:	e0 6b 12 0e 	mov	r11,4622
80002b28:	0c 9c       	mov	r12,r6
80002b2a:	f0 1f 00 36 	mcall	80002c00 <main+0x304>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002b2e:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002b32:	e0 6a 1b 00 	mov	r10,6912
80002b36:	ea 1a 00 b7 	orh	r10,0xb7
80002b3a:	f0 0a 00 0a 	add	r10,r8,r10
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002b3e:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002b42:	14 38       	cp.w	r8,r10
80002b44:	e0 88 00 09 	brls	80002b56 <main+0x25a>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002b48:	12 38       	cp.w	r8,r9
80002b4a:	fe 98 ff fa 	brls	80002b3e <main+0x242>
80002b4e:	12 3a       	cp.w	r10,r9
80002b50:	fe 93 ff 0c 	brlo	80002968 <main+0x6c>
80002b54:	cf 5b       	rjmp	80002b3e <main+0x242>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002b56:	12 38       	cp.w	r8,r9
80002b58:	fe 9b ff 08 	brhi	80002968 <main+0x6c>
80002b5c:	12 3a       	cp.w	r10,r9
80002b5e:	fe 93 ff 05 	brlo	80002968 <main+0x6c>
80002b62:	ce eb       	rjmp	80002b3e <main+0x242>
80002b64:	80 00       	ld.sh	r0,r0[0x0]
80002b66:	33 18       	mov	r8,49
80002b68:	80 00       	ld.sh	r0,r0[0x0]
80002b6a:	20 f0       	sub	r0,15
80002b6c:	80 00       	ld.sh	r0,r0[0x0]
80002b6e:	32 00       	mov	r0,32
80002b70:	80 00       	ld.sh	r0,r0[0x0]
80002b72:	20 64       	sub	r4,6
80002b74:	80 00       	ld.sh	r0,r0[0x0]
80002b76:	2f 18       	sub	r8,-15
80002b78:	80 00       	ld.sh	r0,r0[0x0]
80002b7a:	2e bc       	sub	r12,-21
80002b7c:	80 00       	ld.sh	r0,r0[0x0]
80002b7e:	25 ec       	sub	r12,94
80002b80:	80 00       	ld.sh	r0,r0[0x0]
80002b82:	20 0e       	sub	lr,0
80002b84:	00 00       	add	r0,r0
80002b86:	06 70       	tst	r0,r3
80002b88:	00 00       	add	r0,r0
80002b8a:	06 7c       	tst	r12,r3
80002b8c:	00 00       	add	r0,r0
80002b8e:	06 88       	andn	r8,r3
80002b90:	80 00       	ld.sh	r0,r0[0x0]
80002b92:	20 08       	sub	r8,0
80002b94:	80 00       	ld.sh	r0,r0[0x0]
80002b96:	20 50       	sub	r0,5
80002b98:	80 00       	ld.sh	r0,r0[0x0]
80002b9a:	21 d4       	sub	r4,29
80002b9c:	80 00       	ld.sh	r0,r0[0x0]
80002b9e:	27 7c       	sub	r12,119
80002ba0:	00 00       	add	r0,r0
80002ba2:	06 78       	tst	r8,r3
80002ba4:	00 00       	add	r0,r0
80002ba6:	06 68       	and	r8,r3
80002ba8:	00 00       	add	r0,r0
80002baa:	00 08       	add	r8,r0
80002bac:	00 00       	add	r0,r0
80002bae:	06 8c       	andn	r12,r3
80002bb0:	00 00       	add	r0,r0
80002bb2:	06 60       	and	r0,r3
80002bb4:	00 00       	add	r0,r0
80002bb6:	06 92       	mov	r2,r3
80002bb8:	80 00       	ld.sh	r0,r0[0x0]
80002bba:	2e 30       	sub	r0,-29
80002bbc:	80 00       	ld.sh	r0,r0[0x0]
80002bbe:	92 7c       	ld.sh	r12,r9[0xe]
80002bc0:	80 00       	ld.sh	r0,r0[0x0]
80002bc2:	2d 98       	sub	r8,-39
80002bc4:	80 00       	ld.sh	r0,r0[0x0]
80002bc6:	92 84       	ld.uh	r4,r9[0x0]
80002bc8:	80 00       	ld.sh	r0,r0[0x0]
80002bca:	92 8c       	ld.uh	r12,r9[0x0]
80002bcc:	80 00       	ld.sh	r0,r0[0x0]
80002bce:	92 94       	ld.uh	r4,r9[0x2]
80002bd0:	80 00       	ld.sh	r0,r0[0x0]
80002bd2:	92 9c       	ld.uh	r12,r9[0x2]
80002bd4:	80 00       	ld.sh	r0,r0[0x0]
80002bd6:	92 60       	ld.sh	r0,r9[0xc]
80002bd8:	80 00       	ld.sh	r0,r0[0x0]
80002bda:	92 a4       	ld.uh	r4,r9[0x4]
80002bdc:	80 00       	ld.sh	r0,r0[0x0]
80002bde:	2e 8c       	sub	r12,-24
80002be0:	80 00       	ld.sh	r0,r0[0x0]
80002be2:	21 e8       	sub	r8,30
80002be4:	80 00       	ld.sh	r0,r0[0x0]
80002be6:	20 28       	sub	r8,2
80002be8:	00 00       	add	r0,r0
80002bea:	06 6c       	and	r12,r3
80002bec:	00 00       	add	r0,r0
80002bee:	06 80       	andn	r0,r3
80002bf0:	00 00       	add	r0,r0
80002bf2:	06 86       	andn	r6,r3
80002bf4:	00 00       	add	r0,r0
80002bf6:	06 90       	mov	r0,r3
80002bf8:	00 00       	add	r0,r0
80002bfa:	06 7a       	tst	r10,r3
80002bfc:	00 00       	add	r0,r0
80002bfe:	06 8e       	andn	lr,r3
80002c00:	80 00       	ld.sh	r0,r0[0x0]
80002c02:	26 44       	sub	r4,100

80002c04 <LED_On>:
  tLED_DESCRIPTOR *led_descriptor = &LED_DESCRIPTOR[0] - 1;
  volatile avr32_gpio_port_t *led_gpio_port;
  U8 led_shift;

  // Make sure only existing LEDs are specified.
  leds &= (1 << LED_COUNT) - 1;
80002c04:	f9 dc c0 08 	bfextu	r12,r12,0x0,0x8

  // Update the saved state of all LEDs with the requested changes.
  Set_bits(LED_State, leds);
80002c08:	49 18       	lddpc	r8,80002c4c <LED_On+0x48>
80002c0a:	70 09       	ld.w	r9,r8[0x0]
80002c0c:	f9 e9 10 09 	or	r9,r12,r9
80002c10:	91 09       	st.w	r8[0x0],r9

  // While there are specified LEDs left to manage...
  while (leds)
80002c12:	58 0c       	cp.w	r12,0
80002c14:	5e 0c       	reteq	r12
80002c16:	48 f8       	lddpc	r8,80002c50 <LED_On+0x4c>
80002c18:	21 08       	sub	r8,16
  {
    // Select the next specified LED and turn it on.
    led_shift = 1 + ctz(leds);
80002c1a:	18 9a       	mov	r10,r12
80002c1c:	5c 9a       	brev	r10
80002c1e:	f4 0a 12 00 	clz	r10,r10
80002c22:	2f fa       	sub	r10,-1
    led_descriptor += led_shift;
80002c24:	f4 09 15 04 	lsl	r9,r10,0x4
80002c28:	12 08       	add	r8,r9
    led_gpio_port = &AVR32_GPIO.port[led_descriptor->GPIO.PORT];
80002c2a:	70 09       	ld.w	r9,r8[0x0]
80002c2c:	a9 69       	lsl	r9,0x8
80002c2e:	e0 29 f0 00 	sub	r9,61440
    led_gpio_port->ovrc  = led_descriptor->GPIO.PIN_MASK;
80002c32:	70 1b       	ld.w	r11,r8[0x4]
80002c34:	f3 4b 00 58 	st.w	r9[88],r11
    led_gpio_port->oders = led_descriptor->GPIO.PIN_MASK;
80002c38:	70 1b       	ld.w	r11,r8[0x4]
80002c3a:	f3 4b 00 44 	st.w	r9[68],r11
    led_gpio_port->gpers = led_descriptor->GPIO.PIN_MASK;
80002c3e:	70 1b       	ld.w	r11,r8[0x4]
80002c40:	93 1b       	st.w	r9[0x4],r11
    leds >>= led_shift;
80002c42:	f8 0a 0a 4c 	lsr	r12,r12,r10

  // Update the saved state of all LEDs with the requested changes.
  Set_bits(LED_State, leds);

  // While there are specified LEDs left to manage...
  while (leds)
80002c46:	ce a1       	brne	80002c1a <LED_On+0x16>
80002c48:	5e fc       	retal	r12
80002c4a:	00 00       	add	r0,r0
80002c4c:	00 00       	add	r0,r0
80002c4e:	00 0c       	add	r12,r0
80002c50:	80 00       	ld.sh	r0,r0[0x0]
80002c52:	92 a8       	ld.uh	r8,r9[0x4]

80002c54 <LED_Off>:
  tLED_DESCRIPTOR *led_descriptor = &LED_DESCRIPTOR[0] - 1;
  volatile avr32_gpio_port_t *led_gpio_port;
  U8 led_shift;

  // Make sure only existing LEDs are specified.
  leds &= (1 << LED_COUNT) - 1;
80002c54:	f9 dc c0 08 	bfextu	r12,r12,0x0,0x8

  // Update the saved state of all LEDs with the requested changes.
  Clr_bits(LED_State, leds);
80002c58:	49 28       	lddpc	r8,80002ca0 <LED_Off+0x4c>
80002c5a:	70 09       	ld.w	r9,r8[0x0]
80002c5c:	f8 0a 11 ff 	rsub	r10,r12,-1
80002c60:	f5 e9 00 09 	and	r9,r10,r9
80002c64:	91 09       	st.w	r8[0x0],r9

  // While there are specified LEDs left to manage...
  while (leds)
80002c66:	58 0c       	cp.w	r12,0
80002c68:	5e 0c       	reteq	r12
80002c6a:	48 f8       	lddpc	r8,80002ca4 <LED_Off+0x50>
80002c6c:	21 08       	sub	r8,16
  {
    // Select the next specified LED and turn it off.
    led_shift = 1 + ctz(leds);
80002c6e:	18 9a       	mov	r10,r12
80002c70:	5c 9a       	brev	r10
80002c72:	f4 0a 12 00 	clz	r10,r10
80002c76:	2f fa       	sub	r10,-1
    led_descriptor += led_shift;
80002c78:	f4 09 15 04 	lsl	r9,r10,0x4
80002c7c:	12 08       	add	r8,r9
    led_gpio_port = &AVR32_GPIO.port[led_descriptor->GPIO.PORT];
80002c7e:	70 09       	ld.w	r9,r8[0x0]
80002c80:	a9 69       	lsl	r9,0x8
80002c82:	e0 29 f0 00 	sub	r9,61440
    led_gpio_port->ovrs  = led_descriptor->GPIO.PIN_MASK;
80002c86:	70 1b       	ld.w	r11,r8[0x4]
80002c88:	f3 4b 00 54 	st.w	r9[84],r11
    led_gpio_port->oders = led_descriptor->GPIO.PIN_MASK;
80002c8c:	70 1b       	ld.w	r11,r8[0x4]
80002c8e:	f3 4b 00 44 	st.w	r9[68],r11
    led_gpio_port->gpers = led_descriptor->GPIO.PIN_MASK;
80002c92:	70 1b       	ld.w	r11,r8[0x4]
80002c94:	93 1b       	st.w	r9[0x4],r11
    leds >>= led_shift;
80002c96:	f8 0a 0a 4c 	lsr	r12,r12,r10

  // Update the saved state of all LEDs with the requested changes.
  Clr_bits(LED_State, leds);

  // While there are specified LEDs left to manage...
  while (leds)
80002c9a:	ce a1       	brne	80002c6e <LED_Off+0x1a>
80002c9c:	5e fc       	retal	r12
80002c9e:	00 00       	add	r0,r0
80002ca0:	00 00       	add	r0,r0
80002ca2:	00 0c       	add	r12,r0
80002ca4:	80 00       	ld.sh	r0,r0[0x0]
80002ca6:	92 a8       	ld.uh	r8,r9[0x4]

80002ca8 <dip204_select>:

/*! \brief function to select the LCD
 *
 */
static void dip204_select(void)
{
80002ca8:	d4 01       	pushm	lr
  spi_selectChip(DIP204_SPI, DIP204_SPI_NPCS);
80002caa:	30 2b       	mov	r11,2
80002cac:	fe 7c 28 00 	mov	r12,-55296
80002cb0:	f0 1f 00 02 	mcall	80002cb8 <dip204_select+0x10>
}
80002cb4:	d8 02       	popm	pc
80002cb6:	00 00       	add	r0,r0
80002cb8:	80 00       	ld.sh	r0,r0[0x0]
80002cba:	34 56       	mov	r6,69

80002cbc <dip204_write_byte>:
 *
 *  \param  byte  Input. byte to write to the LCD (D7 .. D0)
 *
 */
static void dip204_write_byte(unsigned char byte)
{
80002cbc:	eb cd 40 80 	pushm	r7,lr
  unsigned char reverse;

  switch (byte)
80002cc0:	f8 c8 ff f8 	sub	r8,r12,-8
80002cc4:	30 69       	mov	r9,6
80002cc6:	f2 08 18 00 	cp.b	r8,r9
80002cca:	e0 8b 00 0f 	brhi	80002ce8 <dip204_write_byte+0x2c>
80002cce:	30 19       	mov	r9,1
80002cd0:	f2 08 09 48 	lsl	r8,r9,r8
80002cd4:	e2 18 00 55 	andl	r8,0x55,COH
80002cd8:	c0 80       	breq	80002ce8 <dip204_write_byte+0x2c>
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, byte);
80002cda:	18 9b       	mov	r11,r12
80002cdc:	fe 7c 28 00 	mov	r12,-55296
80002ce0:	f0 1f 00 0c 	mcall	80002d10 <dip204_write_byte+0x54>
      Assert( SPI_OK==spi_status );
      break;
80002ce4:	e3 cd 80 80 	ldm	sp++,r7,pc
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002ce8:	5c 9c       	brev	r12
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
80002cea:	f8 07 16 18 	lsr	r7,r12,0x18
80002cee:	0e 9b       	mov	r11,r7
80002cf0:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002cf4:	fe 7c 28 00 	mov	r12,-55296
80002cf8:	f0 1f 00 06 	mcall	80002d10 <dip204_write_byte+0x54>
      Assert( SPI_OK==spi_status );
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
80002cfc:	ee 0b 15 04 	lsl	r11,r7,0x4
80002d00:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002d04:	fe 7c 28 00 	mov	r12,-55296
80002d08:	f0 1f 00 02 	mcall	80002d10 <dip204_write_byte+0x54>
80002d0c:	e3 cd 80 80 	ldm	sp++,r7,pc
80002d10:	80 00       	ld.sh	r0,r0[0x0]
80002d12:	35 86       	mov	r6,88

80002d14 <dip204_read_byte>:
 *
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
80002d14:	eb cd 40 c0 	pushm	r6-r7,lr
80002d18:	20 1d       	sub	sp,4
80002d1a:	18 96       	mov	r6,r12
  unsigned short reverse = 0x00;
80002d1c:	fa c7 ff fc 	sub	r7,sp,-4
80002d20:	30 08       	mov	r8,0
80002d22:	0e e8       	st.h	--r7,r8

  /* dummy write */
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_write(DIP204_SPI, 0x00);
80002d24:	30 0b       	mov	r11,0
80002d26:	fe 7c 28 00 	mov	r12,-55296
80002d2a:	f0 1f 00 08 	mcall	80002d48 <dip204_read_byte+0x34>
  Assert( SPI_OK==spi_status );
  /* read RSR register */
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_read(DIP204_SPI, &reverse);
80002d2e:	0e 9b       	mov	r11,r7
80002d30:	fe 7c 28 00 	mov	r12,-55296
80002d34:	f0 1f 00 06 	mcall	80002d4c <dip204_read_byte+0x38>
  Assert( SPI_OK==spi_status );
  /* Revert received byte (issued LSB first by the LCD) */
  *byte = bit_reverse8(reverse);
80002d38:	1b b8       	ld.ub	r8,sp[0x3]
80002d3a:	5c 98       	brev	r8
80002d3c:	b9 88       	lsr	r8,0x18
80002d3e:	ac 88       	st.b	r6[0x0],r8
}
80002d40:	2f fd       	sub	sp,-4
80002d42:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002d46:	00 00       	add	r0,r0
80002d48:	80 00       	ld.sh	r0,r0[0x0]
80002d4a:	35 86       	mov	r6,88
80002d4c:	80 00       	ld.sh	r0,r0[0x0]
80002d4e:	35 aa       	mov	r10,90

80002d50 <dip204_wait_busy>:

/*! \brief function to wait for LCD becomes not busy
 *
 */
static void dip204_wait_busy(void)
{
80002d50:	eb cd 40 c0 	pushm	r6-r7,lr
80002d54:	20 1d       	sub	sp,4
  unsigned char status = 0x00;
80002d56:	fa c7 ff fc 	sub	r7,sp,-4
80002d5a:	30 08       	mov	r8,0
80002d5c:	0e f8       	st.b	--r7,r8

  /* send read command to LCD */
  dip204_write_byte(DIP204_READ_COMMAND);
80002d5e:	e0 6c 00 fc 	mov	r12,252
80002d62:	f0 1f 00 07 	mcall	80002d7c <dip204_wait_busy+0x2c>
  /* read next byte */
  do {
  dip204_read_byte(&status);
  /* keep D7 to know status */
  }while (status & 0x80);
80002d66:	30 06       	mov	r6,0

  /* send read command to LCD */
  dip204_write_byte(DIP204_READ_COMMAND);
  /* read next byte */
  do {
  dip204_read_byte(&status);
80002d68:	0e 9c       	mov	r12,r7
80002d6a:	f0 1f 00 06 	mcall	80002d80 <dip204_wait_busy+0x30>
  /* keep D7 to know status */
  }while (status & 0x80);
80002d6e:	1b b8       	ld.ub	r8,sp[0x3]
80002d70:	ec 08 18 00 	cp.b	r8,r6
80002d74:	cf a5       	brlt	80002d68 <dip204_wait_busy+0x18>
}
80002d76:	2f fd       	sub	sp,-4
80002d78:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002d7c:	80 00       	ld.sh	r0,r0[0x0]
80002d7e:	2c bc       	sub	r12,-53
80002d80:	80 00       	ld.sh	r0,r0[0x0]
80002d82:	2d 14       	sub	r4,-47

80002d84 <dip204_unselect>:

/*! \brief function to unselect the LCD
 *
 */
static void dip204_unselect(void)
{
80002d84:	d4 01       	pushm	lr
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_unselectChip(DIP204_SPI, DIP204_SPI_NPCS);
80002d86:	30 2b       	mov	r11,2
80002d88:	fe 7c 28 00 	mov	r12,-55296
80002d8c:	f0 1f 00 02 	mcall	80002d94 <dip204_unselect+0x10>
  Assert( SPI_OK==spi_status );
}
80002d90:	d8 02       	popm	pc
80002d92:	00 00       	add	r0,r0
80002d94:	80 00       	ld.sh	r0,r0[0x0]
80002d96:	34 a2       	mov	r2,74

80002d98 <dip204_printf_string>:
  dip204_unselect();
}


void dip204_printf_string(const char *format, ...)
{
80002d98:	d4 21       	pushm	r4-r7,lr
80002d9a:	20 6d       	sub	sp,24
  va_list arg;
  char string[21];
  unsigned char i=0;

  va_start(arg, format);
  i = vsprintf(string, format, arg);
80002d9c:	fa ca ff d4 	sub	r10,sp,-44
80002da0:	18 9b       	mov	r11,r12
80002da2:	1a 9c       	mov	r12,sp
80002da4:	f0 1f 00 1e 	mcall	80002e1c <dip204_printf_string+0x84>
80002da8:	5c 5c       	castu.b	r12
  while (i < sizeof(string) - 1) string[i++] = '\0';
80002daa:	31 38       	mov	r8,19
80002dac:	f0 0c 18 00 	cp.b	r12,r8
80002db0:	e0 8b 00 0e 	brhi	80002dcc <dip204_printf_string+0x34>
80002db4:	30 0a       	mov	r10,0
80002db6:	31 49       	mov	r9,20
80002db8:	fa c8 ff e8 	sub	r8,sp,-24
80002dbc:	18 08       	add	r8,r12
80002dbe:	f1 6a ff e8 	st.b	r8[-24],r10
80002dc2:	2f fc       	sub	r12,-1
80002dc4:	5c 5c       	castu.b	r12
80002dc6:	f2 0c 18 00 	cp.b	r12,r9
80002dca:	cf 71       	brne	80002db8 <dip204_printf_string+0x20>
  va_end(arg);
  dip204_select();
80002dcc:	f0 1f 00 15 	mcall	80002e20 <dip204_printf_string+0x88>
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002dd0:	30 08       	mov	r8,0
80002dd2:	1b 89       	ld.ub	r9,sp[0x0]
80002dd4:	f0 09 18 00 	cp.b	r9,r8
80002dd8:	c1 e0       	breq	80002e14 <dip204_printf_string+0x7c>
80002dda:	30 06       	mov	r6,0
80002ddc:	0c 97       	mov	r7,r6
  {
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
80002dde:	e0 64 00 fa 	mov	r4,250
  while (i < sizeof(string) - 1) string[i++] = '\0';
  va_end(arg);
  dip204_select();
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002de2:	10 95       	mov	r5,r8
  {
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
80002de4:	08 9c       	mov	r12,r4
80002de6:	f0 1f 00 10 	mcall	80002e24 <dip204_printf_string+0x8c>
    /* Send byte */
    dip204_write_byte(string[i]);
80002dea:	fa c8 ff e8 	sub	r8,sp,-24
80002dee:	f0 06 00 06 	add	r6,r8,r6
80002df2:	ed 3c ff e8 	ld.ub	r12,r6[-24]
80002df6:	f0 1f 00 0c 	mcall	80002e24 <dip204_printf_string+0x8c>
    /* go to next char */
    i++;
80002dfa:	2f f7       	sub	r7,-1
80002dfc:	5c 57       	castu.b	r7
    dip204_wait_busy();
80002dfe:	f0 1f 00 0b 	mcall	80002e28 <dip204_printf_string+0x90>
  while (i < sizeof(string) - 1) string[i++] = '\0';
  va_end(arg);
  dip204_select();
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002e02:	0e 96       	mov	r6,r7
80002e04:	fa c8 ff e8 	sub	r8,sp,-24
80002e08:	0e 08       	add	r8,r7
80002e0a:	f1 38 ff e8 	ld.ub	r8,r8[-24]
80002e0e:	ea 08 18 00 	cp.b	r8,r5
80002e12:	ce 91       	brne	80002de4 <dip204_printf_string+0x4c>
    dip204_write_byte(string[i]);
    /* go to next char */
    i++;
    dip204_wait_busy();
  }
  dip204_unselect();
80002e14:	f0 1f 00 06 	mcall	80002e2c <dip204_printf_string+0x94>
}
80002e18:	2f ad       	sub	sp,-24
80002e1a:	d8 22       	popm	r4-r7,pc
80002e1c:	80 00       	ld.sh	r0,r0[0x0]
80002e1e:	37 80       	mov	r0,120
80002e20:	80 00       	ld.sh	r0,r0[0x0]
80002e22:	2c a8       	sub	r8,-54
80002e24:	80 00       	ld.sh	r0,r0[0x0]
80002e26:	2c bc       	sub	r12,-53
80002e28:	80 00       	ld.sh	r0,r0[0x0]
80002e2a:	2d 50       	sub	r0,-43
80002e2c:	80 00       	ld.sh	r0,r0[0x0]
80002e2e:	2d 84       	sub	r4,-40

80002e30 <dip204_set_cursor_position>:
  dip204_set_cursor_position(column, line);
}


void dip204_set_cursor_position(unsigned char column, unsigned char line)
{
80002e30:	eb cd 40 c0 	pushm	r6-r7,lr
80002e34:	18 96       	mov	r6,r12
80002e36:	16 97       	mov	r7,r11
  unsigned char address = 0;

  dip204_select();
80002e38:	f0 1f 00 11 	mcall	80002e7c <dip204_set_cursor_position+0x4c>
  if ((column <= 20) && (line <= 4))
80002e3c:	31 48       	mov	r8,20
80002e3e:	f0 06 18 00 	cp.b	r6,r8
80002e42:	5f 89       	srls	r9
80002e44:	30 48       	mov	r8,4
80002e46:	f0 07 18 00 	cp.b	r7,r8
80002e4a:	5f 88       	srls	r8
80002e4c:	f3 e8 00 08 	and	r8,r9,r8
80002e50:	c0 31       	brne	80002e56 <dip204_set_cursor_position+0x26>
80002e52:	30 06       	mov	r6,0
80002e54:	c0 68       	rjmp	80002e60 <dip204_set_cursor_position+0x30>
  {
    /* Calculate DDRAM address from line and row values */
    address = ( (line-1) * 32 ) + ( column-1 ) + 128;
80002e56:	28 16       	sub	r6,-127
80002e58:	20 17       	sub	r7,1
80002e5a:	a5 77       	lsl	r7,0x5
80002e5c:	0e 06       	add	r6,r7
80002e5e:	5c 56       	castu.b	r6
  }
  /* Send Command Start Byte */
  dip204_write_byte(DIP204_WRITE_COMMAND);
80002e60:	e0 6c 00 f8 	mov	r12,248
80002e64:	f0 1f 00 07 	mcall	80002e80 <dip204_set_cursor_position+0x50>
  /* Send Address lower Nibble */
  dip204_write_byte(address);
80002e68:	0c 9c       	mov	r12,r6
80002e6a:	f0 1f 00 06 	mcall	80002e80 <dip204_set_cursor_position+0x50>
  dip204_wait_busy();
80002e6e:	f0 1f 00 06 	mcall	80002e84 <dip204_set_cursor_position+0x54>
  dip204_unselect();
80002e72:	f0 1f 00 06 	mcall	80002e88 <dip204_set_cursor_position+0x58>
}
80002e76:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002e7a:	00 00       	add	r0,r0
80002e7c:	80 00       	ld.sh	r0,r0[0x0]
80002e7e:	2c a8       	sub	r8,-54
80002e80:	80 00       	ld.sh	r0,r0[0x0]
80002e82:	2c bc       	sub	r12,-53
80002e84:	80 00       	ld.sh	r0,r0[0x0]
80002e86:	2d 50       	sub	r0,-43
80002e88:	80 00       	ld.sh	r0,r0[0x0]
80002e8a:	2d 84       	sub	r4,-40

80002e8c <dip204_hide_cursor>:
  dip204_unselect();
}


void dip204_hide_cursor(void)
{
80002e8c:	d4 01       	pushm	lr
  /* select the LCD chip */
  dip204_select();
80002e8e:	f0 1f 00 08 	mcall	80002eac <dip204_hide_cursor+0x20>
  /* Send Command Start Byte */
  dip204_write_byte(DIP204_WRITE_COMMAND);
80002e92:	e0 6c 00 f8 	mov	r12,248
80002e96:	f0 1f 00 07 	mcall	80002eb0 <dip204_hide_cursor+0x24>
  /* Send "Display On Command: Display On, Cursor On, Blink On" */
  dip204_write_byte(0x0C);
80002e9a:	30 cc       	mov	r12,12
80002e9c:	f0 1f 00 05 	mcall	80002eb0 <dip204_hide_cursor+0x24>
  dip204_wait_busy();
80002ea0:	f0 1f 00 05 	mcall	80002eb4 <dip204_hide_cursor+0x28>
  /* unselect chip */
  dip204_unselect();
80002ea4:	f0 1f 00 05 	mcall	80002eb8 <dip204_hide_cursor+0x2c>
}
80002ea8:	d8 02       	popm	pc
80002eaa:	00 00       	add	r0,r0
80002eac:	80 00       	ld.sh	r0,r0[0x0]
80002eae:	2c a8       	sub	r8,-54
80002eb0:	80 00       	ld.sh	r0,r0[0x0]
80002eb2:	2c bc       	sub	r12,-53
80002eb4:	80 00       	ld.sh	r0,r0[0x0]
80002eb6:	2d 50       	sub	r0,-43
80002eb8:	80 00       	ld.sh	r0,r0[0x0]
80002eba:	2d 84       	sub	r4,-40

80002ebc <dip204_clear_display>:
  dip204_unselect();
}


void dip204_clear_display(void)
{
80002ebc:	d4 01       	pushm	lr
  dip204_select();
80002ebe:	f0 1f 00 13 	mcall	80002f08 <dip204_clear_display+0x4c>
  /* Send Command Start Byte */
  dip204_write_byte(DIP204_WRITE_COMMAND);
80002ec2:	e0 6c 00 f8 	mov	r12,248
80002ec6:	f0 1f 00 12 	mcall	80002f0c <dip204_clear_display+0x50>
  /* Send Display Clear Command */
  dip204_write_byte(0x01);
80002eca:	30 1c       	mov	r12,1
80002ecc:	f0 1f 00 10 	mcall	80002f0c <dip204_clear_display+0x50>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002ed0:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002ed4:	e0 69 bb 80 	mov	r9,48000
80002ed8:	f0 09 00 0a 	add	r10,r8,r9
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002edc:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002ee0:	14 38       	cp.w	r8,r10
80002ee2:	e0 88 00 08 	brls	80002ef2 <dip204_clear_display+0x36>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002ee6:	12 38       	cp.w	r8,r9
80002ee8:	fe 98 ff fa 	brls	80002edc <dip204_clear_display+0x20>
80002eec:	12 3a       	cp.w	r10,r9
80002eee:	c0 73       	brcs	80002efc <dip204_clear_display+0x40>
80002ef0:	cf 6b       	rjmp	80002edc <dip204_clear_display+0x20>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002ef2:	12 38       	cp.w	r8,r9
80002ef4:	e0 8b 00 04 	brhi	80002efc <dip204_clear_display+0x40>
80002ef8:	12 3a       	cp.w	r10,r9
80002efa:	cf 12       	brcc	80002edc <dip204_clear_display+0x20>
  /* Wait for command execution */
  delay_ms(4);
  dip204_wait_busy();
80002efc:	f0 1f 00 05 	mcall	80002f10 <dip204_clear_display+0x54>
  dip204_unselect();
80002f00:	f0 1f 00 05 	mcall	80002f14 <dip204_clear_display+0x58>
}
80002f04:	d8 02       	popm	pc
80002f06:	00 00       	add	r0,r0
80002f08:	80 00       	ld.sh	r0,r0[0x0]
80002f0a:	2c a8       	sub	r8,-54
80002f0c:	80 00       	ld.sh	r0,r0[0x0]
80002f0e:	2c bc       	sub	r12,-53
80002f10:	80 00       	ld.sh	r0,r0[0x0]
80002f12:	2d 50       	sub	r0,-43
80002f14:	80 00       	ld.sh	r0,r0[0x0]
80002f16:	2d 84       	sub	r4,-40

80002f18 <dip204_init>:


/****************************** global functions *****************************/

void dip204_init(backlight_options option, bool backlight_on)
{
80002f18:	eb cd 40 80 	pushm	r7,lr
80002f1c:	20 4d       	sub	sp,16
80002f1e:	16 97       	mov	r7,r11
  pwm_opt_t pwm_opt;  // pwm option config

  if (option == backlight_PWM)
80002f20:	58 1c       	cp.w	r12,1
80002f22:	c3 01       	brne	80002f82 <dip204_init+0x6a>
  {
    channel_id = DIP204_PWM_CHANNEL;
80002f24:	30 69       	mov	r9,6
80002f26:	4f a8       	lddpc	r8,8000310c <dip204_init+0x1f4>
80002f28:	91 09       	st.w	r8[0x0],r9
    gpio_enable_module_pin(DIP204_PWM_PIN, DIP204_PWM_FUNCTION);
80002f2a:	30 2b       	mov	r11,2
80002f2c:	33 2c       	mov	r12,50
80002f2e:	f0 1f 00 79 	mcall	80003110 <dip204_init+0x1f8>

    // PWM controller configuration
    pwm_opt.diva=0;
80002f32:	30 08       	mov	r8,0
80002f34:	50 18       	stdsp	sp[0x4],r8
    pwm_opt.divb=0;
80002f36:	50 08       	stdsp	sp[0x0],r8
    pwm_opt.prea=0;
80002f38:	50 38       	stdsp	sp[0xc],r8
    pwm_opt.preb=0;
80002f3a:	50 28       	stdsp	sp[0x8],r8

    pwm_init(&pwm_opt);
80002f3c:	1a 9c       	mov	r12,sp
80002f3e:	f0 1f 00 76 	mcall	80003114 <dip204_init+0x1fc>
    pwm_duty = (backlight_on) ? DIP204_PERIOD_MAX - 1 : 1;
80002f42:	58 07       	cp.w	r7,0
80002f44:	f9 b7 01 31 	movne	r7,49
80002f48:	f9 b7 00 01 	moveq	r7,1
80002f4c:	4f 38       	lddpc	r8,80003118 <dip204_init+0x200>
80002f4e:	b0 07       	st.h	r8[0x0],r7
    pwm_channel.CMR.calg = PWM_MODE_LEFT_ALIGNED;   // channel mode
80002f50:	4f 3b       	lddpc	r11,8000311c <dip204_init+0x204>
80002f52:	76 08       	ld.w	r8,r11[0x0]
    pwm_channel.CMR.cpol = PWM_POLARITY_LOW;   // channel polarity
    pwm_channel.CMR.cpd = PWM_UPDATE_PERIOD;   // not used the first time
80002f54:	e0 18 fc ff 	andl	r8,0xfcff
    pwm_channel.CMR.cpre = AVR32_PWM_CPRE_MCK_DIV_256;   // channel prescaler
80002f58:	ab a8       	sbr	r8,0xa
80002f5a:	30 89       	mov	r9,8
80002f5c:	f1 d9 d0 04 	bfins	r8,r9,0x0,0x4
80002f60:	97 08       	st.w	r11[0x0],r8
    pwm_channel.cdty = pwm_duty;  // channel duty cycle, should be < CPRD
80002f62:	97 17       	st.w	r11[0x4],r7
    pwm_channel.cprd = DIP204_PERIOD_MAX;  // channel period
80002f64:	33 28       	mov	r8,50
80002f66:	97 28       	st.w	r11[0x8],r8
    pwm_channel.cupd = 0;  // channel update is not used here.
80002f68:	30 08       	mov	r8,0
80002f6a:	97 48       	st.w	r11[0x10],r8

    pwm_channel_init(channel_id, &pwm_channel);
80002f6c:	4e 87       	lddpc	r7,8000310c <dip204_init+0x1f4>
80002f6e:	6e 0c       	ld.w	r12,r7[0x0]
80002f70:	f0 1f 00 6c 	mcall	80003120 <dip204_init+0x208>
    // start PWM
    pwm_start_channels(1 << channel_id);
80002f74:	6e 08       	ld.w	r8,r7[0x0]
80002f76:	30 1c       	mov	r12,1
80002f78:	f8 08 09 4c 	lsl	r12,r12,r8
80002f7c:	f0 1f 00 6a 	mcall	80003124 <dip204_init+0x20c>
80002f80:	c0 a8       	rjmp	80002f94 <dip204_init+0x7c>
  }
  else
  {
    if (backlight_on)
80002f82:	58 0b       	cp.w	r11,0
80002f84:	c0 50       	breq	80002f8e <dip204_init+0x76>
    {
      gpio_clr_gpio_pin(DIP204_BACKLIGHT_PIN);
80002f86:	33 2c       	mov	r12,50
80002f88:	f0 1f 00 68 	mcall	80003128 <dip204_init+0x210>
80002f8c:	c0 48       	rjmp	80002f94 <dip204_init+0x7c>
    }
    else
    {
      gpio_set_gpio_pin(DIP204_BACKLIGHT_PIN);
80002f8e:	33 2c       	mov	r12,50
80002f90:	f0 1f 00 67 	mcall	8000312c <dip204_init+0x214>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002f94:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002f98:	e2 79 a9 80 	mov	r9,240000
80002f9c:	f0 09 00 0a 	add	r10,r8,r9
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002fa0:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002fa4:	14 38       	cp.w	r8,r10
80002fa6:	e0 88 00 08 	brls	80002fb6 <dip204_init+0x9e>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002faa:	12 38       	cp.w	r8,r9
80002fac:	fe 98 ff fa 	brls	80002fa0 <dip204_init+0x88>
80002fb0:	12 3a       	cp.w	r10,r9
80002fb2:	c6 e3       	brcs	8000308e <dip204_init+0x176>
80002fb4:	cf 6b       	rjmp	80002fa0 <dip204_init+0x88>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002fb6:	12 38       	cp.w	r8,r9
80002fb8:	e0 8b 00 6b 	brhi	8000308e <dip204_init+0x176>
80002fbc:	12 3a       	cp.w	r10,r9
80002fbe:	c6 83       	brcs	8000308e <dip204_init+0x176>
80002fc0:	cf 0b       	rjmp	80002fa0 <dip204_init+0x88>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002fc2:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002fc6:	14 38       	cp.w	r8,r10
80002fc8:	e0 88 00 08 	brls	80002fd8 <dip204_init+0xc0>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002fcc:	12 38       	cp.w	r8,r9
80002fce:	fe 98 ff fa 	brls	80002fc2 <dip204_init+0xaa>
80002fd2:	12 3a       	cp.w	r10,r9
80002fd4:	c6 b3       	brcs	800030aa <dip204_init+0x192>
80002fd6:	cf 6b       	rjmp	80002fc2 <dip204_init+0xaa>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002fd8:	12 38       	cp.w	r8,r9
80002fda:	e0 8b 00 68 	brhi	800030aa <dip204_init+0x192>
80002fde:	12 3a       	cp.w	r10,r9
80002fe0:	c6 53       	brcs	800030aa <dip204_init+0x192>
80002fe2:	cf 0b       	rjmp	80002fc2 <dip204_init+0xaa>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002fe4:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80002fe8:	14 38       	cp.w	r8,r10
80002fea:	e0 88 00 08 	brls	80002ffa <dip204_init+0xe2>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002fee:	12 38       	cp.w	r8,r9
80002ff0:	fe 98 ff fa 	brls	80002fe4 <dip204_init+0xcc>
80002ff4:	12 3a       	cp.w	r10,r9
80002ff6:	c6 23       	brcs	800030ba <dip204_init+0x1a2>
80002ff8:	cf 6b       	rjmp	80002fe4 <dip204_init+0xcc>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80002ffa:	12 38       	cp.w	r8,r9
80002ffc:	e0 8b 00 5f 	brhi	800030ba <dip204_init+0x1a2>
80003000:	12 3a       	cp.w	r10,r9
80003002:	c5 c3       	brcs	800030ba <dip204_init+0x1a2>
80003004:	cf 0b       	rjmp	80002fe4 <dip204_init+0xcc>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80003006:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
8000300a:	14 38       	cp.w	r8,r10
8000300c:	e0 88 00 08 	brls	8000301c <dip204_init+0x104>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80003010:	12 38       	cp.w	r8,r9
80003012:	fe 98 ff fa 	brls	80003006 <dip204_init+0xee>
80003016:	12 3a       	cp.w	r10,r9
80003018:	c5 93       	brcs	800030ca <dip204_init+0x1b2>
8000301a:	cf 6b       	rjmp	80003006 <dip204_init+0xee>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
8000301c:	12 38       	cp.w	r8,r9
8000301e:	e0 8b 00 56 	brhi	800030ca <dip204_init+0x1b2>
80003022:	12 3a       	cp.w	r10,r9
80003024:	c5 33       	brcs	800030ca <dip204_init+0x1b2>
80003026:	cf 0b       	rjmp	80003006 <dip204_init+0xee>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80003028:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
8000302c:	14 38       	cp.w	r8,r10
8000302e:	e0 88 00 08 	brls	8000303e <dip204_init+0x126>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80003032:	12 38       	cp.w	r8,r9
80003034:	fe 98 ff fa 	brls	80003028 <dip204_init+0x110>
80003038:	12 3a       	cp.w	r10,r9
8000303a:	c5 03       	brcs	800030da <dip204_init+0x1c2>
8000303c:	cf 6b       	rjmp	80003028 <dip204_init+0x110>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
8000303e:	12 38       	cp.w	r8,r9
80003040:	e0 8b 00 4d 	brhi	800030da <dip204_init+0x1c2>
80003044:	12 3a       	cp.w	r10,r9
80003046:	c4 a3       	brcs	800030da <dip204_init+0x1c2>
80003048:	cf 0b       	rjmp	80003028 <dip204_init+0x110>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
8000304a:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
8000304e:	14 38       	cp.w	r8,r10
80003050:	e0 88 00 08 	brls	80003060 <dip204_init+0x148>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80003054:	12 38       	cp.w	r8,r9
80003056:	fe 98 ff fa 	brls	8000304a <dip204_init+0x132>
8000305a:	12 3a       	cp.w	r10,r9
8000305c:	c4 93       	brcs	800030ee <dip204_init+0x1d6>
8000305e:	cf 6b       	rjmp	8000304a <dip204_init+0x132>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80003060:	12 38       	cp.w	r8,r9
80003062:	e0 8b 00 46 	brhi	800030ee <dip204_init+0x1d6>
80003066:	12 3a       	cp.w	r10,r9
80003068:	c4 33       	brcs	800030ee <dip204_init+0x1d6>
8000306a:	cf 0b       	rjmp	8000304a <dip204_init+0x132>
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
8000306c:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80003070:	14 38       	cp.w	r8,r10
80003072:	e0 88 00 08 	brls	80003082 <dip204_init+0x16a>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80003076:	12 38       	cp.w	r8,r9
80003078:	fe 98 ff fa 	brls	8000306c <dip204_init+0x154>
8000307c:	12 3a       	cp.w	r10,r9
8000307e:	c4 03       	brcs	800030fe <dip204_init+0x1e6>
80003080:	cf 6b       	rjmp	8000306c <dip204_init+0x154>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
80003082:	12 38       	cp.w	r8,r9
80003084:	e0 8b 00 3d 	brhi	800030fe <dip204_init+0x1e6>
80003088:	12 3a       	cp.w	r10,r9
8000308a:	c3 a3       	brcs	800030fe <dip204_init+0x1e6>
8000308c:	cf 0b       	rjmp	8000306c <dip204_init+0x154>
    }
  }
  // delay for power on
  delay_ms(20);
  // select the LCD chip
  dip204_select();
8000308e:	f0 1f 00 29 	mcall	80003130 <dip204_init+0x218>
  // Send Command Start Byte
  dip204_write_byte(DIP204_WRITE_COMMAND);
80003092:	e0 6c 00 f8 	mov	r12,248
80003096:	f0 1f 00 28 	mcall	80003134 <dip204_init+0x21c>
  // Send "extended Function Set" Command  (RE=1)
  dip204_write_byte(0x34);
8000309a:	33 4c       	mov	r12,52
8000309c:	f0 1f 00 26 	mcall	80003134 <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800030a0:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800030a4:	f0 ca d1 20 	sub	r10,r8,-12000
800030a8:	c8 db       	rjmp	80002fc2 <dip204_init+0xaa>
  // Wait for command execution
  delay_ms(1);
  // Send "Enter 4-Line Mode" Command
  dip204_write_byte(0x09);
800030aa:	30 9c       	mov	r12,9
800030ac:	f0 1f 00 22 	mcall	80003134 <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800030b0:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800030b4:	f0 ca d1 20 	sub	r10,r8,-12000
800030b8:	c9 6b       	rjmp	80002fe4 <dip204_init+0xcc>
  // Wait for command execution
  delay_ms(1);
  // Send "Function Set" Command (RE=0)
  dip204_write_byte(0x30);
800030ba:	33 0c       	mov	r12,48
800030bc:	f0 1f 00 1e 	mcall	80003134 <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800030c0:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800030c4:	f0 ca d1 20 	sub	r10,r8,-12000
800030c8:	c9 fb       	rjmp	80003006 <dip204_init+0xee>
  // Wait for command execution
  delay_ms(1);
  // Send "Display On Command: Display On, Cursor On, Blink On"
  dip204_write_byte(0x0F);
800030ca:	30 fc       	mov	r12,15
800030cc:	f0 1f 00 1a 	mcall	80003134 <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800030d0:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800030d4:	f0 ca d1 20 	sub	r10,r8,-12000
800030d8:	ca 8b       	rjmp	80003028 <dip204_init+0x110>
  // Wait for command execution
  delay_ms(1);
  // Send "Display Clear" Command
  dip204_write_byte(0x01);
800030da:	30 1c       	mov	r12,1
800030dc:	f0 1f 00 16 	mcall	80003134 <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800030e0:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800030e4:	e0 69 ea 60 	mov	r9,60000
800030e8:	f0 09 00 0a 	add	r10,r8,r9
800030ec:	ca fb       	rjmp	8000304a <dip204_init+0x132>
  // Wait for command execution
  delay_ms(5);
  // Send "Entry Mode Set Command: Increment Mode, Entire Shift off"
  dip204_write_byte(0x06);
800030ee:	30 6c       	mov	r12,6
800030f0:	f0 1f 00 11 	mcall	80003134 <dip204_init+0x21c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800030f4:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800030f8:	f0 ca d1 20 	sub	r10,r8,-12000
800030fc:	cb 8b       	rjmp	8000306c <dip204_init+0x154>
  // Wait for command execution
  delay_ms(1);
  dip204_wait_busy();
800030fe:	f0 1f 00 0f 	mcall	80003138 <dip204_init+0x220>
  // unselect chip
  dip204_unselect();
80003102:	f0 1f 00 0f 	mcall	8000313c <dip204_init+0x224>
}
80003106:	2f cd       	sub	sp,-16
80003108:	e3 cd 80 80 	ldm	sp++,r7,pc
8000310c:	00 00       	add	r0,r0
8000310e:	00 10       	sub	r0,r0
80003110:	80 00       	ld.sh	r0,r0[0x0]
80003112:	31 40       	mov	r0,20
80003114:	80 00       	ld.sh	r0,r0[0x0]
80003116:	33 8c       	mov	r12,56
80003118:	00 00       	add	r0,r0
8000311a:	05 38       	ld.ub	r8,r2++
8000311c:	00 00       	add	r0,r0
8000311e:	05 18       	ld.sh	r8,r2++
80003120:	80 00       	ld.sh	r0,r0[0x0]
80003122:	33 44       	mov	r4,52
80003124:	80 00       	ld.sh	r0,r0[0x0]
80003126:	33 7a       	mov	r10,55
80003128:	80 00       	ld.sh	r0,r0[0x0]
8000312a:	31 e0       	mov	r0,30
8000312c:	80 00       	ld.sh	r0,r0[0x0]
8000312e:	31 c4       	mov	r4,28
80003130:	80 00       	ld.sh	r0,r0[0x0]
80003132:	2c a8       	sub	r8,-54
80003134:	80 00       	ld.sh	r0,r0[0x0]
80003136:	2c bc       	sub	r12,-53
80003138:	80 00       	ld.sh	r0,r0[0x0]
8000313a:	2d 50       	sub	r0,-43
8000313c:	80 00       	ld.sh	r0,r0[0x0]
8000313e:	2d 84       	sub	r4,-40

80003140 <gpio_enable_module_pin>:
 *
 * \return \ref GPIO_SUCCESS or \ref GPIO_INVALID_ARGUMENT.
 */
uint32_t gpio_enable_module_pin(uint32_t pin, uint32_t function)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
80003140:	f8 08 16 05 	lsr	r8,r12,0x5
80003144:	a9 68       	lsl	r8,0x8
80003146:	e0 28 f0 00 	sub	r8,61440

	/* Enable the correct function. */
	switch (function) {
8000314a:	58 1b       	cp.w	r11,1
8000314c:	c0 d0       	breq	80003166 <gpio_enable_module_pin+0x26>
8000314e:	c0 63       	brcs	8000315a <gpio_enable_module_pin+0x1a>
80003150:	58 2b       	cp.w	r11,2
80003152:	c1 00       	breq	80003172 <gpio_enable_module_pin+0x32>
80003154:	58 3b       	cp.w	r11,3
80003156:	c1 40       	breq	8000317e <gpio_enable_module_pin+0x3e>
80003158:	5e ff       	retal	1
	case 0: /* A function. */
		gpio_port->pmr0c = 1 << (pin & 0x1F);
8000315a:	30 19       	mov	r9,1
8000315c:	f2 0c 09 49 	lsl	r9,r9,r12
80003160:	91 69       	st.w	r8[0x18],r9
		gpio_port->pmr1c = 1 << (pin & 0x1F);
80003162:	91 a9       	st.w	r8[0x28],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
80003164:	c1 28       	rjmp	80003188 <gpio_enable_module_pin+0x48>

	case 1: /* B function. */
		gpio_port->pmr0s = 1 << (pin & 0x1F);
80003166:	30 19       	mov	r9,1
80003168:	f2 0c 09 49 	lsl	r9,r9,r12
8000316c:	91 59       	st.w	r8[0x14],r9
		gpio_port->pmr1c = 1 << (pin & 0x1F);
8000316e:	91 a9       	st.w	r8[0x28],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
80003170:	c0 c8       	rjmp	80003188 <gpio_enable_module_pin+0x48>

	case 2: /* C function. */
		gpio_port->pmr0c = 1 << (pin & 0x1F);
80003172:	30 19       	mov	r9,1
80003174:	f2 0c 09 49 	lsl	r9,r9,r12
80003178:	91 69       	st.w	r8[0x18],r9
		gpio_port->pmr1s = 1 << (pin & 0x1F);
8000317a:	91 99       	st.w	r8[0x24],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
8000317c:	c0 68       	rjmp	80003188 <gpio_enable_module_pin+0x48>

	case 3: /* D function. */
		gpio_port->pmr0s = 1 << (pin & 0x1F);
8000317e:	30 19       	mov	r9,1
80003180:	f2 0c 09 49 	lsl	r9,r9,r12
80003184:	91 59       	st.w	r8[0x14],r9
		gpio_port->pmr1s = 1 << (pin & 0x1F);
80003186:	91 99       	st.w	r8[0x24],r9
	default:
		return GPIO_INVALID_ARGUMENT;
	}

	/* Disable GPIO control. */
	gpio_port->gperc = 1 << (pin & 0x1F);
80003188:	30 19       	mov	r9,1
8000318a:	f2 0c 09 4c 	lsl	r12,r9,r12
8000318e:	91 2c       	st.w	r8[0x8],r12
80003190:	5e fd       	retal	0
80003192:	d7 03       	nop

80003194 <gpio_enable_module>:
 * \param size The number of pins in \a gpiomap.
 *
 * \return \ref GPIO_SUCCESS or \ref GPIO_INVALID_ARGUMENT.
 */
uint32_t gpio_enable_module(const gpio_map_t gpiomap, uint32_t size)
{
80003194:	d4 21       	pushm	r4-r7,lr
80003196:	18 97       	mov	r7,r12
80003198:	16 94       	mov	r4,r11
	uint32_t status = GPIO_SUCCESS;
	uint32_t i;

	for (i = 0; i < size; i++) {
8000319a:	58 0b       	cp.w	r11,0
8000319c:	c0 31       	brne	800031a2 <gpio_enable_module+0xe>
8000319e:	30 05       	mov	r5,0
800031a0:	c0 d8       	rjmp	800031ba <gpio_enable_module+0x26>
800031a2:	30 06       	mov	r6,0
800031a4:	0c 95       	mov	r5,r6
		status |= gpio_enable_module_pin(gpiomap->pin, gpiomap->function);
800031a6:	6e 1b       	ld.w	r11,r7[0x4]
800031a8:	6e 0c       	ld.w	r12,r7[0x0]
800031aa:	f0 1f 00 06 	mcall	800031c0 <gpio_enable_module+0x2c>
800031ae:	18 45       	or	r5,r12
		gpiomap++;
800031b0:	2f 87       	sub	r7,-8
uint32_t gpio_enable_module(const gpio_map_t gpiomap, uint32_t size)
{
	uint32_t status = GPIO_SUCCESS;
	uint32_t i;

	for (i = 0; i < size; i++) {
800031b2:	2f f6       	sub	r6,-1
800031b4:	0c 34       	cp.w	r4,r6
800031b6:	fe 9b ff f8 	brhi	800031a6 <gpio_enable_module+0x12>
		status |= gpio_enable_module_pin(gpiomap->pin, gpiomap->function);
		gpiomap++;
	}

	return status;
}
800031ba:	0a 9c       	mov	r12,r5
800031bc:	d8 22       	popm	r4-r7,pc
800031be:	00 00       	add	r0,r0
800031c0:	80 00       	ld.sh	r0,r0[0x0]
800031c2:	31 40       	mov	r0,20

800031c4 <gpio_set_gpio_pin>:
 *
 * \param pin The pin number.
 */
void gpio_set_gpio_pin(uint32_t pin)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
800031c4:	f8 08 16 05 	lsr	r8,r12,0x5
800031c8:	a9 68       	lsl	r8,0x8
800031ca:	e0 28 f0 00 	sub	r8,61440
	
	/* Value to be driven on the I/O line: 1. */
	gpio_port->ovrs  = 1 << (pin & 0x1F);
800031ce:	30 19       	mov	r9,1
800031d0:	f2 0c 09 4c 	lsl	r12,r9,r12
800031d4:	f1 4c 00 54 	st.w	r8[84],r12
	/* The GPIO output driver is enabled for that pin. */ 
	gpio_port->oders = 1 << (pin & 0x1F);
800031d8:	f1 4c 00 44 	st.w	r8[68],r12
	/* The GPIO module controls that pin. */
	gpio_port->gpers = 1 << (pin & 0x1F);
800031dc:	91 1c       	st.w	r8[0x4],r12
}
800031de:	5e fc       	retal	r12

800031e0 <gpio_clr_gpio_pin>:
 *
 * \param pin The pin number.
 */
void gpio_clr_gpio_pin(uint32_t pin)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
800031e0:	f8 08 16 05 	lsr	r8,r12,0x5
800031e4:	a9 68       	lsl	r8,0x8
800031e6:	e0 28 f0 00 	sub	r8,61440
	
	/* Value to be driven on the I/O line: 0. */
	gpio_port->ovrc  = 1 << (pin & 0x1F);
800031ea:	30 19       	mov	r9,1
800031ec:	f2 0c 09 4c 	lsl	r12,r9,r12
800031f0:	f1 4c 00 58 	st.w	r8[88],r12
	/* The GPIO output driver is enabled for that pin. */
	gpio_port->oders = 1 << (pin & 0x1F);
800031f4:	f1 4c 00 44 	st.w	r8[68],r12
	/* The GPIO module controls that pin. */
	gpio_port->gpers = 1 << (pin & 0x1F);
800031f8:	91 1c       	st.w	r8[0x4],r12
}
800031fa:	5e fc       	retal	r12

800031fc <_unhandled_interrupt>:
__attribute__((__interrupt__))
#elif (defined __ICCAVR32__)
__interrupt
#endif
static void _unhandled_interrupt(void)
{
800031fc:	c0 08       	rjmp	800031fc <_unhandled_interrupt>
800031fe:	d7 03       	nop

80003200 <INTC_init_interrupts>:
/**
 * \brief Initializes the hardware interrupt controller driver.
 *
 */
void INTC_init_interrupts(void)
{
80003200:	d4 21       	pushm	r4-r7,lr
 * \brief Init EVBA address. This operation may or may not have been done by the
 * C startup process.
 */
static __inline__ void INTC_init_evba(void)
{
  Set_system_register(AVR32_EVBA, (int32_t)&_evba );
80003202:	49 18       	lddpc	r8,80003244 <INTC_init_interrupts+0x44>
80003204:	e3 b8 00 01 	mtsr	0x4,r8
80003208:	49 0e       	lddpc	lr,80003248 <INTC_init_interrupts+0x48>
8000320a:	30 07       	mov	r7,0
8000320c:	0e 94       	mov	r4,r7
			int_req < _int_handler_table[int_grp].num_irqs;
			int_req++)
		{
			/* Assign _unhandled_interrupt as the default interrupt
			handler. */
			_int_handler_table[int_grp]
8000320e:	49 0c       	lddpc	r12,8000324c <INTC_init_interrupts+0x4c>

		/* Set the interrupt group priority register to its default
		value.
		By default, all interrupt groups are linked to the interrupt
		priority level 0 and to the interrupt vector _int0. */
		AVR32_INTC.ipr[int_grp] = IPR_INT0;
80003210:	49 05       	lddpc	r5,80003250 <INTC_init_interrupts+0x50>
80003212:	10 15       	sub	r5,r8
80003214:	fe 76 08 00 	mov	r6,-63488
80003218:	c1 08       	rjmp	80003238 <INTC_init_interrupts+0x38>
 * \brief Init EVBA address. This operation may or may not have been done by the
 * C startup process.
 */
static __inline__ void INTC_init_evba(void)
{
  Set_system_register(AVR32_EVBA, (int32_t)&_evba );
8000321a:	08 98       	mov	r8,r4
			int_req++)
		{
			/* Assign _unhandled_interrupt as the default interrupt
			handler. */
			_int_handler_table[int_grp]
				._int_line_handler_table[int_req]
8000321c:	7c 1b       	ld.w	r11,lr[0x4]

	// For all interrupt groups,
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
8000321e:	7c 0a       	ld.w	r10,lr[0x0]
			int_req < _int_handler_table[int_grp].num_irqs;
			int_req++)
		{
			/* Assign _unhandled_interrupt as the default interrupt
			handler. */
			_int_handler_table[int_grp]
80003220:	f6 08 09 2c 	st.w	r11[r8<<0x2],r12
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
			int_req < _int_handler_table[int_grp].num_irqs;
			int_req++)
80003224:	2f f8       	sub	r8,-1

	// For all interrupt groups,
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
80003226:	10 3a       	cp.w	r10,r8
80003228:	fe 9b ff fc 	brhi	80003220 <INTC_init_interrupts+0x20>

		/* Set the interrupt group priority register to its default
		value.
		By default, all interrupt groups are linked to the interrupt
		priority level 0 and to the interrupt vector _int0. */
		AVR32_INTC.ipr[int_grp] = IPR_INT0;
8000322c:	ec 07 09 25 	st.w	r6[r7<<0x2],r5
	uint32_t int_grp, int_req;

	INTC_init_evba();

	// For all interrupt groups,
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
80003230:	2f f7       	sub	r7,-1
80003232:	2f 8e       	sub	lr,-8
80003234:	59 47       	cp.w	r7,20
80003236:	c0 50       	breq	80003240 <INTC_init_interrupts+0x40>
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
80003238:	7c 08       	ld.w	r8,lr[0x0]
8000323a:	58 08       	cp.w	r8,0
8000323c:	ce f1       	brne	8000321a <INTC_init_interrupts+0x1a>
8000323e:	cf 7b       	rjmp	8000322c <INTC_init_interrupts+0x2c>
80003240:	d8 22       	popm	r4-r7,pc
80003242:	00 00       	add	r0,r0
80003244:	80 00       	ld.sh	r0,r0[0x0]
80003246:	90 00       	ld.sh	r0,r8[0x0]
80003248:	80 00       	ld.sh	r0,r0[0x0]
8000324a:	93 28       	st.w	r9[0x8],r8
8000324c:	80 00       	ld.sh	r0,r0[0x0]
8000324e:	31 fc       	mov	r12,31
80003250:	80 00       	ld.sh	r0,r0[0x0]
80003252:	91 04       	st.w	r8[0x0],r4

80003254 <_get_interrupt_handler>:
__int_handler _get_interrupt_handler(uint32_t int_level)
{
	/* ICR3 is mapped first, ICR0 last.
	Code in exception.S puts int_level in R12 which is used by the compiler
	to pass a single argument to a function. */
	uint32_t int_grp = AVR32_INTC.icr[AVR32_INTC_INT3 - int_level];
80003254:	fe 78 08 00 	mov	r8,-63488
80003258:	e0 69 00 83 	mov	r9,131
8000325c:	f2 0c 01 0c 	sub	r12,r9,r12
80003260:	f0 0c 03 29 	ld.w	r9,r8[r12<<0x2]
	uint32_t int_req = AVR32_INTC.irr[int_grp];
80003264:	f2 ca ff c0 	sub	r10,r9,-64
80003268:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
	exception.S will provide the interrupt handler with a clean interrupt
	stack frame, with nothing more pushed onto the stack. The interrupt
	handler must manage the `rete' instruction, which can be done using
	pure assembly, inline assembly or the `__attribute__((__interrupt__))'
	C function attribute.*/
	return (int_req)
8000326c:	58 08       	cp.w	r8,0
8000326e:	c0 21       	brne	80003272 <_get_interrupt_handler+0x1e>
80003270:	5e fd       	retal	0
		? _int_handler_table[int_grp]._int_line_handler_table[32
80003272:	f0 08 12 00 	clz	r8,r8
80003276:	48 5a       	lddpc	r10,80003288 <_get_interrupt_handler+0x34>
80003278:	f4 09 00 39 	add	r9,r10,r9<<0x3
8000327c:	f0 08 11 1f 	rsub	r8,r8,31
80003280:	72 19       	ld.w	r9,r9[0x4]
	exception.S will provide the interrupt handler with a clean interrupt
	stack frame, with nothing more pushed onto the stack. The interrupt
	handler must manage the `rete' instruction, which can be done using
	pure assembly, inline assembly or the `__attribute__((__interrupt__))'
	C function attribute.*/
	return (int_req)
80003282:	f2 08 03 2c 	ld.w	r12,r9[r8<<0x2]
		? _int_handler_table[int_grp]._int_line_handler_table[32
			- clz(int_req) - 1]
		: NULL;
}
80003286:	5e fc       	retal	r12
80003288:	80 00       	ld.sh	r0,r0[0x0]
8000328a:	93 28       	st.w	r9[0x8],r8

8000328c <pm_set_osc0_mode>:
8000328c:	78 a8       	ld.w	r8,r12[0x28]
8000328e:	f1 db d0 03 	bfins	r8,r11,0x0,0x3
80003292:	99 a8       	st.w	r12[0x28],r8
80003294:	5e fc       	retal	r12
80003296:	d7 03       	nop

80003298 <pm_enable_osc0_crystal>:
80003298:	d4 01       	pushm	lr
8000329a:	ec 5b bb 9f 	cp.w	r11,899999
8000329e:	e0 8b 00 04 	brhi	800032a6 <pm_enable_osc0_crystal+0xe>
800032a2:	30 4b       	mov	r11,4
800032a4:	c1 38       	rjmp	800032ca <pm_enable_osc0_crystal+0x32>
800032a6:	e0 68 c6 bf 	mov	r8,50879
800032aa:	ea 18 00 2d 	orh	r8,0x2d
800032ae:	10 3b       	cp.w	r11,r8
800032b0:	e0 8b 00 04 	brhi	800032b8 <pm_enable_osc0_crystal+0x20>
800032b4:	30 5b       	mov	r11,5
800032b6:	c0 a8       	rjmp	800032ca <pm_enable_osc0_crystal+0x32>
800032b8:	e0 68 12 00 	mov	r8,4608
800032bc:	ea 18 00 7a 	orh	r8,0x7a
800032c0:	10 3b       	cp.w	r11,r8
800032c2:	f9 bb 03 06 	movlo	r11,6
800032c6:	f9 bb 02 07 	movhs	r11,7
800032ca:	f0 1f 00 02 	mcall	800032d0 <pm_enable_osc0_crystal+0x38>
800032ce:	d8 02       	popm	pc
800032d0:	80 00       	ld.sh	r0,r0[0x0]
800032d2:	32 8c       	mov	r12,40

800032d4 <pm_enable_clk0_no_wait>:
800032d4:	78 a8       	ld.w	r8,r12[0x28]
800032d6:	f1 db d1 03 	bfins	r8,r11,0x8,0x3
800032da:	99 a8       	st.w	r12[0x28],r8
800032dc:	78 08       	ld.w	r8,r12[0x0]
800032de:	a3 a8       	sbr	r8,0x2
800032e0:	99 08       	st.w	r12[0x0],r8
800032e2:	5e fc       	retal	r12

800032e4 <pm_wait_for_clk0_ready>:
800032e4:	79 58       	ld.w	r8,r12[0x54]
800032e6:	e2 18 00 80 	andl	r8,0x80,COH
800032ea:	cf d0       	breq	800032e4 <pm_wait_for_clk0_ready>
800032ec:	5e fc       	retal	r12
800032ee:	d7 03       	nop

800032f0 <pm_enable_clk0>:
800032f0:	eb cd 40 80 	pushm	r7,lr
800032f4:	18 97       	mov	r7,r12
800032f6:	f0 1f 00 04 	mcall	80003304 <pm_enable_clk0+0x14>
800032fa:	0e 9c       	mov	r12,r7
800032fc:	f0 1f 00 03 	mcall	80003308 <pm_enable_clk0+0x18>
80003300:	e3 cd 80 80 	ldm	sp++,r7,pc
80003304:	80 00       	ld.sh	r0,r0[0x0]
80003306:	32 d4       	mov	r4,45
80003308:	80 00       	ld.sh	r0,r0[0x0]
8000330a:	32 e4       	mov	r4,46

8000330c <pm_switch_to_clock>:
8000330c:	78 08       	ld.w	r8,r12[0x0]
8000330e:	f1 db d0 02 	bfins	r8,r11,0x0,0x2
80003312:	99 08       	st.w	r12[0x0],r8
80003314:	5e fc       	retal	r12
80003316:	d7 03       	nop

80003318 <pm_switch_to_osc0>:
80003318:	eb cd 40 c0 	pushm	r6-r7,lr
8000331c:	18 97       	mov	r7,r12
8000331e:	14 96       	mov	r6,r10
80003320:	f0 1f 00 06 	mcall	80003338 <pm_switch_to_osc0+0x20>
80003324:	0c 9b       	mov	r11,r6
80003326:	0e 9c       	mov	r12,r7
80003328:	f0 1f 00 05 	mcall	8000333c <pm_switch_to_osc0+0x24>
8000332c:	30 1b       	mov	r11,1
8000332e:	0e 9c       	mov	r12,r7
80003330:	f0 1f 00 04 	mcall	80003340 <pm_switch_to_osc0+0x28>
80003334:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003338:	80 00       	ld.sh	r0,r0[0x0]
8000333a:	32 98       	mov	r8,41
8000333c:	80 00       	ld.sh	r0,r0[0x0]
8000333e:	32 f0       	mov	r0,47
80003340:	80 00       	ld.sh	r0,r0[0x0]
80003342:	33 0c       	mov	r12,48

80003344 <pwm_channel_init>:
80003344:	58 0b       	cp.w	r11,0
80003346:	c1 90       	breq	80003378 <pwm_channel_init+0x34>
80003348:	58 6c       	cp.w	r12,6
8000334a:	e0 8b 00 17 	brhi	80003378 <pwm_channel_init+0x34>
8000334e:	76 0a       	ld.w	r10,r11[0x0]
80003350:	fe 78 30 00 	mov	r8,-53248
80003354:	f8 c9 ff f0 	sub	r9,r12,-16
80003358:	a5 79       	lsl	r9,0x5
8000335a:	f0 09 00 09 	add	r9,r8,r9
8000335e:	93 0a       	st.w	r9[0x0],r10
80003360:	76 19       	ld.w	r9,r11[0x4]
80003362:	a5 7c       	lsl	r12,0x5
80003364:	f0 0c 00 0c 	add	r12,r8,r12
80003368:	f8 c8 fd fc 	sub	r8,r12,-516
8000336c:	91 09       	st.w	r8[0x0],r9
8000336e:	76 28       	ld.w	r8,r11[0x8]
80003370:	f8 cc fd f8 	sub	r12,r12,-520
80003374:	99 08       	st.w	r12[0x0],r8
80003376:	5e fd       	retal	0
80003378:	5e ff       	retal	1

8000337a <pwm_start_channels>:
8000337a:	18 98       	mov	r8,r12
8000337c:	e0 18 ff 80 	andl	r8,0xff80
80003380:	c0 20       	breq	80003384 <pwm_start_channels+0xa>
80003382:	5e ff       	retal	1
80003384:	fe 78 30 00 	mov	r8,-53248
80003388:	91 1c       	st.w	r8[0x4],r12
8000338a:	5e fd       	retal	0

8000338c <pwm_init>:
8000338c:	e1 b8 00 00 	mfsr	r8,0x0
80003390:	58 0c       	cp.w	r12,0
80003392:	c0 21       	brne	80003396 <pwm_init+0xa>
80003394:	5e ff       	retal	1
80003396:	e6 18 00 01 	andh	r8,0x1,COH
8000339a:	c0 91       	brne	800033ac <pwm_init+0x20>
8000339c:	d3 03       	ssrf	0x10
8000339e:	fe 78 30 00 	mov	r8,-53248
800033a2:	37 f9       	mov	r9,127
800033a4:	91 59       	st.w	r8[0x14],r9
800033a6:	70 78       	ld.w	r8,r8[0x1c]
800033a8:	d5 03       	csrf	0x10
800033aa:	c0 68       	rjmp	800033b6 <pwm_init+0x2a>
800033ac:	fe 78 30 00 	mov	r8,-53248
800033b0:	37 f9       	mov	r9,127
800033b2:	91 59       	st.w	r8[0x14],r9
800033b4:	70 78       	ld.w	r8,r8[0x1c]
800033b6:	78 08       	ld.w	r8,r12[0x0]
800033b8:	78 39       	ld.w	r9,r12[0xc]
800033ba:	a9 69       	lsl	r9,0x8
800033bc:	f3 e8 11 09 	or	r9,r9,r8<<0x10
800033c0:	78 18       	ld.w	r8,r12[0x4]
800033c2:	10 49       	or	r9,r8
800033c4:	78 28       	ld.w	r8,r12[0x8]
800033c6:	f3 e8 11 89 	or	r9,r9,r8<<0x18
800033ca:	fe 78 30 00 	mov	r8,-53248
800033ce:	91 09       	st.w	r8[0x0],r9
800033d0:	5e fd       	retal	0

800033d2 <getBaudDiv>:
800033d2:	f8 c8 00 01 	sub	r8,r12,1
800033d6:	f0 0b 00 0b 	add	r11,r8,r11
800033da:	f6 0c 0d 0a 	divu	r10,r11,r12
800033de:	14 9c       	mov	r12,r10
800033e0:	f4 c8 00 01 	sub	r8,r10,1
800033e4:	e0 48 00 fe 	cp.w	r8,254
800033e8:	e0 88 00 03 	brls	800033ee <getBaudDiv+0x1c>
800033ec:	5e fe       	retal	-1
800033ee:	5c 8c       	casts.h	r12
800033f0:	5e fc       	retal	r12

800033f2 <spi_initMaster>:
800033f2:	f7 39 00 0d 	ld.ub	r9,r11[13]
800033f6:	30 18       	mov	r8,1
800033f8:	f0 09 18 00 	cp.b	r9,r8
800033fc:	e0 88 00 04 	brls	80003404 <spi_initMaster+0x12>
80003400:	30 2c       	mov	r12,2
80003402:	5e fc       	retal	r12
80003404:	e0 68 00 80 	mov	r8,128
80003408:	99 08       	st.w	r12[0x0],r8
8000340a:	78 18       	ld.w	r8,r12[0x4]
8000340c:	30 19       	mov	r9,1
8000340e:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80003412:	f7 39 00 0d 	ld.ub	r9,r11[13]
80003416:	f1 d9 d0 81 	bfins	r8,r9,0x4,0x1
8000341a:	30 09       	mov	r9,0
8000341c:	f1 d9 d0 e1 	bfins	r8,r9,0x7,0x1
80003420:	30 fa       	mov	r10,15
80003422:	f1 da d2 04 	bfins	r8,r10,0x10,0x4
80003426:	99 18       	st.w	r12[0x4],r8
80003428:	5e f9       	retal	r9

8000342a <spi_selectionMode>:
8000342a:	d4 01       	pushm	lr
8000342c:	30 18       	mov	r8,1
8000342e:	f0 0b 18 00 	cp.b	r11,r8
80003432:	5f be       	srhi	lr
80003434:	f0 0a 18 00 	cp.b	r10,r8
80003438:	5f b8       	srhi	r8
8000343a:	fd e8 10 08 	or	r8,lr,r8
8000343e:	c0 30       	breq	80003444 <spi_selectionMode+0x1a>
80003440:	30 2c       	mov	r12,2
80003442:	d8 02       	popm	pc
80003444:	78 18       	ld.w	r8,r12[0x4]
80003446:	f1 db d0 21 	bfins	r8,r11,0x1,0x1
8000344a:	f1 da d0 41 	bfins	r8,r10,0x2,0x1
8000344e:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
80003452:	99 18       	st.w	r12[0x4],r8
80003454:	d8 0a       	popm	pc,r12=0

80003456 <spi_selectChip>:
80003456:	78 18       	ld.w	r8,r12[0x4]
80003458:	ea 18 00 0f 	orh	r8,0xf
8000345c:	99 18       	st.w	r12[0x4],r8
8000345e:	78 18       	ld.w	r8,r12[0x4]
80003460:	e2 18 00 04 	andl	r8,0x4,COH
80003464:	c0 f0       	breq	80003482 <spi_selectChip+0x2c>
80003466:	30 e8       	mov	r8,14
80003468:	f0 0b 18 00 	cp.b	r11,r8
8000346c:	e0 8b 00 19 	brhi	8000349e <spi_selectChip+0x48>
80003470:	78 18       	ld.w	r8,r12[0x4]
80003472:	b1 6b       	lsl	r11,0x10
80003474:	ea 1b ff f0 	orh	r11,0xfff0
80003478:	e8 1b ff ff 	orl	r11,0xffff
8000347c:	10 6b       	and	r11,r8
8000347e:	99 1b       	st.w	r12[0x4],r11
80003480:	5e fd       	retal	0
80003482:	30 38       	mov	r8,3
80003484:	f0 0b 18 00 	cp.b	r11,r8
80003488:	e0 8b 00 0b 	brhi	8000349e <spi_selectChip+0x48>
8000348c:	78 18       	ld.w	r8,r12[0x4]
8000348e:	2f 0b       	sub	r11,-16
80003490:	30 19       	mov	r9,1
80003492:	f2 0b 09 4b 	lsl	r11,r9,r11
80003496:	5c db       	com	r11
80003498:	10 6b       	and	r11,r8
8000349a:	99 1b       	st.w	r12[0x4],r11
8000349c:	5e fd       	retal	0
8000349e:	30 2c       	mov	r12,2
800034a0:	5e fc       	retal	r12

800034a2 <spi_unselectChip>:
800034a2:	e0 68 3a 98 	mov	r8,15000
800034a6:	c0 58       	rjmp	800034b0 <spi_unselectChip+0xe>
800034a8:	58 08       	cp.w	r8,0
800034aa:	c0 21       	brne	800034ae <spi_unselectChip+0xc>
800034ac:	5e ff       	retal	1
800034ae:	20 18       	sub	r8,1
800034b0:	78 49       	ld.w	r9,r12[0x10]
800034b2:	e2 19 02 00 	andl	r9,0x200,COH
800034b6:	cf 90       	breq	800034a8 <spi_unselectChip+0x6>
800034b8:	78 18       	ld.w	r8,r12[0x4]
800034ba:	ea 18 00 0f 	orh	r8,0xf
800034be:	99 18       	st.w	r12[0x4],r8
800034c0:	fc 18 01 00 	movh	r8,0x100
800034c4:	99 08       	st.w	r12[0x0],r8
800034c6:	5e fd       	retal	0

800034c8 <spi_setupChipReg>:
800034c8:	eb cd 40 f8 	pushm	r3-r7,lr
800034cc:	18 95       	mov	r5,r12
800034ce:	16 97       	mov	r7,r11
800034d0:	f7 36 00 0c 	ld.ub	r6,r11[12]
800034d4:	30 38       	mov	r8,3
800034d6:	f0 06 18 00 	cp.b	r6,r8
800034da:	e0 8b 00 4d 	brhi	80003574 <spi_setupChipReg+0xac>
800034de:	f7 34 00 0b 	ld.ub	r4,r11[11]
800034e2:	30 18       	mov	r8,1
800034e4:	f0 04 18 00 	cp.b	r4,r8
800034e8:	e0 8b 00 46 	brhi	80003574 <spi_setupChipReg+0xac>
800034ec:	f7 33 00 08 	ld.ub	r3,r11[8]
800034f0:	30 78       	mov	r8,7
800034f2:	f0 03 18 00 	cp.b	r3,r8
800034f6:	e0 88 00 3f 	brls	80003574 <spi_setupChipReg+0xac>
800034fa:	31 08       	mov	r8,16
800034fc:	f0 03 18 00 	cp.b	r3,r8
80003500:	e0 8b 00 3a 	brhi	80003574 <spi_setupChipReg+0xac>
80003504:	14 9b       	mov	r11,r10
80003506:	6e 1c       	ld.w	r12,r7[0x4]
80003508:	f0 1f 00 1d 	mcall	8000357c <spi_setupChipReg+0xb4>
8000350c:	c3 45       	brlt	80003574 <spi_setupChipReg+0xac>
8000350e:	30 08       	mov	r8,0
80003510:	ec 09 16 01 	lsr	r9,r6,0x1
80003514:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80003518:	ec 16 00 01 	eorl	r6,0x1
8000351c:	f1 d6 d0 21 	bfins	r8,r6,0x1,0x1
80003520:	f1 d4 d0 61 	bfins	r8,r4,0x3,0x1
80003524:	20 83       	sub	r3,8
80003526:	f1 d3 d0 84 	bfins	r8,r3,0x4,0x4
8000352a:	f1 dc d1 08 	bfins	r8,r12,0x8,0x8
8000352e:	ef 39 00 09 	ld.ub	r9,r7[9]
80003532:	f1 d9 d2 08 	bfins	r8,r9,0x10,0x8
80003536:	ef 39 00 0a 	ld.ub	r9,r7[10]
8000353a:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
8000353e:	0f 89       	ld.ub	r9,r7[0x0]
80003540:	30 1a       	mov	r10,1
80003542:	f4 09 18 00 	cp.b	r9,r10
80003546:	c0 e0       	breq	80003562 <spi_setupChipReg+0x9a>
80003548:	c0 a3       	brcs	8000355c <spi_setupChipReg+0x94>
8000354a:	30 2a       	mov	r10,2
8000354c:	f4 09 18 00 	cp.b	r9,r10
80003550:	c0 c0       	breq	80003568 <spi_setupChipReg+0xa0>
80003552:	30 3a       	mov	r10,3
80003554:	f4 09 18 00 	cp.b	r9,r10
80003558:	c0 e1       	brne	80003574 <spi_setupChipReg+0xac>
8000355a:	c0 a8       	rjmp	8000356e <spi_setupChipReg+0xa6>
8000355c:	8b c8       	st.w	r5[0x30],r8
8000355e:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80003562:	8b d8       	st.w	r5[0x34],r8
80003564:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80003568:	8b e8       	st.w	r5[0x38],r8
8000356a:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
8000356e:	8b f8       	st.w	r5[0x3c],r8
80003570:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80003574:	30 2c       	mov	r12,2
80003576:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
8000357a:	00 00       	add	r0,r0
8000357c:	80 00       	ld.sh	r0,r0[0x0]
8000357e:	33 d2       	mov	r2,61

80003580 <spi_enable>:
80003580:	30 18       	mov	r8,1
80003582:	99 08       	st.w	r12[0x0],r8
80003584:	5e fc       	retal	r12

80003586 <spi_write>:
80003586:	e0 68 3a 98 	mov	r8,15000
8000358a:	c0 58       	rjmp	80003594 <spi_write+0xe>
8000358c:	58 08       	cp.w	r8,0
8000358e:	c0 21       	brne	80003592 <spi_write+0xc>
80003590:	5e ff       	retal	1
80003592:	20 18       	sub	r8,1
80003594:	78 49       	ld.w	r9,r12[0x10]
80003596:	e2 19 00 02 	andl	r9,0x2,COH
8000359a:	cf 90       	breq	8000358c <spi_write+0x6>
8000359c:	5c 7b       	castu.h	r11
8000359e:	99 3b       	st.w	r12[0xc],r11
800035a0:	5e fd       	retal	0

800035a2 <spi_readRegisterFullCheck>:
800035a2:	78 4c       	ld.w	r12,r12[0x10]
800035a4:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
800035a8:	5e fc       	retal	r12

800035aa <spi_read>:
800035aa:	e0 68 3a 98 	mov	r8,15000
800035ae:	c0 58       	rjmp	800035b8 <spi_read+0xe>
800035b0:	58 08       	cp.w	r8,0
800035b2:	c0 21       	brne	800035b6 <spi_read+0xc>
800035b4:	5e ff       	retal	1
800035b6:	20 18       	sub	r8,1
800035b8:	78 49       	ld.w	r9,r12[0x10]
800035ba:	e2 19 02 01 	andl	r9,0x201,COH
800035be:	e0 49 02 01 	cp.w	r9,513
800035c2:	cf 71       	brne	800035b0 <spi_read+0x6>
800035c4:	78 28       	ld.w	r8,r12[0x8]
800035c6:	b6 08       	st.h	r11[0x0],r8
800035c8:	5e fd       	retal	0
800035ca:	d7 03       	nop

800035cc <_stext>:
800035cc:	e0 7d 00 00 	mov	sp,65536
800035d0:	fe c0 a5 d0 	sub	r0,pc,-23088
800035d4:	e3 b0 00 01 	mtsr	0x4,r0
800035d8:	d5 53       	csrf	0x15
800035da:	30 80       	mov	r0,8
800035dc:	e0 61 05 18 	mov	r1,1304
800035e0:	02 30       	cp.w	r0,r1
800035e2:	c0 72       	brcc	800035f0 <idata_load_loop_end>
800035e4:	fe c2 9c 94 	sub	r2,pc,-25452

800035e8 <idata_load_loop>:
800035e8:	a5 05       	ld.d	r4,r2++
800035ea:	a1 24       	st.d	r0++,r4
800035ec:	02 30       	cp.w	r0,r1
800035ee:	cf d3       	brcs	800035e8 <idata_load_loop>

800035f0 <idata_load_loop_end>:
800035f0:	e0 60 05 18 	mov	r0,1304
800035f4:	e0 61 06 98 	mov	r1,1688
800035f8:	02 30       	cp.w	r0,r1
800035fa:	c0 62       	brcc	80003606 <udata_clear_loop_end>
800035fc:	30 02       	mov	r2,0
800035fe:	30 03       	mov	r3,0

80003600 <udata_clear_loop>:
80003600:	a1 22       	st.d	r0++,r2
80003602:	02 30       	cp.w	r0,r1
80003604:	cf e3       	brcs	80003600 <udata_clear_loop>

80003606 <udata_clear_loop_end>:
80003606:	fe cf 0d 0a 	sub	pc,pc,3338
8000360a:	d7 03       	nop

8000360c <memcpy>:
8000360c:	58 8a       	cp.w	r10,8
8000360e:	c2 f5       	brlt	8000366c <memcpy+0x60>
80003610:	f9 eb 10 09 	or	r9,r12,r11
80003614:	e2 19 00 03 	andl	r9,0x3,COH
80003618:	e0 81 00 97 	brne	80003746 <memcpy+0x13a>
8000361c:	e0 4a 00 20 	cp.w	r10,32
80003620:	c3 b4       	brge	80003696 <memcpy+0x8a>
80003622:	f4 08 14 02 	asr	r8,r10,0x2
80003626:	f0 09 11 08 	rsub	r9,r8,8
8000362a:	fe 09 00 2f 	add	pc,pc,r9<<0x2
8000362e:	76 69       	ld.w	r9,r11[0x18]
80003630:	99 69       	st.w	r12[0x18],r9
80003632:	76 59       	ld.w	r9,r11[0x14]
80003634:	99 59       	st.w	r12[0x14],r9
80003636:	76 49       	ld.w	r9,r11[0x10]
80003638:	99 49       	st.w	r12[0x10],r9
8000363a:	76 39       	ld.w	r9,r11[0xc]
8000363c:	99 39       	st.w	r12[0xc],r9
8000363e:	76 29       	ld.w	r9,r11[0x8]
80003640:	99 29       	st.w	r12[0x8],r9
80003642:	76 19       	ld.w	r9,r11[0x4]
80003644:	99 19       	st.w	r12[0x4],r9
80003646:	76 09       	ld.w	r9,r11[0x0]
80003648:	99 09       	st.w	r12[0x0],r9
8000364a:	f6 08 00 2b 	add	r11,r11,r8<<0x2
8000364e:	f8 08 00 28 	add	r8,r12,r8<<0x2
80003652:	e0 1a 00 03 	andl	r10,0x3
80003656:	f4 0a 11 04 	rsub	r10,r10,4
8000365a:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
8000365e:	17 a9       	ld.ub	r9,r11[0x2]
80003660:	b0 a9       	st.b	r8[0x2],r9
80003662:	17 99       	ld.ub	r9,r11[0x1]
80003664:	b0 99       	st.b	r8[0x1],r9
80003666:	17 89       	ld.ub	r9,r11[0x0]
80003668:	b0 89       	st.b	r8[0x0],r9
8000366a:	5e fc       	retal	r12
8000366c:	f4 0a 11 09 	rsub	r10,r10,9
80003670:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80003674:	17 f9       	ld.ub	r9,r11[0x7]
80003676:	b8 f9       	st.b	r12[0x7],r9
80003678:	17 e9       	ld.ub	r9,r11[0x6]
8000367a:	b8 e9       	st.b	r12[0x6],r9
8000367c:	17 d9       	ld.ub	r9,r11[0x5]
8000367e:	b8 d9       	st.b	r12[0x5],r9
80003680:	17 c9       	ld.ub	r9,r11[0x4]
80003682:	b8 c9       	st.b	r12[0x4],r9
80003684:	17 b9       	ld.ub	r9,r11[0x3]
80003686:	b8 b9       	st.b	r12[0x3],r9
80003688:	17 a9       	ld.ub	r9,r11[0x2]
8000368a:	b8 a9       	st.b	r12[0x2],r9
8000368c:	17 99       	ld.ub	r9,r11[0x1]
8000368e:	b8 99       	st.b	r12[0x1],r9
80003690:	17 89       	ld.ub	r9,r11[0x0]
80003692:	b8 89       	st.b	r12[0x0],r9
80003694:	5e fc       	retal	r12
80003696:	eb cd 40 c0 	pushm	r6-r7,lr
8000369a:	18 99       	mov	r9,r12
8000369c:	22 0a       	sub	r10,32
8000369e:	b7 07       	ld.d	r6,r11++
800036a0:	b3 26       	st.d	r9++,r6
800036a2:	b7 07       	ld.d	r6,r11++
800036a4:	b3 26       	st.d	r9++,r6
800036a6:	b7 07       	ld.d	r6,r11++
800036a8:	b3 26       	st.d	r9++,r6
800036aa:	b7 07       	ld.d	r6,r11++
800036ac:	b3 26       	st.d	r9++,r6
800036ae:	22 0a       	sub	r10,32
800036b0:	cf 74       	brge	8000369e <memcpy+0x92>
800036b2:	2f 0a       	sub	r10,-16
800036b4:	c0 65       	brlt	800036c0 <memcpy+0xb4>
800036b6:	b7 07       	ld.d	r6,r11++
800036b8:	b3 26       	st.d	r9++,r6
800036ba:	b7 07       	ld.d	r6,r11++
800036bc:	b3 26       	st.d	r9++,r6
800036be:	21 0a       	sub	r10,16
800036c0:	5c 3a       	neg	r10
800036c2:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
800036c6:	d7 03       	nop
800036c8:	d7 03       	nop
800036ca:	f7 36 00 0e 	ld.ub	r6,r11[14]
800036ce:	f3 66 00 0e 	st.b	r9[14],r6
800036d2:	f7 36 00 0d 	ld.ub	r6,r11[13]
800036d6:	f3 66 00 0d 	st.b	r9[13],r6
800036da:	f7 36 00 0c 	ld.ub	r6,r11[12]
800036de:	f3 66 00 0c 	st.b	r9[12],r6
800036e2:	f7 36 00 0b 	ld.ub	r6,r11[11]
800036e6:	f3 66 00 0b 	st.b	r9[11],r6
800036ea:	f7 36 00 0a 	ld.ub	r6,r11[10]
800036ee:	f3 66 00 0a 	st.b	r9[10],r6
800036f2:	f7 36 00 09 	ld.ub	r6,r11[9]
800036f6:	f3 66 00 09 	st.b	r9[9],r6
800036fa:	f7 36 00 08 	ld.ub	r6,r11[8]
800036fe:	f3 66 00 08 	st.b	r9[8],r6
80003702:	f7 36 00 07 	ld.ub	r6,r11[7]
80003706:	f3 66 00 07 	st.b	r9[7],r6
8000370a:	f7 36 00 06 	ld.ub	r6,r11[6]
8000370e:	f3 66 00 06 	st.b	r9[6],r6
80003712:	f7 36 00 05 	ld.ub	r6,r11[5]
80003716:	f3 66 00 05 	st.b	r9[5],r6
8000371a:	f7 36 00 04 	ld.ub	r6,r11[4]
8000371e:	f3 66 00 04 	st.b	r9[4],r6
80003722:	f7 36 00 03 	ld.ub	r6,r11[3]
80003726:	f3 66 00 03 	st.b	r9[3],r6
8000372a:	f7 36 00 02 	ld.ub	r6,r11[2]
8000372e:	f3 66 00 02 	st.b	r9[2],r6
80003732:	f7 36 00 01 	ld.ub	r6,r11[1]
80003736:	f3 66 00 01 	st.b	r9[1],r6
8000373a:	f7 36 00 00 	ld.ub	r6,r11[0]
8000373e:	f3 66 00 00 	st.b	r9[0],r6
80003742:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003746:	20 1a       	sub	r10,1
80003748:	f6 0a 07 09 	ld.ub	r9,r11[r10]
8000374c:	f8 0a 0b 09 	st.b	r12[r10],r9
80003750:	cf b1       	brne	80003746 <memcpy+0x13a>
80003752:	5e fc       	retal	r12

80003754 <_vsprintf_r>:
80003754:	d4 01       	pushm	lr
80003756:	21 7d       	sub	sp,92
80003758:	e0 68 ff ff 	mov	r8,65535
8000375c:	ea 18 7f ff 	orh	r8,0x7fff
80003760:	50 58       	stdsp	sp[0x14],r8
80003762:	50 28       	stdsp	sp[0x8],r8
80003764:	e0 68 02 08 	mov	r8,520
80003768:	ba 68       	st.h	sp[0xc],r8
8000376a:	3f f8       	mov	r8,-1
8000376c:	50 4b       	stdsp	sp[0x10],r11
8000376e:	50 0b       	stdsp	sp[0x0],r11
80003770:	ba 78       	st.h	sp[0xe],r8
80003772:	1a 9b       	mov	r11,sp
80003774:	ca 8d       	rcall	80003ac4 <_vfprintf_r>
80003776:	30 09       	mov	r9,0
80003778:	40 08       	lddsp	r8,sp[0x0]
8000377a:	b0 89       	st.b	r8[0x0],r9
8000377c:	2e 9d       	sub	sp,-92
8000377e:	d8 02       	popm	pc

80003780 <vsprintf>:
80003780:	d4 01       	pushm	lr
80003782:	e0 68 01 04 	mov	r8,260
80003786:	14 99       	mov	r9,r10
80003788:	16 9a       	mov	r10,r11
8000378a:	18 9b       	mov	r11,r12
8000378c:	70 0c       	ld.w	r12,r8[0x0]
8000378e:	ce 3f       	rcall	80003754 <_vsprintf_r>
80003790:	d8 02       	popm	pc
80003792:	d7 03       	nop

80003794 <get_arg>:
80003794:	d4 31       	pushm	r0-r7,lr
80003796:	20 8d       	sub	sp,32
80003798:	fa c4 ff bc 	sub	r4,sp,-68
8000379c:	50 4b       	stdsp	sp[0x10],r11
8000379e:	68 2e       	ld.w	lr,r4[0x8]
800037a0:	50 58       	stdsp	sp[0x14],r8
800037a2:	12 96       	mov	r6,r9
800037a4:	7c 0b       	ld.w	r11,lr[0x0]
800037a6:	70 05       	ld.w	r5,r8[0x0]
800037a8:	50 6e       	stdsp	sp[0x18],lr
800037aa:	58 0b       	cp.w	r11,0
800037ac:	f4 0b 17 00 	moveq	r11,r10
800037b0:	68 03       	ld.w	r3,r4[0x0]
800037b2:	68 11       	ld.w	r1,r4[0x4]
800037b4:	40 49       	lddsp	r9,sp[0x10]
800037b6:	30 08       	mov	r8,0
800037b8:	c2 89       	rjmp	80003a08 <get_arg+0x274>
800037ba:	2f fb       	sub	r11,-1
800037bc:	32 5c       	mov	r12,37
800037be:	17 8a       	ld.ub	r10,r11[0x0]
800037c0:	f8 0a 18 00 	cp.b	r10,r12
800037c4:	5f 1e       	srne	lr
800037c6:	f0 0a 18 00 	cp.b	r10,r8
800037ca:	5f 1c       	srne	r12
800037cc:	fd ec 00 0c 	and	r12,lr,r12
800037d0:	f0 0c 18 00 	cp.b	r12,r8
800037d4:	cf 31       	brne	800037ba <get_arg+0x26>
800037d6:	58 0a       	cp.w	r10,0
800037d8:	e0 80 01 25 	breq	80003a22 <get_arg+0x28e>
800037dc:	30 0c       	mov	r12,0
800037de:	3f fa       	mov	r10,-1
800037e0:	18 90       	mov	r0,r12
800037e2:	50 3a       	stdsp	sp[0xc],r10
800037e4:	18 94       	mov	r4,r12
800037e6:	18 92       	mov	r2,r12
800037e8:	f8 0c 00 3c 	add	r12,r12,r12<<0x3
800037ec:	16 97       	mov	r7,r11
800037ee:	50 7c       	stdsp	sp[0x1c],r12
800037f0:	fe cc a1 4c 	sub	r12,pc,-24244
800037f4:	0f 3a       	ld.ub	r10,r7++
800037f6:	f8 0a 07 0e 	ld.ub	lr,r12[r10]
800037fa:	40 7c       	lddsp	r12,sp[0x1c]
800037fc:	1c 0c       	add	r12,lr
800037fe:	fe ce a2 22 	sub	lr,pc,-24030
80003802:	fc 0c 07 0e 	ld.ub	lr,lr[r12]
80003806:	20 1e       	sub	lr,1
80003808:	50 0e       	stdsp	sp[0x0],lr
8000380a:	fe ce a2 9a 	sub	lr,pc,-23910
8000380e:	fc 0c 07 0c 	ld.ub	r12,lr[r12]
80003812:	50 7c       	stdsp	sp[0x1c],r12
80003814:	40 0c       	lddsp	r12,sp[0x0]
80003816:	58 7c       	cp.w	r12,7
80003818:	e0 8b 00 f1 	brhi	800039fa <get_arg+0x266>
8000381c:	fe ce a4 4c 	sub	lr,pc,-23476
80003820:	fc 0c 03 2f 	ld.w	pc,lr[r12<<0x2]
80003824:	36 8b       	mov	r11,104
80003826:	f6 0a 18 00 	cp.b	r10,r11
8000382a:	e0 80 00 e8 	breq	800039fa <get_arg+0x266>
8000382e:	37 1b       	mov	r11,113
80003830:	f6 0a 18 00 	cp.b	r10,r11
80003834:	c0 70       	breq	80003842 <get_arg+0xae>
80003836:	34 cb       	mov	r11,76
80003838:	f6 0a 18 00 	cp.b	r10,r11
8000383c:	c0 51       	brne	80003846 <get_arg+0xb2>
8000383e:	a3 b4       	sbr	r4,0x3
80003840:	cd d8       	rjmp	800039fa <get_arg+0x266>
80003842:	a5 b4       	sbr	r4,0x5
80003844:	cd b8       	rjmp	800039fa <get_arg+0x266>
80003846:	08 9a       	mov	r10,r4
80003848:	0e 9b       	mov	r11,r7
8000384a:	a5 aa       	sbr	r10,0x4
8000384c:	17 3c       	ld.ub	r12,r11++
8000384e:	a5 b4       	sbr	r4,0x5
80003850:	36 ce       	mov	lr,108
80003852:	fc 0c 18 00 	cp.b	r12,lr
80003856:	e0 80 00 d3 	breq	800039fc <get_arg+0x268>
8000385a:	14 94       	mov	r4,r10
8000385c:	cc f8       	rjmp	800039fa <get_arg+0x266>
8000385e:	eb d5 c0 05 	bfextu	r5,r5,0x0,0x5
80003862:	36 7c       	mov	r12,103
80003864:	f8 0a 18 00 	cp.b	r10,r12
80003868:	e0 8b 00 27 	brhi	800038b6 <get_arg+0x122>
8000386c:	36 5b       	mov	r11,101
8000386e:	f6 0a 18 00 	cp.b	r10,r11
80003872:	c4 82       	brcc	80003902 <get_arg+0x16e>
80003874:	34 fb       	mov	r11,79
80003876:	f6 0a 18 00 	cp.b	r10,r11
8000387a:	c4 80       	breq	8000390a <get_arg+0x176>
8000387c:	e0 8b 00 0c 	brhi	80003894 <get_arg+0x100>
80003880:	34 5b       	mov	r11,69
80003882:	f6 0a 18 00 	cp.b	r10,r11
80003886:	c3 e0       	breq	80003902 <get_arg+0x16e>
80003888:	34 7b       	mov	r11,71
8000388a:	f6 0a 18 00 	cp.b	r10,r11
8000388e:	c3 a0       	breq	80003902 <get_arg+0x16e>
80003890:	34 4b       	mov	r11,68
80003892:	c0 88       	rjmp	800038a2 <get_arg+0x10e>
80003894:	35 8b       	mov	r11,88
80003896:	f6 0a 18 00 	cp.b	r10,r11
8000389a:	c2 c0       	breq	800038f2 <get_arg+0x15e>
8000389c:	e0 8b 00 07 	brhi	800038aa <get_arg+0x116>
800038a0:	35 5b       	mov	r11,85
800038a2:	f6 0a 18 00 	cp.b	r10,r11
800038a6:	c3 51       	brne	80003910 <get_arg+0x17c>
800038a8:	c3 18       	rjmp	8000390a <get_arg+0x176>
800038aa:	36 3b       	mov	r11,99
800038ac:	f6 0a 18 00 	cp.b	r10,r11
800038b0:	c2 f0       	breq	8000390e <get_arg+0x17a>
800038b2:	36 4b       	mov	r11,100
800038b4:	c0 e8       	rjmp	800038d0 <get_arg+0x13c>
800038b6:	37 0b       	mov	r11,112
800038b8:	f6 0a 18 00 	cp.b	r10,r11
800038bc:	c2 50       	breq	80003906 <get_arg+0x172>
800038be:	e0 8b 00 0d 	brhi	800038d8 <get_arg+0x144>
800038c2:	36 eb       	mov	r11,110
800038c4:	f6 0a 18 00 	cp.b	r10,r11
800038c8:	c1 f0       	breq	80003906 <get_arg+0x172>
800038ca:	e0 8b 00 14 	brhi	800038f2 <get_arg+0x15e>
800038ce:	36 9b       	mov	r11,105
800038d0:	f6 0a 18 00 	cp.b	r10,r11
800038d4:	c1 e1       	brne	80003910 <get_arg+0x17c>
800038d6:	c0 e8       	rjmp	800038f2 <get_arg+0x15e>
800038d8:	37 5b       	mov	r11,117
800038da:	f6 0a 18 00 	cp.b	r10,r11
800038de:	c0 a0       	breq	800038f2 <get_arg+0x15e>
800038e0:	37 8b       	mov	r11,120
800038e2:	f6 0a 18 00 	cp.b	r10,r11
800038e6:	c0 60       	breq	800038f2 <get_arg+0x15e>
800038e8:	37 3b       	mov	r11,115
800038ea:	f6 0a 18 00 	cp.b	r10,r11
800038ee:	c1 11       	brne	80003910 <get_arg+0x17c>
800038f0:	c0 b8       	rjmp	80003906 <get_arg+0x172>
800038f2:	ed b4 00 04 	bld	r4,0x4
800038f6:	c0 a0       	breq	8000390a <get_arg+0x176>
800038f8:	ed b4 00 05 	bld	r4,0x5
800038fc:	c0 91       	brne	8000390e <get_arg+0x17a>
800038fe:	30 20       	mov	r0,2
80003900:	c0 88       	rjmp	80003910 <get_arg+0x17c>
80003902:	30 40       	mov	r0,4
80003904:	c0 68       	rjmp	80003910 <get_arg+0x17c>
80003906:	30 30       	mov	r0,3
80003908:	c0 48       	rjmp	80003910 <get_arg+0x17c>
8000390a:	30 10       	mov	r0,1
8000390c:	c0 28       	rjmp	80003910 <get_arg+0x17c>
8000390e:	30 00       	mov	r0,0
80003910:	40 3b       	lddsp	r11,sp[0xc]
80003912:	5b fb       	cp.w	r11,-1
80003914:	c0 40       	breq	8000391c <get_arg+0x188>
80003916:	e2 0b 09 20 	st.w	r1[r11<<0x2],r0
8000391a:	c7 08       	rjmp	800039fa <get_arg+0x266>
8000391c:	58 60       	cp.w	r0,6
8000391e:	e0 8b 00 6e 	brhi	800039fa <get_arg+0x266>
80003922:	6c 0a       	ld.w	r10,r6[0x0]
80003924:	ea cc ff ff 	sub	r12,r5,-1
80003928:	fe ce a5 38 	sub	lr,pc,-23240
8000392c:	fc 00 03 2f 	ld.w	pc,lr[r0<<0x2]
80003930:	f4 cb ff f8 	sub	r11,r10,-8
80003934:	8d 0b       	st.w	r6[0x0],r11
80003936:	f4 ea 00 00 	ld.d	r10,r10[0]
8000393a:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
8000393e:	c0 f8       	rjmp	8000395c <get_arg+0x1c8>
80003940:	f4 cb ff fc 	sub	r11,r10,-4
80003944:	8d 0b       	st.w	r6[0x0],r11
80003946:	74 0a       	ld.w	r10,r10[0x0]
80003948:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
8000394c:	c0 88       	rjmp	8000395c <get_arg+0x1c8>
8000394e:	f4 cb ff f8 	sub	r11,r10,-8
80003952:	8d 0b       	st.w	r6[0x0],r11
80003954:	f4 ea 00 00 	ld.d	r10,r10[0]
80003958:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
8000395c:	0e 9b       	mov	r11,r7
8000395e:	18 95       	mov	r5,r12
80003960:	c4 e8       	rjmp	800039fc <get_arg+0x268>
80003962:	62 0a       	ld.w	r10,r1[0x0]
80003964:	5b fa       	cp.w	r10,-1
80003966:	c0 b1       	brne	8000397c <get_arg+0x1e8>
80003968:	50 19       	stdsp	sp[0x4],r9
8000396a:	50 28       	stdsp	sp[0x8],r8
8000396c:	e0 6a 00 80 	mov	r10,128
80003970:	30 0b       	mov	r11,0
80003972:	02 9c       	mov	r12,r1
80003974:	e0 a0 1d 78 	rcall	80007464 <memset>
80003978:	40 28       	lddsp	r8,sp[0x8]
8000397a:	40 19       	lddsp	r9,sp[0x4]
8000397c:	e4 cc 00 01 	sub	r12,r2,1
80003980:	0e 9b       	mov	r11,r7
80003982:	50 3c       	stdsp	sp[0xc],r12
80003984:	f2 0c 0c 49 	max	r9,r9,r12
80003988:	c3 a8       	rjmp	800039fc <get_arg+0x268>
8000398a:	62 0a       	ld.w	r10,r1[0x0]
8000398c:	5b fa       	cp.w	r10,-1
8000398e:	c0 b1       	brne	800039a4 <get_arg+0x210>
80003990:	50 19       	stdsp	sp[0x4],r9
80003992:	50 28       	stdsp	sp[0x8],r8
80003994:	e0 6a 00 80 	mov	r10,128
80003998:	30 0b       	mov	r11,0
8000399a:	02 9c       	mov	r12,r1
8000399c:	e0 a0 1d 64 	rcall	80007464 <memset>
800039a0:	40 28       	lddsp	r8,sp[0x8]
800039a2:	40 19       	lddsp	r9,sp[0x4]
800039a4:	20 12       	sub	r2,1
800039a6:	30 0a       	mov	r10,0
800039a8:	0e 9b       	mov	r11,r7
800039aa:	e2 02 09 2a 	st.w	r1[r2<<0x2],r10
800039ae:	f2 02 0c 49 	max	r9,r9,r2
800039b2:	c2 58       	rjmp	800039fc <get_arg+0x268>
800039b4:	16 97       	mov	r7,r11
800039b6:	6c 0a       	ld.w	r10,r6[0x0]
800039b8:	f4 cb ff fc 	sub	r11,r10,-4
800039bc:	8d 0b       	st.w	r6[0x0],r11
800039be:	74 0a       	ld.w	r10,r10[0x0]
800039c0:	0e 9b       	mov	r11,r7
800039c2:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
800039c6:	2f f5       	sub	r5,-1
800039c8:	c1 a8       	rjmp	800039fc <get_arg+0x268>
800039ca:	f4 c2 00 30 	sub	r2,r10,48
800039ce:	c0 68       	rjmp	800039da <get_arg+0x246>
800039d0:	e4 02 00 22 	add	r2,r2,r2<<0x2
800039d4:	2f f7       	sub	r7,-1
800039d6:	f4 02 00 12 	add	r2,r10,r2<<0x1
800039da:	0f 8a       	ld.ub	r10,r7[0x0]
800039dc:	58 0a       	cp.w	r10,0
800039de:	c0 e0       	breq	800039fa <get_arg+0x266>
800039e0:	23 0a       	sub	r10,48
800039e2:	58 9a       	cp.w	r10,9
800039e4:	fe 98 ff f6 	brls	800039d0 <get_arg+0x23c>
800039e8:	c0 98       	rjmp	800039fa <get_arg+0x266>
800039ea:	2f f7       	sub	r7,-1
800039ec:	0f 8a       	ld.ub	r10,r7[0x0]
800039ee:	58 0a       	cp.w	r10,0
800039f0:	c0 50       	breq	800039fa <get_arg+0x266>
800039f2:	23 0a       	sub	r10,48
800039f4:	58 9a       	cp.w	r10,9
800039f6:	fe 98 ff fa 	brls	800039ea <get_arg+0x256>
800039fa:	0e 9b       	mov	r11,r7
800039fc:	40 7c       	lddsp	r12,sp[0x1c]
800039fe:	30 ba       	mov	r10,11
80003a00:	f4 0c 18 00 	cp.b	r12,r10
80003a04:	fe 91 fe f2 	brne	800037e8 <get_arg+0x54>
80003a08:	40 42       	lddsp	r2,sp[0x10]
80003a0a:	17 8c       	ld.ub	r12,r11[0x0]
80003a0c:	0a 32       	cp.w	r2,r5
80003a0e:	5f 4a       	srge	r10
80003a10:	f0 0c 18 00 	cp.b	r12,r8
80003a14:	5f 1c       	srne	r12
80003a16:	f9 ea 00 0a 	and	r10,r12,r10
80003a1a:	f0 0a 18 00 	cp.b	r10,r8
80003a1e:	fe 91 fe cf 	brne	800037bc <get_arg+0x28>
80003a22:	30 08       	mov	r8,0
80003a24:	40 4e       	lddsp	lr,sp[0x10]
80003a26:	17 8a       	ld.ub	r10,r11[0x0]
80003a28:	e2 05 00 21 	add	r1,r1,r5<<0x2
80003a2c:	f0 0a 18 00 	cp.b	r10,r8
80003a30:	fc 09 17 10 	movne	r9,lr
80003a34:	e6 05 00 38 	add	r8,r3,r5<<0x3
80003a38:	06 9e       	mov	lr,r3
80003a3a:	c2 a8       	rjmp	80003a8e <get_arg+0x2fa>
80003a3c:	62 0a       	ld.w	r10,r1[0x0]
80003a3e:	58 3a       	cp.w	r10,3
80003a40:	c1 e0       	breq	80003a7c <get_arg+0x2e8>
80003a42:	e0 89 00 07 	brgt	80003a50 <get_arg+0x2bc>
80003a46:	58 1a       	cp.w	r10,1
80003a48:	c1 a0       	breq	80003a7c <get_arg+0x2e8>
80003a4a:	58 2a       	cp.w	r10,2
80003a4c:	c1 81       	brne	80003a7c <get_arg+0x2e8>
80003a4e:	c0 58       	rjmp	80003a58 <get_arg+0x2c4>
80003a50:	58 5a       	cp.w	r10,5
80003a52:	c0 c0       	breq	80003a6a <get_arg+0x2d6>
80003a54:	c0 b5       	brlt	80003a6a <get_arg+0x2d6>
80003a56:	c1 38       	rjmp	80003a7c <get_arg+0x2e8>
80003a58:	6c 0a       	ld.w	r10,r6[0x0]
80003a5a:	f4 cc ff f8 	sub	r12,r10,-8
80003a5e:	8d 0c       	st.w	r6[0x0],r12
80003a60:	f4 e2 00 00 	ld.d	r2,r10[0]
80003a64:	f0 e3 00 00 	st.d	r8[0],r2
80003a68:	c1 08       	rjmp	80003a88 <get_arg+0x2f4>
80003a6a:	6c 0a       	ld.w	r10,r6[0x0]
80003a6c:	f4 cc ff f8 	sub	r12,r10,-8
80003a70:	8d 0c       	st.w	r6[0x0],r12
80003a72:	f4 e2 00 00 	ld.d	r2,r10[0]
80003a76:	f0 e3 00 00 	st.d	r8[0],r2
80003a7a:	c0 78       	rjmp	80003a88 <get_arg+0x2f4>
80003a7c:	6c 0a       	ld.w	r10,r6[0x0]
80003a7e:	f4 cc ff fc 	sub	r12,r10,-4
80003a82:	8d 0c       	st.w	r6[0x0],r12
80003a84:	74 0a       	ld.w	r10,r10[0x0]
80003a86:	91 0a       	st.w	r8[0x0],r10
80003a88:	2f f5       	sub	r5,-1
80003a8a:	2f 88       	sub	r8,-8
80003a8c:	2f c1       	sub	r1,-4
80003a8e:	12 35       	cp.w	r5,r9
80003a90:	fe 9a ff d6 	brle	80003a3c <get_arg+0x2a8>
80003a94:	1c 93       	mov	r3,lr
80003a96:	40 52       	lddsp	r2,sp[0x14]
80003a98:	40 6e       	lddsp	lr,sp[0x18]
80003a9a:	85 05       	st.w	r2[0x0],r5
80003a9c:	9d 0b       	st.w	lr[0x0],r11
80003a9e:	40 4b       	lddsp	r11,sp[0x10]
80003aa0:	e6 0b 00 3c 	add	r12,r3,r11<<0x3
80003aa4:	2f 8d       	sub	sp,-32
80003aa6:	d8 32       	popm	r0-r7,pc

80003aa8 <__sprint_r>:
80003aa8:	d4 21       	pushm	r4-r7,lr
80003aaa:	14 97       	mov	r7,r10
80003aac:	74 28       	ld.w	r8,r10[0x8]
80003aae:	58 08       	cp.w	r8,0
80003ab0:	c0 41       	brne	80003ab8 <__sprint_r+0x10>
80003ab2:	95 18       	st.w	r10[0x4],r8
80003ab4:	10 9c       	mov	r12,r8
80003ab6:	d8 22       	popm	r4-r7,pc
80003ab8:	e0 a0 18 b4 	rcall	80006c20 <__sfvwrite_r>
80003abc:	30 08       	mov	r8,0
80003abe:	8f 18       	st.w	r7[0x4],r8
80003ac0:	8f 28       	st.w	r7[0x8],r8
80003ac2:	d8 22       	popm	r4-r7,pc

80003ac4 <_vfprintf_r>:
80003ac4:	d4 31       	pushm	r0-r7,lr
80003ac6:	fa cd 06 bc 	sub	sp,sp,1724
80003aca:	51 09       	stdsp	sp[0x40],r9
80003acc:	16 91       	mov	r1,r11
80003ace:	14 97       	mov	r7,r10
80003ad0:	18 95       	mov	r5,r12
80003ad2:	e0 a0 1a 1d 	rcall	80006f0c <_localeconv_r>
80003ad6:	78 0c       	ld.w	r12,r12[0x0]
80003ad8:	50 cc       	stdsp	sp[0x30],r12
80003ada:	58 05       	cp.w	r5,0
80003adc:	c0 70       	breq	80003aea <_vfprintf_r+0x26>
80003ade:	6a 68       	ld.w	r8,r5[0x18]
80003ae0:	58 08       	cp.w	r8,0
80003ae2:	c0 41       	brne	80003aea <_vfprintf_r+0x26>
80003ae4:	0a 9c       	mov	r12,r5
80003ae6:	e0 a0 17 3d 	rcall	80006960 <__sinit>
80003aea:	fe c8 a3 36 	sub	r8,pc,-23754
80003aee:	10 31       	cp.w	r1,r8
80003af0:	c0 31       	brne	80003af6 <_vfprintf_r+0x32>
80003af2:	6a 01       	ld.w	r1,r5[0x0]
80003af4:	c0 c8       	rjmp	80003b0c <_vfprintf_r+0x48>
80003af6:	fe c8 a3 22 	sub	r8,pc,-23774
80003afa:	10 31       	cp.w	r1,r8
80003afc:	c0 31       	brne	80003b02 <_vfprintf_r+0x3e>
80003afe:	6a 11       	ld.w	r1,r5[0x4]
80003b00:	c0 68       	rjmp	80003b0c <_vfprintf_r+0x48>
80003b02:	fe c8 a3 0e 	sub	r8,pc,-23794
80003b06:	10 31       	cp.w	r1,r8
80003b08:	eb f1 00 02 	ld.weq	r1,r5[0x8]
80003b0c:	82 68       	ld.sh	r8,r1[0xc]
80003b0e:	ed b8 00 03 	bld	r8,0x3
80003b12:	c0 41       	brne	80003b1a <_vfprintf_r+0x56>
80003b14:	62 48       	ld.w	r8,r1[0x10]
80003b16:	58 08       	cp.w	r8,0
80003b18:	c0 71       	brne	80003b26 <_vfprintf_r+0x62>
80003b1a:	02 9b       	mov	r11,r1
80003b1c:	0a 9c       	mov	r12,r5
80003b1e:	e0 a0 0f 5d 	rcall	800059d8 <__swsetup_r>
80003b22:	e0 81 0f 54 	brne	800059ca <_vfprintf_r+0x1f06>
80003b26:	82 68       	ld.sh	r8,r1[0xc]
80003b28:	10 99       	mov	r9,r8
80003b2a:	e2 19 00 1a 	andl	r9,0x1a,COH
80003b2e:	58 a9       	cp.w	r9,10
80003b30:	c3 c1       	brne	80003ba8 <_vfprintf_r+0xe4>
80003b32:	82 79       	ld.sh	r9,r1[0xe]
80003b34:	30 0a       	mov	r10,0
80003b36:	f4 09 19 00 	cp.h	r9,r10
80003b3a:	c3 75       	brlt	80003ba8 <_vfprintf_r+0xe4>
80003b3c:	a1 d8       	cbr	r8,0x1
80003b3e:	fb 58 05 d0 	st.h	sp[1488],r8
80003b42:	62 88       	ld.w	r8,r1[0x20]
80003b44:	fb 48 05 e4 	st.w	sp[1508],r8
80003b48:	62 a8       	ld.w	r8,r1[0x28]
80003b4a:	fb 48 05 ec 	st.w	sp[1516],r8
80003b4e:	fa c8 ff bc 	sub	r8,sp,-68
80003b52:	fb 48 05 d4 	st.w	sp[1492],r8
80003b56:	fb 48 05 c4 	st.w	sp[1476],r8
80003b5a:	e0 68 04 00 	mov	r8,1024
80003b5e:	fb 48 05 d8 	st.w	sp[1496],r8
80003b62:	fb 48 05 cc 	st.w	sp[1484],r8
80003b66:	30 08       	mov	r8,0
80003b68:	fb 59 05 d2 	st.h	sp[1490],r9
80003b6c:	0e 9a       	mov	r10,r7
80003b6e:	41 09       	lddsp	r9,sp[0x40]
80003b70:	fa c7 fa 3c 	sub	r7,sp,-1476
80003b74:	fb 48 05 dc 	st.w	sp[1500],r8
80003b78:	0a 9c       	mov	r12,r5
80003b7a:	0e 9b       	mov	r11,r7
80003b7c:	ca 4f       	rcall	80003ac4 <_vfprintf_r>
80003b7e:	50 bc       	stdsp	sp[0x2c],r12
80003b80:	c0 95       	brlt	80003b92 <_vfprintf_r+0xce>
80003b82:	0e 9b       	mov	r11,r7
80003b84:	0a 9c       	mov	r12,r5
80003b86:	e0 a0 16 15 	rcall	800067b0 <_fflush_r>
80003b8a:	40 be       	lddsp	lr,sp[0x2c]
80003b8c:	f9 be 01 ff 	movne	lr,-1
80003b90:	50 be       	stdsp	sp[0x2c],lr
80003b92:	fb 08 05 d0 	ld.sh	r8,sp[1488]
80003b96:	ed b8 00 06 	bld	r8,0x6
80003b9a:	e0 81 0f 1a 	brne	800059ce <_vfprintf_r+0x1f0a>
80003b9e:	82 68       	ld.sh	r8,r1[0xc]
80003ba0:	a7 a8       	sbr	r8,0x6
80003ba2:	a2 68       	st.h	r1[0xc],r8
80003ba4:	e0 8f 0f 15 	bral	800059ce <_vfprintf_r+0x1f0a>
80003ba8:	30 08       	mov	r8,0
80003baa:	fb 48 06 b4 	st.w	sp[1716],r8
80003bae:	fb 48 06 90 	st.w	sp[1680],r8
80003bb2:	fb 48 06 8c 	st.w	sp[1676],r8
80003bb6:	fb 48 06 b0 	st.w	sp[1712],r8
80003bba:	30 08       	mov	r8,0
80003bbc:	30 09       	mov	r9,0
80003bbe:	50 a7       	stdsp	sp[0x28],r7
80003bc0:	50 78       	stdsp	sp[0x1c],r8
80003bc2:	fa c3 f9 e0 	sub	r3,sp,-1568
80003bc6:	3f f8       	mov	r8,-1
80003bc8:	50 59       	stdsp	sp[0x14],r9
80003bca:	fb 43 06 88 	st.w	sp[1672],r3
80003bce:	fb 48 05 44 	st.w	sp[1348],r8
80003bd2:	12 9c       	mov	r12,r9
80003bd4:	50 69       	stdsp	sp[0x18],r9
80003bd6:	50 d9       	stdsp	sp[0x34],r9
80003bd8:	50 e9       	stdsp	sp[0x38],r9
80003bda:	50 b9       	stdsp	sp[0x2c],r9
80003bdc:	12 97       	mov	r7,r9
80003bde:	0a 94       	mov	r4,r5
80003be0:	40 a2       	lddsp	r2,sp[0x28]
80003be2:	32 5a       	mov	r10,37
80003be4:	30 08       	mov	r8,0
80003be6:	c0 28       	rjmp	80003bea <_vfprintf_r+0x126>
80003be8:	2f f2       	sub	r2,-1
80003bea:	05 89       	ld.ub	r9,r2[0x0]
80003bec:	f0 09 18 00 	cp.b	r9,r8
80003bf0:	5f 1b       	srne	r11
80003bf2:	f4 09 18 00 	cp.b	r9,r10
80003bf6:	5f 19       	srne	r9
80003bf8:	f3 eb 00 0b 	and	r11,r9,r11
80003bfc:	f0 0b 18 00 	cp.b	r11,r8
80003c00:	cf 41       	brne	80003be8 <_vfprintf_r+0x124>
80003c02:	40 ab       	lddsp	r11,sp[0x28]
80003c04:	e4 0b 01 06 	sub	r6,r2,r11
80003c08:	c1 e0       	breq	80003c44 <_vfprintf_r+0x180>
80003c0a:	fa f8 06 90 	ld.w	r8,sp[1680]
80003c0e:	0c 08       	add	r8,r6
80003c10:	87 0b       	st.w	r3[0x0],r11
80003c12:	fb 48 06 90 	st.w	sp[1680],r8
80003c16:	87 16       	st.w	r3[0x4],r6
80003c18:	fa f8 06 8c 	ld.w	r8,sp[1676]
80003c1c:	2f f8       	sub	r8,-1
80003c1e:	fb 48 06 8c 	st.w	sp[1676],r8
80003c22:	58 78       	cp.w	r8,7
80003c24:	e0 89 00 04 	brgt	80003c2c <_vfprintf_r+0x168>
80003c28:	2f 83       	sub	r3,-8
80003c2a:	c0 a8       	rjmp	80003c3e <_vfprintf_r+0x17a>
80003c2c:	fa ca f9 78 	sub	r10,sp,-1672
80003c30:	02 9b       	mov	r11,r1
80003c32:	08 9c       	mov	r12,r4
80003c34:	c3 af       	rcall	80003aa8 <__sprint_r>
80003c36:	e0 81 0e c6 	brne	800059c2 <_vfprintf_r+0x1efe>
80003c3a:	fa c3 f9 e0 	sub	r3,sp,-1568
80003c3e:	40 ba       	lddsp	r10,sp[0x2c]
80003c40:	0c 0a       	add	r10,r6
80003c42:	50 ba       	stdsp	sp[0x2c],r10
80003c44:	05 89       	ld.ub	r9,r2[0x0]
80003c46:	30 08       	mov	r8,0
80003c48:	f0 09 18 00 	cp.b	r9,r8
80003c4c:	e0 80 0e aa 	breq	800059a0 <_vfprintf_r+0x1edc>
80003c50:	30 09       	mov	r9,0
80003c52:	fb 68 06 bb 	st.b	sp[1723],r8
80003c56:	0e 96       	mov	r6,r7
80003c58:	e4 c8 ff ff 	sub	r8,r2,-1
80003c5c:	3f fe       	mov	lr,-1
80003c5e:	50 93       	stdsp	sp[0x24],r3
80003c60:	50 41       	stdsp	sp[0x10],r1
80003c62:	0e 93       	mov	r3,r7
80003c64:	04 91       	mov	r1,r2
80003c66:	50 89       	stdsp	sp[0x20],r9
80003c68:	50 a8       	stdsp	sp[0x28],r8
80003c6a:	50 2e       	stdsp	sp[0x8],lr
80003c6c:	50 39       	stdsp	sp[0xc],r9
80003c6e:	12 95       	mov	r5,r9
80003c70:	12 90       	mov	r0,r9
80003c72:	10 97       	mov	r7,r8
80003c74:	08 92       	mov	r2,r4
80003c76:	c0 78       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003c78:	3f fc       	mov	r12,-1
80003c7a:	08 97       	mov	r7,r4
80003c7c:	50 2c       	stdsp	sp[0x8],r12
80003c7e:	c0 38       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003c80:	30 0b       	mov	r11,0
80003c82:	50 3b       	stdsp	sp[0xc],r11
80003c84:	0f 38       	ld.ub	r8,r7++
80003c86:	c0 28       	rjmp	80003c8a <_vfprintf_r+0x1c6>
80003c88:	12 90       	mov	r0,r9
80003c8a:	f0 c9 00 20 	sub	r9,r8,32
80003c8e:	e0 49 00 58 	cp.w	r9,88
80003c92:	e0 8b 0a 30 	brhi	800050f2 <_vfprintf_r+0x162e>
80003c96:	fe ca a8 8a 	sub	r10,pc,-22390
80003c9a:	f4 09 03 2f 	ld.w	pc,r10[r9<<0x2]
80003c9e:	50 a7       	stdsp	sp[0x28],r7
80003ca0:	50 80       	stdsp	sp[0x20],r0
80003ca2:	0c 97       	mov	r7,r6
80003ca4:	04 94       	mov	r4,r2
80003ca6:	06 96       	mov	r6,r3
80003ca8:	02 92       	mov	r2,r1
80003caa:	fe c9 a6 62 	sub	r9,pc,-22942
80003cae:	40 93       	lddsp	r3,sp[0x24]
80003cb0:	10 90       	mov	r0,r8
80003cb2:	40 41       	lddsp	r1,sp[0x10]
80003cb4:	50 d9       	stdsp	sp[0x34],r9
80003cb6:	e0 8f 08 8e 	bral	80004dd2 <_vfprintf_r+0x130e>
80003cba:	30 08       	mov	r8,0
80003cbc:	fb 39 06 bb 	ld.ub	r9,sp[1723]
80003cc0:	f0 09 18 00 	cp.b	r9,r8
80003cc4:	ce 01       	brne	80003c84 <_vfprintf_r+0x1c0>
80003cc6:	32 08       	mov	r8,32
80003cc8:	c6 e8       	rjmp	80003da4 <_vfprintf_r+0x2e0>
80003cca:	a1 a5       	sbr	r5,0x0
80003ccc:	cd cb       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003cce:	0f 89       	ld.ub	r9,r7[0x0]
80003cd0:	f2 c8 00 30 	sub	r8,r9,48
80003cd4:	58 98       	cp.w	r8,9
80003cd6:	e0 8b 00 1d 	brhi	80003d10 <_vfprintf_r+0x24c>
80003cda:	ee c8 ff ff 	sub	r8,r7,-1
80003cde:	30 0b       	mov	r11,0
80003ce0:	23 09       	sub	r9,48
80003ce2:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
80003ce6:	f2 0b 00 1b 	add	r11,r9,r11<<0x1
80003cea:	11 39       	ld.ub	r9,r8++
80003cec:	f2 ca 00 30 	sub	r10,r9,48
80003cf0:	58 9a       	cp.w	r10,9
80003cf2:	fe 98 ff f7 	brls	80003ce0 <_vfprintf_r+0x21c>
80003cf6:	e0 49 00 24 	cp.w	r9,36
80003cfa:	cc 31       	brne	80003c80 <_vfprintf_r+0x1bc>
80003cfc:	e0 4b 00 20 	cp.w	r11,32
80003d00:	e0 89 0e 60 	brgt	800059c0 <_vfprintf_r+0x1efc>
80003d04:	20 1b       	sub	r11,1
80003d06:	fa f9 06 b4 	ld.w	r9,sp[1716]
80003d0a:	12 3b       	cp.w	r11,r9
80003d0c:	c0 95       	brlt	80003d1e <_vfprintf_r+0x25a>
80003d0e:	c1 08       	rjmp	80003d2e <_vfprintf_r+0x26a>
80003d10:	fa f9 06 b4 	ld.w	r9,sp[1716]
80003d14:	ec ca ff ff 	sub	r10,r6,-1
80003d18:	12 36       	cp.w	r6,r9
80003d1a:	c1 f5       	brlt	80003d58 <_vfprintf_r+0x294>
80003d1c:	c2 68       	rjmp	80003d68 <_vfprintf_r+0x2a4>
80003d1e:	fa ce f9 44 	sub	lr,sp,-1724
80003d22:	10 97       	mov	r7,r8
80003d24:	fc 0b 00 3b 	add	r11,lr,r11<<0x3
80003d28:	f6 f0 fd 88 	ld.w	r0,r11[-632]
80003d2c:	c3 58       	rjmp	80003d96 <_vfprintf_r+0x2d2>
80003d2e:	10 97       	mov	r7,r8
80003d30:	fa c8 f9 50 	sub	r8,sp,-1712
80003d34:	1a d8       	st.w	--sp,r8
80003d36:	fa c8 fa b8 	sub	r8,sp,-1352
80003d3a:	1a d8       	st.w	--sp,r8
80003d3c:	fa c8 fb b4 	sub	r8,sp,-1100
80003d40:	02 9a       	mov	r10,r1
80003d42:	1a d8       	st.w	--sp,r8
80003d44:	04 9c       	mov	r12,r2
80003d46:	fa c8 f9 40 	sub	r8,sp,-1728
80003d4a:	fa c9 ff b4 	sub	r9,sp,-76
80003d4e:	fe b0 fd 23 	rcall	80003794 <get_arg>
80003d52:	2f dd       	sub	sp,-12
80003d54:	78 00       	ld.w	r0,r12[0x0]
80003d56:	c2 08       	rjmp	80003d96 <_vfprintf_r+0x2d2>
80003d58:	fa cc f9 44 	sub	r12,sp,-1724
80003d5c:	14 96       	mov	r6,r10
80003d5e:	f8 03 00 38 	add	r8,r12,r3<<0x3
80003d62:	f0 f0 fd 88 	ld.w	r0,r8[-632]
80003d66:	c1 88       	rjmp	80003d96 <_vfprintf_r+0x2d2>
80003d68:	41 08       	lddsp	r8,sp[0x40]
80003d6a:	59 f9       	cp.w	r9,31
80003d6c:	e0 89 00 11 	brgt	80003d8e <_vfprintf_r+0x2ca>
80003d70:	f0 cb ff fc 	sub	r11,r8,-4
80003d74:	51 0b       	stdsp	sp[0x40],r11
80003d76:	70 00       	ld.w	r0,r8[0x0]
80003d78:	fa cb f9 44 	sub	r11,sp,-1724
80003d7c:	f6 09 00 38 	add	r8,r11,r9<<0x3
80003d80:	f1 40 fd 88 	st.w	r8[-632],r0
80003d84:	2f f9       	sub	r9,-1
80003d86:	14 96       	mov	r6,r10
80003d88:	fb 49 06 b4 	st.w	sp[1716],r9
80003d8c:	c0 58       	rjmp	80003d96 <_vfprintf_r+0x2d2>
80003d8e:	70 00       	ld.w	r0,r8[0x0]
80003d90:	14 96       	mov	r6,r10
80003d92:	2f c8       	sub	r8,-4
80003d94:	51 08       	stdsp	sp[0x40],r8
80003d96:	58 00       	cp.w	r0,0
80003d98:	fe 94 ff 76 	brge	80003c84 <_vfprintf_r+0x1c0>
80003d9c:	5c 30       	neg	r0
80003d9e:	a3 a5       	sbr	r5,0x2
80003da0:	c7 2b       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003da2:	32 b8       	mov	r8,43
80003da4:	fb 68 06 bb 	st.b	sp[1723],r8
80003da8:	c6 eb       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003daa:	0f 38       	ld.ub	r8,r7++
80003dac:	e0 48 00 2a 	cp.w	r8,42
80003db0:	c0 30       	breq	80003db6 <_vfprintf_r+0x2f2>
80003db2:	30 09       	mov	r9,0
80003db4:	c7 98       	rjmp	80003ea6 <_vfprintf_r+0x3e2>
80003db6:	0f 88       	ld.ub	r8,r7[0x0]
80003db8:	f0 c9 00 30 	sub	r9,r8,48
80003dbc:	58 99       	cp.w	r9,9
80003dbe:	e0 8b 00 1f 	brhi	80003dfc <_vfprintf_r+0x338>
80003dc2:	ee c4 ff ff 	sub	r4,r7,-1
80003dc6:	30 0b       	mov	r11,0
80003dc8:	23 08       	sub	r8,48
80003dca:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
80003dce:	f0 0b 00 1b 	add	r11,r8,r11<<0x1
80003dd2:	09 38       	ld.ub	r8,r4++
80003dd4:	f0 c9 00 30 	sub	r9,r8,48
80003dd8:	58 99       	cp.w	r9,9
80003dda:	fe 98 ff f7 	brls	80003dc8 <_vfprintf_r+0x304>
80003dde:	e0 48 00 24 	cp.w	r8,36
80003de2:	fe 91 ff 4f 	brne	80003c80 <_vfprintf_r+0x1bc>
80003de6:	e0 4b 00 20 	cp.w	r11,32
80003dea:	e0 89 0d eb 	brgt	800059c0 <_vfprintf_r+0x1efc>
80003dee:	20 1b       	sub	r11,1
80003df0:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003df4:	10 3b       	cp.w	r11,r8
80003df6:	c0 a5       	brlt	80003e0a <_vfprintf_r+0x346>
80003df8:	c1 18       	rjmp	80003e1a <_vfprintf_r+0x356>
80003dfa:	d7 03       	nop
80003dfc:	fa fa 06 b4 	ld.w	r10,sp[1716]
80003e00:	ec c9 ff ff 	sub	r9,r6,-1
80003e04:	14 36       	cp.w	r6,r10
80003e06:	c1 f5       	brlt	80003e44 <_vfprintf_r+0x380>
80003e08:	c2 88       	rjmp	80003e58 <_vfprintf_r+0x394>
80003e0a:	fa ca f9 44 	sub	r10,sp,-1724
80003e0e:	f4 0b 00 3b 	add	r11,r10,r11<<0x3
80003e12:	f6 fb fd 88 	ld.w	r11,r11[-632]
80003e16:	50 2b       	stdsp	sp[0x8],r11
80003e18:	c3 c8       	rjmp	80003e90 <_vfprintf_r+0x3cc>
80003e1a:	fa c8 f9 50 	sub	r8,sp,-1712
80003e1e:	1a d8       	st.w	--sp,r8
80003e20:	fa c8 fa b8 	sub	r8,sp,-1352
80003e24:	1a d8       	st.w	--sp,r8
80003e26:	fa c8 fb b4 	sub	r8,sp,-1100
80003e2a:	02 9a       	mov	r10,r1
80003e2c:	1a d8       	st.w	--sp,r8
80003e2e:	04 9c       	mov	r12,r2
80003e30:	fa c8 f9 40 	sub	r8,sp,-1728
80003e34:	fa c9 ff b4 	sub	r9,sp,-76
80003e38:	fe b0 fc ae 	rcall	80003794 <get_arg>
80003e3c:	2f dd       	sub	sp,-12
80003e3e:	78 0c       	ld.w	r12,r12[0x0]
80003e40:	50 2c       	stdsp	sp[0x8],r12
80003e42:	c2 78       	rjmp	80003e90 <_vfprintf_r+0x3cc>
80003e44:	12 96       	mov	r6,r9
80003e46:	0e 94       	mov	r4,r7
80003e48:	fa c9 f9 44 	sub	r9,sp,-1724
80003e4c:	f2 03 00 38 	add	r8,r9,r3<<0x3
80003e50:	f0 f8 fd 88 	ld.w	r8,r8[-632]
80003e54:	50 28       	stdsp	sp[0x8],r8
80003e56:	c1 d8       	rjmp	80003e90 <_vfprintf_r+0x3cc>
80003e58:	41 08       	lddsp	r8,sp[0x40]
80003e5a:	59 fa       	cp.w	r10,31
80003e5c:	e0 89 00 14 	brgt	80003e84 <_vfprintf_r+0x3c0>
80003e60:	f0 cb ff fc 	sub	r11,r8,-4
80003e64:	70 08       	ld.w	r8,r8[0x0]
80003e66:	51 0b       	stdsp	sp[0x40],r11
80003e68:	50 28       	stdsp	sp[0x8],r8
80003e6a:	fa c6 f9 44 	sub	r6,sp,-1724
80003e6e:	40 2e       	lddsp	lr,sp[0x8]
80003e70:	ec 0a 00 38 	add	r8,r6,r10<<0x3
80003e74:	f1 4e fd 88 	st.w	r8[-632],lr
80003e78:	2f fa       	sub	r10,-1
80003e7a:	0e 94       	mov	r4,r7
80003e7c:	fb 4a 06 b4 	st.w	sp[1716],r10
80003e80:	12 96       	mov	r6,r9
80003e82:	c0 78       	rjmp	80003e90 <_vfprintf_r+0x3cc>
80003e84:	70 0c       	ld.w	r12,r8[0x0]
80003e86:	0e 94       	mov	r4,r7
80003e88:	2f c8       	sub	r8,-4
80003e8a:	50 2c       	stdsp	sp[0x8],r12
80003e8c:	12 96       	mov	r6,r9
80003e8e:	51 08       	stdsp	sp[0x40],r8
80003e90:	40 2b       	lddsp	r11,sp[0x8]
80003e92:	58 0b       	cp.w	r11,0
80003e94:	fe 95 fe f2 	brlt	80003c78 <_vfprintf_r+0x1b4>
80003e98:	08 97       	mov	r7,r4
80003e9a:	cf 5a       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003e9c:	f2 09 00 29 	add	r9,r9,r9<<0x2
80003ea0:	0f 38       	ld.ub	r8,r7++
80003ea2:	f4 09 00 19 	add	r9,r10,r9<<0x1
80003ea6:	f0 ca 00 30 	sub	r10,r8,48
80003eaa:	58 9a       	cp.w	r10,9
80003eac:	fe 98 ff f8 	brls	80003e9c <_vfprintf_r+0x3d8>
80003eb0:	3f fa       	mov	r10,-1
80003eb2:	f2 0a 0c 49 	max	r9,r9,r10
80003eb6:	50 29       	stdsp	sp[0x8],r9
80003eb8:	ce 9a       	rjmp	80003c8a <_vfprintf_r+0x1c6>
80003eba:	a7 b5       	sbr	r5,0x7
80003ebc:	ce 4a       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003ebe:	30 09       	mov	r9,0
80003ec0:	23 08       	sub	r8,48
80003ec2:	f2 09 00 29 	add	r9,r9,r9<<0x2
80003ec6:	f0 09 00 19 	add	r9,r8,r9<<0x1
80003eca:	0f 38       	ld.ub	r8,r7++
80003ecc:	f0 ca 00 30 	sub	r10,r8,48
80003ed0:	58 9a       	cp.w	r10,9
80003ed2:	fe 98 ff f7 	brls	80003ec0 <_vfprintf_r+0x3fc>
80003ed6:	e0 48 00 24 	cp.w	r8,36
80003eda:	fe 91 fe d7 	brne	80003c88 <_vfprintf_r+0x1c4>
80003ede:	e0 49 00 20 	cp.w	r9,32
80003ee2:	e0 89 0d 6f 	brgt	800059c0 <_vfprintf_r+0x1efc>
80003ee6:	f2 c3 00 01 	sub	r3,r9,1
80003eea:	30 19       	mov	r9,1
80003eec:	50 39       	stdsp	sp[0xc],r9
80003eee:	cc ba       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003ef0:	a3 b5       	sbr	r5,0x3
80003ef2:	cc 9a       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003ef4:	a7 a5       	sbr	r5,0x6
80003ef6:	cc 7a       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003ef8:	0a 98       	mov	r8,r5
80003efa:	a5 b5       	sbr	r5,0x5
80003efc:	a5 a8       	sbr	r8,0x4
80003efe:	0f 89       	ld.ub	r9,r7[0x0]
80003f00:	36 ce       	mov	lr,108
80003f02:	fc 09 18 00 	cp.b	r9,lr
80003f06:	f7 b7 00 ff 	subeq	r7,-1
80003f0a:	f0 05 17 10 	movne	r5,r8
80003f0e:	cb ba       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003f10:	a5 b5       	sbr	r5,0x5
80003f12:	cb 9a       	rjmp	80003c84 <_vfprintf_r+0x1c0>
80003f14:	50 a7       	stdsp	sp[0x28],r7
80003f16:	50 80       	stdsp	sp[0x20],r0
80003f18:	0c 97       	mov	r7,r6
80003f1a:	10 90       	mov	r0,r8
80003f1c:	06 96       	mov	r6,r3
80003f1e:	04 94       	mov	r4,r2
80003f20:	40 93       	lddsp	r3,sp[0x24]
80003f22:	02 92       	mov	r2,r1
80003f24:	0e 99       	mov	r9,r7
80003f26:	40 41       	lddsp	r1,sp[0x10]
80003f28:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003f2c:	40 3c       	lddsp	r12,sp[0xc]
80003f2e:	58 0c       	cp.w	r12,0
80003f30:	c1 d0       	breq	80003f6a <_vfprintf_r+0x4a6>
80003f32:	10 36       	cp.w	r6,r8
80003f34:	c0 64       	brge	80003f40 <_vfprintf_r+0x47c>
80003f36:	fa cb f9 44 	sub	r11,sp,-1724
80003f3a:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003f3e:	c1 d8       	rjmp	80003f78 <_vfprintf_r+0x4b4>
80003f40:	fa c8 f9 50 	sub	r8,sp,-1712
80003f44:	1a d8       	st.w	--sp,r8
80003f46:	fa c8 fa b8 	sub	r8,sp,-1352
80003f4a:	1a d8       	st.w	--sp,r8
80003f4c:	fa c8 fb b4 	sub	r8,sp,-1100
80003f50:	1a d8       	st.w	--sp,r8
80003f52:	fa c8 f9 40 	sub	r8,sp,-1728
80003f56:	fa c9 ff b4 	sub	r9,sp,-76
80003f5a:	04 9a       	mov	r10,r2
80003f5c:	0c 9b       	mov	r11,r6
80003f5e:	08 9c       	mov	r12,r4
80003f60:	fe b0 fc 1a 	rcall	80003794 <get_arg>
80003f64:	2f dd       	sub	sp,-12
80003f66:	19 b8       	ld.ub	r8,r12[0x3]
80003f68:	c2 28       	rjmp	80003fac <_vfprintf_r+0x4e8>
80003f6a:	2f f7       	sub	r7,-1
80003f6c:	10 39       	cp.w	r9,r8
80003f6e:	c0 84       	brge	80003f7e <_vfprintf_r+0x4ba>
80003f70:	fa ca f9 44 	sub	r10,sp,-1724
80003f74:	f4 06 00 36 	add	r6,r10,r6<<0x3
80003f78:	ed 38 fd 8b 	ld.ub	r8,r6[-629]
80003f7c:	c1 88       	rjmp	80003fac <_vfprintf_r+0x4e8>
80003f7e:	41 09       	lddsp	r9,sp[0x40]
80003f80:	59 f8       	cp.w	r8,31
80003f82:	e0 89 00 12 	brgt	80003fa6 <_vfprintf_r+0x4e2>
80003f86:	f2 ca ff fc 	sub	r10,r9,-4
80003f8a:	51 0a       	stdsp	sp[0x40],r10
80003f8c:	72 09       	ld.w	r9,r9[0x0]
80003f8e:	fa c6 f9 44 	sub	r6,sp,-1724
80003f92:	ec 08 00 3a 	add	r10,r6,r8<<0x3
80003f96:	2f f8       	sub	r8,-1
80003f98:	f5 49 fd 88 	st.w	r10[-632],r9
80003f9c:	fb 48 06 b4 	st.w	sp[1716],r8
80003fa0:	f1 d9 c0 08 	bfextu	r8,r9,0x0,0x8
80003fa4:	c0 48       	rjmp	80003fac <_vfprintf_r+0x4e8>
80003fa6:	13 b8       	ld.ub	r8,r9[0x3]
80003fa8:	2f c9       	sub	r9,-4
80003faa:	51 09       	stdsp	sp[0x40],r9
80003fac:	fb 68 06 60 	st.b	sp[1632],r8
80003fb0:	30 0e       	mov	lr,0
80003fb2:	30 08       	mov	r8,0
80003fb4:	30 12       	mov	r2,1
80003fb6:	fb 68 06 bb 	st.b	sp[1723],r8
80003fba:	50 2e       	stdsp	sp[0x8],lr
80003fbc:	e0 8f 08 ad 	bral	80005116 <_vfprintf_r+0x1652>
80003fc0:	50 a7       	stdsp	sp[0x28],r7
80003fc2:	50 80       	stdsp	sp[0x20],r0
80003fc4:	0c 97       	mov	r7,r6
80003fc6:	04 94       	mov	r4,r2
80003fc8:	06 96       	mov	r6,r3
80003fca:	02 92       	mov	r2,r1
80003fcc:	40 93       	lddsp	r3,sp[0x24]
80003fce:	10 90       	mov	r0,r8
80003fd0:	40 41       	lddsp	r1,sp[0x10]
80003fd2:	a5 a5       	sbr	r5,0x4
80003fd4:	c0 a8       	rjmp	80003fe8 <_vfprintf_r+0x524>
80003fd6:	50 a7       	stdsp	sp[0x28],r7
80003fd8:	50 80       	stdsp	sp[0x20],r0
80003fda:	0c 97       	mov	r7,r6
80003fdc:	04 94       	mov	r4,r2
80003fde:	06 96       	mov	r6,r3
80003fe0:	02 92       	mov	r2,r1
80003fe2:	40 93       	lddsp	r3,sp[0x24]
80003fe4:	10 90       	mov	r0,r8
80003fe6:	40 41       	lddsp	r1,sp[0x10]
80003fe8:	ed b5 00 05 	bld	r5,0x5
80003fec:	c5 11       	brne	8000408e <_vfprintf_r+0x5ca>
80003fee:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003ff2:	40 3c       	lddsp	r12,sp[0xc]
80003ff4:	58 0c       	cp.w	r12,0
80003ff6:	c1 e0       	breq	80004032 <_vfprintf_r+0x56e>
80003ff8:	10 36       	cp.w	r6,r8
80003ffa:	c0 64       	brge	80004006 <_vfprintf_r+0x542>
80003ffc:	fa cb f9 44 	sub	r11,sp,-1724
80004000:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004004:	c2 08       	rjmp	80004044 <_vfprintf_r+0x580>
80004006:	fa c8 f9 50 	sub	r8,sp,-1712
8000400a:	1a d8       	st.w	--sp,r8
8000400c:	fa c8 fa b8 	sub	r8,sp,-1352
80004010:	0c 9b       	mov	r11,r6
80004012:	1a d8       	st.w	--sp,r8
80004014:	fa c8 fb b4 	sub	r8,sp,-1100
80004018:	1a d8       	st.w	--sp,r8
8000401a:	fa c9 ff b4 	sub	r9,sp,-76
8000401e:	fa c8 f9 40 	sub	r8,sp,-1728
80004022:	04 9a       	mov	r10,r2
80004024:	08 9c       	mov	r12,r4
80004026:	fe b0 fb b7 	rcall	80003794 <get_arg>
8000402a:	2f dd       	sub	sp,-12
8000402c:	78 1b       	ld.w	r11,r12[0x4]
8000402e:	78 09       	ld.w	r9,r12[0x0]
80004030:	c2 b8       	rjmp	80004086 <_vfprintf_r+0x5c2>
80004032:	ee ca ff ff 	sub	r10,r7,-1
80004036:	10 37       	cp.w	r7,r8
80004038:	c0 b4       	brge	8000404e <_vfprintf_r+0x58a>
8000403a:	fa c9 f9 44 	sub	r9,sp,-1724
8000403e:	14 97       	mov	r7,r10
80004040:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004044:	ec fb fd 8c 	ld.w	r11,r6[-628]
80004048:	ec f9 fd 88 	ld.w	r9,r6[-632]
8000404c:	c1 d8       	rjmp	80004086 <_vfprintf_r+0x5c2>
8000404e:	41 09       	lddsp	r9,sp[0x40]
80004050:	59 f8       	cp.w	r8,31
80004052:	e0 89 00 14 	brgt	8000407a <_vfprintf_r+0x5b6>
80004056:	f2 cb ff f8 	sub	r11,r9,-8
8000405a:	51 0b       	stdsp	sp[0x40],r11
8000405c:	fa c6 f9 44 	sub	r6,sp,-1724
80004060:	72 1b       	ld.w	r11,r9[0x4]
80004062:	ec 08 00 3c 	add	r12,r6,r8<<0x3
80004066:	72 09       	ld.w	r9,r9[0x0]
80004068:	f9 4b fd 8c 	st.w	r12[-628],r11
8000406c:	f9 49 fd 88 	st.w	r12[-632],r9
80004070:	2f f8       	sub	r8,-1
80004072:	14 97       	mov	r7,r10
80004074:	fb 48 06 b4 	st.w	sp[1716],r8
80004078:	c0 78       	rjmp	80004086 <_vfprintf_r+0x5c2>
8000407a:	f2 c8 ff f8 	sub	r8,r9,-8
8000407e:	72 1b       	ld.w	r11,r9[0x4]
80004080:	14 97       	mov	r7,r10
80004082:	51 08       	stdsp	sp[0x40],r8
80004084:	72 09       	ld.w	r9,r9[0x0]
80004086:	16 98       	mov	r8,r11
80004088:	fa e9 00 00 	st.d	sp[0],r8
8000408c:	ca e8       	rjmp	800041e8 <_vfprintf_r+0x724>
8000408e:	ed b5 00 04 	bld	r5,0x4
80004092:	c1 71       	brne	800040c0 <_vfprintf_r+0x5fc>
80004094:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004098:	40 3e       	lddsp	lr,sp[0xc]
8000409a:	58 0e       	cp.w	lr,0
8000409c:	c0 80       	breq	800040ac <_vfprintf_r+0x5e8>
8000409e:	10 36       	cp.w	r6,r8
800040a0:	c6 94       	brge	80004172 <_vfprintf_r+0x6ae>
800040a2:	fa cc f9 44 	sub	r12,sp,-1724
800040a6:	f8 06 00 36 	add	r6,r12,r6<<0x3
800040aa:	c8 28       	rjmp	800041ae <_vfprintf_r+0x6ea>
800040ac:	ee ca ff ff 	sub	r10,r7,-1
800040b0:	10 37       	cp.w	r7,r8
800040b2:	e0 84 00 81 	brge	800041b4 <_vfprintf_r+0x6f0>
800040b6:	fa cb f9 44 	sub	r11,sp,-1724
800040ba:	f6 06 00 36 	add	r6,r11,r6<<0x3
800040be:	c7 78       	rjmp	800041ac <_vfprintf_r+0x6e8>
800040c0:	ed b5 00 06 	bld	r5,0x6
800040c4:	c4 b1       	brne	8000415a <_vfprintf_r+0x696>
800040c6:	fa f8 06 b4 	ld.w	r8,sp[1716]
800040ca:	40 3c       	lddsp	r12,sp[0xc]
800040cc:	58 0c       	cp.w	r12,0
800040ce:	c1 d0       	breq	80004108 <_vfprintf_r+0x644>
800040d0:	10 36       	cp.w	r6,r8
800040d2:	c0 64       	brge	800040de <_vfprintf_r+0x61a>
800040d4:	fa cb f9 44 	sub	r11,sp,-1724
800040d8:	f6 06 00 36 	add	r6,r11,r6<<0x3
800040dc:	c1 f8       	rjmp	8000411a <_vfprintf_r+0x656>
800040de:	fa c8 f9 50 	sub	r8,sp,-1712
800040e2:	1a d8       	st.w	--sp,r8
800040e4:	fa c8 fa b8 	sub	r8,sp,-1352
800040e8:	1a d8       	st.w	--sp,r8
800040ea:	fa c8 fb b4 	sub	r8,sp,-1100
800040ee:	1a d8       	st.w	--sp,r8
800040f0:	fa c8 f9 40 	sub	r8,sp,-1728
800040f4:	fa c9 ff b4 	sub	r9,sp,-76
800040f8:	04 9a       	mov	r10,r2
800040fa:	0c 9b       	mov	r11,r6
800040fc:	08 9c       	mov	r12,r4
800040fe:	fe b0 fb 4b 	rcall	80003794 <get_arg>
80004102:	2f dd       	sub	sp,-12
80004104:	98 18       	ld.sh	r8,r12[0x2]
80004106:	c2 68       	rjmp	80004152 <_vfprintf_r+0x68e>
80004108:	ee ca ff ff 	sub	r10,r7,-1
8000410c:	10 37       	cp.w	r7,r8
8000410e:	c0 94       	brge	80004120 <_vfprintf_r+0x65c>
80004110:	fa c9 f9 44 	sub	r9,sp,-1724
80004114:	14 97       	mov	r7,r10
80004116:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000411a:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
8000411e:	c1 a8       	rjmp	80004152 <_vfprintf_r+0x68e>
80004120:	41 09       	lddsp	r9,sp[0x40]
80004122:	59 f8       	cp.w	r8,31
80004124:	e0 89 00 13 	brgt	8000414a <_vfprintf_r+0x686>
80004128:	f2 cb ff fc 	sub	r11,r9,-4
8000412c:	51 0b       	stdsp	sp[0x40],r11
8000412e:	72 09       	ld.w	r9,r9[0x0]
80004130:	fa c6 f9 44 	sub	r6,sp,-1724
80004134:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004138:	2f f8       	sub	r8,-1
8000413a:	f7 49 fd 88 	st.w	r11[-632],r9
8000413e:	fb 48 06 b4 	st.w	sp[1716],r8
80004142:	14 97       	mov	r7,r10
80004144:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004148:	c0 58       	rjmp	80004152 <_vfprintf_r+0x68e>
8000414a:	92 18       	ld.sh	r8,r9[0x2]
8000414c:	14 97       	mov	r7,r10
8000414e:	2f c9       	sub	r9,-4
80004150:	51 09       	stdsp	sp[0x40],r9
80004152:	50 18       	stdsp	sp[0x4],r8
80004154:	bf 58       	asr	r8,0x1f
80004156:	50 08       	stdsp	sp[0x0],r8
80004158:	c4 88       	rjmp	800041e8 <_vfprintf_r+0x724>
8000415a:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000415e:	40 3c       	lddsp	r12,sp[0xc]
80004160:	58 0c       	cp.w	r12,0
80004162:	c1 d0       	breq	8000419c <_vfprintf_r+0x6d8>
80004164:	10 36       	cp.w	r6,r8
80004166:	c0 64       	brge	80004172 <_vfprintf_r+0x6ae>
80004168:	fa cb f9 44 	sub	r11,sp,-1724
8000416c:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004170:	c1 f8       	rjmp	800041ae <_vfprintf_r+0x6ea>
80004172:	fa c8 f9 50 	sub	r8,sp,-1712
80004176:	1a d8       	st.w	--sp,r8
80004178:	fa c8 fa b8 	sub	r8,sp,-1352
8000417c:	0c 9b       	mov	r11,r6
8000417e:	1a d8       	st.w	--sp,r8
80004180:	fa c8 fb b4 	sub	r8,sp,-1100
80004184:	04 9a       	mov	r10,r2
80004186:	1a d8       	st.w	--sp,r8
80004188:	08 9c       	mov	r12,r4
8000418a:	fa c8 f9 40 	sub	r8,sp,-1728
8000418e:	fa c9 ff b4 	sub	r9,sp,-76
80004192:	fe b0 fb 01 	rcall	80003794 <get_arg>
80004196:	2f dd       	sub	sp,-12
80004198:	78 0b       	ld.w	r11,r12[0x0]
8000419a:	c2 48       	rjmp	800041e2 <_vfprintf_r+0x71e>
8000419c:	ee ca ff ff 	sub	r10,r7,-1
800041a0:	10 37       	cp.w	r7,r8
800041a2:	c0 94       	brge	800041b4 <_vfprintf_r+0x6f0>
800041a4:	fa c9 f9 44 	sub	r9,sp,-1724
800041a8:	f2 06 00 36 	add	r6,r9,r6<<0x3
800041ac:	14 97       	mov	r7,r10
800041ae:	ec fb fd 88 	ld.w	r11,r6[-632]
800041b2:	c1 88       	rjmp	800041e2 <_vfprintf_r+0x71e>
800041b4:	41 09       	lddsp	r9,sp[0x40]
800041b6:	59 f8       	cp.w	r8,31
800041b8:	e0 89 00 11 	brgt	800041da <_vfprintf_r+0x716>
800041bc:	f2 cb ff fc 	sub	r11,r9,-4
800041c0:	51 0b       	stdsp	sp[0x40],r11
800041c2:	fa c6 f9 44 	sub	r6,sp,-1724
800041c6:	72 0b       	ld.w	r11,r9[0x0]
800041c8:	ec 08 00 39 	add	r9,r6,r8<<0x3
800041cc:	f3 4b fd 88 	st.w	r9[-632],r11
800041d0:	2f f8       	sub	r8,-1
800041d2:	14 97       	mov	r7,r10
800041d4:	fb 48 06 b4 	st.w	sp[1716],r8
800041d8:	c0 58       	rjmp	800041e2 <_vfprintf_r+0x71e>
800041da:	72 0b       	ld.w	r11,r9[0x0]
800041dc:	14 97       	mov	r7,r10
800041de:	2f c9       	sub	r9,-4
800041e0:	51 09       	stdsp	sp[0x40],r9
800041e2:	50 1b       	stdsp	sp[0x4],r11
800041e4:	bf 5b       	asr	r11,0x1f
800041e6:	50 0b       	stdsp	sp[0x0],r11
800041e8:	fa ea 00 00 	ld.d	r10,sp[0]
800041ec:	58 0a       	cp.w	r10,0
800041ee:	5c 2b       	cpc	r11
800041f0:	c0 e4       	brge	8000420c <_vfprintf_r+0x748>
800041f2:	30 08       	mov	r8,0
800041f4:	fa ea 00 00 	ld.d	r10,sp[0]
800041f8:	30 09       	mov	r9,0
800041fa:	f0 0a 01 0a 	sub	r10,r8,r10
800041fe:	f2 0b 01 4b 	sbc	r11,r9,r11
80004202:	32 d8       	mov	r8,45
80004204:	fa eb 00 00 	st.d	sp[0],r10
80004208:	fb 68 06 bb 	st.b	sp[1723],r8
8000420c:	30 18       	mov	r8,1
8000420e:	e0 8f 06 fa 	bral	80005002 <_vfprintf_r+0x153e>
80004212:	50 a7       	stdsp	sp[0x28],r7
80004214:	50 80       	stdsp	sp[0x20],r0
80004216:	0c 97       	mov	r7,r6
80004218:	04 94       	mov	r4,r2
8000421a:	06 96       	mov	r6,r3
8000421c:	02 92       	mov	r2,r1
8000421e:	40 93       	lddsp	r3,sp[0x24]
80004220:	10 90       	mov	r0,r8
80004222:	40 41       	lddsp	r1,sp[0x10]
80004224:	0e 99       	mov	r9,r7
80004226:	ed b5 00 03 	bld	r5,0x3
8000422a:	c4 11       	brne	800042ac <_vfprintf_r+0x7e8>
8000422c:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004230:	40 3a       	lddsp	r10,sp[0xc]
80004232:	58 0a       	cp.w	r10,0
80004234:	c1 90       	breq	80004266 <_vfprintf_r+0x7a2>
80004236:	10 36       	cp.w	r6,r8
80004238:	c6 45       	brlt	80004300 <_vfprintf_r+0x83c>
8000423a:	fa c8 f9 50 	sub	r8,sp,-1712
8000423e:	1a d8       	st.w	--sp,r8
80004240:	fa c8 fa b8 	sub	r8,sp,-1352
80004244:	1a d8       	st.w	--sp,r8
80004246:	fa c8 fb b4 	sub	r8,sp,-1100
8000424a:	0c 9b       	mov	r11,r6
8000424c:	1a d8       	st.w	--sp,r8
8000424e:	04 9a       	mov	r10,r2
80004250:	fa c8 f9 40 	sub	r8,sp,-1728
80004254:	fa c9 ff b4 	sub	r9,sp,-76
80004258:	08 9c       	mov	r12,r4
8000425a:	fe b0 fa 9d 	rcall	80003794 <get_arg>
8000425e:	2f dd       	sub	sp,-12
80004260:	78 16       	ld.w	r6,r12[0x4]
80004262:	50 76       	stdsp	sp[0x1c],r6
80004264:	c4 88       	rjmp	800042f4 <_vfprintf_r+0x830>
80004266:	2f f7       	sub	r7,-1
80004268:	10 39       	cp.w	r9,r8
8000426a:	c0 c4       	brge	80004282 <_vfprintf_r+0x7be>
8000426c:	fa ce f9 44 	sub	lr,sp,-1724
80004270:	fc 06 00 36 	add	r6,lr,r6<<0x3
80004274:	ec fc fd 8c 	ld.w	r12,r6[-628]
80004278:	50 7c       	stdsp	sp[0x1c],r12
8000427a:	ec f6 fd 88 	ld.w	r6,r6[-632]
8000427e:	50 56       	stdsp	sp[0x14],r6
80004280:	c6 68       	rjmp	8000434c <_vfprintf_r+0x888>
80004282:	41 09       	lddsp	r9,sp[0x40]
80004284:	59 f8       	cp.w	r8,31
80004286:	e0 89 00 10 	brgt	800042a6 <_vfprintf_r+0x7e2>
8000428a:	f2 ca ff f8 	sub	r10,r9,-8
8000428e:	72 1b       	ld.w	r11,r9[0x4]
80004290:	51 0a       	stdsp	sp[0x40],r10
80004292:	72 09       	ld.w	r9,r9[0x0]
80004294:	fa ca f9 44 	sub	r10,sp,-1724
80004298:	50 7b       	stdsp	sp[0x1c],r11
8000429a:	50 59       	stdsp	sp[0x14],r9
8000429c:	f4 08 00 39 	add	r9,r10,r8<<0x3
800042a0:	40 5b       	lddsp	r11,sp[0x14]
800042a2:	40 7a       	lddsp	r10,sp[0x1c]
800042a4:	c4 78       	rjmp	80004332 <_vfprintf_r+0x86e>
800042a6:	72 18       	ld.w	r8,r9[0x4]
800042a8:	50 78       	stdsp	sp[0x1c],r8
800042aa:	c4 c8       	rjmp	80004342 <_vfprintf_r+0x87e>
800042ac:	fa f8 06 b4 	ld.w	r8,sp[1716]
800042b0:	40 3e       	lddsp	lr,sp[0xc]
800042b2:	58 0e       	cp.w	lr,0
800042b4:	c2 30       	breq	800042fa <_vfprintf_r+0x836>
800042b6:	10 36       	cp.w	r6,r8
800042b8:	c0 94       	brge	800042ca <_vfprintf_r+0x806>
800042ba:	fa cc f9 44 	sub	r12,sp,-1724
800042be:	f8 06 00 36 	add	r6,r12,r6<<0x3
800042c2:	ec fb fd 8c 	ld.w	r11,r6[-628]
800042c6:	50 7b       	stdsp	sp[0x1c],r11
800042c8:	cd 9b       	rjmp	8000427a <_vfprintf_r+0x7b6>
800042ca:	fa c8 f9 50 	sub	r8,sp,-1712
800042ce:	1a d8       	st.w	--sp,r8
800042d0:	fa c8 fa b8 	sub	r8,sp,-1352
800042d4:	04 9a       	mov	r10,r2
800042d6:	1a d8       	st.w	--sp,r8
800042d8:	fa c8 fb b4 	sub	r8,sp,-1100
800042dc:	0c 9b       	mov	r11,r6
800042de:	1a d8       	st.w	--sp,r8
800042e0:	08 9c       	mov	r12,r4
800042e2:	fa c8 f9 40 	sub	r8,sp,-1728
800042e6:	fa c9 ff b4 	sub	r9,sp,-76
800042ea:	fe b0 fa 55 	rcall	80003794 <get_arg>
800042ee:	2f dd       	sub	sp,-12
800042f0:	78 1a       	ld.w	r10,r12[0x4]
800042f2:	50 7a       	stdsp	sp[0x1c],r10
800042f4:	78 0c       	ld.w	r12,r12[0x0]
800042f6:	50 5c       	stdsp	sp[0x14],r12
800042f8:	c2 a8       	rjmp	8000434c <_vfprintf_r+0x888>
800042fa:	2f f7       	sub	r7,-1
800042fc:	10 39       	cp.w	r9,r8
800042fe:	c0 94       	brge	80004310 <_vfprintf_r+0x84c>
80004300:	fa c9 f9 44 	sub	r9,sp,-1724
80004304:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004308:	ec f8 fd 8c 	ld.w	r8,r6[-628]
8000430c:	50 78       	stdsp	sp[0x1c],r8
8000430e:	cb 6b       	rjmp	8000427a <_vfprintf_r+0x7b6>
80004310:	41 09       	lddsp	r9,sp[0x40]
80004312:	59 f8       	cp.w	r8,31
80004314:	e0 89 00 15 	brgt	8000433e <_vfprintf_r+0x87a>
80004318:	f2 ca ff f8 	sub	r10,r9,-8
8000431c:	72 16       	ld.w	r6,r9[0x4]
8000431e:	72 09       	ld.w	r9,r9[0x0]
80004320:	51 0a       	stdsp	sp[0x40],r10
80004322:	50 59       	stdsp	sp[0x14],r9
80004324:	fa ce f9 44 	sub	lr,sp,-1724
80004328:	50 76       	stdsp	sp[0x1c],r6
8000432a:	fc 08 00 39 	add	r9,lr,r8<<0x3
8000432e:	40 5b       	lddsp	r11,sp[0x14]
80004330:	0c 9a       	mov	r10,r6
80004332:	f2 eb fd 88 	st.d	r9[-632],r10
80004336:	2f f8       	sub	r8,-1
80004338:	fb 48 06 b4 	st.w	sp[1716],r8
8000433c:	c0 88       	rjmp	8000434c <_vfprintf_r+0x888>
8000433e:	72 1c       	ld.w	r12,r9[0x4]
80004340:	50 7c       	stdsp	sp[0x1c],r12
80004342:	f2 c8 ff f8 	sub	r8,r9,-8
80004346:	51 08       	stdsp	sp[0x40],r8
80004348:	72 09       	ld.w	r9,r9[0x0]
8000434a:	50 59       	stdsp	sp[0x14],r9
8000434c:	40 5b       	lddsp	r11,sp[0x14]
8000434e:	40 7a       	lddsp	r10,sp[0x1c]
80004350:	e0 a0 1c de 	rcall	80007d0c <__isinfd>
80004354:	18 96       	mov	r6,r12
80004356:	c1 70       	breq	80004384 <_vfprintf_r+0x8c0>
80004358:	30 08       	mov	r8,0
8000435a:	30 09       	mov	r9,0
8000435c:	40 5b       	lddsp	r11,sp[0x14]
8000435e:	40 7a       	lddsp	r10,sp[0x1c]
80004360:	e0 a0 21 cc 	rcall	800086f8 <__avr32_f64_cmp_lt>
80004364:	c0 40       	breq	8000436c <_vfprintf_r+0x8a8>
80004366:	32 d8       	mov	r8,45
80004368:	fb 68 06 bb 	st.b	sp[1723],r8
8000436c:	fe c8 ad 10 	sub	r8,pc,-21232
80004370:	fe c6 ad 10 	sub	r6,pc,-21232
80004374:	a7 d5       	cbr	r5,0x7
80004376:	e0 40 00 47 	cp.w	r0,71
8000437a:	f0 06 17 a0 	movle	r6,r8
8000437e:	30 32       	mov	r2,3
80004380:	e0 8f 06 ce 	bral	8000511c <_vfprintf_r+0x1658>
80004384:	40 5b       	lddsp	r11,sp[0x14]
80004386:	40 7a       	lddsp	r10,sp[0x1c]
80004388:	e0 a0 1c d7 	rcall	80007d36 <__isnand>
8000438c:	c0 e0       	breq	800043a8 <_vfprintf_r+0x8e4>
8000438e:	50 26       	stdsp	sp[0x8],r6
80004390:	fe c8 ad 2c 	sub	r8,pc,-21204
80004394:	fe c6 ad 2c 	sub	r6,pc,-21204
80004398:	a7 d5       	cbr	r5,0x7
8000439a:	e0 40 00 47 	cp.w	r0,71
8000439e:	f0 06 17 a0 	movle	r6,r8
800043a2:	30 32       	mov	r2,3
800043a4:	e0 8f 06 c2 	bral	80005128 <_vfprintf_r+0x1664>
800043a8:	40 2a       	lddsp	r10,sp[0x8]
800043aa:	5b fa       	cp.w	r10,-1
800043ac:	c0 41       	brne	800043b4 <_vfprintf_r+0x8f0>
800043ae:	30 69       	mov	r9,6
800043b0:	50 29       	stdsp	sp[0x8],r9
800043b2:	c1 18       	rjmp	800043d4 <_vfprintf_r+0x910>
800043b4:	e0 40 00 47 	cp.w	r0,71
800043b8:	5f 09       	sreq	r9
800043ba:	e0 40 00 67 	cp.w	r0,103
800043be:	5f 08       	sreq	r8
800043c0:	f3 e8 10 08 	or	r8,r9,r8
800043c4:	f8 08 18 00 	cp.b	r8,r12
800043c8:	c0 60       	breq	800043d4 <_vfprintf_r+0x910>
800043ca:	40 28       	lddsp	r8,sp[0x8]
800043cc:	58 08       	cp.w	r8,0
800043ce:	f9 b8 00 01 	moveq	r8,1
800043d2:	50 28       	stdsp	sp[0x8],r8
800043d4:	40 78       	lddsp	r8,sp[0x1c]
800043d6:	40 59       	lddsp	r9,sp[0x14]
800043d8:	fa e9 06 94 	st.d	sp[1684],r8
800043dc:	a9 a5       	sbr	r5,0x8
800043de:	fa f8 06 94 	ld.w	r8,sp[1684]
800043e2:	58 08       	cp.w	r8,0
800043e4:	c0 65       	brlt	800043f0 <_vfprintf_r+0x92c>
800043e6:	40 5e       	lddsp	lr,sp[0x14]
800043e8:	30 0c       	mov	r12,0
800043ea:	50 6e       	stdsp	sp[0x18],lr
800043ec:	50 9c       	stdsp	sp[0x24],r12
800043ee:	c0 78       	rjmp	800043fc <_vfprintf_r+0x938>
800043f0:	40 5b       	lddsp	r11,sp[0x14]
800043f2:	32 da       	mov	r10,45
800043f4:	ee 1b 80 00 	eorh	r11,0x8000
800043f8:	50 9a       	stdsp	sp[0x24],r10
800043fa:	50 6b       	stdsp	sp[0x18],r11
800043fc:	e0 40 00 46 	cp.w	r0,70
80004400:	5f 09       	sreq	r9
80004402:	e0 40 00 66 	cp.w	r0,102
80004406:	5f 08       	sreq	r8
80004408:	f3 e8 10 08 	or	r8,r9,r8
8000440c:	50 48       	stdsp	sp[0x10],r8
8000440e:	c0 40       	breq	80004416 <_vfprintf_r+0x952>
80004410:	40 22       	lddsp	r2,sp[0x8]
80004412:	30 39       	mov	r9,3
80004414:	c1 08       	rjmp	80004434 <_vfprintf_r+0x970>
80004416:	e0 40 00 45 	cp.w	r0,69
8000441a:	5f 09       	sreq	r9
8000441c:	e0 40 00 65 	cp.w	r0,101
80004420:	5f 08       	sreq	r8
80004422:	40 22       	lddsp	r2,sp[0x8]
80004424:	10 49       	or	r9,r8
80004426:	2f f2       	sub	r2,-1
80004428:	40 46       	lddsp	r6,sp[0x10]
8000442a:	ec 09 18 00 	cp.b	r9,r6
8000442e:	fb f2 00 02 	ld.weq	r2,sp[0x8]
80004432:	30 29       	mov	r9,2
80004434:	fa c8 f9 5c 	sub	r8,sp,-1700
80004438:	1a d8       	st.w	--sp,r8
8000443a:	fa c8 f9 54 	sub	r8,sp,-1708
8000443e:	1a d8       	st.w	--sp,r8
80004440:	fa c8 f9 4c 	sub	r8,sp,-1716
80004444:	08 9c       	mov	r12,r4
80004446:	1a d8       	st.w	--sp,r8
80004448:	04 98       	mov	r8,r2
8000444a:	40 9b       	lddsp	r11,sp[0x24]
8000444c:	40 aa       	lddsp	r10,sp[0x28]
8000444e:	e0 a0 0b c3 	rcall	80005bd4 <_dtoa_r>
80004452:	e0 40 00 47 	cp.w	r0,71
80004456:	5f 19       	srne	r9
80004458:	e0 40 00 67 	cp.w	r0,103
8000445c:	5f 18       	srne	r8
8000445e:	18 96       	mov	r6,r12
80004460:	2f dd       	sub	sp,-12
80004462:	f3 e8 00 08 	and	r8,r9,r8
80004466:	c0 41       	brne	8000446e <_vfprintf_r+0x9aa>
80004468:	ed b5 00 00 	bld	r5,0x0
8000446c:	c3 01       	brne	800044cc <_vfprintf_r+0xa08>
8000446e:	ec 02 00 0e 	add	lr,r6,r2
80004472:	50 3e       	stdsp	sp[0xc],lr
80004474:	40 4c       	lddsp	r12,sp[0x10]
80004476:	58 0c       	cp.w	r12,0
80004478:	c1 50       	breq	800044a2 <_vfprintf_r+0x9de>
8000447a:	0d 89       	ld.ub	r9,r6[0x0]
8000447c:	33 08       	mov	r8,48
8000447e:	f0 09 18 00 	cp.b	r9,r8
80004482:	c0 b1       	brne	80004498 <_vfprintf_r+0x9d4>
80004484:	30 08       	mov	r8,0
80004486:	30 09       	mov	r9,0
80004488:	40 6b       	lddsp	r11,sp[0x18]
8000448a:	40 7a       	lddsp	r10,sp[0x1c]
8000448c:	e0 a0 20 ef 	rcall	8000866a <__avr32_f64_cmp_eq>
80004490:	fb b2 00 01 	rsubeq	r2,1
80004494:	fb f2 0b ab 	st.weq	sp[0x6ac],r2
80004498:	40 3b       	lddsp	r11,sp[0xc]
8000449a:	fa f8 06 ac 	ld.w	r8,sp[1708]
8000449e:	10 0b       	add	r11,r8
800044a0:	50 3b       	stdsp	sp[0xc],r11
800044a2:	40 6b       	lddsp	r11,sp[0x18]
800044a4:	30 08       	mov	r8,0
800044a6:	30 09       	mov	r9,0
800044a8:	40 7a       	lddsp	r10,sp[0x1c]
800044aa:	e0 a0 20 e0 	rcall	8000866a <__avr32_f64_cmp_eq>
800044ae:	c0 90       	breq	800044c0 <_vfprintf_r+0x9fc>
800044b0:	40 3a       	lddsp	r10,sp[0xc]
800044b2:	fb 4a 06 a4 	st.w	sp[1700],r10
800044b6:	c0 58       	rjmp	800044c0 <_vfprintf_r+0x9fc>
800044b8:	10 c9       	st.b	r8++,r9
800044ba:	fb 48 06 a4 	st.w	sp[1700],r8
800044be:	c0 28       	rjmp	800044c2 <_vfprintf_r+0x9fe>
800044c0:	33 09       	mov	r9,48
800044c2:	fa f8 06 a4 	ld.w	r8,sp[1700]
800044c6:	40 3e       	lddsp	lr,sp[0xc]
800044c8:	1c 38       	cp.w	r8,lr
800044ca:	cf 73       	brcs	800044b8 <_vfprintf_r+0x9f4>
800044cc:	e0 40 00 47 	cp.w	r0,71
800044d0:	5f 09       	sreq	r9
800044d2:	e0 40 00 67 	cp.w	r0,103
800044d6:	5f 08       	sreq	r8
800044d8:	f3 e8 10 08 	or	r8,r9,r8
800044dc:	fa f9 06 a4 	ld.w	r9,sp[1700]
800044e0:	0c 19       	sub	r9,r6
800044e2:	50 69       	stdsp	sp[0x18],r9
800044e4:	58 08       	cp.w	r8,0
800044e6:	c0 b0       	breq	800044fc <_vfprintf_r+0xa38>
800044e8:	fa f8 06 ac 	ld.w	r8,sp[1708]
800044ec:	5b d8       	cp.w	r8,-3
800044ee:	c0 55       	brlt	800044f8 <_vfprintf_r+0xa34>
800044f0:	40 2c       	lddsp	r12,sp[0x8]
800044f2:	18 38       	cp.w	r8,r12
800044f4:	e0 8a 00 6a 	brle	800045c8 <_vfprintf_r+0xb04>
800044f8:	20 20       	sub	r0,2
800044fa:	c0 58       	rjmp	80004504 <_vfprintf_r+0xa40>
800044fc:	e0 40 00 65 	cp.w	r0,101
80004500:	e0 89 00 46 	brgt	8000458c <_vfprintf_r+0xac8>
80004504:	fa fb 06 ac 	ld.w	r11,sp[1708]
80004508:	fb 60 06 9c 	st.b	sp[1692],r0
8000450c:	20 1b       	sub	r11,1
8000450e:	fb 4b 06 ac 	st.w	sp[1708],r11
80004512:	c0 47       	brpl	8000451a <_vfprintf_r+0xa56>
80004514:	5c 3b       	neg	r11
80004516:	32 d8       	mov	r8,45
80004518:	c0 28       	rjmp	8000451c <_vfprintf_r+0xa58>
8000451a:	32 b8       	mov	r8,43
8000451c:	fb 68 06 9d 	st.b	sp[1693],r8
80004520:	58 9b       	cp.w	r11,9
80004522:	e0 8a 00 1d 	brle	8000455c <_vfprintf_r+0xa98>
80004526:	fa c9 fa 35 	sub	r9,sp,-1483
8000452a:	30 aa       	mov	r10,10
8000452c:	12 98       	mov	r8,r9
8000452e:	0e 9c       	mov	r12,r7
80004530:	0c 92       	mov	r2,r6
80004532:	f6 0a 0c 06 	divs	r6,r11,r10
80004536:	0e 9b       	mov	r11,r7
80004538:	2d 0b       	sub	r11,-48
8000453a:	10 fb       	st.b	--r8,r11
8000453c:	0c 9b       	mov	r11,r6
8000453e:	58 96       	cp.w	r6,9
80004540:	fe 99 ff f9 	brgt	80004532 <_vfprintf_r+0xa6e>
80004544:	2d 0b       	sub	r11,-48
80004546:	18 97       	mov	r7,r12
80004548:	04 96       	mov	r6,r2
8000454a:	10 fb       	st.b	--r8,r11
8000454c:	fa ca f9 62 	sub	r10,sp,-1694
80004550:	c0 38       	rjmp	80004556 <_vfprintf_r+0xa92>
80004552:	11 3b       	ld.ub	r11,r8++
80004554:	14 cb       	st.b	r10++,r11
80004556:	12 38       	cp.w	r8,r9
80004558:	cf d3       	brcs	80004552 <_vfprintf_r+0xa8e>
8000455a:	c0 98       	rjmp	8000456c <_vfprintf_r+0xaa8>
8000455c:	2d 0b       	sub	r11,-48
8000455e:	33 08       	mov	r8,48
80004560:	fb 6b 06 9f 	st.b	sp[1695],r11
80004564:	fb 68 06 9e 	st.b	sp[1694],r8
80004568:	fa ca f9 60 	sub	r10,sp,-1696
8000456c:	fa c8 f9 64 	sub	r8,sp,-1692
80004570:	f4 08 01 08 	sub	r8,r10,r8
80004574:	50 e8       	stdsp	sp[0x38],r8
80004576:	10 92       	mov	r2,r8
80004578:	40 6b       	lddsp	r11,sp[0x18]
8000457a:	16 02       	add	r2,r11
8000457c:	58 1b       	cp.w	r11,1
8000457e:	e0 89 00 05 	brgt	80004588 <_vfprintf_r+0xac4>
80004582:	ed b5 00 00 	bld	r5,0x0
80004586:	c3 51       	brne	800045f0 <_vfprintf_r+0xb2c>
80004588:	2f f2       	sub	r2,-1
8000458a:	c3 38       	rjmp	800045f0 <_vfprintf_r+0xb2c>
8000458c:	e0 40 00 66 	cp.w	r0,102
80004590:	c1 c1       	brne	800045c8 <_vfprintf_r+0xb04>
80004592:	fa f2 06 ac 	ld.w	r2,sp[1708]
80004596:	58 02       	cp.w	r2,0
80004598:	e0 8a 00 0c 	brle	800045b0 <_vfprintf_r+0xaec>
8000459c:	40 2a       	lddsp	r10,sp[0x8]
8000459e:	58 0a       	cp.w	r10,0
800045a0:	c0 41       	brne	800045a8 <_vfprintf_r+0xae4>
800045a2:	ed b5 00 00 	bld	r5,0x0
800045a6:	c2 51       	brne	800045f0 <_vfprintf_r+0xb2c>
800045a8:	2f f2       	sub	r2,-1
800045aa:	40 29       	lddsp	r9,sp[0x8]
800045ac:	12 02       	add	r2,r9
800045ae:	c0 b8       	rjmp	800045c4 <_vfprintf_r+0xb00>
800045b0:	40 28       	lddsp	r8,sp[0x8]
800045b2:	58 08       	cp.w	r8,0
800045b4:	c0 61       	brne	800045c0 <_vfprintf_r+0xafc>
800045b6:	ed b5 00 00 	bld	r5,0x0
800045ba:	c0 30       	breq	800045c0 <_vfprintf_r+0xafc>
800045bc:	30 12       	mov	r2,1
800045be:	c1 98       	rjmp	800045f0 <_vfprintf_r+0xb2c>
800045c0:	40 22       	lddsp	r2,sp[0x8]
800045c2:	2f e2       	sub	r2,-2
800045c4:	36 60       	mov	r0,102
800045c6:	c1 58       	rjmp	800045f0 <_vfprintf_r+0xb2c>
800045c8:	fa f2 06 ac 	ld.w	r2,sp[1708]
800045cc:	40 6e       	lddsp	lr,sp[0x18]
800045ce:	1c 32       	cp.w	r2,lr
800045d0:	c0 65       	brlt	800045dc <_vfprintf_r+0xb18>
800045d2:	ed b5 00 00 	bld	r5,0x0
800045d6:	f7 b2 00 ff 	subeq	r2,-1
800045da:	c0 a8       	rjmp	800045ee <_vfprintf_r+0xb2a>
800045dc:	e4 08 11 02 	rsub	r8,r2,2
800045e0:	40 6c       	lddsp	r12,sp[0x18]
800045e2:	58 02       	cp.w	r2,0
800045e4:	f0 02 17 a0 	movle	r2,r8
800045e8:	f9 b2 09 01 	movgt	r2,1
800045ec:	18 02       	add	r2,r12
800045ee:	36 70       	mov	r0,103
800045f0:	40 9b       	lddsp	r11,sp[0x24]
800045f2:	58 0b       	cp.w	r11,0
800045f4:	e0 80 05 94 	breq	8000511c <_vfprintf_r+0x1658>
800045f8:	32 d8       	mov	r8,45
800045fa:	fb 68 06 bb 	st.b	sp[1723],r8
800045fe:	e0 8f 05 93 	bral	80005124 <_vfprintf_r+0x1660>
80004602:	50 a7       	stdsp	sp[0x28],r7
80004604:	04 94       	mov	r4,r2
80004606:	0c 97       	mov	r7,r6
80004608:	02 92       	mov	r2,r1
8000460a:	06 96       	mov	r6,r3
8000460c:	40 41       	lddsp	r1,sp[0x10]
8000460e:	40 93       	lddsp	r3,sp[0x24]
80004610:	0e 99       	mov	r9,r7
80004612:	ed b5 00 05 	bld	r5,0x5
80004616:	c4 81       	brne	800046a6 <_vfprintf_r+0xbe2>
80004618:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000461c:	40 3e       	lddsp	lr,sp[0xc]
8000461e:	58 0e       	cp.w	lr,0
80004620:	c1 d0       	breq	8000465a <_vfprintf_r+0xb96>
80004622:	10 36       	cp.w	r6,r8
80004624:	c0 64       	brge	80004630 <_vfprintf_r+0xb6c>
80004626:	fa cc f9 44 	sub	r12,sp,-1724
8000462a:	f8 06 00 36 	add	r6,r12,r6<<0x3
8000462e:	c1 d8       	rjmp	80004668 <_vfprintf_r+0xba4>
80004630:	fa c8 f9 50 	sub	r8,sp,-1712
80004634:	1a d8       	st.w	--sp,r8
80004636:	fa c8 fa b8 	sub	r8,sp,-1352
8000463a:	04 9a       	mov	r10,r2
8000463c:	1a d8       	st.w	--sp,r8
8000463e:	fa c8 fb b4 	sub	r8,sp,-1100
80004642:	0c 9b       	mov	r11,r6
80004644:	1a d8       	st.w	--sp,r8
80004646:	08 9c       	mov	r12,r4
80004648:	fa c8 f9 40 	sub	r8,sp,-1728
8000464c:	fa c9 ff b4 	sub	r9,sp,-76
80004650:	fe b0 f8 a2 	rcall	80003794 <get_arg>
80004654:	2f dd       	sub	sp,-12
80004656:	78 0a       	ld.w	r10,r12[0x0]
80004658:	c2 08       	rjmp	80004698 <_vfprintf_r+0xbd4>
8000465a:	2f f7       	sub	r7,-1
8000465c:	10 39       	cp.w	r9,r8
8000465e:	c0 84       	brge	8000466e <_vfprintf_r+0xbaa>
80004660:	fa cb f9 44 	sub	r11,sp,-1724
80004664:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004668:	ec fa fd 88 	ld.w	r10,r6[-632]
8000466c:	c1 68       	rjmp	80004698 <_vfprintf_r+0xbd4>
8000466e:	41 09       	lddsp	r9,sp[0x40]
80004670:	59 f8       	cp.w	r8,31
80004672:	e0 89 00 10 	brgt	80004692 <_vfprintf_r+0xbce>
80004676:	f2 ca ff fc 	sub	r10,r9,-4
8000467a:	51 0a       	stdsp	sp[0x40],r10
8000467c:	fa c6 f9 44 	sub	r6,sp,-1724
80004680:	72 0a       	ld.w	r10,r9[0x0]
80004682:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004686:	f3 4a fd 88 	st.w	r9[-632],r10
8000468a:	2f f8       	sub	r8,-1
8000468c:	fb 48 06 b4 	st.w	sp[1716],r8
80004690:	c0 48       	rjmp	80004698 <_vfprintf_r+0xbd4>
80004692:	72 0a       	ld.w	r10,r9[0x0]
80004694:	2f c9       	sub	r9,-4
80004696:	51 09       	stdsp	sp[0x40],r9
80004698:	40 be       	lddsp	lr,sp[0x2c]
8000469a:	1c 98       	mov	r8,lr
8000469c:	95 1e       	st.w	r10[0x4],lr
8000469e:	bf 58       	asr	r8,0x1f
800046a0:	95 08       	st.w	r10[0x0],r8
800046a2:	fe 9f fa 9f 	bral	80003be0 <_vfprintf_r+0x11c>
800046a6:	ed b5 00 04 	bld	r5,0x4
800046aa:	c4 80       	breq	8000473a <_vfprintf_r+0xc76>
800046ac:	e2 15 00 40 	andl	r5,0x40,COH
800046b0:	c4 50       	breq	8000473a <_vfprintf_r+0xc76>
800046b2:	fa f8 06 b4 	ld.w	r8,sp[1716]
800046b6:	40 3c       	lddsp	r12,sp[0xc]
800046b8:	58 0c       	cp.w	r12,0
800046ba:	c1 d0       	breq	800046f4 <_vfprintf_r+0xc30>
800046bc:	10 36       	cp.w	r6,r8
800046be:	c0 64       	brge	800046ca <_vfprintf_r+0xc06>
800046c0:	fa cb f9 44 	sub	r11,sp,-1724
800046c4:	f6 06 00 36 	add	r6,r11,r6<<0x3
800046c8:	c1 d8       	rjmp	80004702 <_vfprintf_r+0xc3e>
800046ca:	fa c8 f9 50 	sub	r8,sp,-1712
800046ce:	1a d8       	st.w	--sp,r8
800046d0:	fa c8 fa b8 	sub	r8,sp,-1352
800046d4:	04 9a       	mov	r10,r2
800046d6:	1a d8       	st.w	--sp,r8
800046d8:	fa c8 fb b4 	sub	r8,sp,-1100
800046dc:	0c 9b       	mov	r11,r6
800046de:	1a d8       	st.w	--sp,r8
800046e0:	08 9c       	mov	r12,r4
800046e2:	fa c8 f9 40 	sub	r8,sp,-1728
800046e6:	fa c9 ff b4 	sub	r9,sp,-76
800046ea:	fe b0 f8 55 	rcall	80003794 <get_arg>
800046ee:	2f dd       	sub	sp,-12
800046f0:	78 0a       	ld.w	r10,r12[0x0]
800046f2:	c2 08       	rjmp	80004732 <_vfprintf_r+0xc6e>
800046f4:	2f f7       	sub	r7,-1
800046f6:	10 39       	cp.w	r9,r8
800046f8:	c0 84       	brge	80004708 <_vfprintf_r+0xc44>
800046fa:	fa ca f9 44 	sub	r10,sp,-1724
800046fe:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004702:	ec fa fd 88 	ld.w	r10,r6[-632]
80004706:	c1 68       	rjmp	80004732 <_vfprintf_r+0xc6e>
80004708:	41 09       	lddsp	r9,sp[0x40]
8000470a:	59 f8       	cp.w	r8,31
8000470c:	e0 89 00 10 	brgt	8000472c <_vfprintf_r+0xc68>
80004710:	f2 ca ff fc 	sub	r10,r9,-4
80004714:	51 0a       	stdsp	sp[0x40],r10
80004716:	fa c6 f9 44 	sub	r6,sp,-1724
8000471a:	72 0a       	ld.w	r10,r9[0x0]
8000471c:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004720:	f3 4a fd 88 	st.w	r9[-632],r10
80004724:	2f f8       	sub	r8,-1
80004726:	fb 48 06 b4 	st.w	sp[1716],r8
8000472a:	c0 48       	rjmp	80004732 <_vfprintf_r+0xc6e>
8000472c:	72 0a       	ld.w	r10,r9[0x0]
8000472e:	2f c9       	sub	r9,-4
80004730:	51 09       	stdsp	sp[0x40],r9
80004732:	40 be       	lddsp	lr,sp[0x2c]
80004734:	b4 0e       	st.h	r10[0x0],lr
80004736:	fe 9f fa 55 	bral	80003be0 <_vfprintf_r+0x11c>
8000473a:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000473e:	40 3c       	lddsp	r12,sp[0xc]
80004740:	58 0c       	cp.w	r12,0
80004742:	c1 d0       	breq	8000477c <_vfprintf_r+0xcb8>
80004744:	10 36       	cp.w	r6,r8
80004746:	c0 64       	brge	80004752 <_vfprintf_r+0xc8e>
80004748:	fa cb f9 44 	sub	r11,sp,-1724
8000474c:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004750:	c1 d8       	rjmp	8000478a <_vfprintf_r+0xcc6>
80004752:	fa c8 f9 50 	sub	r8,sp,-1712
80004756:	1a d8       	st.w	--sp,r8
80004758:	fa c8 fa b8 	sub	r8,sp,-1352
8000475c:	04 9a       	mov	r10,r2
8000475e:	1a d8       	st.w	--sp,r8
80004760:	fa c8 fb b4 	sub	r8,sp,-1100
80004764:	0c 9b       	mov	r11,r6
80004766:	1a d8       	st.w	--sp,r8
80004768:	08 9c       	mov	r12,r4
8000476a:	fa c8 f9 40 	sub	r8,sp,-1728
8000476e:	fa c9 ff b4 	sub	r9,sp,-76
80004772:	fe b0 f8 11 	rcall	80003794 <get_arg>
80004776:	2f dd       	sub	sp,-12
80004778:	78 0a       	ld.w	r10,r12[0x0]
8000477a:	c2 08       	rjmp	800047ba <_vfprintf_r+0xcf6>
8000477c:	2f f7       	sub	r7,-1
8000477e:	10 39       	cp.w	r9,r8
80004780:	c0 84       	brge	80004790 <_vfprintf_r+0xccc>
80004782:	fa ca f9 44 	sub	r10,sp,-1724
80004786:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000478a:	ec fa fd 88 	ld.w	r10,r6[-632]
8000478e:	c1 68       	rjmp	800047ba <_vfprintf_r+0xcf6>
80004790:	41 09       	lddsp	r9,sp[0x40]
80004792:	59 f8       	cp.w	r8,31
80004794:	e0 89 00 10 	brgt	800047b4 <_vfprintf_r+0xcf0>
80004798:	f2 ca ff fc 	sub	r10,r9,-4
8000479c:	51 0a       	stdsp	sp[0x40],r10
8000479e:	fa c6 f9 44 	sub	r6,sp,-1724
800047a2:	72 0a       	ld.w	r10,r9[0x0]
800047a4:	ec 08 00 39 	add	r9,r6,r8<<0x3
800047a8:	f3 4a fd 88 	st.w	r9[-632],r10
800047ac:	2f f8       	sub	r8,-1
800047ae:	fb 48 06 b4 	st.w	sp[1716],r8
800047b2:	c0 48       	rjmp	800047ba <_vfprintf_r+0xcf6>
800047b4:	72 0a       	ld.w	r10,r9[0x0]
800047b6:	2f c9       	sub	r9,-4
800047b8:	51 09       	stdsp	sp[0x40],r9
800047ba:	40 be       	lddsp	lr,sp[0x2c]
800047bc:	95 0e       	st.w	r10[0x0],lr
800047be:	fe 9f fa 11 	bral	80003be0 <_vfprintf_r+0x11c>
800047c2:	50 a7       	stdsp	sp[0x28],r7
800047c4:	50 80       	stdsp	sp[0x20],r0
800047c6:	0c 97       	mov	r7,r6
800047c8:	04 94       	mov	r4,r2
800047ca:	06 96       	mov	r6,r3
800047cc:	02 92       	mov	r2,r1
800047ce:	40 93       	lddsp	r3,sp[0x24]
800047d0:	10 90       	mov	r0,r8
800047d2:	40 41       	lddsp	r1,sp[0x10]
800047d4:	a5 a5       	sbr	r5,0x4
800047d6:	c0 a8       	rjmp	800047ea <_vfprintf_r+0xd26>
800047d8:	50 a7       	stdsp	sp[0x28],r7
800047da:	50 80       	stdsp	sp[0x20],r0
800047dc:	0c 97       	mov	r7,r6
800047de:	04 94       	mov	r4,r2
800047e0:	06 96       	mov	r6,r3
800047e2:	02 92       	mov	r2,r1
800047e4:	40 93       	lddsp	r3,sp[0x24]
800047e6:	10 90       	mov	r0,r8
800047e8:	40 41       	lddsp	r1,sp[0x10]
800047ea:	ed b5 00 05 	bld	r5,0x5
800047ee:	c5 d1       	brne	800048a8 <_vfprintf_r+0xde4>
800047f0:	fa f8 06 b4 	ld.w	r8,sp[1716]
800047f4:	40 3c       	lddsp	r12,sp[0xc]
800047f6:	58 0c       	cp.w	r12,0
800047f8:	c2 60       	breq	80004844 <_vfprintf_r+0xd80>
800047fa:	10 36       	cp.w	r6,r8
800047fc:	c0 a4       	brge	80004810 <_vfprintf_r+0xd4c>
800047fe:	fa cb f9 44 	sub	r11,sp,-1724
80004802:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004806:	ec e8 fd 88 	ld.d	r8,r6[-632]
8000480a:	fa e9 00 00 	st.d	sp[0],r8
8000480e:	c1 88       	rjmp	8000483e <_vfprintf_r+0xd7a>
80004810:	fa c8 f9 50 	sub	r8,sp,-1712
80004814:	1a d8       	st.w	--sp,r8
80004816:	fa c8 fa b8 	sub	r8,sp,-1352
8000481a:	04 9a       	mov	r10,r2
8000481c:	1a d8       	st.w	--sp,r8
8000481e:	0c 9b       	mov	r11,r6
80004820:	fa c8 fb b4 	sub	r8,sp,-1100
80004824:	08 9c       	mov	r12,r4
80004826:	1a d8       	st.w	--sp,r8
80004828:	fa c8 f9 40 	sub	r8,sp,-1728
8000482c:	fa c9 ff b4 	sub	r9,sp,-76
80004830:	fe b0 f7 b2 	rcall	80003794 <get_arg>
80004834:	2f dd       	sub	sp,-12
80004836:	f8 ea 00 00 	ld.d	r10,r12[0]
8000483a:	fa eb 00 00 	st.d	sp[0],r10
8000483e:	30 08       	mov	r8,0
80004840:	e0 8f 03 de 	bral	80004ffc <_vfprintf_r+0x1538>
80004844:	ee ca ff ff 	sub	r10,r7,-1
80004848:	10 37       	cp.w	r7,r8
8000484a:	c0 b4       	brge	80004860 <_vfprintf_r+0xd9c>
8000484c:	fa c9 f9 44 	sub	r9,sp,-1724
80004850:	14 97       	mov	r7,r10
80004852:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004856:	ec ea fd 88 	ld.d	r10,r6[-632]
8000485a:	fa eb 00 00 	st.d	sp[0],r10
8000485e:	c1 88       	rjmp	8000488e <_vfprintf_r+0xdca>
80004860:	41 09       	lddsp	r9,sp[0x40]
80004862:	59 f8       	cp.w	r8,31
80004864:	e0 89 00 18 	brgt	80004894 <_vfprintf_r+0xdd0>
80004868:	f2 e6 00 00 	ld.d	r6,r9[0]
8000486c:	f2 cb ff f8 	sub	r11,r9,-8
80004870:	fa e7 00 00 	st.d	sp[0],r6
80004874:	51 0b       	stdsp	sp[0x40],r11
80004876:	fa c6 f9 44 	sub	r6,sp,-1724
8000487a:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000487e:	fa e6 00 00 	ld.d	r6,sp[0]
80004882:	f2 e7 fd 88 	st.d	r9[-632],r6
80004886:	2f f8       	sub	r8,-1
80004888:	14 97       	mov	r7,r10
8000488a:	fb 48 06 b4 	st.w	sp[1716],r8
8000488e:	40 38       	lddsp	r8,sp[0xc]
80004890:	e0 8f 03 b6 	bral	80004ffc <_vfprintf_r+0x1538>
80004894:	f2 e6 00 00 	ld.d	r6,r9[0]
80004898:	40 38       	lddsp	r8,sp[0xc]
8000489a:	fa e7 00 00 	st.d	sp[0],r6
8000489e:	2f 89       	sub	r9,-8
800048a0:	14 97       	mov	r7,r10
800048a2:	51 09       	stdsp	sp[0x40],r9
800048a4:	e0 8f 03 ac 	bral	80004ffc <_vfprintf_r+0x1538>
800048a8:	ed b5 00 04 	bld	r5,0x4
800048ac:	c1 61       	brne	800048d8 <_vfprintf_r+0xe14>
800048ae:	fa f8 06 b4 	ld.w	r8,sp[1716]
800048b2:	40 3e       	lddsp	lr,sp[0xc]
800048b4:	58 0e       	cp.w	lr,0
800048b6:	c0 80       	breq	800048c6 <_vfprintf_r+0xe02>
800048b8:	10 36       	cp.w	r6,r8
800048ba:	c6 74       	brge	80004988 <_vfprintf_r+0xec4>
800048bc:	fa cc f9 44 	sub	r12,sp,-1724
800048c0:	f8 06 00 36 	add	r6,r12,r6<<0x3
800048c4:	c8 08       	rjmp	800049c4 <_vfprintf_r+0xf00>
800048c6:	ee ca ff ff 	sub	r10,r7,-1
800048ca:	10 37       	cp.w	r7,r8
800048cc:	c7 f4       	brge	800049ca <_vfprintf_r+0xf06>
800048ce:	fa cb f9 44 	sub	r11,sp,-1724
800048d2:	f6 06 00 36 	add	r6,r11,r6<<0x3
800048d6:	c7 68       	rjmp	800049c2 <_vfprintf_r+0xefe>
800048d8:	ed b5 00 06 	bld	r5,0x6
800048dc:	c4 a1       	brne	80004970 <_vfprintf_r+0xeac>
800048de:	fa f8 06 b4 	ld.w	r8,sp[1716]
800048e2:	40 3c       	lddsp	r12,sp[0xc]
800048e4:	58 0c       	cp.w	r12,0
800048e6:	c1 d0       	breq	80004920 <_vfprintf_r+0xe5c>
800048e8:	10 36       	cp.w	r6,r8
800048ea:	c0 64       	brge	800048f6 <_vfprintf_r+0xe32>
800048ec:	fa cb f9 44 	sub	r11,sp,-1724
800048f0:	f6 06 00 36 	add	r6,r11,r6<<0x3
800048f4:	c1 f8       	rjmp	80004932 <_vfprintf_r+0xe6e>
800048f6:	fa c8 f9 50 	sub	r8,sp,-1712
800048fa:	1a d8       	st.w	--sp,r8
800048fc:	fa c8 fa b8 	sub	r8,sp,-1352
80004900:	1a d8       	st.w	--sp,r8
80004902:	fa c8 fb b4 	sub	r8,sp,-1100
80004906:	1a d8       	st.w	--sp,r8
80004908:	fa c8 f9 40 	sub	r8,sp,-1728
8000490c:	fa c9 ff b4 	sub	r9,sp,-76
80004910:	04 9a       	mov	r10,r2
80004912:	0c 9b       	mov	r11,r6
80004914:	08 9c       	mov	r12,r4
80004916:	fe b0 f7 3f 	rcall	80003794 <get_arg>
8000491a:	2f dd       	sub	sp,-12
8000491c:	98 18       	ld.sh	r8,r12[0x2]
8000491e:	c2 68       	rjmp	8000496a <_vfprintf_r+0xea6>
80004920:	ee ca ff ff 	sub	r10,r7,-1
80004924:	10 37       	cp.w	r7,r8
80004926:	c0 94       	brge	80004938 <_vfprintf_r+0xe74>
80004928:	fa c9 f9 44 	sub	r9,sp,-1724
8000492c:	14 97       	mov	r7,r10
8000492e:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004932:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004936:	c1 a8       	rjmp	8000496a <_vfprintf_r+0xea6>
80004938:	41 09       	lddsp	r9,sp[0x40]
8000493a:	59 f8       	cp.w	r8,31
8000493c:	e0 89 00 13 	brgt	80004962 <_vfprintf_r+0xe9e>
80004940:	f2 cb ff fc 	sub	r11,r9,-4
80004944:	51 0b       	stdsp	sp[0x40],r11
80004946:	72 09       	ld.w	r9,r9[0x0]
80004948:	fa c6 f9 44 	sub	r6,sp,-1724
8000494c:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004950:	2f f8       	sub	r8,-1
80004952:	f7 49 fd 88 	st.w	r11[-632],r9
80004956:	fb 48 06 b4 	st.w	sp[1716],r8
8000495a:	14 97       	mov	r7,r10
8000495c:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004960:	c0 58       	rjmp	8000496a <_vfprintf_r+0xea6>
80004962:	92 18       	ld.sh	r8,r9[0x2]
80004964:	14 97       	mov	r7,r10
80004966:	2f c9       	sub	r9,-4
80004968:	51 09       	stdsp	sp[0x40],r9
8000496a:	5c 78       	castu.h	r8
8000496c:	50 18       	stdsp	sp[0x4],r8
8000496e:	c4 68       	rjmp	800049fa <_vfprintf_r+0xf36>
80004970:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004974:	40 3c       	lddsp	r12,sp[0xc]
80004976:	58 0c       	cp.w	r12,0
80004978:	c1 d0       	breq	800049b2 <_vfprintf_r+0xeee>
8000497a:	10 36       	cp.w	r6,r8
8000497c:	c0 64       	brge	80004988 <_vfprintf_r+0xec4>
8000497e:	fa cb f9 44 	sub	r11,sp,-1724
80004982:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004986:	c1 f8       	rjmp	800049c4 <_vfprintf_r+0xf00>
80004988:	fa c8 f9 50 	sub	r8,sp,-1712
8000498c:	1a d8       	st.w	--sp,r8
8000498e:	fa c8 fa b8 	sub	r8,sp,-1352
80004992:	0c 9b       	mov	r11,r6
80004994:	1a d8       	st.w	--sp,r8
80004996:	fa c8 fb b4 	sub	r8,sp,-1100
8000499a:	04 9a       	mov	r10,r2
8000499c:	1a d8       	st.w	--sp,r8
8000499e:	08 9c       	mov	r12,r4
800049a0:	fa c8 f9 40 	sub	r8,sp,-1728
800049a4:	fa c9 ff b4 	sub	r9,sp,-76
800049a8:	fe b0 f6 f6 	rcall	80003794 <get_arg>
800049ac:	2f dd       	sub	sp,-12
800049ae:	78 0b       	ld.w	r11,r12[0x0]
800049b0:	c2 48       	rjmp	800049f8 <_vfprintf_r+0xf34>
800049b2:	ee ca ff ff 	sub	r10,r7,-1
800049b6:	10 37       	cp.w	r7,r8
800049b8:	c0 94       	brge	800049ca <_vfprintf_r+0xf06>
800049ba:	fa c9 f9 44 	sub	r9,sp,-1724
800049be:	f2 06 00 36 	add	r6,r9,r6<<0x3
800049c2:	14 97       	mov	r7,r10
800049c4:	ec fb fd 88 	ld.w	r11,r6[-632]
800049c8:	c1 88       	rjmp	800049f8 <_vfprintf_r+0xf34>
800049ca:	41 09       	lddsp	r9,sp[0x40]
800049cc:	59 f8       	cp.w	r8,31
800049ce:	e0 89 00 11 	brgt	800049f0 <_vfprintf_r+0xf2c>
800049d2:	f2 cb ff fc 	sub	r11,r9,-4
800049d6:	51 0b       	stdsp	sp[0x40],r11
800049d8:	fa c6 f9 44 	sub	r6,sp,-1724
800049dc:	72 0b       	ld.w	r11,r9[0x0]
800049de:	ec 08 00 39 	add	r9,r6,r8<<0x3
800049e2:	f3 4b fd 88 	st.w	r9[-632],r11
800049e6:	2f f8       	sub	r8,-1
800049e8:	14 97       	mov	r7,r10
800049ea:	fb 48 06 b4 	st.w	sp[1716],r8
800049ee:	c0 58       	rjmp	800049f8 <_vfprintf_r+0xf34>
800049f0:	72 0b       	ld.w	r11,r9[0x0]
800049f2:	14 97       	mov	r7,r10
800049f4:	2f c9       	sub	r9,-4
800049f6:	51 09       	stdsp	sp[0x40],r9
800049f8:	50 1b       	stdsp	sp[0x4],r11
800049fa:	30 0e       	mov	lr,0
800049fc:	50 0e       	stdsp	sp[0x0],lr
800049fe:	1c 98       	mov	r8,lr
80004a00:	e0 8f 02 fe 	bral	80004ffc <_vfprintf_r+0x1538>
80004a04:	50 a7       	stdsp	sp[0x28],r7
80004a06:	50 80       	stdsp	sp[0x20],r0
80004a08:	0c 97       	mov	r7,r6
80004a0a:	04 94       	mov	r4,r2
80004a0c:	06 96       	mov	r6,r3
80004a0e:	02 92       	mov	r2,r1
80004a10:	40 93       	lddsp	r3,sp[0x24]
80004a12:	40 41       	lddsp	r1,sp[0x10]
80004a14:	0e 99       	mov	r9,r7
80004a16:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004a1a:	40 3c       	lddsp	r12,sp[0xc]
80004a1c:	58 0c       	cp.w	r12,0
80004a1e:	c1 d0       	breq	80004a58 <_vfprintf_r+0xf94>
80004a20:	10 36       	cp.w	r6,r8
80004a22:	c0 64       	brge	80004a2e <_vfprintf_r+0xf6a>
80004a24:	fa cb f9 44 	sub	r11,sp,-1724
80004a28:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004a2c:	c1 d8       	rjmp	80004a66 <_vfprintf_r+0xfa2>
80004a2e:	fa c8 f9 50 	sub	r8,sp,-1712
80004a32:	1a d8       	st.w	--sp,r8
80004a34:	fa c8 fa b8 	sub	r8,sp,-1352
80004a38:	1a d8       	st.w	--sp,r8
80004a3a:	fa c8 fb b4 	sub	r8,sp,-1100
80004a3e:	1a d8       	st.w	--sp,r8
80004a40:	fa c9 ff b4 	sub	r9,sp,-76
80004a44:	fa c8 f9 40 	sub	r8,sp,-1728
80004a48:	04 9a       	mov	r10,r2
80004a4a:	0c 9b       	mov	r11,r6
80004a4c:	08 9c       	mov	r12,r4
80004a4e:	fe b0 f6 a3 	rcall	80003794 <get_arg>
80004a52:	2f dd       	sub	sp,-12
80004a54:	78 09       	ld.w	r9,r12[0x0]
80004a56:	c2 18       	rjmp	80004a98 <_vfprintf_r+0xfd4>
80004a58:	2f f7       	sub	r7,-1
80004a5a:	10 39       	cp.w	r9,r8
80004a5c:	c0 84       	brge	80004a6c <_vfprintf_r+0xfa8>
80004a5e:	fa ca f9 44 	sub	r10,sp,-1724
80004a62:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004a66:	ec f9 fd 88 	ld.w	r9,r6[-632]
80004a6a:	c1 78       	rjmp	80004a98 <_vfprintf_r+0xfd4>
80004a6c:	41 09       	lddsp	r9,sp[0x40]
80004a6e:	59 f8       	cp.w	r8,31
80004a70:	e0 89 00 10 	brgt	80004a90 <_vfprintf_r+0xfcc>
80004a74:	f2 ca ff fc 	sub	r10,r9,-4
80004a78:	51 0a       	stdsp	sp[0x40],r10
80004a7a:	fa c6 f9 44 	sub	r6,sp,-1724
80004a7e:	72 09       	ld.w	r9,r9[0x0]
80004a80:	ec 08 00 3a 	add	r10,r6,r8<<0x3
80004a84:	f5 49 fd 88 	st.w	r10[-632],r9
80004a88:	2f f8       	sub	r8,-1
80004a8a:	fb 48 06 b4 	st.w	sp[1716],r8
80004a8e:	c0 58       	rjmp	80004a98 <_vfprintf_r+0xfd4>
80004a90:	f2 c8 ff fc 	sub	r8,r9,-4
80004a94:	51 08       	stdsp	sp[0x40],r8
80004a96:	72 09       	ld.w	r9,r9[0x0]
80004a98:	33 08       	mov	r8,48
80004a9a:	fb 68 06 b8 	st.b	sp[1720],r8
80004a9e:	37 88       	mov	r8,120
80004aa0:	30 0e       	mov	lr,0
80004aa2:	fb 68 06 b9 	st.b	sp[1721],r8
80004aa6:	fe cc b4 3a 	sub	r12,pc,-19398
80004aaa:	50 19       	stdsp	sp[0x4],r9
80004aac:	a1 b5       	sbr	r5,0x1
80004aae:	50 0e       	stdsp	sp[0x0],lr
80004ab0:	50 dc       	stdsp	sp[0x34],r12
80004ab2:	30 28       	mov	r8,2
80004ab4:	37 80       	mov	r0,120
80004ab6:	e0 8f 02 a3 	bral	80004ffc <_vfprintf_r+0x1538>
80004aba:	50 a7       	stdsp	sp[0x28],r7
80004abc:	50 80       	stdsp	sp[0x20],r0
80004abe:	10 90       	mov	r0,r8
80004ac0:	30 08       	mov	r8,0
80004ac2:	fb 68 06 bb 	st.b	sp[1723],r8
80004ac6:	0c 97       	mov	r7,r6
80004ac8:	04 94       	mov	r4,r2
80004aca:	06 96       	mov	r6,r3
80004acc:	02 92       	mov	r2,r1
80004ace:	40 93       	lddsp	r3,sp[0x24]
80004ad0:	40 41       	lddsp	r1,sp[0x10]
80004ad2:	0e 99       	mov	r9,r7
80004ad4:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004ad8:	40 3b       	lddsp	r11,sp[0xc]
80004ada:	58 0b       	cp.w	r11,0
80004adc:	c1 d0       	breq	80004b16 <_vfprintf_r+0x1052>
80004ade:	10 36       	cp.w	r6,r8
80004ae0:	c0 64       	brge	80004aec <_vfprintf_r+0x1028>
80004ae2:	fa ca f9 44 	sub	r10,sp,-1724
80004ae6:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004aea:	c1 d8       	rjmp	80004b24 <_vfprintf_r+0x1060>
80004aec:	fa c8 f9 50 	sub	r8,sp,-1712
80004af0:	1a d8       	st.w	--sp,r8
80004af2:	fa c8 fa b8 	sub	r8,sp,-1352
80004af6:	1a d8       	st.w	--sp,r8
80004af8:	fa c8 fb b4 	sub	r8,sp,-1100
80004afc:	0c 9b       	mov	r11,r6
80004afe:	1a d8       	st.w	--sp,r8
80004b00:	04 9a       	mov	r10,r2
80004b02:	fa c8 f9 40 	sub	r8,sp,-1728
80004b06:	fa c9 ff b4 	sub	r9,sp,-76
80004b0a:	08 9c       	mov	r12,r4
80004b0c:	fe b0 f6 44 	rcall	80003794 <get_arg>
80004b10:	2f dd       	sub	sp,-12
80004b12:	78 06       	ld.w	r6,r12[0x0]
80004b14:	c2 08       	rjmp	80004b54 <_vfprintf_r+0x1090>
80004b16:	2f f7       	sub	r7,-1
80004b18:	10 39       	cp.w	r9,r8
80004b1a:	c0 84       	brge	80004b2a <_vfprintf_r+0x1066>
80004b1c:	fa c9 f9 44 	sub	r9,sp,-1724
80004b20:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004b24:	ec f6 fd 88 	ld.w	r6,r6[-632]
80004b28:	c1 68       	rjmp	80004b54 <_vfprintf_r+0x1090>
80004b2a:	41 09       	lddsp	r9,sp[0x40]
80004b2c:	59 f8       	cp.w	r8,31
80004b2e:	e0 89 00 10 	brgt	80004b4e <_vfprintf_r+0x108a>
80004b32:	f2 ca ff fc 	sub	r10,r9,-4
80004b36:	51 0a       	stdsp	sp[0x40],r10
80004b38:	72 06       	ld.w	r6,r9[0x0]
80004b3a:	fa ce f9 44 	sub	lr,sp,-1724
80004b3e:	fc 08 00 39 	add	r9,lr,r8<<0x3
80004b42:	f3 46 fd 88 	st.w	r9[-632],r6
80004b46:	2f f8       	sub	r8,-1
80004b48:	fb 48 06 b4 	st.w	sp[1716],r8
80004b4c:	c0 48       	rjmp	80004b54 <_vfprintf_r+0x1090>
80004b4e:	72 06       	ld.w	r6,r9[0x0]
80004b50:	2f c9       	sub	r9,-4
80004b52:	51 09       	stdsp	sp[0x40],r9
80004b54:	40 2c       	lddsp	r12,sp[0x8]
80004b56:	58 0c       	cp.w	r12,0
80004b58:	c1 05       	brlt	80004b78 <_vfprintf_r+0x10b4>
80004b5a:	18 9a       	mov	r10,r12
80004b5c:	30 0b       	mov	r11,0
80004b5e:	0c 9c       	mov	r12,r6
80004b60:	e0 a0 14 58 	rcall	80007410 <memchr>
80004b64:	e0 80 02 df 	breq	80005122 <_vfprintf_r+0x165e>
80004b68:	f8 06 01 02 	sub	r2,r12,r6
80004b6c:	40 2b       	lddsp	r11,sp[0x8]
80004b6e:	16 32       	cp.w	r2,r11
80004b70:	e0 89 02 d9 	brgt	80005122 <_vfprintf_r+0x165e>
80004b74:	e0 8f 02 d4 	bral	8000511c <_vfprintf_r+0x1658>
80004b78:	30 0a       	mov	r10,0
80004b7a:	0c 9c       	mov	r12,r6
80004b7c:	50 2a       	stdsp	sp[0x8],r10
80004b7e:	e0 a0 19 33 	rcall	80007de4 <strlen>
80004b82:	18 92       	mov	r2,r12
80004b84:	e0 8f 02 d2 	bral	80005128 <_vfprintf_r+0x1664>
80004b88:	50 a7       	stdsp	sp[0x28],r7
80004b8a:	50 80       	stdsp	sp[0x20],r0
80004b8c:	0c 97       	mov	r7,r6
80004b8e:	04 94       	mov	r4,r2
80004b90:	06 96       	mov	r6,r3
80004b92:	02 92       	mov	r2,r1
80004b94:	40 93       	lddsp	r3,sp[0x24]
80004b96:	10 90       	mov	r0,r8
80004b98:	40 41       	lddsp	r1,sp[0x10]
80004b9a:	a5 a5       	sbr	r5,0x4
80004b9c:	c0 a8       	rjmp	80004bb0 <_vfprintf_r+0x10ec>
80004b9e:	50 a7       	stdsp	sp[0x28],r7
80004ba0:	50 80       	stdsp	sp[0x20],r0
80004ba2:	0c 97       	mov	r7,r6
80004ba4:	04 94       	mov	r4,r2
80004ba6:	06 96       	mov	r6,r3
80004ba8:	02 92       	mov	r2,r1
80004baa:	40 93       	lddsp	r3,sp[0x24]
80004bac:	10 90       	mov	r0,r8
80004bae:	40 41       	lddsp	r1,sp[0x10]
80004bb0:	ed b5 00 05 	bld	r5,0x5
80004bb4:	c5 61       	brne	80004c60 <_vfprintf_r+0x119c>
80004bb6:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004bba:	40 39       	lddsp	r9,sp[0xc]
80004bbc:	58 09       	cp.w	r9,0
80004bbe:	c2 10       	breq	80004c00 <_vfprintf_r+0x113c>
80004bc0:	10 36       	cp.w	r6,r8
80004bc2:	c0 74       	brge	80004bd0 <_vfprintf_r+0x110c>
80004bc4:	fa c8 f9 44 	sub	r8,sp,-1724
80004bc8:	f0 06 00 36 	add	r6,r8,r6<<0x3
80004bcc:	c2 38       	rjmp	80004c12 <_vfprintf_r+0x114e>
80004bce:	d7 03       	nop
80004bd0:	fa c8 f9 50 	sub	r8,sp,-1712
80004bd4:	1a d8       	st.w	--sp,r8
80004bd6:	fa c8 fa b8 	sub	r8,sp,-1352
80004bda:	1a d8       	st.w	--sp,r8
80004bdc:	fa c8 fb b4 	sub	r8,sp,-1100
80004be0:	1a d8       	st.w	--sp,r8
80004be2:	fa c8 f9 40 	sub	r8,sp,-1728
80004be6:	fa c9 ff b4 	sub	r9,sp,-76
80004bea:	04 9a       	mov	r10,r2
80004bec:	0c 9b       	mov	r11,r6
80004bee:	08 9c       	mov	r12,r4
80004bf0:	fe b0 f5 d2 	rcall	80003794 <get_arg>
80004bf4:	2f dd       	sub	sp,-12
80004bf6:	f8 e8 00 00 	ld.d	r8,r12[0]
80004bfa:	fa e9 00 00 	st.d	sp[0],r8
80004bfe:	c2 e8       	rjmp	80004c5a <_vfprintf_r+0x1196>
80004c00:	ee ca ff ff 	sub	r10,r7,-1
80004c04:	10 37       	cp.w	r7,r8
80004c06:	c0 b4       	brge	80004c1c <_vfprintf_r+0x1158>
80004c08:	fa c8 f9 44 	sub	r8,sp,-1724
80004c0c:	14 97       	mov	r7,r10
80004c0e:	f0 06 00 36 	add	r6,r8,r6<<0x3
80004c12:	ec ea fd 88 	ld.d	r10,r6[-632]
80004c16:	fa eb 00 00 	st.d	sp[0],r10
80004c1a:	c2 08       	rjmp	80004c5a <_vfprintf_r+0x1196>
80004c1c:	41 09       	lddsp	r9,sp[0x40]
80004c1e:	59 f8       	cp.w	r8,31
80004c20:	e0 89 00 16 	brgt	80004c4c <_vfprintf_r+0x1188>
80004c24:	f2 e6 00 00 	ld.d	r6,r9[0]
80004c28:	f2 cb ff f8 	sub	r11,r9,-8
80004c2c:	fa e7 00 00 	st.d	sp[0],r6
80004c30:	51 0b       	stdsp	sp[0x40],r11
80004c32:	fa c6 f9 44 	sub	r6,sp,-1724
80004c36:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004c3a:	fa e6 00 00 	ld.d	r6,sp[0]
80004c3e:	f2 e7 fd 88 	st.d	r9[-632],r6
80004c42:	2f f8       	sub	r8,-1
80004c44:	14 97       	mov	r7,r10
80004c46:	fb 48 06 b4 	st.w	sp[1716],r8
80004c4a:	c0 88       	rjmp	80004c5a <_vfprintf_r+0x1196>
80004c4c:	f2 e6 00 00 	ld.d	r6,r9[0]
80004c50:	2f 89       	sub	r9,-8
80004c52:	fa e7 00 00 	st.d	sp[0],r6
80004c56:	51 09       	stdsp	sp[0x40],r9
80004c58:	14 97       	mov	r7,r10
80004c5a:	30 18       	mov	r8,1
80004c5c:	e0 8f 01 d0 	bral	80004ffc <_vfprintf_r+0x1538>
80004c60:	ed b5 00 04 	bld	r5,0x4
80004c64:	c1 61       	brne	80004c90 <_vfprintf_r+0x11cc>
80004c66:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004c6a:	40 3e       	lddsp	lr,sp[0xc]
80004c6c:	58 0e       	cp.w	lr,0
80004c6e:	c0 80       	breq	80004c7e <_vfprintf_r+0x11ba>
80004c70:	10 36       	cp.w	r6,r8
80004c72:	c6 74       	brge	80004d40 <_vfprintf_r+0x127c>
80004c74:	fa cc f9 44 	sub	r12,sp,-1724
80004c78:	f8 06 00 36 	add	r6,r12,r6<<0x3
80004c7c:	c8 08       	rjmp	80004d7c <_vfprintf_r+0x12b8>
80004c7e:	ee ca ff ff 	sub	r10,r7,-1
80004c82:	10 37       	cp.w	r7,r8
80004c84:	c7 f4       	brge	80004d82 <_vfprintf_r+0x12be>
80004c86:	fa cb f9 44 	sub	r11,sp,-1724
80004c8a:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004c8e:	c7 68       	rjmp	80004d7a <_vfprintf_r+0x12b6>
80004c90:	ed b5 00 06 	bld	r5,0x6
80004c94:	c4 a1       	brne	80004d28 <_vfprintf_r+0x1264>
80004c96:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004c9a:	40 3c       	lddsp	r12,sp[0xc]
80004c9c:	58 0c       	cp.w	r12,0
80004c9e:	c1 d0       	breq	80004cd8 <_vfprintf_r+0x1214>
80004ca0:	10 36       	cp.w	r6,r8
80004ca2:	c0 64       	brge	80004cae <_vfprintf_r+0x11ea>
80004ca4:	fa cb f9 44 	sub	r11,sp,-1724
80004ca8:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004cac:	c1 f8       	rjmp	80004cea <_vfprintf_r+0x1226>
80004cae:	fa c8 f9 50 	sub	r8,sp,-1712
80004cb2:	1a d8       	st.w	--sp,r8
80004cb4:	fa c8 fa b8 	sub	r8,sp,-1352
80004cb8:	1a d8       	st.w	--sp,r8
80004cba:	fa c8 fb b4 	sub	r8,sp,-1100
80004cbe:	1a d8       	st.w	--sp,r8
80004cc0:	fa c8 f9 40 	sub	r8,sp,-1728
80004cc4:	fa c9 ff b4 	sub	r9,sp,-76
80004cc8:	04 9a       	mov	r10,r2
80004cca:	0c 9b       	mov	r11,r6
80004ccc:	08 9c       	mov	r12,r4
80004cce:	fe b0 f5 63 	rcall	80003794 <get_arg>
80004cd2:	2f dd       	sub	sp,-12
80004cd4:	98 18       	ld.sh	r8,r12[0x2]
80004cd6:	c2 68       	rjmp	80004d22 <_vfprintf_r+0x125e>
80004cd8:	ee ca ff ff 	sub	r10,r7,-1
80004cdc:	10 37       	cp.w	r7,r8
80004cde:	c0 94       	brge	80004cf0 <_vfprintf_r+0x122c>
80004ce0:	fa c9 f9 44 	sub	r9,sp,-1724
80004ce4:	14 97       	mov	r7,r10
80004ce6:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004cea:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004cee:	c1 a8       	rjmp	80004d22 <_vfprintf_r+0x125e>
80004cf0:	41 09       	lddsp	r9,sp[0x40]
80004cf2:	59 f8       	cp.w	r8,31
80004cf4:	e0 89 00 13 	brgt	80004d1a <_vfprintf_r+0x1256>
80004cf8:	f2 cb ff fc 	sub	r11,r9,-4
80004cfc:	51 0b       	stdsp	sp[0x40],r11
80004cfe:	72 09       	ld.w	r9,r9[0x0]
80004d00:	fa c6 f9 44 	sub	r6,sp,-1724
80004d04:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004d08:	2f f8       	sub	r8,-1
80004d0a:	f7 49 fd 88 	st.w	r11[-632],r9
80004d0e:	fb 48 06 b4 	st.w	sp[1716],r8
80004d12:	14 97       	mov	r7,r10
80004d14:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004d18:	c0 58       	rjmp	80004d22 <_vfprintf_r+0x125e>
80004d1a:	92 18       	ld.sh	r8,r9[0x2]
80004d1c:	14 97       	mov	r7,r10
80004d1e:	2f c9       	sub	r9,-4
80004d20:	51 09       	stdsp	sp[0x40],r9
80004d22:	5c 78       	castu.h	r8
80004d24:	50 18       	stdsp	sp[0x4],r8
80004d26:	c4 68       	rjmp	80004db2 <_vfprintf_r+0x12ee>
80004d28:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004d2c:	40 3c       	lddsp	r12,sp[0xc]
80004d2e:	58 0c       	cp.w	r12,0
80004d30:	c1 d0       	breq	80004d6a <_vfprintf_r+0x12a6>
80004d32:	10 36       	cp.w	r6,r8
80004d34:	c0 64       	brge	80004d40 <_vfprintf_r+0x127c>
80004d36:	fa cb f9 44 	sub	r11,sp,-1724
80004d3a:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004d3e:	c1 f8       	rjmp	80004d7c <_vfprintf_r+0x12b8>
80004d40:	fa c8 f9 50 	sub	r8,sp,-1712
80004d44:	1a d8       	st.w	--sp,r8
80004d46:	fa c8 fa b8 	sub	r8,sp,-1352
80004d4a:	0c 9b       	mov	r11,r6
80004d4c:	1a d8       	st.w	--sp,r8
80004d4e:	fa c8 fb b4 	sub	r8,sp,-1100
80004d52:	04 9a       	mov	r10,r2
80004d54:	1a d8       	st.w	--sp,r8
80004d56:	08 9c       	mov	r12,r4
80004d58:	fa c8 f9 40 	sub	r8,sp,-1728
80004d5c:	fa c9 ff b4 	sub	r9,sp,-76
80004d60:	fe b0 f5 1a 	rcall	80003794 <get_arg>
80004d64:	2f dd       	sub	sp,-12
80004d66:	78 0b       	ld.w	r11,r12[0x0]
80004d68:	c2 48       	rjmp	80004db0 <_vfprintf_r+0x12ec>
80004d6a:	ee ca ff ff 	sub	r10,r7,-1
80004d6e:	10 37       	cp.w	r7,r8
80004d70:	c0 94       	brge	80004d82 <_vfprintf_r+0x12be>
80004d72:	fa c9 f9 44 	sub	r9,sp,-1724
80004d76:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004d7a:	14 97       	mov	r7,r10
80004d7c:	ec fb fd 88 	ld.w	r11,r6[-632]
80004d80:	c1 88       	rjmp	80004db0 <_vfprintf_r+0x12ec>
80004d82:	41 09       	lddsp	r9,sp[0x40]
80004d84:	59 f8       	cp.w	r8,31
80004d86:	e0 89 00 11 	brgt	80004da8 <_vfprintf_r+0x12e4>
80004d8a:	f2 cb ff fc 	sub	r11,r9,-4
80004d8e:	51 0b       	stdsp	sp[0x40],r11
80004d90:	fa c6 f9 44 	sub	r6,sp,-1724
80004d94:	72 0b       	ld.w	r11,r9[0x0]
80004d96:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004d9a:	f3 4b fd 88 	st.w	r9[-632],r11
80004d9e:	2f f8       	sub	r8,-1
80004da0:	14 97       	mov	r7,r10
80004da2:	fb 48 06 b4 	st.w	sp[1716],r8
80004da6:	c0 58       	rjmp	80004db0 <_vfprintf_r+0x12ec>
80004da8:	72 0b       	ld.w	r11,r9[0x0]
80004daa:	14 97       	mov	r7,r10
80004dac:	2f c9       	sub	r9,-4
80004dae:	51 09       	stdsp	sp[0x40],r9
80004db0:	50 1b       	stdsp	sp[0x4],r11
80004db2:	30 0e       	mov	lr,0
80004db4:	30 18       	mov	r8,1
80004db6:	50 0e       	stdsp	sp[0x0],lr
80004db8:	c2 29       	rjmp	80004ffc <_vfprintf_r+0x1538>
80004dba:	50 a7       	stdsp	sp[0x28],r7
80004dbc:	50 80       	stdsp	sp[0x20],r0
80004dbe:	0c 97       	mov	r7,r6
80004dc0:	04 94       	mov	r4,r2
80004dc2:	06 96       	mov	r6,r3
80004dc4:	02 92       	mov	r2,r1
80004dc6:	fe cc b7 5a 	sub	r12,pc,-18598
80004dca:	40 93       	lddsp	r3,sp[0x24]
80004dcc:	10 90       	mov	r0,r8
80004dce:	40 41       	lddsp	r1,sp[0x10]
80004dd0:	50 dc       	stdsp	sp[0x34],r12
80004dd2:	ed b5 00 05 	bld	r5,0x5
80004dd6:	c5 51       	brne	80004e80 <_vfprintf_r+0x13bc>
80004dd8:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004ddc:	40 3b       	lddsp	r11,sp[0xc]
80004dde:	58 0b       	cp.w	r11,0
80004de0:	c2 20       	breq	80004e24 <_vfprintf_r+0x1360>
80004de2:	10 36       	cp.w	r6,r8
80004de4:	c0 a4       	brge	80004df8 <_vfprintf_r+0x1334>
80004de6:	fa ca f9 44 	sub	r10,sp,-1724
80004dea:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004dee:	ec e8 fd 88 	ld.d	r8,r6[-632]
80004df2:	fa e9 00 00 	st.d	sp[0],r8
80004df6:	cf 28       	rjmp	80004fda <_vfprintf_r+0x1516>
80004df8:	fa c8 f9 50 	sub	r8,sp,-1712
80004dfc:	1a d8       	st.w	--sp,r8
80004dfe:	fa c8 fa b8 	sub	r8,sp,-1352
80004e02:	04 9a       	mov	r10,r2
80004e04:	1a d8       	st.w	--sp,r8
80004e06:	0c 9b       	mov	r11,r6
80004e08:	fa c8 fb b4 	sub	r8,sp,-1100
80004e0c:	08 9c       	mov	r12,r4
80004e0e:	1a d8       	st.w	--sp,r8
80004e10:	fa c8 f9 40 	sub	r8,sp,-1728
80004e14:	fa c9 ff b4 	sub	r9,sp,-76
80004e18:	fe b0 f4 be 	rcall	80003794 <get_arg>
80004e1c:	2f dd       	sub	sp,-12
80004e1e:	f8 ea 00 00 	ld.d	r10,r12[0]
80004e22:	c0 c8       	rjmp	80004e3a <_vfprintf_r+0x1376>
80004e24:	ee ca ff ff 	sub	r10,r7,-1
80004e28:	10 37       	cp.w	r7,r8
80004e2a:	c0 b4       	brge	80004e40 <_vfprintf_r+0x137c>
80004e2c:	fa c9 f9 44 	sub	r9,sp,-1724
80004e30:	14 97       	mov	r7,r10
80004e32:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004e36:	ec ea fd 88 	ld.d	r10,r6[-632]
80004e3a:	fa eb 00 00 	st.d	sp[0],r10
80004e3e:	cc e8       	rjmp	80004fda <_vfprintf_r+0x1516>
80004e40:	41 09       	lddsp	r9,sp[0x40]
80004e42:	59 f8       	cp.w	r8,31
80004e44:	e0 89 00 16 	brgt	80004e70 <_vfprintf_r+0x13ac>
80004e48:	f2 e6 00 00 	ld.d	r6,r9[0]
80004e4c:	f2 cb ff f8 	sub	r11,r9,-8
80004e50:	fa e7 00 00 	st.d	sp[0],r6
80004e54:	51 0b       	stdsp	sp[0x40],r11
80004e56:	fa c6 f9 44 	sub	r6,sp,-1724
80004e5a:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004e5e:	fa e6 00 00 	ld.d	r6,sp[0]
80004e62:	f2 e7 fd 88 	st.d	r9[-632],r6
80004e66:	2f f8       	sub	r8,-1
80004e68:	14 97       	mov	r7,r10
80004e6a:	fb 48 06 b4 	st.w	sp[1716],r8
80004e6e:	cb 68       	rjmp	80004fda <_vfprintf_r+0x1516>
80004e70:	f2 e6 00 00 	ld.d	r6,r9[0]
80004e74:	2f 89       	sub	r9,-8
80004e76:	fa e7 00 00 	st.d	sp[0],r6
80004e7a:	51 09       	stdsp	sp[0x40],r9
80004e7c:	14 97       	mov	r7,r10
80004e7e:	ca e8       	rjmp	80004fda <_vfprintf_r+0x1516>
80004e80:	ed b5 00 04 	bld	r5,0x4
80004e84:	c1 71       	brne	80004eb2 <_vfprintf_r+0x13ee>
80004e86:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004e8a:	40 3e       	lddsp	lr,sp[0xc]
80004e8c:	58 0e       	cp.w	lr,0
80004e8e:	c0 80       	breq	80004e9e <_vfprintf_r+0x13da>
80004e90:	10 36       	cp.w	r6,r8
80004e92:	c6 94       	brge	80004f64 <_vfprintf_r+0x14a0>
80004e94:	fa cc f9 44 	sub	r12,sp,-1724
80004e98:	f8 06 00 36 	add	r6,r12,r6<<0x3
80004e9c:	c8 28       	rjmp	80004fa0 <_vfprintf_r+0x14dc>
80004e9e:	ee ca ff ff 	sub	r10,r7,-1
80004ea2:	10 37       	cp.w	r7,r8
80004ea4:	e0 84 00 81 	brge	80004fa6 <_vfprintf_r+0x14e2>
80004ea8:	fa cb f9 44 	sub	r11,sp,-1724
80004eac:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004eb0:	c7 78       	rjmp	80004f9e <_vfprintf_r+0x14da>
80004eb2:	ed b5 00 06 	bld	r5,0x6
80004eb6:	c4 b1       	brne	80004f4c <_vfprintf_r+0x1488>
80004eb8:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004ebc:	40 3c       	lddsp	r12,sp[0xc]
80004ebe:	58 0c       	cp.w	r12,0
80004ec0:	c1 d0       	breq	80004efa <_vfprintf_r+0x1436>
80004ec2:	10 36       	cp.w	r6,r8
80004ec4:	c0 64       	brge	80004ed0 <_vfprintf_r+0x140c>
80004ec6:	fa cb f9 44 	sub	r11,sp,-1724
80004eca:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004ece:	c1 f8       	rjmp	80004f0c <_vfprintf_r+0x1448>
80004ed0:	fa c8 f9 50 	sub	r8,sp,-1712
80004ed4:	1a d8       	st.w	--sp,r8
80004ed6:	fa c8 fa b8 	sub	r8,sp,-1352
80004eda:	1a d8       	st.w	--sp,r8
80004edc:	fa c8 fb b4 	sub	r8,sp,-1100
80004ee0:	1a d8       	st.w	--sp,r8
80004ee2:	fa c8 f9 40 	sub	r8,sp,-1728
80004ee6:	fa c9 ff b4 	sub	r9,sp,-76
80004eea:	04 9a       	mov	r10,r2
80004eec:	0c 9b       	mov	r11,r6
80004eee:	08 9c       	mov	r12,r4
80004ef0:	fe b0 f4 52 	rcall	80003794 <get_arg>
80004ef4:	2f dd       	sub	sp,-12
80004ef6:	98 18       	ld.sh	r8,r12[0x2]
80004ef8:	c2 78       	rjmp	80004f46 <_vfprintf_r+0x1482>
80004efa:	ee ca ff ff 	sub	r10,r7,-1
80004efe:	10 37       	cp.w	r7,r8
80004f00:	c0 a4       	brge	80004f14 <_vfprintf_r+0x1450>
80004f02:	fa c9 f9 44 	sub	r9,sp,-1724
80004f06:	14 97       	mov	r7,r10
80004f08:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004f0c:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004f10:	c1 b8       	rjmp	80004f46 <_vfprintf_r+0x1482>
80004f12:	d7 03       	nop
80004f14:	41 09       	lddsp	r9,sp[0x40]
80004f16:	59 f8       	cp.w	r8,31
80004f18:	e0 89 00 13 	brgt	80004f3e <_vfprintf_r+0x147a>
80004f1c:	f2 cb ff fc 	sub	r11,r9,-4
80004f20:	51 0b       	stdsp	sp[0x40],r11
80004f22:	72 09       	ld.w	r9,r9[0x0]
80004f24:	fa c6 f9 44 	sub	r6,sp,-1724
80004f28:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004f2c:	2f f8       	sub	r8,-1
80004f2e:	f7 49 fd 88 	st.w	r11[-632],r9
80004f32:	fb 48 06 b4 	st.w	sp[1716],r8
80004f36:	14 97       	mov	r7,r10
80004f38:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004f3c:	c0 58       	rjmp	80004f46 <_vfprintf_r+0x1482>
80004f3e:	92 18       	ld.sh	r8,r9[0x2]
80004f40:	14 97       	mov	r7,r10
80004f42:	2f c9       	sub	r9,-4
80004f44:	51 09       	stdsp	sp[0x40],r9
80004f46:	5c 78       	castu.h	r8
80004f48:	50 18       	stdsp	sp[0x4],r8
80004f4a:	c4 68       	rjmp	80004fd6 <_vfprintf_r+0x1512>
80004f4c:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004f50:	40 3c       	lddsp	r12,sp[0xc]
80004f52:	58 0c       	cp.w	r12,0
80004f54:	c1 d0       	breq	80004f8e <_vfprintf_r+0x14ca>
80004f56:	10 36       	cp.w	r6,r8
80004f58:	c0 64       	brge	80004f64 <_vfprintf_r+0x14a0>
80004f5a:	fa cb f9 44 	sub	r11,sp,-1724
80004f5e:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004f62:	c1 f8       	rjmp	80004fa0 <_vfprintf_r+0x14dc>
80004f64:	fa c8 f9 50 	sub	r8,sp,-1712
80004f68:	1a d8       	st.w	--sp,r8
80004f6a:	fa c8 fa b8 	sub	r8,sp,-1352
80004f6e:	0c 9b       	mov	r11,r6
80004f70:	1a d8       	st.w	--sp,r8
80004f72:	fa c8 fb b4 	sub	r8,sp,-1100
80004f76:	04 9a       	mov	r10,r2
80004f78:	1a d8       	st.w	--sp,r8
80004f7a:	08 9c       	mov	r12,r4
80004f7c:	fa c8 f9 40 	sub	r8,sp,-1728
80004f80:	fa c9 ff b4 	sub	r9,sp,-76
80004f84:	fe b0 f4 08 	rcall	80003794 <get_arg>
80004f88:	2f dd       	sub	sp,-12
80004f8a:	78 0b       	ld.w	r11,r12[0x0]
80004f8c:	c2 48       	rjmp	80004fd4 <_vfprintf_r+0x1510>
80004f8e:	ee ca ff ff 	sub	r10,r7,-1
80004f92:	10 37       	cp.w	r7,r8
80004f94:	c0 94       	brge	80004fa6 <_vfprintf_r+0x14e2>
80004f96:	fa c9 f9 44 	sub	r9,sp,-1724
80004f9a:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004f9e:	14 97       	mov	r7,r10
80004fa0:	ec fb fd 88 	ld.w	r11,r6[-632]
80004fa4:	c1 88       	rjmp	80004fd4 <_vfprintf_r+0x1510>
80004fa6:	41 09       	lddsp	r9,sp[0x40]
80004fa8:	59 f8       	cp.w	r8,31
80004faa:	e0 89 00 11 	brgt	80004fcc <_vfprintf_r+0x1508>
80004fae:	f2 cb ff fc 	sub	r11,r9,-4
80004fb2:	51 0b       	stdsp	sp[0x40],r11
80004fb4:	fa c6 f9 44 	sub	r6,sp,-1724
80004fb8:	72 0b       	ld.w	r11,r9[0x0]
80004fba:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004fbe:	f3 4b fd 88 	st.w	r9[-632],r11
80004fc2:	2f f8       	sub	r8,-1
80004fc4:	14 97       	mov	r7,r10
80004fc6:	fb 48 06 b4 	st.w	sp[1716],r8
80004fca:	c0 58       	rjmp	80004fd4 <_vfprintf_r+0x1510>
80004fcc:	72 0b       	ld.w	r11,r9[0x0]
80004fce:	14 97       	mov	r7,r10
80004fd0:	2f c9       	sub	r9,-4
80004fd2:	51 09       	stdsp	sp[0x40],r9
80004fd4:	50 1b       	stdsp	sp[0x4],r11
80004fd6:	30 0e       	mov	lr,0
80004fd8:	50 0e       	stdsp	sp[0x0],lr
80004fda:	40 08       	lddsp	r8,sp[0x0]
80004fdc:	40 1c       	lddsp	r12,sp[0x4]
80004fde:	18 48       	or	r8,r12
80004fe0:	5f 19       	srne	r9
80004fe2:	0a 98       	mov	r8,r5
80004fe4:	eb e9 00 09 	and	r9,r5,r9
80004fe8:	a1 b8       	sbr	r8,0x1
80004fea:	58 09       	cp.w	r9,0
80004fec:	c0 70       	breq	80004ffa <_vfprintf_r+0x1536>
80004fee:	10 95       	mov	r5,r8
80004ff0:	fb 60 06 b9 	st.b	sp[1721],r0
80004ff4:	33 08       	mov	r8,48
80004ff6:	fb 68 06 b8 	st.b	sp[1720],r8
80004ffa:	30 28       	mov	r8,2
80004ffc:	30 09       	mov	r9,0
80004ffe:	fb 69 06 bb 	st.b	sp[1723],r9
80005002:	0a 99       	mov	r9,r5
80005004:	a7 d9       	cbr	r9,0x7
80005006:	40 2b       	lddsp	r11,sp[0x8]
80005008:	40 16       	lddsp	r6,sp[0x4]
8000500a:	58 0b       	cp.w	r11,0
8000500c:	5f 1a       	srne	r10
8000500e:	f2 05 17 40 	movge	r5,r9
80005012:	fa c2 f9 78 	sub	r2,sp,-1672
80005016:	40 09       	lddsp	r9,sp[0x0]
80005018:	0c 49       	or	r9,r6
8000501a:	5f 19       	srne	r9
8000501c:	f5 e9 10 09 	or	r9,r10,r9
80005020:	c5 c0       	breq	800050d8 <_vfprintf_r+0x1614>
80005022:	30 19       	mov	r9,1
80005024:	f2 08 18 00 	cp.b	r8,r9
80005028:	c0 60       	breq	80005034 <_vfprintf_r+0x1570>
8000502a:	30 29       	mov	r9,2
8000502c:	f2 08 18 00 	cp.b	r8,r9
80005030:	c0 41       	brne	80005038 <_vfprintf_r+0x1574>
80005032:	c3 c8       	rjmp	800050aa <_vfprintf_r+0x15e6>
80005034:	04 96       	mov	r6,r2
80005036:	c3 08       	rjmp	80005096 <_vfprintf_r+0x15d2>
80005038:	04 96       	mov	r6,r2
8000503a:	fa e8 00 00 	ld.d	r8,sp[0]
8000503e:	f5 d8 c0 03 	bfextu	r10,r8,0x0,0x3
80005042:	2d 0a       	sub	r10,-48
80005044:	0c fa       	st.b	--r6,r10
80005046:	f0 0b 16 03 	lsr	r11,r8,0x3
8000504a:	f2 0c 16 03 	lsr	r12,r9,0x3
8000504e:	f7 e9 11 db 	or	r11,r11,r9<<0x1d
80005052:	18 99       	mov	r9,r12
80005054:	16 98       	mov	r8,r11
80005056:	58 08       	cp.w	r8,0
80005058:	5c 29       	cpc	r9
8000505a:	cf 21       	brne	8000503e <_vfprintf_r+0x157a>
8000505c:	fa e9 00 00 	st.d	sp[0],r8
80005060:	ed b5 00 00 	bld	r5,0x0
80005064:	c4 51       	brne	800050ee <_vfprintf_r+0x162a>
80005066:	33 09       	mov	r9,48
80005068:	f2 0a 18 00 	cp.b	r10,r9
8000506c:	c4 10       	breq	800050ee <_vfprintf_r+0x162a>
8000506e:	0c f9       	st.b	--r6,r9
80005070:	c3 f8       	rjmp	800050ee <_vfprintf_r+0x162a>
80005072:	fa ea 00 00 	ld.d	r10,sp[0]
80005076:	30 a8       	mov	r8,10
80005078:	30 09       	mov	r9,0
8000507a:	e0 a0 1e 31 	rcall	80008cdc <__avr32_umod64>
8000507e:	30 a8       	mov	r8,10
80005080:	2d 0a       	sub	r10,-48
80005082:	30 09       	mov	r9,0
80005084:	ac 8a       	st.b	r6[0x0],r10
80005086:	fa ea 00 00 	ld.d	r10,sp[0]
8000508a:	e0 a0 1c f7 	rcall	80008a78 <__avr32_udiv64>
8000508e:	16 99       	mov	r9,r11
80005090:	14 98       	mov	r8,r10
80005092:	fa e9 00 00 	st.d	sp[0],r8
80005096:	20 16       	sub	r6,1
80005098:	fa ea 00 00 	ld.d	r10,sp[0]
8000509c:	58 9a       	cp.w	r10,9
8000509e:	5c 2b       	cpc	r11
800050a0:	fe 9b ff e9 	brhi	80005072 <_vfprintf_r+0x15ae>
800050a4:	1b f8       	ld.ub	r8,sp[0x7]
800050a6:	2d 08       	sub	r8,-48
800050a8:	c2 08       	rjmp	800050e8 <_vfprintf_r+0x1624>
800050aa:	04 96       	mov	r6,r2
800050ac:	fa e8 00 00 	ld.d	r8,sp[0]
800050b0:	f5 d8 c0 04 	bfextu	r10,r8,0x0,0x4
800050b4:	40 de       	lddsp	lr,sp[0x34]
800050b6:	fc 0a 07 0a 	ld.ub	r10,lr[r10]
800050ba:	0c fa       	st.b	--r6,r10
800050bc:	f2 0b 16 04 	lsr	r11,r9,0x4
800050c0:	f0 0a 16 04 	lsr	r10,r8,0x4
800050c4:	f5 e9 11 ca 	or	r10,r10,r9<<0x1c
800050c8:	16 99       	mov	r9,r11
800050ca:	14 98       	mov	r8,r10
800050cc:	58 08       	cp.w	r8,0
800050ce:	5c 29       	cpc	r9
800050d0:	cf 01       	brne	800050b0 <_vfprintf_r+0x15ec>
800050d2:	fa e9 00 00 	st.d	sp[0],r8
800050d6:	c0 c8       	rjmp	800050ee <_vfprintf_r+0x162a>
800050d8:	58 08       	cp.w	r8,0
800050da:	c0 91       	brne	800050ec <_vfprintf_r+0x1628>
800050dc:	ed b5 00 00 	bld	r5,0x0
800050e0:	c0 61       	brne	800050ec <_vfprintf_r+0x1628>
800050e2:	fa c6 f9 79 	sub	r6,sp,-1671
800050e6:	33 08       	mov	r8,48
800050e8:	ac 88       	st.b	r6[0x0],r8
800050ea:	c0 28       	rjmp	800050ee <_vfprintf_r+0x162a>
800050ec:	04 96       	mov	r6,r2
800050ee:	0c 12       	sub	r2,r6
800050f0:	c1 c8       	rjmp	80005128 <_vfprintf_r+0x1664>
800050f2:	50 a7       	stdsp	sp[0x28],r7
800050f4:	50 80       	stdsp	sp[0x20],r0
800050f6:	40 93       	lddsp	r3,sp[0x24]
800050f8:	0c 97       	mov	r7,r6
800050fa:	10 90       	mov	r0,r8
800050fc:	04 94       	mov	r4,r2
800050fe:	40 41       	lddsp	r1,sp[0x10]
80005100:	58 08       	cp.w	r8,0
80005102:	e0 80 04 4f 	breq	800059a0 <_vfprintf_r+0x1edc>
80005106:	fb 68 06 60 	st.b	sp[1632],r8
8000510a:	30 0c       	mov	r12,0
8000510c:	30 08       	mov	r8,0
8000510e:	30 12       	mov	r2,1
80005110:	fb 68 06 bb 	st.b	sp[1723],r8
80005114:	50 2c       	stdsp	sp[0x8],r12
80005116:	fa c6 f9 a0 	sub	r6,sp,-1632
8000511a:	c0 78       	rjmp	80005128 <_vfprintf_r+0x1664>
8000511c:	30 0b       	mov	r11,0
8000511e:	50 2b       	stdsp	sp[0x8],r11
80005120:	c0 48       	rjmp	80005128 <_vfprintf_r+0x1664>
80005122:	40 22       	lddsp	r2,sp[0x8]
80005124:	30 0a       	mov	r10,0
80005126:	50 2a       	stdsp	sp[0x8],r10
80005128:	40 29       	lddsp	r9,sp[0x8]
8000512a:	e4 09 0c 49 	max	r9,r2,r9
8000512e:	fb 38 06 bb 	ld.ub	r8,sp[1723]
80005132:	50 39       	stdsp	sp[0xc],r9
80005134:	0a 9e       	mov	lr,r5
80005136:	30 09       	mov	r9,0
80005138:	e2 1e 00 02 	andl	lr,0x2,COH
8000513c:	f2 08 18 00 	cp.b	r8,r9
80005140:	fb f8 10 03 	ld.wne	r8,sp[0xc]
80005144:	f7 b8 01 ff 	subne	r8,-1
80005148:	fb f8 1a 03 	st.wne	sp[0xc],r8
8000514c:	0a 9b       	mov	r11,r5
8000514e:	58 0e       	cp.w	lr,0
80005150:	fb fc 10 03 	ld.wne	r12,sp[0xc]
80005154:	f7 bc 01 fe 	subne	r12,-2
80005158:	fb fc 1a 03 	st.wne	sp[0xc],r12
8000515c:	e2 1b 00 84 	andl	r11,0x84,COH
80005160:	50 fe       	stdsp	sp[0x3c],lr
80005162:	50 9b       	stdsp	sp[0x24],r11
80005164:	c4 71       	brne	800051f2 <_vfprintf_r+0x172e>
80005166:	40 8a       	lddsp	r10,sp[0x20]
80005168:	40 39       	lddsp	r9,sp[0xc]
8000516a:	12 1a       	sub	r10,r9
8000516c:	50 4a       	stdsp	sp[0x10],r10
8000516e:	58 0a       	cp.w	r10,0
80005170:	e0 89 00 20 	brgt	800051b0 <_vfprintf_r+0x16ec>
80005174:	c3 f8       	rjmp	800051f2 <_vfprintf_r+0x172e>
80005176:	2f 09       	sub	r9,-16
80005178:	2f f8       	sub	r8,-1
8000517a:	fe ce ba f6 	sub	lr,pc,-17674
8000517e:	31 0c       	mov	r12,16
80005180:	fb 49 06 90 	st.w	sp[1680],r9
80005184:	87 0e       	st.w	r3[0x0],lr
80005186:	87 1c       	st.w	r3[0x4],r12
80005188:	fb 48 06 8c 	st.w	sp[1676],r8
8000518c:	58 78       	cp.w	r8,7
8000518e:	e0 89 00 04 	brgt	80005196 <_vfprintf_r+0x16d2>
80005192:	2f 83       	sub	r3,-8
80005194:	c0 b8       	rjmp	800051aa <_vfprintf_r+0x16e6>
80005196:	fa ca f9 78 	sub	r10,sp,-1672
8000519a:	02 9b       	mov	r11,r1
8000519c:	08 9c       	mov	r12,r4
8000519e:	fe b0 f4 85 	rcall	80003aa8 <__sprint_r>
800051a2:	e0 81 04 10 	brne	800059c2 <_vfprintf_r+0x1efe>
800051a6:	fa c3 f9 e0 	sub	r3,sp,-1568
800051aa:	40 4b       	lddsp	r11,sp[0x10]
800051ac:	21 0b       	sub	r11,16
800051ae:	50 4b       	stdsp	sp[0x10],r11
800051b0:	fa f9 06 90 	ld.w	r9,sp[1680]
800051b4:	fa f8 06 8c 	ld.w	r8,sp[1676]
800051b8:	fe ca bb 34 	sub	r10,pc,-17612
800051bc:	40 4e       	lddsp	lr,sp[0x10]
800051be:	59 0e       	cp.w	lr,16
800051c0:	fe 99 ff db 	brgt	80005176 <_vfprintf_r+0x16b2>
800051c4:	1c 09       	add	r9,lr
800051c6:	2f f8       	sub	r8,-1
800051c8:	87 0a       	st.w	r3[0x0],r10
800051ca:	fb 49 06 90 	st.w	sp[1680],r9
800051ce:	87 1e       	st.w	r3[0x4],lr
800051d0:	fb 48 06 8c 	st.w	sp[1676],r8
800051d4:	58 78       	cp.w	r8,7
800051d6:	e0 89 00 04 	brgt	800051de <_vfprintf_r+0x171a>
800051da:	2f 83       	sub	r3,-8
800051dc:	c0 b8       	rjmp	800051f2 <_vfprintf_r+0x172e>
800051de:	fa ca f9 78 	sub	r10,sp,-1672
800051e2:	02 9b       	mov	r11,r1
800051e4:	08 9c       	mov	r12,r4
800051e6:	fe b0 f4 61 	rcall	80003aa8 <__sprint_r>
800051ea:	e0 81 03 ec 	brne	800059c2 <_vfprintf_r+0x1efe>
800051ee:	fa c3 f9 e0 	sub	r3,sp,-1568
800051f2:	30 09       	mov	r9,0
800051f4:	fb 38 06 bb 	ld.ub	r8,sp[1723]
800051f8:	f2 08 18 00 	cp.b	r8,r9
800051fc:	c1 f0       	breq	8000523a <_vfprintf_r+0x1776>
800051fe:	fa f8 06 90 	ld.w	r8,sp[1680]
80005202:	fa c9 f9 45 	sub	r9,sp,-1723
80005206:	2f f8       	sub	r8,-1
80005208:	87 09       	st.w	r3[0x0],r9
8000520a:	fb 48 06 90 	st.w	sp[1680],r8
8000520e:	30 19       	mov	r9,1
80005210:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005214:	87 19       	st.w	r3[0x4],r9
80005216:	2f f8       	sub	r8,-1
80005218:	fb 48 06 8c 	st.w	sp[1676],r8
8000521c:	58 78       	cp.w	r8,7
8000521e:	e0 89 00 04 	brgt	80005226 <_vfprintf_r+0x1762>
80005222:	2f 83       	sub	r3,-8
80005224:	c0 b8       	rjmp	8000523a <_vfprintf_r+0x1776>
80005226:	fa ca f9 78 	sub	r10,sp,-1672
8000522a:	02 9b       	mov	r11,r1
8000522c:	08 9c       	mov	r12,r4
8000522e:	fe b0 f4 3d 	rcall	80003aa8 <__sprint_r>
80005232:	e0 81 03 c8 	brne	800059c2 <_vfprintf_r+0x1efe>
80005236:	fa c3 f9 e0 	sub	r3,sp,-1568
8000523a:	40 fc       	lddsp	r12,sp[0x3c]
8000523c:	58 0c       	cp.w	r12,0
8000523e:	c1 f0       	breq	8000527c <_vfprintf_r+0x17b8>
80005240:	fa f8 06 90 	ld.w	r8,sp[1680]
80005244:	fa c9 f9 48 	sub	r9,sp,-1720
80005248:	2f e8       	sub	r8,-2
8000524a:	87 09       	st.w	r3[0x0],r9
8000524c:	fb 48 06 90 	st.w	sp[1680],r8
80005250:	30 29       	mov	r9,2
80005252:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005256:	87 19       	st.w	r3[0x4],r9
80005258:	2f f8       	sub	r8,-1
8000525a:	fb 48 06 8c 	st.w	sp[1676],r8
8000525e:	58 78       	cp.w	r8,7
80005260:	e0 89 00 04 	brgt	80005268 <_vfprintf_r+0x17a4>
80005264:	2f 83       	sub	r3,-8
80005266:	c0 b8       	rjmp	8000527c <_vfprintf_r+0x17b8>
80005268:	fa ca f9 78 	sub	r10,sp,-1672
8000526c:	02 9b       	mov	r11,r1
8000526e:	08 9c       	mov	r12,r4
80005270:	fe b0 f4 1c 	rcall	80003aa8 <__sprint_r>
80005274:	e0 81 03 a7 	brne	800059c2 <_vfprintf_r+0x1efe>
80005278:	fa c3 f9 e0 	sub	r3,sp,-1568
8000527c:	40 9b       	lddsp	r11,sp[0x24]
8000527e:	e0 4b 00 80 	cp.w	r11,128
80005282:	c4 71       	brne	80005310 <_vfprintf_r+0x184c>
80005284:	40 8a       	lddsp	r10,sp[0x20]
80005286:	40 39       	lddsp	r9,sp[0xc]
80005288:	12 1a       	sub	r10,r9
8000528a:	50 4a       	stdsp	sp[0x10],r10
8000528c:	58 0a       	cp.w	r10,0
8000528e:	e0 89 00 20 	brgt	800052ce <_vfprintf_r+0x180a>
80005292:	c3 f8       	rjmp	80005310 <_vfprintf_r+0x184c>
80005294:	2f 09       	sub	r9,-16
80005296:	2f f8       	sub	r8,-1
80005298:	fe ce bc 04 	sub	lr,pc,-17404
8000529c:	31 0c       	mov	r12,16
8000529e:	fb 49 06 90 	st.w	sp[1680],r9
800052a2:	87 0e       	st.w	r3[0x0],lr
800052a4:	87 1c       	st.w	r3[0x4],r12
800052a6:	fb 48 06 8c 	st.w	sp[1676],r8
800052aa:	58 78       	cp.w	r8,7
800052ac:	e0 89 00 04 	brgt	800052b4 <_vfprintf_r+0x17f0>
800052b0:	2f 83       	sub	r3,-8
800052b2:	c0 b8       	rjmp	800052c8 <_vfprintf_r+0x1804>
800052b4:	fa ca f9 78 	sub	r10,sp,-1672
800052b8:	02 9b       	mov	r11,r1
800052ba:	08 9c       	mov	r12,r4
800052bc:	fe b0 f3 f6 	rcall	80003aa8 <__sprint_r>
800052c0:	e0 81 03 81 	brne	800059c2 <_vfprintf_r+0x1efe>
800052c4:	fa c3 f9 e0 	sub	r3,sp,-1568
800052c8:	40 4b       	lddsp	r11,sp[0x10]
800052ca:	21 0b       	sub	r11,16
800052cc:	50 4b       	stdsp	sp[0x10],r11
800052ce:	fa f9 06 90 	ld.w	r9,sp[1680]
800052d2:	fa f8 06 8c 	ld.w	r8,sp[1676]
800052d6:	fe ca bc 42 	sub	r10,pc,-17342
800052da:	40 4e       	lddsp	lr,sp[0x10]
800052dc:	59 0e       	cp.w	lr,16
800052de:	fe 99 ff db 	brgt	80005294 <_vfprintf_r+0x17d0>
800052e2:	1c 09       	add	r9,lr
800052e4:	2f f8       	sub	r8,-1
800052e6:	87 0a       	st.w	r3[0x0],r10
800052e8:	fb 49 06 90 	st.w	sp[1680],r9
800052ec:	87 1e       	st.w	r3[0x4],lr
800052ee:	fb 48 06 8c 	st.w	sp[1676],r8
800052f2:	58 78       	cp.w	r8,7
800052f4:	e0 89 00 04 	brgt	800052fc <_vfprintf_r+0x1838>
800052f8:	2f 83       	sub	r3,-8
800052fa:	c0 b8       	rjmp	80005310 <_vfprintf_r+0x184c>
800052fc:	fa ca f9 78 	sub	r10,sp,-1672
80005300:	02 9b       	mov	r11,r1
80005302:	08 9c       	mov	r12,r4
80005304:	fe b0 f3 d2 	rcall	80003aa8 <__sprint_r>
80005308:	e0 81 03 5d 	brne	800059c2 <_vfprintf_r+0x1efe>
8000530c:	fa c3 f9 e0 	sub	r3,sp,-1568
80005310:	40 2c       	lddsp	r12,sp[0x8]
80005312:	04 1c       	sub	r12,r2
80005314:	50 2c       	stdsp	sp[0x8],r12
80005316:	58 0c       	cp.w	r12,0
80005318:	e0 89 00 20 	brgt	80005358 <_vfprintf_r+0x1894>
8000531c:	c3 f8       	rjmp	8000539a <_vfprintf_r+0x18d6>
8000531e:	2f 09       	sub	r9,-16
80005320:	2f f8       	sub	r8,-1
80005322:	fe cb bc 8e 	sub	r11,pc,-17266
80005326:	31 0a       	mov	r10,16
80005328:	fb 49 06 90 	st.w	sp[1680],r9
8000532c:	87 0b       	st.w	r3[0x0],r11
8000532e:	87 1a       	st.w	r3[0x4],r10
80005330:	fb 48 06 8c 	st.w	sp[1676],r8
80005334:	58 78       	cp.w	r8,7
80005336:	e0 89 00 04 	brgt	8000533e <_vfprintf_r+0x187a>
8000533a:	2f 83       	sub	r3,-8
8000533c:	c0 b8       	rjmp	80005352 <_vfprintf_r+0x188e>
8000533e:	fa ca f9 78 	sub	r10,sp,-1672
80005342:	02 9b       	mov	r11,r1
80005344:	08 9c       	mov	r12,r4
80005346:	fe b0 f3 b1 	rcall	80003aa8 <__sprint_r>
8000534a:	e0 81 03 3c 	brne	800059c2 <_vfprintf_r+0x1efe>
8000534e:	fa c3 f9 e0 	sub	r3,sp,-1568
80005352:	40 29       	lddsp	r9,sp[0x8]
80005354:	21 09       	sub	r9,16
80005356:	50 29       	stdsp	sp[0x8],r9
80005358:	fa f9 06 90 	ld.w	r9,sp[1680]
8000535c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005360:	fe ca bc cc 	sub	r10,pc,-17204
80005364:	40 2e       	lddsp	lr,sp[0x8]
80005366:	59 0e       	cp.w	lr,16
80005368:	fe 99 ff db 	brgt	8000531e <_vfprintf_r+0x185a>
8000536c:	1c 09       	add	r9,lr
8000536e:	2f f8       	sub	r8,-1
80005370:	87 0a       	st.w	r3[0x0],r10
80005372:	fb 49 06 90 	st.w	sp[1680],r9
80005376:	87 1e       	st.w	r3[0x4],lr
80005378:	fb 48 06 8c 	st.w	sp[1676],r8
8000537c:	58 78       	cp.w	r8,7
8000537e:	e0 89 00 04 	brgt	80005386 <_vfprintf_r+0x18c2>
80005382:	2f 83       	sub	r3,-8
80005384:	c0 b8       	rjmp	8000539a <_vfprintf_r+0x18d6>
80005386:	fa ca f9 78 	sub	r10,sp,-1672
8000538a:	02 9b       	mov	r11,r1
8000538c:	08 9c       	mov	r12,r4
8000538e:	fe b0 f3 8d 	rcall	80003aa8 <__sprint_r>
80005392:	e0 81 03 18 	brne	800059c2 <_vfprintf_r+0x1efe>
80005396:	fa c3 f9 e0 	sub	r3,sp,-1568
8000539a:	ed b5 00 08 	bld	r5,0x8
8000539e:	c0 b0       	breq	800053b4 <_vfprintf_r+0x18f0>
800053a0:	fa f8 06 90 	ld.w	r8,sp[1680]
800053a4:	87 12       	st.w	r3[0x4],r2
800053a6:	87 06       	st.w	r3[0x0],r6
800053a8:	f0 02 00 02 	add	r2,r8,r2
800053ac:	fb 42 06 90 	st.w	sp[1680],r2
800053b0:	e0 8f 01 d4 	bral	80005758 <_vfprintf_r+0x1c94>
800053b4:	e0 40 00 65 	cp.w	r0,101
800053b8:	e0 8a 01 d6 	brle	80005764 <_vfprintf_r+0x1ca0>
800053bc:	30 08       	mov	r8,0
800053be:	30 09       	mov	r9,0
800053c0:	40 5b       	lddsp	r11,sp[0x14]
800053c2:	40 7a       	lddsp	r10,sp[0x1c]
800053c4:	e0 a0 19 53 	rcall	8000866a <__avr32_f64_cmp_eq>
800053c8:	c7 90       	breq	800054ba <_vfprintf_r+0x19f6>
800053ca:	fa f8 06 90 	ld.w	r8,sp[1680]
800053ce:	fe c9 bd 4e 	sub	r9,pc,-17074
800053d2:	2f f8       	sub	r8,-1
800053d4:	87 09       	st.w	r3[0x0],r9
800053d6:	fb 48 06 90 	st.w	sp[1680],r8
800053da:	30 19       	mov	r9,1
800053dc:	fa f8 06 8c 	ld.w	r8,sp[1676]
800053e0:	87 19       	st.w	r3[0x4],r9
800053e2:	2f f8       	sub	r8,-1
800053e4:	fb 48 06 8c 	st.w	sp[1676],r8
800053e8:	58 78       	cp.w	r8,7
800053ea:	e0 89 00 05 	brgt	800053f4 <_vfprintf_r+0x1930>
800053ee:	2f 83       	sub	r3,-8
800053f0:	c0 c8       	rjmp	80005408 <_vfprintf_r+0x1944>
800053f2:	d7 03       	nop
800053f4:	fa ca f9 78 	sub	r10,sp,-1672
800053f8:	02 9b       	mov	r11,r1
800053fa:	08 9c       	mov	r12,r4
800053fc:	fe b0 f3 56 	rcall	80003aa8 <__sprint_r>
80005400:	e0 81 02 e1 	brne	800059c2 <_vfprintf_r+0x1efe>
80005404:	fa c3 f9 e0 	sub	r3,sp,-1568
80005408:	fa f8 06 ac 	ld.w	r8,sp[1708]
8000540c:	40 6c       	lddsp	r12,sp[0x18]
8000540e:	18 38       	cp.w	r8,r12
80005410:	c0 55       	brlt	8000541a <_vfprintf_r+0x1956>
80005412:	ed b5 00 00 	bld	r5,0x0
80005416:	e0 81 02 6b 	brne	800058ec <_vfprintf_r+0x1e28>
8000541a:	fa f8 06 90 	ld.w	r8,sp[1680]
8000541e:	2f f8       	sub	r8,-1
80005420:	40 cb       	lddsp	r11,sp[0x30]
80005422:	fb 48 06 90 	st.w	sp[1680],r8
80005426:	30 19       	mov	r9,1
80005428:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000542c:	87 0b       	st.w	r3[0x0],r11
8000542e:	2f f8       	sub	r8,-1
80005430:	87 19       	st.w	r3[0x4],r9
80005432:	fb 48 06 8c 	st.w	sp[1676],r8
80005436:	58 78       	cp.w	r8,7
80005438:	e0 89 00 04 	brgt	80005440 <_vfprintf_r+0x197c>
8000543c:	2f 83       	sub	r3,-8
8000543e:	c0 b8       	rjmp	80005454 <_vfprintf_r+0x1990>
80005440:	fa ca f9 78 	sub	r10,sp,-1672
80005444:	02 9b       	mov	r11,r1
80005446:	08 9c       	mov	r12,r4
80005448:	fe b0 f3 30 	rcall	80003aa8 <__sprint_r>
8000544c:	e0 81 02 bb 	brne	800059c2 <_vfprintf_r+0x1efe>
80005450:	fa c3 f9 e0 	sub	r3,sp,-1568
80005454:	40 66       	lddsp	r6,sp[0x18]
80005456:	20 16       	sub	r6,1
80005458:	58 06       	cp.w	r6,0
8000545a:	e0 89 00 1d 	brgt	80005494 <_vfprintf_r+0x19d0>
8000545e:	e0 8f 02 47 	bral	800058ec <_vfprintf_r+0x1e28>
80005462:	2f 09       	sub	r9,-16
80005464:	2f f8       	sub	r8,-1
80005466:	fb 49 06 90 	st.w	sp[1680],r9
8000546a:	87 02       	st.w	r3[0x0],r2
8000546c:	87 10       	st.w	r3[0x4],r0
8000546e:	fb 48 06 8c 	st.w	sp[1676],r8
80005472:	58 78       	cp.w	r8,7
80005474:	e0 89 00 04 	brgt	8000547c <_vfprintf_r+0x19b8>
80005478:	2f 83       	sub	r3,-8
8000547a:	c0 b8       	rjmp	80005490 <_vfprintf_r+0x19cc>
8000547c:	fa ca f9 78 	sub	r10,sp,-1672
80005480:	02 9b       	mov	r11,r1
80005482:	08 9c       	mov	r12,r4
80005484:	fe b0 f3 12 	rcall	80003aa8 <__sprint_r>
80005488:	e0 81 02 9d 	brne	800059c2 <_vfprintf_r+0x1efe>
8000548c:	fa c3 f9 e0 	sub	r3,sp,-1568
80005490:	21 06       	sub	r6,16
80005492:	c0 48       	rjmp	8000549a <_vfprintf_r+0x19d6>
80005494:	fe c2 be 00 	sub	r2,pc,-16896
80005498:	31 00       	mov	r0,16
8000549a:	fa f9 06 90 	ld.w	r9,sp[1680]
8000549e:	fa f8 06 8c 	ld.w	r8,sp[1676]
800054a2:	fe ca be 0e 	sub	r10,pc,-16882
800054a6:	59 06       	cp.w	r6,16
800054a8:	fe 99 ff dd 	brgt	80005462 <_vfprintf_r+0x199e>
800054ac:	0c 09       	add	r9,r6
800054ae:	87 0a       	st.w	r3[0x0],r10
800054b0:	fb 49 06 90 	st.w	sp[1680],r9
800054b4:	2f f8       	sub	r8,-1
800054b6:	87 16       	st.w	r3[0x4],r6
800054b8:	c5 39       	rjmp	8000575e <_vfprintf_r+0x1c9a>
800054ba:	fa fa 06 ac 	ld.w	r10,sp[1708]
800054be:	58 0a       	cp.w	r10,0
800054c0:	e0 89 00 92 	brgt	800055e4 <_vfprintf_r+0x1b20>
800054c4:	fa f8 06 90 	ld.w	r8,sp[1680]
800054c8:	fe c9 be 48 	sub	r9,pc,-16824
800054cc:	2f f8       	sub	r8,-1
800054ce:	87 09       	st.w	r3[0x0],r9
800054d0:	fb 48 06 90 	st.w	sp[1680],r8
800054d4:	30 19       	mov	r9,1
800054d6:	fa f8 06 8c 	ld.w	r8,sp[1676]
800054da:	87 19       	st.w	r3[0x4],r9
800054dc:	2f f8       	sub	r8,-1
800054de:	fb 48 06 8c 	st.w	sp[1676],r8
800054e2:	58 78       	cp.w	r8,7
800054e4:	e0 89 00 04 	brgt	800054ec <_vfprintf_r+0x1a28>
800054e8:	2f 83       	sub	r3,-8
800054ea:	c0 b8       	rjmp	80005500 <_vfprintf_r+0x1a3c>
800054ec:	fa ca f9 78 	sub	r10,sp,-1672
800054f0:	02 9b       	mov	r11,r1
800054f2:	08 9c       	mov	r12,r4
800054f4:	fe b0 f2 da 	rcall	80003aa8 <__sprint_r>
800054f8:	e0 81 02 65 	brne	800059c2 <_vfprintf_r+0x1efe>
800054fc:	fa c3 f9 e0 	sub	r3,sp,-1568
80005500:	fa f8 06 ac 	ld.w	r8,sp[1708]
80005504:	58 08       	cp.w	r8,0
80005506:	c0 81       	brne	80005516 <_vfprintf_r+0x1a52>
80005508:	40 6a       	lddsp	r10,sp[0x18]
8000550a:	58 0a       	cp.w	r10,0
8000550c:	c0 51       	brne	80005516 <_vfprintf_r+0x1a52>
8000550e:	ed b5 00 00 	bld	r5,0x0
80005512:	e0 81 01 ed 	brne	800058ec <_vfprintf_r+0x1e28>
80005516:	40 c9       	lddsp	r9,sp[0x30]
80005518:	fa f8 06 90 	ld.w	r8,sp[1680]
8000551c:	2f f8       	sub	r8,-1
8000551e:	87 09       	st.w	r3[0x0],r9
80005520:	fb 48 06 90 	st.w	sp[1680],r8
80005524:	30 19       	mov	r9,1
80005526:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000552a:	87 19       	st.w	r3[0x4],r9
8000552c:	2f f8       	sub	r8,-1
8000552e:	fb 48 06 8c 	st.w	sp[1676],r8
80005532:	58 78       	cp.w	r8,7
80005534:	e0 89 00 04 	brgt	8000553c <_vfprintf_r+0x1a78>
80005538:	2f 83       	sub	r3,-8
8000553a:	c0 b8       	rjmp	80005550 <_vfprintf_r+0x1a8c>
8000553c:	fa ca f9 78 	sub	r10,sp,-1672
80005540:	02 9b       	mov	r11,r1
80005542:	08 9c       	mov	r12,r4
80005544:	fe b0 f2 b2 	rcall	80003aa8 <__sprint_r>
80005548:	e0 81 02 3d 	brne	800059c2 <_vfprintf_r+0x1efe>
8000554c:	fa c3 f9 e0 	sub	r3,sp,-1568
80005550:	fa f2 06 ac 	ld.w	r2,sp[1708]
80005554:	5c 32       	neg	r2
80005556:	58 02       	cp.w	r2,0
80005558:	e0 89 00 1d 	brgt	80005592 <_vfprintf_r+0x1ace>
8000555c:	c3 d8       	rjmp	800055d6 <_vfprintf_r+0x1b12>
8000555e:	2f 09       	sub	r9,-16
80005560:	2f f8       	sub	r8,-1
80005562:	31 0e       	mov	lr,16
80005564:	fb 49 06 90 	st.w	sp[1680],r9
80005568:	87 00       	st.w	r3[0x0],r0
8000556a:	87 1e       	st.w	r3[0x4],lr
8000556c:	fb 48 06 8c 	st.w	sp[1676],r8
80005570:	58 78       	cp.w	r8,7
80005572:	e0 89 00 04 	brgt	8000557a <_vfprintf_r+0x1ab6>
80005576:	2f 83       	sub	r3,-8
80005578:	c0 b8       	rjmp	8000558e <_vfprintf_r+0x1aca>
8000557a:	fa ca f9 78 	sub	r10,sp,-1672
8000557e:	02 9b       	mov	r11,r1
80005580:	08 9c       	mov	r12,r4
80005582:	fe b0 f2 93 	rcall	80003aa8 <__sprint_r>
80005586:	e0 81 02 1e 	brne	800059c2 <_vfprintf_r+0x1efe>
8000558a:	fa c3 f9 e0 	sub	r3,sp,-1568
8000558e:	21 02       	sub	r2,16
80005590:	c0 38       	rjmp	80005596 <_vfprintf_r+0x1ad2>
80005592:	fe c0 be fe 	sub	r0,pc,-16642
80005596:	fa f9 06 90 	ld.w	r9,sp[1680]
8000559a:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000559e:	fe ca bf 0a 	sub	r10,pc,-16630
800055a2:	59 02       	cp.w	r2,16
800055a4:	fe 99 ff dd 	brgt	8000555e <_vfprintf_r+0x1a9a>
800055a8:	04 09       	add	r9,r2
800055aa:	2f f8       	sub	r8,-1
800055ac:	87 0a       	st.w	r3[0x0],r10
800055ae:	fb 49 06 90 	st.w	sp[1680],r9
800055b2:	87 12       	st.w	r3[0x4],r2
800055b4:	fb 48 06 8c 	st.w	sp[1676],r8
800055b8:	58 78       	cp.w	r8,7
800055ba:	e0 89 00 04 	brgt	800055c2 <_vfprintf_r+0x1afe>
800055be:	2f 83       	sub	r3,-8
800055c0:	c0 b8       	rjmp	800055d6 <_vfprintf_r+0x1b12>
800055c2:	fa ca f9 78 	sub	r10,sp,-1672
800055c6:	02 9b       	mov	r11,r1
800055c8:	08 9c       	mov	r12,r4
800055ca:	fe b0 f2 6f 	rcall	80003aa8 <__sprint_r>
800055ce:	e0 81 01 fa 	brne	800059c2 <_vfprintf_r+0x1efe>
800055d2:	fa c3 f9 e0 	sub	r3,sp,-1568
800055d6:	40 6c       	lddsp	r12,sp[0x18]
800055d8:	fa f8 06 90 	ld.w	r8,sp[1680]
800055dc:	87 06       	st.w	r3[0x0],r6
800055de:	87 1c       	st.w	r3[0x4],r12
800055e0:	18 08       	add	r8,r12
800055e2:	cb 98       	rjmp	80005754 <_vfprintf_r+0x1c90>
800055e4:	fa f9 06 90 	ld.w	r9,sp[1680]
800055e8:	fa f8 06 8c 	ld.w	r8,sp[1676]
800055ec:	40 6b       	lddsp	r11,sp[0x18]
800055ee:	16 3a       	cp.w	r10,r11
800055f0:	c6 f5       	brlt	800056ce <_vfprintf_r+0x1c0a>
800055f2:	16 09       	add	r9,r11
800055f4:	2f f8       	sub	r8,-1
800055f6:	87 06       	st.w	r3[0x0],r6
800055f8:	fb 49 06 90 	st.w	sp[1680],r9
800055fc:	87 1b       	st.w	r3[0x4],r11
800055fe:	fb 48 06 8c 	st.w	sp[1676],r8
80005602:	58 78       	cp.w	r8,7
80005604:	e0 89 00 04 	brgt	8000560c <_vfprintf_r+0x1b48>
80005608:	2f 83       	sub	r3,-8
8000560a:	c0 b8       	rjmp	80005620 <_vfprintf_r+0x1b5c>
8000560c:	fa ca f9 78 	sub	r10,sp,-1672
80005610:	02 9b       	mov	r11,r1
80005612:	08 9c       	mov	r12,r4
80005614:	fe b0 f2 4a 	rcall	80003aa8 <__sprint_r>
80005618:	e0 81 01 d5 	brne	800059c2 <_vfprintf_r+0x1efe>
8000561c:	fa c3 f9 e0 	sub	r3,sp,-1568
80005620:	fa f6 06 ac 	ld.w	r6,sp[1708]
80005624:	40 6a       	lddsp	r10,sp[0x18]
80005626:	14 16       	sub	r6,r10
80005628:	58 06       	cp.w	r6,0
8000562a:	e0 89 00 1c 	brgt	80005662 <_vfprintf_r+0x1b9e>
8000562e:	c3 d8       	rjmp	800056a8 <_vfprintf_r+0x1be4>
80005630:	2f 09       	sub	r9,-16
80005632:	2f f8       	sub	r8,-1
80005634:	fb 49 06 90 	st.w	sp[1680],r9
80005638:	87 02       	st.w	r3[0x0],r2
8000563a:	87 10       	st.w	r3[0x4],r0
8000563c:	fb 48 06 8c 	st.w	sp[1676],r8
80005640:	58 78       	cp.w	r8,7
80005642:	e0 89 00 04 	brgt	8000564a <_vfprintf_r+0x1b86>
80005646:	2f 83       	sub	r3,-8
80005648:	c0 b8       	rjmp	8000565e <_vfprintf_r+0x1b9a>
8000564a:	fa ca f9 78 	sub	r10,sp,-1672
8000564e:	02 9b       	mov	r11,r1
80005650:	08 9c       	mov	r12,r4
80005652:	fe b0 f2 2b 	rcall	80003aa8 <__sprint_r>
80005656:	e0 81 01 b6 	brne	800059c2 <_vfprintf_r+0x1efe>
8000565a:	fa c3 f9 e0 	sub	r3,sp,-1568
8000565e:	21 06       	sub	r6,16
80005660:	c0 48       	rjmp	80005668 <_vfprintf_r+0x1ba4>
80005662:	fe c2 bf ce 	sub	r2,pc,-16434
80005666:	31 00       	mov	r0,16
80005668:	fa f9 06 90 	ld.w	r9,sp[1680]
8000566c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005670:	fe ca bf dc 	sub	r10,pc,-16420
80005674:	59 06       	cp.w	r6,16
80005676:	fe 99 ff dd 	brgt	80005630 <_vfprintf_r+0x1b6c>
8000567a:	0c 09       	add	r9,r6
8000567c:	2f f8       	sub	r8,-1
8000567e:	87 0a       	st.w	r3[0x0],r10
80005680:	fb 49 06 90 	st.w	sp[1680],r9
80005684:	87 16       	st.w	r3[0x4],r6
80005686:	fb 48 06 8c 	st.w	sp[1676],r8
8000568a:	58 78       	cp.w	r8,7
8000568c:	e0 89 00 04 	brgt	80005694 <_vfprintf_r+0x1bd0>
80005690:	2f 83       	sub	r3,-8
80005692:	c0 b8       	rjmp	800056a8 <_vfprintf_r+0x1be4>
80005694:	fa ca f9 78 	sub	r10,sp,-1672
80005698:	02 9b       	mov	r11,r1
8000569a:	08 9c       	mov	r12,r4
8000569c:	fe b0 f2 06 	rcall	80003aa8 <__sprint_r>
800056a0:	e0 81 01 91 	brne	800059c2 <_vfprintf_r+0x1efe>
800056a4:	fa c3 f9 e0 	sub	r3,sp,-1568
800056a8:	ed b5 00 00 	bld	r5,0x0
800056ac:	e0 81 01 20 	brne	800058ec <_vfprintf_r+0x1e28>
800056b0:	40 c9       	lddsp	r9,sp[0x30]
800056b2:	fa f8 06 90 	ld.w	r8,sp[1680]
800056b6:	2f f8       	sub	r8,-1
800056b8:	87 09       	st.w	r3[0x0],r9
800056ba:	fb 48 06 90 	st.w	sp[1680],r8
800056be:	30 19       	mov	r9,1
800056c0:	fa f8 06 8c 	ld.w	r8,sp[1676]
800056c4:	87 19       	st.w	r3[0x4],r9
800056c6:	2f f8       	sub	r8,-1
800056c8:	fb 48 06 8c 	st.w	sp[1676],r8
800056cc:	c0 29       	rjmp	800058d0 <_vfprintf_r+0x1e0c>
800056ce:	14 09       	add	r9,r10
800056d0:	2f f8       	sub	r8,-1
800056d2:	fb 49 06 90 	st.w	sp[1680],r9
800056d6:	87 06       	st.w	r3[0x0],r6
800056d8:	87 1a       	st.w	r3[0x4],r10
800056da:	fb 48 06 8c 	st.w	sp[1676],r8
800056de:	58 78       	cp.w	r8,7
800056e0:	e0 89 00 04 	brgt	800056e8 <_vfprintf_r+0x1c24>
800056e4:	2f 83       	sub	r3,-8
800056e6:	c0 b8       	rjmp	800056fc <_vfprintf_r+0x1c38>
800056e8:	fa ca f9 78 	sub	r10,sp,-1672
800056ec:	02 9b       	mov	r11,r1
800056ee:	08 9c       	mov	r12,r4
800056f0:	fe b0 f1 dc 	rcall	80003aa8 <__sprint_r>
800056f4:	e0 81 01 67 	brne	800059c2 <_vfprintf_r+0x1efe>
800056f8:	fa c3 f9 e0 	sub	r3,sp,-1568
800056fc:	40 c8       	lddsp	r8,sp[0x30]
800056fe:	87 08       	st.w	r3[0x0],r8
80005700:	fa f8 06 90 	ld.w	r8,sp[1680]
80005704:	2f f8       	sub	r8,-1
80005706:	30 19       	mov	r9,1
80005708:	fb 48 06 90 	st.w	sp[1680],r8
8000570c:	87 19       	st.w	r3[0x4],r9
8000570e:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005712:	2f f8       	sub	r8,-1
80005714:	fb 48 06 8c 	st.w	sp[1676],r8
80005718:	fa f2 06 ac 	ld.w	r2,sp[1708]
8000571c:	58 78       	cp.w	r8,7
8000571e:	e0 89 00 04 	brgt	80005726 <_vfprintf_r+0x1c62>
80005722:	2f 83       	sub	r3,-8
80005724:	c0 b8       	rjmp	8000573a <_vfprintf_r+0x1c76>
80005726:	fa ca f9 78 	sub	r10,sp,-1672
8000572a:	02 9b       	mov	r11,r1
8000572c:	08 9c       	mov	r12,r4
8000572e:	fe b0 f1 bd 	rcall	80003aa8 <__sprint_r>
80005732:	e0 81 01 48 	brne	800059c2 <_vfprintf_r+0x1efe>
80005736:	fa c3 f9 e0 	sub	r3,sp,-1568
8000573a:	04 06       	add	r6,r2
8000573c:	fa f8 06 ac 	ld.w	r8,sp[1708]
80005740:	87 06       	st.w	r3[0x0],r6
80005742:	fa f9 06 90 	ld.w	r9,sp[1680]
80005746:	40 66       	lddsp	r6,sp[0x18]
80005748:	40 6e       	lddsp	lr,sp[0x18]
8000574a:	10 16       	sub	r6,r8
8000574c:	f2 08 01 08 	sub	r8,r9,r8
80005750:	87 16       	st.w	r3[0x4],r6
80005752:	1c 08       	add	r8,lr
80005754:	fb 48 06 90 	st.w	sp[1680],r8
80005758:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000575c:	2f f8       	sub	r8,-1
8000575e:	fb 48 06 8c 	st.w	sp[1676],r8
80005762:	cb 78       	rjmp	800058d0 <_vfprintf_r+0x1e0c>
80005764:	40 6c       	lddsp	r12,sp[0x18]
80005766:	58 1c       	cp.w	r12,1
80005768:	e0 89 00 06 	brgt	80005774 <_vfprintf_r+0x1cb0>
8000576c:	ed b5 00 00 	bld	r5,0x0
80005770:	e0 81 00 85 	brne	8000587a <_vfprintf_r+0x1db6>
80005774:	fa f8 06 90 	ld.w	r8,sp[1680]
80005778:	2f f8       	sub	r8,-1
8000577a:	30 19       	mov	r9,1
8000577c:	fb 48 06 90 	st.w	sp[1680],r8
80005780:	87 06       	st.w	r3[0x0],r6
80005782:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005786:	87 19       	st.w	r3[0x4],r9
80005788:	2f f8       	sub	r8,-1
8000578a:	fb 48 06 8c 	st.w	sp[1676],r8
8000578e:	58 78       	cp.w	r8,7
80005790:	e0 89 00 04 	brgt	80005798 <_vfprintf_r+0x1cd4>
80005794:	2f 83       	sub	r3,-8
80005796:	c0 b8       	rjmp	800057ac <_vfprintf_r+0x1ce8>
80005798:	fa ca f9 78 	sub	r10,sp,-1672
8000579c:	02 9b       	mov	r11,r1
8000579e:	08 9c       	mov	r12,r4
800057a0:	fe b0 f1 84 	rcall	80003aa8 <__sprint_r>
800057a4:	e0 81 01 0f 	brne	800059c2 <_vfprintf_r+0x1efe>
800057a8:	fa c3 f9 e0 	sub	r3,sp,-1568
800057ac:	fa f8 06 90 	ld.w	r8,sp[1680]
800057b0:	2f f8       	sub	r8,-1
800057b2:	40 cb       	lddsp	r11,sp[0x30]
800057b4:	fb 48 06 90 	st.w	sp[1680],r8
800057b8:	30 19       	mov	r9,1
800057ba:	fa f8 06 8c 	ld.w	r8,sp[1676]
800057be:	87 0b       	st.w	r3[0x0],r11
800057c0:	2f f8       	sub	r8,-1
800057c2:	87 19       	st.w	r3[0x4],r9
800057c4:	fb 48 06 8c 	st.w	sp[1676],r8
800057c8:	58 78       	cp.w	r8,7
800057ca:	e0 89 00 05 	brgt	800057d4 <_vfprintf_r+0x1d10>
800057ce:	2f 83       	sub	r3,-8
800057d0:	c0 c8       	rjmp	800057e8 <_vfprintf_r+0x1d24>
800057d2:	d7 03       	nop
800057d4:	fa ca f9 78 	sub	r10,sp,-1672
800057d8:	02 9b       	mov	r11,r1
800057da:	08 9c       	mov	r12,r4
800057dc:	fe b0 f1 66 	rcall	80003aa8 <__sprint_r>
800057e0:	e0 81 00 f1 	brne	800059c2 <_vfprintf_r+0x1efe>
800057e4:	fa c3 f9 e0 	sub	r3,sp,-1568
800057e8:	30 08       	mov	r8,0
800057ea:	30 09       	mov	r9,0
800057ec:	40 5b       	lddsp	r11,sp[0x14]
800057ee:	40 7a       	lddsp	r10,sp[0x1c]
800057f0:	e0 a0 17 3d 	rcall	8000866a <__avr32_f64_cmp_eq>
800057f4:	40 68       	lddsp	r8,sp[0x18]
800057f6:	20 18       	sub	r8,1
800057f8:	58 0c       	cp.w	r12,0
800057fa:	c0 d1       	brne	80005814 <_vfprintf_r+0x1d50>
800057fc:	2f f6       	sub	r6,-1
800057fe:	87 18       	st.w	r3[0x4],r8
80005800:	87 06       	st.w	r3[0x0],r6
80005802:	fa f6 06 90 	ld.w	r6,sp[1680]
80005806:	10 06       	add	r6,r8
80005808:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000580c:	fb 46 06 90 	st.w	sp[1680],r6
80005810:	2f f8       	sub	r8,-1
80005812:	c3 18       	rjmp	80005874 <_vfprintf_r+0x1db0>
80005814:	10 96       	mov	r6,r8
80005816:	58 08       	cp.w	r8,0
80005818:	e0 89 00 1c 	brgt	80005850 <_vfprintf_r+0x1d8c>
8000581c:	c4 b8       	rjmp	800058b2 <_vfprintf_r+0x1dee>
8000581e:	2f 09       	sub	r9,-16
80005820:	2f f8       	sub	r8,-1
80005822:	fb 49 06 90 	st.w	sp[1680],r9
80005826:	87 02       	st.w	r3[0x0],r2
80005828:	87 10       	st.w	r3[0x4],r0
8000582a:	fb 48 06 8c 	st.w	sp[1676],r8
8000582e:	58 78       	cp.w	r8,7
80005830:	e0 89 00 04 	brgt	80005838 <_vfprintf_r+0x1d74>
80005834:	2f 83       	sub	r3,-8
80005836:	c0 b8       	rjmp	8000584c <_vfprintf_r+0x1d88>
80005838:	fa ca f9 78 	sub	r10,sp,-1672
8000583c:	02 9b       	mov	r11,r1
8000583e:	08 9c       	mov	r12,r4
80005840:	fe b0 f1 34 	rcall	80003aa8 <__sprint_r>
80005844:	e0 81 00 bf 	brne	800059c2 <_vfprintf_r+0x1efe>
80005848:	fa c3 f9 e0 	sub	r3,sp,-1568
8000584c:	21 06       	sub	r6,16
8000584e:	c0 48       	rjmp	80005856 <_vfprintf_r+0x1d92>
80005850:	fe c2 c1 bc 	sub	r2,pc,-15940
80005854:	31 00       	mov	r0,16
80005856:	fa f9 06 90 	ld.w	r9,sp[1680]
8000585a:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000585e:	fe ca c1 ca 	sub	r10,pc,-15926
80005862:	59 06       	cp.w	r6,16
80005864:	fe 99 ff dd 	brgt	8000581e <_vfprintf_r+0x1d5a>
80005868:	0c 09       	add	r9,r6
8000586a:	87 0a       	st.w	r3[0x0],r10
8000586c:	fb 49 06 90 	st.w	sp[1680],r9
80005870:	2f f8       	sub	r8,-1
80005872:	87 16       	st.w	r3[0x4],r6
80005874:	fb 48 06 8c 	st.w	sp[1676],r8
80005878:	c0 e8       	rjmp	80005894 <_vfprintf_r+0x1dd0>
8000587a:	fa f8 06 90 	ld.w	r8,sp[1680]
8000587e:	2f f8       	sub	r8,-1
80005880:	30 19       	mov	r9,1
80005882:	fb 48 06 90 	st.w	sp[1680],r8
80005886:	87 06       	st.w	r3[0x0],r6
80005888:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000588c:	87 19       	st.w	r3[0x4],r9
8000588e:	2f f8       	sub	r8,-1
80005890:	fb 48 06 8c 	st.w	sp[1676],r8
80005894:	58 78       	cp.w	r8,7
80005896:	e0 89 00 04 	brgt	8000589e <_vfprintf_r+0x1dda>
8000589a:	2f 83       	sub	r3,-8
8000589c:	c0 b8       	rjmp	800058b2 <_vfprintf_r+0x1dee>
8000589e:	fa ca f9 78 	sub	r10,sp,-1672
800058a2:	02 9b       	mov	r11,r1
800058a4:	08 9c       	mov	r12,r4
800058a6:	fe b0 f1 01 	rcall	80003aa8 <__sprint_r>
800058aa:	e0 81 00 8c 	brne	800059c2 <_vfprintf_r+0x1efe>
800058ae:	fa c3 f9 e0 	sub	r3,sp,-1568
800058b2:	40 ea       	lddsp	r10,sp[0x38]
800058b4:	fa f8 06 90 	ld.w	r8,sp[1680]
800058b8:	14 08       	add	r8,r10
800058ba:	fa c9 f9 64 	sub	r9,sp,-1692
800058be:	fb 48 06 90 	st.w	sp[1680],r8
800058c2:	87 1a       	st.w	r3[0x4],r10
800058c4:	fa f8 06 8c 	ld.w	r8,sp[1676]
800058c8:	87 09       	st.w	r3[0x0],r9
800058ca:	2f f8       	sub	r8,-1
800058cc:	fb 48 06 8c 	st.w	sp[1676],r8
800058d0:	58 78       	cp.w	r8,7
800058d2:	e0 89 00 04 	brgt	800058da <_vfprintf_r+0x1e16>
800058d6:	2f 83       	sub	r3,-8
800058d8:	c0 a8       	rjmp	800058ec <_vfprintf_r+0x1e28>
800058da:	fa ca f9 78 	sub	r10,sp,-1672
800058de:	02 9b       	mov	r11,r1
800058e0:	08 9c       	mov	r12,r4
800058e2:	fe b0 f0 e3 	rcall	80003aa8 <__sprint_r>
800058e6:	c6 e1       	brne	800059c2 <_vfprintf_r+0x1efe>
800058e8:	fa c3 f9 e0 	sub	r3,sp,-1568
800058ec:	e2 15 00 04 	andl	r5,0x4,COH
800058f0:	c3 f0       	breq	8000596e <_vfprintf_r+0x1eaa>
800058f2:	40 86       	lddsp	r6,sp[0x20]
800058f4:	40 39       	lddsp	r9,sp[0xc]
800058f6:	12 16       	sub	r6,r9
800058f8:	58 06       	cp.w	r6,0
800058fa:	e0 89 00 1a 	brgt	8000592e <_vfprintf_r+0x1e6a>
800058fe:	c3 88       	rjmp	8000596e <_vfprintf_r+0x1eaa>
80005900:	2f 09       	sub	r9,-16
80005902:	2f f8       	sub	r8,-1
80005904:	fb 49 06 90 	st.w	sp[1680],r9
80005908:	87 05       	st.w	r3[0x0],r5
8000590a:	87 12       	st.w	r3[0x4],r2
8000590c:	fb 48 06 8c 	st.w	sp[1676],r8
80005910:	58 78       	cp.w	r8,7
80005912:	e0 89 00 04 	brgt	8000591a <_vfprintf_r+0x1e56>
80005916:	2f 83       	sub	r3,-8
80005918:	c0 98       	rjmp	8000592a <_vfprintf_r+0x1e66>
8000591a:	00 9a       	mov	r10,r0
8000591c:	02 9b       	mov	r11,r1
8000591e:	08 9c       	mov	r12,r4
80005920:	fe b0 f0 c4 	rcall	80003aa8 <__sprint_r>
80005924:	c4 f1       	brne	800059c2 <_vfprintf_r+0x1efe>
80005926:	fa c3 f9 e0 	sub	r3,sp,-1568
8000592a:	21 06       	sub	r6,16
8000592c:	c0 68       	rjmp	80005938 <_vfprintf_r+0x1e74>
8000592e:	fe c5 c2 aa 	sub	r5,pc,-15702
80005932:	31 02       	mov	r2,16
80005934:	fa c0 f9 78 	sub	r0,sp,-1672
80005938:	fa f9 06 90 	ld.w	r9,sp[1680]
8000593c:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005940:	fe ca c2 bc 	sub	r10,pc,-15684
80005944:	59 06       	cp.w	r6,16
80005946:	fe 99 ff dd 	brgt	80005900 <_vfprintf_r+0x1e3c>
8000594a:	0c 09       	add	r9,r6
8000594c:	2f f8       	sub	r8,-1
8000594e:	87 0a       	st.w	r3[0x0],r10
80005950:	87 16       	st.w	r3[0x4],r6
80005952:	fb 49 06 90 	st.w	sp[1680],r9
80005956:	fb 48 06 8c 	st.w	sp[1676],r8
8000595a:	58 78       	cp.w	r8,7
8000595c:	e0 8a 00 09 	brle	8000596e <_vfprintf_r+0x1eaa>
80005960:	fa ca f9 78 	sub	r10,sp,-1672
80005964:	02 9b       	mov	r11,r1
80005966:	08 9c       	mov	r12,r4
80005968:	fe b0 f0 a0 	rcall	80003aa8 <__sprint_r>
8000596c:	c2 b1       	brne	800059c2 <_vfprintf_r+0x1efe>
8000596e:	40 bc       	lddsp	r12,sp[0x2c]
80005970:	40 36       	lddsp	r6,sp[0xc]
80005972:	40 8e       	lddsp	lr,sp[0x20]
80005974:	ec 0e 0c 48 	max	r8,r6,lr
80005978:	10 0c       	add	r12,r8
8000597a:	50 bc       	stdsp	sp[0x2c],r12
8000597c:	fa f8 06 90 	ld.w	r8,sp[1680]
80005980:	58 08       	cp.w	r8,0
80005982:	c0 80       	breq	80005992 <_vfprintf_r+0x1ece>
80005984:	fa ca f9 78 	sub	r10,sp,-1672
80005988:	02 9b       	mov	r11,r1
8000598a:	08 9c       	mov	r12,r4
8000598c:	fe b0 f0 8e 	rcall	80003aa8 <__sprint_r>
80005990:	c1 91       	brne	800059c2 <_vfprintf_r+0x1efe>
80005992:	30 0b       	mov	r11,0
80005994:	fa c3 f9 e0 	sub	r3,sp,-1568
80005998:	fb 4b 06 8c 	st.w	sp[1676],r11
8000599c:	fe 9f f1 22 	bral	80003be0 <_vfprintf_r+0x11c>
800059a0:	08 95       	mov	r5,r4
800059a2:	fa f8 06 90 	ld.w	r8,sp[1680]
800059a6:	58 08       	cp.w	r8,0
800059a8:	c0 80       	breq	800059b8 <_vfprintf_r+0x1ef4>
800059aa:	08 9c       	mov	r12,r4
800059ac:	fa ca f9 78 	sub	r10,sp,-1672
800059b0:	02 9b       	mov	r11,r1
800059b2:	fe b0 f0 7b 	rcall	80003aa8 <__sprint_r>
800059b6:	c0 61       	brne	800059c2 <_vfprintf_r+0x1efe>
800059b8:	30 08       	mov	r8,0
800059ba:	fb 48 06 8c 	st.w	sp[1676],r8
800059be:	c0 28       	rjmp	800059c2 <_vfprintf_r+0x1efe>
800059c0:	40 41       	lddsp	r1,sp[0x10]
800059c2:	82 68       	ld.sh	r8,r1[0xc]
800059c4:	ed b8 00 06 	bld	r8,0x6
800059c8:	c0 31       	brne	800059ce <_vfprintf_r+0x1f0a>
800059ca:	3f fa       	mov	r10,-1
800059cc:	50 ba       	stdsp	sp[0x2c],r10
800059ce:	40 bc       	lddsp	r12,sp[0x2c]
800059d0:	fe 3d f9 44 	sub	sp,-1724
800059d4:	d8 32       	popm	r0-r7,pc
800059d6:	d7 03       	nop

800059d8 <__swsetup_r>:
800059d8:	d4 21       	pushm	r4-r7,lr
800059da:	e0 68 01 04 	mov	r8,260
800059de:	18 96       	mov	r6,r12
800059e0:	16 97       	mov	r7,r11
800059e2:	70 0c       	ld.w	r12,r8[0x0]
800059e4:	58 0c       	cp.w	r12,0
800059e6:	c0 60       	breq	800059f2 <__swsetup_r+0x1a>
800059e8:	78 68       	ld.w	r8,r12[0x18]
800059ea:	58 08       	cp.w	r8,0
800059ec:	c0 31       	brne	800059f2 <__swsetup_r+0x1a>
800059ee:	e0 a0 07 b9 	rcall	80006960 <__sinit>
800059f2:	fe c8 c2 3e 	sub	r8,pc,-15810
800059f6:	10 37       	cp.w	r7,r8
800059f8:	c0 61       	brne	80005a04 <__swsetup_r+0x2c>
800059fa:	e0 68 01 04 	mov	r8,260
800059fe:	70 08       	ld.w	r8,r8[0x0]
80005a00:	70 07       	ld.w	r7,r8[0x0]
80005a02:	c1 28       	rjmp	80005a26 <__swsetup_r+0x4e>
80005a04:	fe c8 c2 30 	sub	r8,pc,-15824
80005a08:	10 37       	cp.w	r7,r8
80005a0a:	c0 61       	brne	80005a16 <__swsetup_r+0x3e>
80005a0c:	e0 68 01 04 	mov	r8,260
80005a10:	70 08       	ld.w	r8,r8[0x0]
80005a12:	70 17       	ld.w	r7,r8[0x4]
80005a14:	c0 98       	rjmp	80005a26 <__swsetup_r+0x4e>
80005a16:	fe c8 c2 22 	sub	r8,pc,-15838
80005a1a:	10 37       	cp.w	r7,r8
80005a1c:	c0 51       	brne	80005a26 <__swsetup_r+0x4e>
80005a1e:	e0 68 01 04 	mov	r8,260
80005a22:	70 08       	ld.w	r8,r8[0x0]
80005a24:	70 27       	ld.w	r7,r8[0x8]
80005a26:	8e 68       	ld.sh	r8,r7[0xc]
80005a28:	ed b8 00 03 	bld	r8,0x3
80005a2c:	c1 e0       	breq	80005a68 <__swsetup_r+0x90>
80005a2e:	ed b8 00 04 	bld	r8,0x4
80005a32:	c3 e1       	brne	80005aae <__swsetup_r+0xd6>
80005a34:	ed b8 00 02 	bld	r8,0x2
80005a38:	c1 51       	brne	80005a62 <__swsetup_r+0x8a>
80005a3a:	6e db       	ld.w	r11,r7[0x34]
80005a3c:	58 0b       	cp.w	r11,0
80005a3e:	c0 a0       	breq	80005a52 <__swsetup_r+0x7a>
80005a40:	ee c8 ff bc 	sub	r8,r7,-68
80005a44:	10 3b       	cp.w	r11,r8
80005a46:	c0 40       	breq	80005a4e <__swsetup_r+0x76>
80005a48:	0c 9c       	mov	r12,r6
80005a4a:	e0 a0 08 25 	rcall	80006a94 <_free_r>
80005a4e:	30 08       	mov	r8,0
80005a50:	8f d8       	st.w	r7[0x34],r8
80005a52:	8e 68       	ld.sh	r8,r7[0xc]
80005a54:	e0 18 ff db 	andl	r8,0xffdb
80005a58:	ae 68       	st.h	r7[0xc],r8
80005a5a:	30 08       	mov	r8,0
80005a5c:	8f 18       	st.w	r7[0x4],r8
80005a5e:	6e 48       	ld.w	r8,r7[0x10]
80005a60:	8f 08       	st.w	r7[0x0],r8
80005a62:	8e 68       	ld.sh	r8,r7[0xc]
80005a64:	a3 b8       	sbr	r8,0x3
80005a66:	ae 68       	st.h	r7[0xc],r8
80005a68:	6e 48       	ld.w	r8,r7[0x10]
80005a6a:	58 08       	cp.w	r8,0
80005a6c:	c0 b1       	brne	80005a82 <__swsetup_r+0xaa>
80005a6e:	8e 68       	ld.sh	r8,r7[0xc]
80005a70:	e2 18 02 80 	andl	r8,0x280,COH
80005a74:	e0 48 02 00 	cp.w	r8,512
80005a78:	c0 50       	breq	80005a82 <__swsetup_r+0xaa>
80005a7a:	0c 9c       	mov	r12,r6
80005a7c:	0e 9b       	mov	r11,r7
80005a7e:	e0 a0 0a 4b 	rcall	80006f14 <__smakebuf_r>
80005a82:	8e 69       	ld.sh	r9,r7[0xc]
80005a84:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
80005a88:	c0 70       	breq	80005a96 <__swsetup_r+0xbe>
80005a8a:	30 08       	mov	r8,0
80005a8c:	8f 28       	st.w	r7[0x8],r8
80005a8e:	6e 58       	ld.w	r8,r7[0x14]
80005a90:	5c 38       	neg	r8
80005a92:	8f 68       	st.w	r7[0x18],r8
80005a94:	c0 68       	rjmp	80005aa0 <__swsetup_r+0xc8>
80005a96:	ed b9 00 01 	bld	r9,0x1
80005a9a:	ef f8 10 05 	ld.wne	r8,r7[0x14]
80005a9e:	8f 28       	st.w	r7[0x8],r8
80005aa0:	6e 48       	ld.w	r8,r7[0x10]
80005aa2:	58 08       	cp.w	r8,0
80005aa4:	c0 61       	brne	80005ab0 <__swsetup_r+0xd8>
80005aa6:	8e 68       	ld.sh	r8,r7[0xc]
80005aa8:	ed b8 00 07 	bld	r8,0x7
80005aac:	c0 21       	brne	80005ab0 <__swsetup_r+0xd8>
80005aae:	dc 2a       	popm	r4-r7,pc,r12=-1
80005ab0:	d8 2a       	popm	r4-r7,pc,r12=0
80005ab2:	d7 03       	nop

80005ab4 <quorem>:
80005ab4:	d4 31       	pushm	r0-r7,lr
80005ab6:	20 2d       	sub	sp,8
80005ab8:	18 97       	mov	r7,r12
80005aba:	78 48       	ld.w	r8,r12[0x10]
80005abc:	76 46       	ld.w	r6,r11[0x10]
80005abe:	0c 38       	cp.w	r8,r6
80005ac0:	c0 34       	brge	80005ac6 <quorem+0x12>
80005ac2:	30 0c       	mov	r12,0
80005ac4:	c8 58       	rjmp	80005bce <quorem+0x11a>
80005ac6:	ec c2 ff fc 	sub	r2,r6,-4
80005aca:	f6 c3 ff ec 	sub	r3,r11,-20
80005ace:	f6 02 03 29 	ld.w	r9,r11[r2<<0x2]
80005ad2:	f8 02 03 2c 	ld.w	r12,r12[r2<<0x2]
80005ad6:	2f f9       	sub	r9,-1
80005ad8:	20 16       	sub	r6,1
80005ada:	f8 09 0d 08 	divu	r8,r12,r9
80005ade:	f6 02 00 22 	add	r2,r11,r2<<0x2
80005ae2:	ee c4 ff ec 	sub	r4,r7,-20
80005ae6:	10 95       	mov	r5,r8
80005ae8:	58 08       	cp.w	r8,0
80005aea:	c4 10       	breq	80005b6c <quorem+0xb8>
80005aec:	30 09       	mov	r9,0
80005aee:	06 9a       	mov	r10,r3
80005af0:	08 98       	mov	r8,r4
80005af2:	12 91       	mov	r1,r9
80005af4:	50 0b       	stdsp	sp[0x0],r11
80005af6:	70 0e       	ld.w	lr,r8[0x0]
80005af8:	b1 8e       	lsr	lr,0x10
80005afa:	50 1e       	stdsp	sp[0x4],lr
80005afc:	15 0e       	ld.w	lr,r10++
80005afe:	fc 00 16 10 	lsr	r0,lr,0x10
80005b02:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80005b06:	ea 0e 03 41 	mac	r1,r5,lr
80005b0a:	fd d1 c0 10 	bfextu	lr,r1,0x0,0x10
80005b0e:	b1 81       	lsr	r1,0x10
80005b10:	40 1b       	lddsp	r11,sp[0x4]
80005b12:	ea 00 02 40 	mul	r0,r5,r0
80005b16:	e2 00 00 00 	add	r0,r1,r0
80005b1a:	e3 d0 c0 10 	bfextu	r1,r0,0x0,0x10
80005b1e:	02 1b       	sub	r11,r1
80005b20:	50 1b       	stdsp	sp[0x4],r11
80005b22:	70 0b       	ld.w	r11,r8[0x0]
80005b24:	e3 db c0 10 	bfextu	r1,r11,0x0,0x10
80005b28:	02 09       	add	r9,r1
80005b2a:	f2 0e 01 0e 	sub	lr,r9,lr
80005b2e:	b0 1e       	st.h	r8[0x2],lr
80005b30:	fc 09 14 10 	asr	r9,lr,0x10
80005b34:	40 1e       	lddsp	lr,sp[0x4]
80005b36:	fc 09 00 09 	add	r9,lr,r9
80005b3a:	b0 09       	st.h	r8[0x0],r9
80005b3c:	e0 01 16 10 	lsr	r1,r0,0x10
80005b40:	2f c8       	sub	r8,-4
80005b42:	b1 49       	asr	r9,0x10
80005b44:	04 3a       	cp.w	r10,r2
80005b46:	fe 98 ff d8 	brls	80005af6 <quorem+0x42>
80005b4a:	40 0b       	lddsp	r11,sp[0x0]
80005b4c:	58 0c       	cp.w	r12,0
80005b4e:	c0 f1       	brne	80005b6c <quorem+0xb8>
80005b50:	ec c8 ff fb 	sub	r8,r6,-5
80005b54:	ee 08 00 28 	add	r8,r7,r8<<0x2
80005b58:	c0 28       	rjmp	80005b5c <quorem+0xa8>
80005b5a:	20 16       	sub	r6,1
80005b5c:	20 48       	sub	r8,4
80005b5e:	08 38       	cp.w	r8,r4
80005b60:	e0 88 00 05 	brls	80005b6a <quorem+0xb6>
80005b64:	70 09       	ld.w	r9,r8[0x0]
80005b66:	58 09       	cp.w	r9,0
80005b68:	cf 90       	breq	80005b5a <quorem+0xa6>
80005b6a:	8f 46       	st.w	r7[0x10],r6
80005b6c:	0e 9c       	mov	r12,r7
80005b6e:	e0 a0 0c fb 	rcall	80007564 <__mcmp>
80005b72:	c2 d5       	brlt	80005bcc <quorem+0x118>
80005b74:	2f f5       	sub	r5,-1
80005b76:	08 98       	mov	r8,r4
80005b78:	30 09       	mov	r9,0
80005b7a:	07 0b       	ld.w	r11,r3++
80005b7c:	f6 0a 16 10 	lsr	r10,r11,0x10
80005b80:	70 0c       	ld.w	r12,r8[0x0]
80005b82:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80005b86:	f8 0e 16 10 	lsr	lr,r12,0x10
80005b8a:	14 1e       	sub	lr,r10
80005b8c:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
80005b90:	16 1a       	sub	r10,r11
80005b92:	12 0a       	add	r10,r9
80005b94:	b0 1a       	st.h	r8[0x2],r10
80005b96:	b1 4a       	asr	r10,0x10
80005b98:	fc 0a 00 09 	add	r9,lr,r10
80005b9c:	b0 09       	st.h	r8[0x0],r9
80005b9e:	2f c8       	sub	r8,-4
80005ba0:	b1 49       	asr	r9,0x10
80005ba2:	04 33       	cp.w	r3,r2
80005ba4:	fe 98 ff eb 	brls	80005b7a <quorem+0xc6>
80005ba8:	ec c8 ff fb 	sub	r8,r6,-5
80005bac:	ee 08 03 29 	ld.w	r9,r7[r8<<0x2]
80005bb0:	58 09       	cp.w	r9,0
80005bb2:	c0 d1       	brne	80005bcc <quorem+0x118>
80005bb4:	ee 08 00 28 	add	r8,r7,r8<<0x2
80005bb8:	c0 28       	rjmp	80005bbc <quorem+0x108>
80005bba:	20 16       	sub	r6,1
80005bbc:	20 48       	sub	r8,4
80005bbe:	08 38       	cp.w	r8,r4
80005bc0:	e0 88 00 05 	brls	80005bca <quorem+0x116>
80005bc4:	70 09       	ld.w	r9,r8[0x0]
80005bc6:	58 09       	cp.w	r9,0
80005bc8:	cf 90       	breq	80005bba <quorem+0x106>
80005bca:	8f 46       	st.w	r7[0x10],r6
80005bcc:	0a 9c       	mov	r12,r5
80005bce:	2f ed       	sub	sp,-8
80005bd0:	d8 32       	popm	r0-r7,pc
80005bd2:	d7 03       	nop

80005bd4 <_dtoa_r>:
80005bd4:	d4 31       	pushm	r0-r7,lr
80005bd6:	21 ad       	sub	sp,104
80005bd8:	fa c4 ff 74 	sub	r4,sp,-140
80005bdc:	18 97       	mov	r7,r12
80005bde:	16 95       	mov	r5,r11
80005be0:	68 2c       	ld.w	r12,r4[0x8]
80005be2:	50 c9       	stdsp	sp[0x30],r9
80005be4:	68 16       	ld.w	r6,r4[0x4]
80005be6:	68 09       	ld.w	r9,r4[0x0]
80005be8:	50 e8       	stdsp	sp[0x38],r8
80005bea:	14 94       	mov	r4,r10
80005bec:	51 2c       	stdsp	sp[0x48],r12
80005bee:	fa e5 00 08 	st.d	sp[8],r4
80005bf2:	51 59       	stdsp	sp[0x54],r9
80005bf4:	6e 95       	ld.w	r5,r7[0x24]
80005bf6:	58 05       	cp.w	r5,0
80005bf8:	c0 91       	brne	80005c0a <_dtoa_r+0x36>
80005bfa:	31 0c       	mov	r12,16
80005bfc:	e0 a0 09 ea 	rcall	80006fd0 <malloc>
80005c00:	99 35       	st.w	r12[0xc],r5
80005c02:	8f 9c       	st.w	r7[0x24],r12
80005c04:	99 15       	st.w	r12[0x4],r5
80005c06:	99 25       	st.w	r12[0x8],r5
80005c08:	99 05       	st.w	r12[0x0],r5
80005c0a:	6e 99       	ld.w	r9,r7[0x24]
80005c0c:	72 08       	ld.w	r8,r9[0x0]
80005c0e:	58 08       	cp.w	r8,0
80005c10:	c0 f0       	breq	80005c2e <_dtoa_r+0x5a>
80005c12:	72 1a       	ld.w	r10,r9[0x4]
80005c14:	91 1a       	st.w	r8[0x4],r10
80005c16:	30 1a       	mov	r10,1
80005c18:	72 19       	ld.w	r9,r9[0x4]
80005c1a:	f4 09 09 49 	lsl	r9,r10,r9
80005c1e:	10 9b       	mov	r11,r8
80005c20:	91 29       	st.w	r8[0x8],r9
80005c22:	0e 9c       	mov	r12,r7
80005c24:	e0 a0 0c ba 	rcall	80007598 <_Bfree>
80005c28:	6e 98       	ld.w	r8,r7[0x24]
80005c2a:	30 09       	mov	r9,0
80005c2c:	91 09       	st.w	r8[0x0],r9
80005c2e:	40 28       	lddsp	r8,sp[0x8]
80005c30:	10 94       	mov	r4,r8
80005c32:	58 08       	cp.w	r8,0
80005c34:	c0 64       	brge	80005c40 <_dtoa_r+0x6c>
80005c36:	f1 d8 c0 1f 	bfextu	r8,r8,0x0,0x1f
80005c3a:	50 28       	stdsp	sp[0x8],r8
80005c3c:	30 18       	mov	r8,1
80005c3e:	c0 28       	rjmp	80005c42 <_dtoa_r+0x6e>
80005c40:	30 08       	mov	r8,0
80005c42:	8d 08       	st.w	r6[0x0],r8
80005c44:	fc 1c 7f f0 	movh	r12,0x7ff0
80005c48:	40 26       	lddsp	r6,sp[0x8]
80005c4a:	0c 98       	mov	r8,r6
80005c4c:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80005c50:	18 38       	cp.w	r8,r12
80005c52:	c2 01       	brne	80005c92 <_dtoa_r+0xbe>
80005c54:	e0 68 27 0f 	mov	r8,9999
80005c58:	41 5b       	lddsp	r11,sp[0x54]
80005c5a:	97 08       	st.w	r11[0x0],r8
80005c5c:	40 3a       	lddsp	r10,sp[0xc]
80005c5e:	58 0a       	cp.w	r10,0
80005c60:	c0 71       	brne	80005c6e <_dtoa_r+0x9a>
80005c62:	ed d6 c0 14 	bfextu	r6,r6,0x0,0x14
80005c66:	c0 41       	brne	80005c6e <_dtoa_r+0x9a>
80005c68:	fe cc c4 c4 	sub	r12,pc,-15164
80005c6c:	c0 38       	rjmp	80005c72 <_dtoa_r+0x9e>
80005c6e:	fe cc c4 be 	sub	r12,pc,-15170
80005c72:	41 29       	lddsp	r9,sp[0x48]
80005c74:	58 09       	cp.w	r9,0
80005c76:	e0 80 05 9a 	breq	800067aa <_dtoa_r+0xbd6>
80005c7a:	f8 c8 ff fd 	sub	r8,r12,-3
80005c7e:	f8 c9 ff f8 	sub	r9,r12,-8
80005c82:	11 8b       	ld.ub	r11,r8[0x0]
80005c84:	30 0a       	mov	r10,0
80005c86:	41 25       	lddsp	r5,sp[0x48]
80005c88:	f4 0b 18 00 	cp.b	r11,r10
80005c8c:	f2 08 17 10 	movne	r8,r9
80005c90:	c1 68       	rjmp	80005cbc <_dtoa_r+0xe8>
80005c92:	fa ea 00 08 	ld.d	r10,sp[8]
80005c96:	30 08       	mov	r8,0
80005c98:	fa eb 00 3c 	st.d	sp[60],r10
80005c9c:	30 09       	mov	r9,0
80005c9e:	e0 a0 14 e6 	rcall	8000866a <__avr32_f64_cmp_eq>
80005ca2:	c1 00       	breq	80005cc2 <_dtoa_r+0xee>
80005ca4:	30 18       	mov	r8,1
80005ca6:	41 5a       	lddsp	r10,sp[0x54]
80005ca8:	95 08       	st.w	r10[0x0],r8
80005caa:	fe cc c6 2a 	sub	r12,pc,-14806
80005cae:	41 29       	lddsp	r9,sp[0x48]
80005cb0:	f8 08 00 08 	add	r8,r12,r8
80005cb4:	58 09       	cp.w	r9,0
80005cb6:	e0 80 05 7a 	breq	800067aa <_dtoa_r+0xbd6>
80005cba:	12 95       	mov	r5,r9
80005cbc:	8b 08       	st.w	r5[0x0],r8
80005cbe:	e0 8f 05 76 	bral	800067aa <_dtoa_r+0xbd6>
80005cc2:	fa c8 ff 9c 	sub	r8,sp,-100
80005cc6:	fa c9 ff a0 	sub	r9,sp,-96
80005cca:	fa ea 00 3c 	ld.d	r10,sp[60]
80005cce:	0e 9c       	mov	r12,r7
80005cd0:	eb d6 c2 8b 	bfextu	r5,r6,0x14,0xb
80005cd4:	e0 a0 0c b4 	rcall	8000763c <__d2b>
80005cd8:	18 93       	mov	r3,r12
80005cda:	58 05       	cp.w	r5,0
80005cdc:	c0 d0       	breq	80005cf6 <_dtoa_r+0x122>
80005cde:	fa ea 00 3c 	ld.d	r10,sp[60]
80005ce2:	30 04       	mov	r4,0
80005ce4:	f1 db c0 14 	bfextu	r8,r11,0x0,0x14
80005ce8:	ea c5 03 ff 	sub	r5,r5,1023
80005cec:	10 9b       	mov	r11,r8
80005cee:	51 74       	stdsp	sp[0x5c],r4
80005cf0:	ea 1b 3f f0 	orh	r11,0x3ff0
80005cf4:	c2 58       	rjmp	80005d3e <_dtoa_r+0x16a>
80005cf6:	41 88       	lddsp	r8,sp[0x60]
80005cf8:	41 9c       	lddsp	r12,sp[0x64]
80005cfa:	10 0c       	add	r12,r8
80005cfc:	f8 c5 fb ce 	sub	r5,r12,-1074
80005d00:	e0 45 00 20 	cp.w	r5,32
80005d04:	e0 8a 00 0e 	brle	80005d20 <_dtoa_r+0x14c>
80005d08:	f8 cc fb ee 	sub	r12,r12,-1042
80005d0c:	40 3b       	lddsp	r11,sp[0xc]
80005d0e:	ea 08 11 40 	rsub	r8,r5,64
80005d12:	f6 0c 0a 4c 	lsr	r12,r11,r12
80005d16:	ec 08 09 46 	lsl	r6,r6,r8
80005d1a:	0c 4c       	or	r12,r6
80005d1c:	c0 78       	rjmp	80005d2a <_dtoa_r+0x156>
80005d1e:	d7 03       	nop
80005d20:	ea 0c 11 20 	rsub	r12,r5,32
80005d24:	40 3a       	lddsp	r10,sp[0xc]
80005d26:	f4 0c 09 4c 	lsl	r12,r10,r12
80005d2a:	e0 a0 14 2c 	rcall	80008582 <__avr32_u32_to_f64>
80005d2e:	fc 18 fe 10 	movh	r8,0xfe10
80005d32:	30 19       	mov	r9,1
80005d34:	ea c5 04 33 	sub	r5,r5,1075
80005d38:	f0 0b 00 0b 	add	r11,r8,r11
80005d3c:	51 79       	stdsp	sp[0x5c],r9
80005d3e:	30 08       	mov	r8,0
80005d40:	fc 19 3f f8 	movh	r9,0x3ff8
80005d44:	e0 a0 12 b4 	rcall	800082ac <__avr32_f64_sub>
80005d48:	e0 68 43 61 	mov	r8,17249
80005d4c:	ea 18 63 6f 	orh	r8,0x636f
80005d50:	e0 69 87 a7 	mov	r9,34727
80005d54:	ea 19 3f d2 	orh	r9,0x3fd2
80005d58:	e0 a0 11 be 	rcall	800080d4 <__avr32_f64_mul>
80005d5c:	e0 68 c8 b3 	mov	r8,51379
80005d60:	ea 18 8b 60 	orh	r8,0x8b60
80005d64:	e0 69 8a 28 	mov	r9,35368
80005d68:	ea 19 3f c6 	orh	r9,0x3fc6
80005d6c:	e0 a0 13 6e 	rcall	80008448 <__avr32_f64_add>
80005d70:	0a 9c       	mov	r12,r5
80005d72:	14 90       	mov	r0,r10
80005d74:	16 91       	mov	r1,r11
80005d76:	e0 a0 14 0a 	rcall	8000858a <__avr32_s32_to_f64>
80005d7a:	e0 68 79 fb 	mov	r8,31227
80005d7e:	ea 18 50 9f 	orh	r8,0x509f
80005d82:	e0 69 44 13 	mov	r9,17427
80005d86:	ea 19 3f d3 	orh	r9,0x3fd3
80005d8a:	e0 a0 11 a5 	rcall	800080d4 <__avr32_f64_mul>
80005d8e:	14 98       	mov	r8,r10
80005d90:	16 99       	mov	r9,r11
80005d92:	00 9a       	mov	r10,r0
80005d94:	02 9b       	mov	r11,r1
80005d96:	e0 a0 13 59 	rcall	80008448 <__avr32_f64_add>
80005d9a:	14 90       	mov	r0,r10
80005d9c:	16 91       	mov	r1,r11
80005d9e:	e0 a0 13 df 	rcall	8000855c <__avr32_f64_to_s32>
80005da2:	30 08       	mov	r8,0
80005da4:	18 96       	mov	r6,r12
80005da6:	30 09       	mov	r9,0
80005da8:	00 9a       	mov	r10,r0
80005daa:	02 9b       	mov	r11,r1
80005dac:	e0 a0 14 a6 	rcall	800086f8 <__avr32_f64_cmp_lt>
80005db0:	c0 c0       	breq	80005dc8 <_dtoa_r+0x1f4>
80005db2:	0c 9c       	mov	r12,r6
80005db4:	e0 a0 13 eb 	rcall	8000858a <__avr32_s32_to_f64>
80005db8:	14 98       	mov	r8,r10
80005dba:	16 99       	mov	r9,r11
80005dbc:	00 9a       	mov	r10,r0
80005dbe:	02 9b       	mov	r11,r1
80005dc0:	e0 a0 14 55 	rcall	8000866a <__avr32_f64_cmp_eq>
80005dc4:	f7 b6 00 01 	subeq	r6,1
80005dc8:	59 66       	cp.w	r6,22
80005dca:	e0 88 00 05 	brls	80005dd4 <_dtoa_r+0x200>
80005dce:	30 18       	mov	r8,1
80005dd0:	51 48       	stdsp	sp[0x50],r8
80005dd2:	c1 38       	rjmp	80005df8 <_dtoa_r+0x224>
80005dd4:	fe c8 c5 74 	sub	r8,pc,-14988
80005dd8:	fa ea 00 3c 	ld.d	r10,sp[60]
80005ddc:	f0 06 02 38 	ld.d	r8,r8[r6<<0x3]
80005de0:	e0 a0 14 8c 	rcall	800086f8 <__avr32_f64_cmp_lt>
80005de4:	f9 b4 00 00 	moveq	r4,0
80005de8:	fb f4 0a 14 	st.weq	sp[0x50],r4
80005dec:	f7 b6 01 01 	subne	r6,1
80005df0:	f9 bc 01 00 	movne	r12,0
80005df4:	fb fc 1a 14 	st.wne	sp[0x50],r12
80005df8:	41 90       	lddsp	r0,sp[0x64]
80005dfa:	20 10       	sub	r0,1
80005dfc:	0a 10       	sub	r0,r5
80005dfe:	c0 46       	brmi	80005e06 <_dtoa_r+0x232>
80005e00:	50 40       	stdsp	sp[0x10],r0
80005e02:	30 00       	mov	r0,0
80005e04:	c0 48       	rjmp	80005e0c <_dtoa_r+0x238>
80005e06:	30 0b       	mov	r11,0
80005e08:	5c 30       	neg	r0
80005e0a:	50 4b       	stdsp	sp[0x10],r11
80005e0c:	ec 02 11 00 	rsub	r2,r6,0
80005e10:	58 06       	cp.w	r6,0
80005e12:	fb fa 40 04 	ld.wge	r10,sp[0x10]
80005e16:	f5 d6 e4 0a 	addge	r10,r10,r6
80005e1a:	fb fa 4a 04 	st.wge	sp[0x10],r10
80005e1e:	fb f6 4a 11 	st.wge	sp[0x44],r6
80005e22:	f9 b2 04 00 	movge	r2,0
80005e26:	e1 d6 e5 10 	sublt	r0,r0,r6
80005e2a:	f9 b9 05 00 	movlt	r9,0
80005e2e:	fb f9 5a 11 	st.wlt	sp[0x44],r9
80005e32:	40 c8       	lddsp	r8,sp[0x30]
80005e34:	58 98       	cp.w	r8,9
80005e36:	e0 8b 00 20 	brhi	80005e76 <_dtoa_r+0x2a2>
80005e3a:	58 58       	cp.w	r8,5
80005e3c:	f9 b4 0a 01 	movle	r4,1
80005e40:	fb f5 90 0c 	ld.wgt	r5,sp[0x30]
80005e44:	f7 b5 09 04 	subgt	r5,4
80005e48:	fb f5 9a 0c 	st.wgt	sp[0x30],r5
80005e4c:	f9 b4 09 00 	movgt	r4,0
80005e50:	40 cc       	lddsp	r12,sp[0x30]
80005e52:	58 3c       	cp.w	r12,3
80005e54:	c2 d0       	breq	80005eae <_dtoa_r+0x2da>
80005e56:	e0 89 00 05 	brgt	80005e60 <_dtoa_r+0x28c>
80005e5a:	58 2c       	cp.w	r12,2
80005e5c:	c1 01       	brne	80005e7c <_dtoa_r+0x2a8>
80005e5e:	c1 88       	rjmp	80005e8e <_dtoa_r+0x2ba>
80005e60:	40 cb       	lddsp	r11,sp[0x30]
80005e62:	58 4b       	cp.w	r11,4
80005e64:	c0 60       	breq	80005e70 <_dtoa_r+0x29c>
80005e66:	58 5b       	cp.w	r11,5
80005e68:	c0 a1       	brne	80005e7c <_dtoa_r+0x2a8>
80005e6a:	30 1a       	mov	r10,1
80005e6c:	50 da       	stdsp	sp[0x34],r10
80005e6e:	c2 28       	rjmp	80005eb2 <_dtoa_r+0x2de>
80005e70:	30 19       	mov	r9,1
80005e72:	50 d9       	stdsp	sp[0x34],r9
80005e74:	c0 f8       	rjmp	80005e92 <_dtoa_r+0x2be>
80005e76:	30 08       	mov	r8,0
80005e78:	30 14       	mov	r4,1
80005e7a:	50 c8       	stdsp	sp[0x30],r8
80005e7c:	3f f5       	mov	r5,-1
80005e7e:	30 1c       	mov	r12,1
80005e80:	30 0b       	mov	r11,0
80005e82:	50 95       	stdsp	sp[0x24],r5
80005e84:	50 dc       	stdsp	sp[0x34],r12
80005e86:	0a 91       	mov	r1,r5
80005e88:	31 28       	mov	r8,18
80005e8a:	50 eb       	stdsp	sp[0x38],r11
80005e8c:	c2 08       	rjmp	80005ecc <_dtoa_r+0x2f8>
80005e8e:	30 0a       	mov	r10,0
80005e90:	50 da       	stdsp	sp[0x34],r10
80005e92:	40 e9       	lddsp	r9,sp[0x38]
80005e94:	58 09       	cp.w	r9,0
80005e96:	e0 89 00 07 	brgt	80005ea4 <_dtoa_r+0x2d0>
80005e9a:	30 18       	mov	r8,1
80005e9c:	50 98       	stdsp	sp[0x24],r8
80005e9e:	10 91       	mov	r1,r8
80005ea0:	50 e8       	stdsp	sp[0x38],r8
80005ea2:	c1 58       	rjmp	80005ecc <_dtoa_r+0x2f8>
80005ea4:	40 e5       	lddsp	r5,sp[0x38]
80005ea6:	50 95       	stdsp	sp[0x24],r5
80005ea8:	0a 91       	mov	r1,r5
80005eaa:	0a 98       	mov	r8,r5
80005eac:	c1 08       	rjmp	80005ecc <_dtoa_r+0x2f8>
80005eae:	30 0c       	mov	r12,0
80005eb0:	50 dc       	stdsp	sp[0x34],r12
80005eb2:	40 eb       	lddsp	r11,sp[0x38]
80005eb4:	ec 0b 00 0b 	add	r11,r6,r11
80005eb8:	50 9b       	stdsp	sp[0x24],r11
80005eba:	16 98       	mov	r8,r11
80005ebc:	2f f8       	sub	r8,-1
80005ebe:	58 08       	cp.w	r8,0
80005ec0:	e0 89 00 05 	brgt	80005eca <_dtoa_r+0x2f6>
80005ec4:	10 91       	mov	r1,r8
80005ec6:	30 18       	mov	r8,1
80005ec8:	c0 28       	rjmp	80005ecc <_dtoa_r+0x2f8>
80005eca:	10 91       	mov	r1,r8
80005ecc:	30 09       	mov	r9,0
80005ece:	6e 9a       	ld.w	r10,r7[0x24]
80005ed0:	95 19       	st.w	r10[0x4],r9
80005ed2:	30 49       	mov	r9,4
80005ed4:	c0 68       	rjmp	80005ee0 <_dtoa_r+0x30c>
80005ed6:	d7 03       	nop
80005ed8:	6a 1a       	ld.w	r10,r5[0x4]
80005eda:	a1 79       	lsl	r9,0x1
80005edc:	2f fa       	sub	r10,-1
80005ede:	8b 1a       	st.w	r5[0x4],r10
80005ee0:	6e 95       	ld.w	r5,r7[0x24]
80005ee2:	f2 ca ff ec 	sub	r10,r9,-20
80005ee6:	10 3a       	cp.w	r10,r8
80005ee8:	fe 98 ff f8 	brls	80005ed8 <_dtoa_r+0x304>
80005eec:	6a 1b       	ld.w	r11,r5[0x4]
80005eee:	0e 9c       	mov	r12,r7
80005ef0:	e0 a0 0b 6e 	rcall	800075cc <_Balloc>
80005ef4:	58 e1       	cp.w	r1,14
80005ef6:	5f 88       	srls	r8
80005ef8:	8b 0c       	st.w	r5[0x0],r12
80005efa:	f1 e4 00 04 	and	r4,r8,r4
80005efe:	6e 98       	ld.w	r8,r7[0x24]
80005f00:	70 08       	ld.w	r8,r8[0x0]
80005f02:	50 88       	stdsp	sp[0x20],r8
80005f04:	e0 80 01 82 	breq	80006208 <_dtoa_r+0x634>
80005f08:	58 06       	cp.w	r6,0
80005f0a:	e0 8a 00 43 	brle	80005f90 <_dtoa_r+0x3bc>
80005f0e:	f3 d6 c0 04 	bfextu	r9,r6,0x0,0x4
80005f12:	fe c8 c6 b2 	sub	r8,pc,-14670
80005f16:	f0 09 02 34 	ld.d	r4,r8[r9<<0x3]
80005f1a:	fa e5 00 18 	st.d	sp[24],r4
80005f1e:	ec 04 14 04 	asr	r4,r6,0x4
80005f22:	ed b4 00 04 	bld	r4,0x4
80005f26:	c0 30       	breq	80005f2c <_dtoa_r+0x358>
80005f28:	30 25       	mov	r5,2
80005f2a:	c1 08       	rjmp	80005f4a <_dtoa_r+0x376>
80005f2c:	fe c8 c6 04 	sub	r8,pc,-14844
80005f30:	f0 e8 00 20 	ld.d	r8,r8[32]
80005f34:	fa ea 00 3c 	ld.d	r10,sp[60]
80005f38:	e9 d4 c0 04 	bfextu	r4,r4,0x0,0x4
80005f3c:	e0 a0 14 12 	rcall	80008760 <__avr32_f64_div>
80005f40:	30 35       	mov	r5,3
80005f42:	14 98       	mov	r8,r10
80005f44:	16 99       	mov	r9,r11
80005f46:	fa e9 00 08 	st.d	sp[8],r8
80005f4a:	fe cc c6 22 	sub	r12,pc,-14814
80005f4e:	50 a3       	stdsp	sp[0x28],r3
80005f50:	0c 93       	mov	r3,r6
80005f52:	18 96       	mov	r6,r12
80005f54:	c0 f8       	rjmp	80005f72 <_dtoa_r+0x39e>
80005f56:	fa ea 00 18 	ld.d	r10,sp[24]
80005f5a:	ed b4 00 00 	bld	r4,0x0
80005f5e:	c0 81       	brne	80005f6e <_dtoa_r+0x39a>
80005f60:	ec e8 00 00 	ld.d	r8,r6[0]
80005f64:	2f f5       	sub	r5,-1
80005f66:	e0 a0 10 b7 	rcall	800080d4 <__avr32_f64_mul>
80005f6a:	fa eb 00 18 	st.d	sp[24],r10
80005f6e:	a1 54       	asr	r4,0x1
80005f70:	2f 86       	sub	r6,-8
80005f72:	58 04       	cp.w	r4,0
80005f74:	cf 11       	brne	80005f56 <_dtoa_r+0x382>
80005f76:	fa e8 00 18 	ld.d	r8,sp[24]
80005f7a:	fa ea 00 08 	ld.d	r10,sp[8]
80005f7e:	06 96       	mov	r6,r3
80005f80:	e0 a0 13 f0 	rcall	80008760 <__avr32_f64_div>
80005f84:	40 a3       	lddsp	r3,sp[0x28]
80005f86:	14 98       	mov	r8,r10
80005f88:	16 99       	mov	r9,r11
80005f8a:	fa e9 00 08 	st.d	sp[8],r8
80005f8e:	c2 f8       	rjmp	80005fec <_dtoa_r+0x418>
80005f90:	ec 08 11 00 	rsub	r8,r6,0
80005f94:	c0 31       	brne	80005f9a <_dtoa_r+0x3c6>
80005f96:	30 25       	mov	r5,2
80005f98:	c2 a8       	rjmp	80005fec <_dtoa_r+0x418>
80005f9a:	fe cc c6 72 	sub	r12,pc,-14734
80005f9e:	f0 04 14 04 	asr	r4,r8,0x4
80005fa2:	50 1c       	stdsp	sp[0x4],r12
80005fa4:	f1 d8 c0 04 	bfextu	r8,r8,0x0,0x4
80005fa8:	fe c9 c7 48 	sub	r9,pc,-14520
80005fac:	fa ea 00 3c 	ld.d	r10,sp[60]
80005fb0:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
80005fb4:	e0 a0 10 90 	rcall	800080d4 <__avr32_f64_mul>
80005fb8:	40 1c       	lddsp	r12,sp[0x4]
80005fba:	50 63       	stdsp	sp[0x18],r3
80005fbc:	30 25       	mov	r5,2
80005fbe:	0c 93       	mov	r3,r6
80005fc0:	fa eb 00 08 	st.d	sp[8],r10
80005fc4:	18 96       	mov	r6,r12
80005fc6:	c0 f8       	rjmp	80005fe4 <_dtoa_r+0x410>
80005fc8:	fa ea 00 08 	ld.d	r10,sp[8]
80005fcc:	ed b4 00 00 	bld	r4,0x0
80005fd0:	c0 81       	brne	80005fe0 <_dtoa_r+0x40c>
80005fd2:	ec e8 00 00 	ld.d	r8,r6[0]
80005fd6:	2f f5       	sub	r5,-1
80005fd8:	e0 a0 10 7e 	rcall	800080d4 <__avr32_f64_mul>
80005fdc:	fa eb 00 08 	st.d	sp[8],r10
80005fe0:	a1 54       	asr	r4,0x1
80005fe2:	2f 86       	sub	r6,-8
80005fe4:	58 04       	cp.w	r4,0
80005fe6:	cf 11       	brne	80005fc8 <_dtoa_r+0x3f4>
80005fe8:	06 96       	mov	r6,r3
80005fea:	40 63       	lddsp	r3,sp[0x18]
80005fec:	41 4a       	lddsp	r10,sp[0x50]
80005fee:	58 0a       	cp.w	r10,0
80005ff0:	c2 a0       	breq	80006044 <_dtoa_r+0x470>
80005ff2:	fa e8 00 08 	ld.d	r8,sp[8]
80005ff6:	58 01       	cp.w	r1,0
80005ff8:	5f 94       	srgt	r4
80005ffa:	fa e9 00 18 	st.d	sp[24],r8
80005ffe:	30 08       	mov	r8,0
80006000:	fc 19 3f f0 	movh	r9,0x3ff0
80006004:	fa ea 00 18 	ld.d	r10,sp[24]
80006008:	e0 a0 13 78 	rcall	800086f8 <__avr32_f64_cmp_lt>
8000600c:	f9 bc 00 00 	moveq	r12,0
80006010:	f9 bc 01 01 	movne	r12,1
80006014:	e9 ec 00 0c 	and	r12,r4,r12
80006018:	c1 60       	breq	80006044 <_dtoa_r+0x470>
8000601a:	40 98       	lddsp	r8,sp[0x24]
8000601c:	58 08       	cp.w	r8,0
8000601e:	e0 8a 00 f1 	brle	80006200 <_dtoa_r+0x62c>
80006022:	30 08       	mov	r8,0
80006024:	fc 19 40 24 	movh	r9,0x4024
80006028:	ec c4 00 01 	sub	r4,r6,1
8000602c:	fa ea 00 18 	ld.d	r10,sp[24]
80006030:	2f f5       	sub	r5,-1
80006032:	50 64       	stdsp	sp[0x18],r4
80006034:	e0 a0 10 50 	rcall	800080d4 <__avr32_f64_mul>
80006038:	40 94       	lddsp	r4,sp[0x24]
8000603a:	14 98       	mov	r8,r10
8000603c:	16 99       	mov	r9,r11
8000603e:	fa e9 00 08 	st.d	sp[8],r8
80006042:	c0 38       	rjmp	80006048 <_dtoa_r+0x474>
80006044:	50 66       	stdsp	sp[0x18],r6
80006046:	02 94       	mov	r4,r1
80006048:	0a 9c       	mov	r12,r5
8000604a:	e0 a0 12 a0 	rcall	8000858a <__avr32_s32_to_f64>
8000604e:	fa e8 00 08 	ld.d	r8,sp[8]
80006052:	e0 a0 10 41 	rcall	800080d4 <__avr32_f64_mul>
80006056:	30 08       	mov	r8,0
80006058:	fc 19 40 1c 	movh	r9,0x401c
8000605c:	e0 a0 11 f6 	rcall	80008448 <__avr32_f64_add>
80006060:	14 98       	mov	r8,r10
80006062:	16 99       	mov	r9,r11
80006064:	fa e9 00 28 	st.d	sp[40],r8
80006068:	fc 18 fc c0 	movh	r8,0xfcc0
8000606c:	40 a5       	lddsp	r5,sp[0x28]
8000606e:	10 05       	add	r5,r8
80006070:	50 a5       	stdsp	sp[0x28],r5
80006072:	58 04       	cp.w	r4,0
80006074:	c2 11       	brne	800060b6 <_dtoa_r+0x4e2>
80006076:	fa ea 00 08 	ld.d	r10,sp[8]
8000607a:	30 08       	mov	r8,0
8000607c:	fc 19 40 14 	movh	r9,0x4014
80006080:	e0 a0 11 16 	rcall	800082ac <__avr32_f64_sub>
80006084:	40 bc       	lddsp	r12,sp[0x2c]
80006086:	fa eb 00 08 	st.d	sp[8],r10
8000608a:	14 98       	mov	r8,r10
8000608c:	16 99       	mov	r9,r11
8000608e:	18 9a       	mov	r10,r12
80006090:	0a 9b       	mov	r11,r5
80006092:	e0 a0 13 33 	rcall	800086f8 <__avr32_f64_cmp_lt>
80006096:	e0 81 02 54 	brne	8000653e <_dtoa_r+0x96a>
8000609a:	0a 98       	mov	r8,r5
8000609c:	40 b9       	lddsp	r9,sp[0x2c]
8000609e:	ee 18 80 00 	eorh	r8,0x8000
800060a2:	fa ea 00 08 	ld.d	r10,sp[8]
800060a6:	10 95       	mov	r5,r8
800060a8:	12 98       	mov	r8,r9
800060aa:	0a 99       	mov	r9,r5
800060ac:	e0 a0 13 26 	rcall	800086f8 <__avr32_f64_cmp_lt>
800060b0:	e0 81 02 3e 	brne	8000652c <_dtoa_r+0x958>
800060b4:	ca 68       	rjmp	80006200 <_dtoa_r+0x62c>
800060b6:	fe c9 c8 56 	sub	r9,pc,-14250
800060ba:	e8 c8 00 01 	sub	r8,r4,1
800060be:	40 d5       	lddsp	r5,sp[0x34]
800060c0:	58 05       	cp.w	r5,0
800060c2:	c4 f0       	breq	80006160 <_dtoa_r+0x58c>
800060c4:	30 0c       	mov	r12,0
800060c6:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
800060ca:	51 3c       	stdsp	sp[0x4c],r12
800060cc:	30 0a       	mov	r10,0
800060ce:	fc 1b 3f e0 	movh	r11,0x3fe0
800060d2:	e0 a0 13 47 	rcall	80008760 <__avr32_f64_div>
800060d6:	fa e8 00 28 	ld.d	r8,sp[40]
800060da:	40 85       	lddsp	r5,sp[0x20]
800060dc:	e0 a0 10 e8 	rcall	800082ac <__avr32_f64_sub>
800060e0:	fa eb 00 28 	st.d	sp[40],r10
800060e4:	fa ea 00 08 	ld.d	r10,sp[8]
800060e8:	e0 a0 12 3a 	rcall	8000855c <__avr32_f64_to_s32>
800060ec:	51 6c       	stdsp	sp[0x58],r12
800060ee:	e0 a0 12 4e 	rcall	8000858a <__avr32_s32_to_f64>
800060f2:	14 98       	mov	r8,r10
800060f4:	16 99       	mov	r9,r11
800060f6:	fa ea 00 08 	ld.d	r10,sp[8]
800060fa:	e0 a0 10 d9 	rcall	800082ac <__avr32_f64_sub>
800060fe:	fa eb 00 08 	st.d	sp[8],r10
80006102:	41 68       	lddsp	r8,sp[0x58]
80006104:	2d 08       	sub	r8,-48
80006106:	0a c8       	st.b	r5++,r8
80006108:	41 39       	lddsp	r9,sp[0x4c]
8000610a:	2f f9       	sub	r9,-1
8000610c:	51 39       	stdsp	sp[0x4c],r9
8000610e:	fa e8 00 28 	ld.d	r8,sp[40]
80006112:	e0 a0 12 f3 	rcall	800086f8 <__avr32_f64_cmp_lt>
80006116:	e0 81 03 39 	brne	80006788 <_dtoa_r+0xbb4>
8000611a:	fa e8 00 08 	ld.d	r8,sp[8]
8000611e:	30 0a       	mov	r10,0
80006120:	fc 1b 3f f0 	movh	r11,0x3ff0
80006124:	e0 a0 10 c4 	rcall	800082ac <__avr32_f64_sub>
80006128:	fa e8 00 28 	ld.d	r8,sp[40]
8000612c:	e0 a0 12 e6 	rcall	800086f8 <__avr32_f64_cmp_lt>
80006130:	fa ea 00 28 	ld.d	r10,sp[40]
80006134:	30 08       	mov	r8,0
80006136:	fc 19 40 24 	movh	r9,0x4024
8000613a:	e0 81 00 da 	brne	800062ee <_dtoa_r+0x71a>
8000613e:	41 3c       	lddsp	r12,sp[0x4c]
80006140:	08 3c       	cp.w	r12,r4
80006142:	c5 f4       	brge	80006200 <_dtoa_r+0x62c>
80006144:	e0 a0 0f c8 	rcall	800080d4 <__avr32_f64_mul>
80006148:	30 08       	mov	r8,0
8000614a:	fa eb 00 28 	st.d	sp[40],r10
8000614e:	fc 19 40 24 	movh	r9,0x4024
80006152:	fa ea 00 08 	ld.d	r10,sp[8]
80006156:	e0 a0 0f bf 	rcall	800080d4 <__avr32_f64_mul>
8000615a:	fa eb 00 08 	st.d	sp[8],r10
8000615e:	cc 3b       	rjmp	800060e4 <_dtoa_r+0x510>
80006160:	40 85       	lddsp	r5,sp[0x20]
80006162:	08 05       	add	r5,r4
80006164:	f2 08 02 3a 	ld.d	r10,r9[r8<<0x3]
80006168:	51 35       	stdsp	sp[0x4c],r5
8000616a:	fa e8 00 28 	ld.d	r8,sp[40]
8000616e:	40 85       	lddsp	r5,sp[0x20]
80006170:	e0 a0 0f b2 	rcall	800080d4 <__avr32_f64_mul>
80006174:	fa eb 00 28 	st.d	sp[40],r10
80006178:	fa ea 00 08 	ld.d	r10,sp[8]
8000617c:	e0 a0 11 f0 	rcall	8000855c <__avr32_f64_to_s32>
80006180:	51 6c       	stdsp	sp[0x58],r12
80006182:	e0 a0 12 04 	rcall	8000858a <__avr32_s32_to_f64>
80006186:	14 98       	mov	r8,r10
80006188:	16 99       	mov	r9,r11
8000618a:	fa ea 00 08 	ld.d	r10,sp[8]
8000618e:	e0 a0 10 8f 	rcall	800082ac <__avr32_f64_sub>
80006192:	fa eb 00 08 	st.d	sp[8],r10
80006196:	41 68       	lddsp	r8,sp[0x58]
80006198:	2d 08       	sub	r8,-48
8000619a:	0a c8       	st.b	r5++,r8
8000619c:	41 3c       	lddsp	r12,sp[0x4c]
8000619e:	18 35       	cp.w	r5,r12
800061a0:	c2 81       	brne	800061f0 <_dtoa_r+0x61c>
800061a2:	30 08       	mov	r8,0
800061a4:	fc 19 3f e0 	movh	r9,0x3fe0
800061a8:	fa ea 00 28 	ld.d	r10,sp[40]
800061ac:	e0 a0 11 4e 	rcall	80008448 <__avr32_f64_add>
800061b0:	40 85       	lddsp	r5,sp[0x20]
800061b2:	fa e8 00 08 	ld.d	r8,sp[8]
800061b6:	08 05       	add	r5,r4
800061b8:	e0 a0 12 a0 	rcall	800086f8 <__avr32_f64_cmp_lt>
800061bc:	e0 81 00 99 	brne	800062ee <_dtoa_r+0x71a>
800061c0:	fa e8 00 28 	ld.d	r8,sp[40]
800061c4:	30 0a       	mov	r10,0
800061c6:	fc 1b 3f e0 	movh	r11,0x3fe0
800061ca:	e0 a0 10 71 	rcall	800082ac <__avr32_f64_sub>
800061ce:	14 98       	mov	r8,r10
800061d0:	16 99       	mov	r9,r11
800061d2:	fa ea 00 08 	ld.d	r10,sp[8]
800061d6:	e0 a0 12 91 	rcall	800086f8 <__avr32_f64_cmp_lt>
800061da:	c1 30       	breq	80006200 <_dtoa_r+0x62c>
800061dc:	33 09       	mov	r9,48
800061de:	0a 98       	mov	r8,r5
800061e0:	11 7a       	ld.ub	r10,--r8
800061e2:	f2 0a 18 00 	cp.b	r10,r9
800061e6:	e0 81 02 d1 	brne	80006788 <_dtoa_r+0xbb4>
800061ea:	10 95       	mov	r5,r8
800061ec:	cf 9b       	rjmp	800061de <_dtoa_r+0x60a>
800061ee:	d7 03       	nop
800061f0:	30 08       	mov	r8,0
800061f2:	fc 19 40 24 	movh	r9,0x4024
800061f6:	e0 a0 0f 6f 	rcall	800080d4 <__avr32_f64_mul>
800061fa:	fa eb 00 08 	st.d	sp[8],r10
800061fe:	cb db       	rjmp	80006178 <_dtoa_r+0x5a4>
80006200:	fa ea 00 3c 	ld.d	r10,sp[60]
80006204:	fa eb 00 08 	st.d	sp[8],r10
80006208:	58 e6       	cp.w	r6,14
8000620a:	5f ab       	srle	r11
8000620c:	41 8a       	lddsp	r10,sp[0x60]
8000620e:	30 08       	mov	r8,0
80006210:	f4 09 11 ff 	rsub	r9,r10,-1
80006214:	f7 e9 03 f9 	and	r9,r11,r9>>0x1f
80006218:	f0 09 18 00 	cp.b	r9,r8
8000621c:	e0 80 00 82 	breq	80006320 <_dtoa_r+0x74c>
80006220:	40 ea       	lddsp	r10,sp[0x38]
80006222:	58 01       	cp.w	r1,0
80006224:	5f a9       	srle	r9
80006226:	f3 ea 03 f9 	and	r9,r9,r10>>0x1f
8000622a:	fe ca c9 ca 	sub	r10,pc,-13878
8000622e:	f4 06 02 34 	ld.d	r4,r10[r6<<0x3]
80006232:	fa e5 00 10 	st.d	sp[16],r4
80006236:	f0 09 18 00 	cp.b	r9,r8
8000623a:	c1 40       	breq	80006262 <_dtoa_r+0x68e>
8000623c:	58 01       	cp.w	r1,0
8000623e:	e0 81 01 77 	brne	8000652c <_dtoa_r+0x958>
80006242:	30 08       	mov	r8,0
80006244:	fc 19 40 14 	movh	r9,0x4014
80006248:	08 9a       	mov	r10,r4
8000624a:	0a 9b       	mov	r11,r5
8000624c:	e0 a0 0f 44 	rcall	800080d4 <__avr32_f64_mul>
80006250:	fa e8 00 08 	ld.d	r8,sp[8]
80006254:	e0 a0 12 1e 	rcall	80008690 <__avr32_f64_cmp_ge>
80006258:	e0 81 01 6a 	brne	8000652c <_dtoa_r+0x958>
8000625c:	02 92       	mov	r2,r1
8000625e:	e0 8f 01 72 	bral	80006542 <_dtoa_r+0x96e>
80006262:	40 85       	lddsp	r5,sp[0x20]
80006264:	30 14       	mov	r4,1
80006266:	fa e8 00 10 	ld.d	r8,sp[16]
8000626a:	fa ea 00 08 	ld.d	r10,sp[8]
8000626e:	e0 a0 12 79 	rcall	80008760 <__avr32_f64_div>
80006272:	e0 a0 11 75 	rcall	8000855c <__avr32_f64_to_s32>
80006276:	18 92       	mov	r2,r12
80006278:	e0 a0 11 89 	rcall	8000858a <__avr32_s32_to_f64>
8000627c:	fa e8 00 10 	ld.d	r8,sp[16]
80006280:	e0 a0 0f 2a 	rcall	800080d4 <__avr32_f64_mul>
80006284:	14 98       	mov	r8,r10
80006286:	16 99       	mov	r9,r11
80006288:	fa ea 00 08 	ld.d	r10,sp[8]
8000628c:	e0 a0 10 10 	rcall	800082ac <__avr32_f64_sub>
80006290:	fa eb 00 08 	st.d	sp[8],r10
80006294:	e4 c8 ff d0 	sub	r8,r2,-48
80006298:	0a c8       	st.b	r5++,r8
8000629a:	fc 19 40 24 	movh	r9,0x4024
8000629e:	30 08       	mov	r8,0
800062a0:	02 34       	cp.w	r4,r1
800062a2:	c3 31       	brne	80006308 <_dtoa_r+0x734>
800062a4:	fa e8 00 08 	ld.d	r8,sp[8]
800062a8:	e0 a0 10 d0 	rcall	80008448 <__avr32_f64_add>
800062ac:	16 91       	mov	r1,r11
800062ae:	14 90       	mov	r0,r10
800062b0:	14 98       	mov	r8,r10
800062b2:	02 99       	mov	r9,r1
800062b4:	fa ea 00 10 	ld.d	r10,sp[16]
800062b8:	e0 a0 12 20 	rcall	800086f8 <__avr32_f64_cmp_lt>
800062bc:	c1 a1       	brne	800062f0 <_dtoa_r+0x71c>
800062be:	fa e8 00 10 	ld.d	r8,sp[16]
800062c2:	00 9a       	mov	r10,r0
800062c4:	02 9b       	mov	r11,r1
800062c6:	e0 a0 11 d2 	rcall	8000866a <__avr32_f64_cmp_eq>
800062ca:	e0 80 02 5e 	breq	80006786 <_dtoa_r+0xbb2>
800062ce:	e5 d2 c0 01 	bfextu	r2,r2,0x0,0x1
800062d2:	c0 f1       	brne	800062f0 <_dtoa_r+0x71c>
800062d4:	e0 8f 02 59 	bral	80006786 <_dtoa_r+0xbb2>
800062d8:	40 8a       	lddsp	r10,sp[0x20]
800062da:	14 38       	cp.w	r8,r10
800062dc:	c0 30       	breq	800062e2 <_dtoa_r+0x70e>
800062de:	10 95       	mov	r5,r8
800062e0:	c0 98       	rjmp	800062f2 <_dtoa_r+0x71e>
800062e2:	33 08       	mov	r8,48
800062e4:	40 89       	lddsp	r9,sp[0x20]
800062e6:	2f f6       	sub	r6,-1
800062e8:	b2 88       	st.b	r9[0x0],r8
800062ea:	40 88       	lddsp	r8,sp[0x20]
800062ec:	c0 88       	rjmp	800062fc <_dtoa_r+0x728>
800062ee:	40 66       	lddsp	r6,sp[0x18]
800062f0:	33 99       	mov	r9,57
800062f2:	0a 98       	mov	r8,r5
800062f4:	11 7a       	ld.ub	r10,--r8
800062f6:	f2 0a 18 00 	cp.b	r10,r9
800062fa:	ce f0       	breq	800062d8 <_dtoa_r+0x704>
800062fc:	50 66       	stdsp	sp[0x18],r6
800062fe:	11 89       	ld.ub	r9,r8[0x0]
80006300:	2f f9       	sub	r9,-1
80006302:	b0 89       	st.b	r8[0x0],r9
80006304:	e0 8f 02 42 	bral	80006788 <_dtoa_r+0xbb4>
80006308:	e0 a0 0e e6 	rcall	800080d4 <__avr32_f64_mul>
8000630c:	2f f4       	sub	r4,-1
8000630e:	fa eb 00 08 	st.d	sp[8],r10
80006312:	30 08       	mov	r8,0
80006314:	30 09       	mov	r9,0
80006316:	e0 a0 11 aa 	rcall	8000866a <__avr32_f64_cmp_eq>
8000631a:	ca 60       	breq	80006266 <_dtoa_r+0x692>
8000631c:	e0 8f 02 35 	bral	80006786 <_dtoa_r+0xbb2>
80006320:	40 d8       	lddsp	r8,sp[0x34]
80006322:	58 08       	cp.w	r8,0
80006324:	c0 51       	brne	8000632e <_dtoa_r+0x75a>
80006326:	04 98       	mov	r8,r2
80006328:	00 95       	mov	r5,r0
8000632a:	40 d4       	lddsp	r4,sp[0x34]
8000632c:	c3 78       	rjmp	8000639a <_dtoa_r+0x7c6>
8000632e:	40 c5       	lddsp	r5,sp[0x30]
80006330:	58 15       	cp.w	r5,1
80006332:	e0 89 00 0f 	brgt	80006350 <_dtoa_r+0x77c>
80006336:	41 74       	lddsp	r4,sp[0x5c]
80006338:	58 04       	cp.w	r4,0
8000633a:	c0 40       	breq	80006342 <_dtoa_r+0x76e>
8000633c:	f4 c9 fb cd 	sub	r9,r10,-1075
80006340:	c0 48       	rjmp	80006348 <_dtoa_r+0x774>
80006342:	41 99       	lddsp	r9,sp[0x64]
80006344:	f2 09 11 36 	rsub	r9,r9,54
80006348:	04 98       	mov	r8,r2
8000634a:	00 95       	mov	r5,r0
8000634c:	c1 c8       	rjmp	80006384 <_dtoa_r+0x7b0>
8000634e:	d7 03       	nop
80006350:	e2 c8 00 01 	sub	r8,r1,1
80006354:	58 01       	cp.w	r1,0
80006356:	e0 05 17 40 	movge	r5,r0
8000635a:	e2 09 17 40 	movge	r9,r1
8000635e:	e1 d1 e5 15 	sublt	r5,r0,r1
80006362:	f9 b9 05 00 	movlt	r9,0
80006366:	10 32       	cp.w	r2,r8
80006368:	e5 d8 e4 18 	subge	r8,r2,r8
8000636c:	f1 d2 e5 18 	sublt	r8,r8,r2
80006370:	e5 d8 e5 02 	addlt	r2,r2,r8
80006374:	fb fc 50 11 	ld.wlt	r12,sp[0x44]
80006378:	f9 d8 e5 0c 	addlt	r12,r12,r8
8000637c:	fb fc 5a 11 	st.wlt	sp[0x44],r12
80006380:	f9 b8 05 00 	movlt	r8,0
80006384:	40 4b       	lddsp	r11,sp[0x10]
80006386:	12 0b       	add	r11,r9
80006388:	50 08       	stdsp	sp[0x0],r8
8000638a:	50 4b       	stdsp	sp[0x10],r11
8000638c:	12 00       	add	r0,r9
8000638e:	30 1b       	mov	r11,1
80006390:	0e 9c       	mov	r12,r7
80006392:	e0 a0 0a d1 	rcall	80007934 <__i2b>
80006396:	40 08       	lddsp	r8,sp[0x0]
80006398:	18 94       	mov	r4,r12
8000639a:	40 4a       	lddsp	r10,sp[0x10]
8000639c:	58 05       	cp.w	r5,0
8000639e:	5f 99       	srgt	r9
800063a0:	58 0a       	cp.w	r10,0
800063a2:	5f 9a       	srgt	r10
800063a4:	f5 e9 00 09 	and	r9,r10,r9
800063a8:	c0 80       	breq	800063b8 <_dtoa_r+0x7e4>
800063aa:	40 4c       	lddsp	r12,sp[0x10]
800063ac:	f8 05 0d 49 	min	r9,r12,r5
800063b0:	12 1c       	sub	r12,r9
800063b2:	12 10       	sub	r0,r9
800063b4:	50 4c       	stdsp	sp[0x10],r12
800063b6:	12 15       	sub	r5,r9
800063b8:	58 02       	cp.w	r2,0
800063ba:	e0 8a 00 27 	brle	80006408 <_dtoa_r+0x834>
800063be:	40 db       	lddsp	r11,sp[0x34]
800063c0:	58 0b       	cp.w	r11,0
800063c2:	c1 d0       	breq	800063fc <_dtoa_r+0x828>
800063c4:	58 08       	cp.w	r8,0
800063c6:	e0 8a 00 17 	brle	800063f4 <_dtoa_r+0x820>
800063ca:	10 9a       	mov	r10,r8
800063cc:	50 08       	stdsp	sp[0x0],r8
800063ce:	08 9b       	mov	r11,r4
800063d0:	0e 9c       	mov	r12,r7
800063d2:	e0 a0 0a f7 	rcall	800079c0 <__pow5mult>
800063d6:	06 9a       	mov	r10,r3
800063d8:	18 9b       	mov	r11,r12
800063da:	18 94       	mov	r4,r12
800063dc:	0e 9c       	mov	r12,r7
800063de:	e0 a0 0a 2b 	rcall	80007834 <__multiply>
800063e2:	18 99       	mov	r9,r12
800063e4:	06 9b       	mov	r11,r3
800063e6:	50 19       	stdsp	sp[0x4],r9
800063e8:	0e 9c       	mov	r12,r7
800063ea:	e0 a0 08 d7 	rcall	80007598 <_Bfree>
800063ee:	40 19       	lddsp	r9,sp[0x4]
800063f0:	40 08       	lddsp	r8,sp[0x0]
800063f2:	12 93       	mov	r3,r9
800063f4:	e4 08 01 0a 	sub	r10,r2,r8
800063f8:	c0 80       	breq	80006408 <_dtoa_r+0x834>
800063fa:	c0 28       	rjmp	800063fe <_dtoa_r+0x82a>
800063fc:	04 9a       	mov	r10,r2
800063fe:	06 9b       	mov	r11,r3
80006400:	0e 9c       	mov	r12,r7
80006402:	e0 a0 0a df 	rcall	800079c0 <__pow5mult>
80006406:	18 93       	mov	r3,r12
80006408:	30 1b       	mov	r11,1
8000640a:	0e 9c       	mov	r12,r7
8000640c:	e0 a0 0a 94 	rcall	80007934 <__i2b>
80006410:	41 1a       	lddsp	r10,sp[0x44]
80006412:	18 92       	mov	r2,r12
80006414:	58 0a       	cp.w	r10,0
80006416:	e0 8a 00 07 	brle	80006424 <_dtoa_r+0x850>
8000641a:	18 9b       	mov	r11,r12
8000641c:	0e 9c       	mov	r12,r7
8000641e:	e0 a0 0a d1 	rcall	800079c0 <__pow5mult>
80006422:	18 92       	mov	r2,r12
80006424:	40 c9       	lddsp	r9,sp[0x30]
80006426:	58 19       	cp.w	r9,1
80006428:	e0 89 00 14 	brgt	80006450 <_dtoa_r+0x87c>
8000642c:	40 38       	lddsp	r8,sp[0xc]
8000642e:	58 08       	cp.w	r8,0
80006430:	c1 01       	brne	80006450 <_dtoa_r+0x87c>
80006432:	40 29       	lddsp	r9,sp[0x8]
80006434:	f1 d9 c0 14 	bfextu	r8,r9,0x0,0x14
80006438:	c0 c1       	brne	80006450 <_dtoa_r+0x87c>
8000643a:	12 98       	mov	r8,r9
8000643c:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80006440:	c0 80       	breq	80006450 <_dtoa_r+0x87c>
80006442:	40 4c       	lddsp	r12,sp[0x10]
80006444:	30 1b       	mov	r11,1
80006446:	2f fc       	sub	r12,-1
80006448:	2f f0       	sub	r0,-1
8000644a:	50 4c       	stdsp	sp[0x10],r12
8000644c:	50 6b       	stdsp	sp[0x18],r11
8000644e:	c0 38       	rjmp	80006454 <_dtoa_r+0x880>
80006450:	30 0a       	mov	r10,0
80006452:	50 6a       	stdsp	sp[0x18],r10
80006454:	41 19       	lddsp	r9,sp[0x44]
80006456:	58 09       	cp.w	r9,0
80006458:	c0 31       	brne	8000645e <_dtoa_r+0x88a>
8000645a:	30 1c       	mov	r12,1
8000645c:	c0 98       	rjmp	8000646e <_dtoa_r+0x89a>
8000645e:	64 48       	ld.w	r8,r2[0x10]
80006460:	2f c8       	sub	r8,-4
80006462:	e4 08 03 2c 	ld.w	r12,r2[r8<<0x2]
80006466:	e0 a0 08 08 	rcall	80007476 <__hi0bits>
8000646a:	f8 0c 11 20 	rsub	r12,r12,32
8000646e:	40 4b       	lddsp	r11,sp[0x10]
80006470:	f8 0b 00 08 	add	r8,r12,r11
80006474:	f1 d8 c0 05 	bfextu	r8,r8,0x0,0x5
80006478:	c0 c0       	breq	80006490 <_dtoa_r+0x8bc>
8000647a:	f0 08 11 20 	rsub	r8,r8,32
8000647e:	58 48       	cp.w	r8,4
80006480:	e0 8a 00 06 	brle	8000648c <_dtoa_r+0x8b8>
80006484:	20 48       	sub	r8,4
80006486:	10 0b       	add	r11,r8
80006488:	50 4b       	stdsp	sp[0x10],r11
8000648a:	c0 78       	rjmp	80006498 <_dtoa_r+0x8c4>
8000648c:	58 48       	cp.w	r8,4
8000648e:	c0 70       	breq	8000649c <_dtoa_r+0x8c8>
80006490:	40 4a       	lddsp	r10,sp[0x10]
80006492:	2e 48       	sub	r8,-28
80006494:	10 0a       	add	r10,r8
80006496:	50 4a       	stdsp	sp[0x10],r10
80006498:	10 00       	add	r0,r8
8000649a:	10 05       	add	r5,r8
8000649c:	58 00       	cp.w	r0,0
8000649e:	e0 8a 00 08 	brle	800064ae <_dtoa_r+0x8da>
800064a2:	06 9b       	mov	r11,r3
800064a4:	00 9a       	mov	r10,r0
800064a6:	0e 9c       	mov	r12,r7
800064a8:	e0 a0 09 82 	rcall	800077ac <__lshift>
800064ac:	18 93       	mov	r3,r12
800064ae:	40 49       	lddsp	r9,sp[0x10]
800064b0:	58 09       	cp.w	r9,0
800064b2:	e0 8a 00 08 	brle	800064c2 <_dtoa_r+0x8ee>
800064b6:	04 9b       	mov	r11,r2
800064b8:	12 9a       	mov	r10,r9
800064ba:	0e 9c       	mov	r12,r7
800064bc:	e0 a0 09 78 	rcall	800077ac <__lshift>
800064c0:	18 92       	mov	r2,r12
800064c2:	41 48       	lddsp	r8,sp[0x50]
800064c4:	58 08       	cp.w	r8,0
800064c6:	c1 b0       	breq	800064fc <_dtoa_r+0x928>
800064c8:	04 9b       	mov	r11,r2
800064ca:	06 9c       	mov	r12,r3
800064cc:	e0 a0 08 4c 	rcall	80007564 <__mcmp>
800064d0:	c1 64       	brge	800064fc <_dtoa_r+0x928>
800064d2:	06 9b       	mov	r11,r3
800064d4:	30 09       	mov	r9,0
800064d6:	30 aa       	mov	r10,10
800064d8:	0e 9c       	mov	r12,r7
800064da:	e0 a0 0a 35 	rcall	80007944 <__multadd>
800064de:	20 16       	sub	r6,1
800064e0:	18 93       	mov	r3,r12
800064e2:	40 dc       	lddsp	r12,sp[0x34]
800064e4:	58 0c       	cp.w	r12,0
800064e6:	c0 31       	brne	800064ec <_dtoa_r+0x918>
800064e8:	40 91       	lddsp	r1,sp[0x24]
800064ea:	c0 98       	rjmp	800064fc <_dtoa_r+0x928>
800064ec:	08 9b       	mov	r11,r4
800064ee:	40 91       	lddsp	r1,sp[0x24]
800064f0:	30 09       	mov	r9,0
800064f2:	30 aa       	mov	r10,10
800064f4:	0e 9c       	mov	r12,r7
800064f6:	e0 a0 0a 27 	rcall	80007944 <__multadd>
800064fa:	18 94       	mov	r4,r12
800064fc:	58 01       	cp.w	r1,0
800064fe:	5f a9       	srle	r9
80006500:	40 cb       	lddsp	r11,sp[0x30]
80006502:	58 2b       	cp.w	r11,2
80006504:	5f 98       	srgt	r8
80006506:	f3 e8 00 08 	and	r8,r9,r8
8000650a:	c2 50       	breq	80006554 <_dtoa_r+0x980>
8000650c:	58 01       	cp.w	r1,0
8000650e:	c1 11       	brne	80006530 <_dtoa_r+0x95c>
80006510:	04 9b       	mov	r11,r2
80006512:	02 99       	mov	r9,r1
80006514:	30 5a       	mov	r10,5
80006516:	0e 9c       	mov	r12,r7
80006518:	e0 a0 0a 16 	rcall	80007944 <__multadd>
8000651c:	18 92       	mov	r2,r12
8000651e:	18 9b       	mov	r11,r12
80006520:	06 9c       	mov	r12,r3
80006522:	e0 a0 08 21 	rcall	80007564 <__mcmp>
80006526:	e0 89 00 0f 	brgt	80006544 <_dtoa_r+0x970>
8000652a:	c0 38       	rjmp	80006530 <_dtoa_r+0x95c>
8000652c:	30 02       	mov	r2,0
8000652e:	04 94       	mov	r4,r2
80006530:	40 ea       	lddsp	r10,sp[0x38]
80006532:	30 09       	mov	r9,0
80006534:	5c da       	com	r10
80006536:	40 85       	lddsp	r5,sp[0x20]
80006538:	50 6a       	stdsp	sp[0x18],r10
8000653a:	50 49       	stdsp	sp[0x10],r9
8000653c:	c0 f9       	rjmp	8000675a <_dtoa_r+0xb86>
8000653e:	08 92       	mov	r2,r4
80006540:	40 66       	lddsp	r6,sp[0x18]
80006542:	04 94       	mov	r4,r2
80006544:	2f f6       	sub	r6,-1
80006546:	50 66       	stdsp	sp[0x18],r6
80006548:	33 18       	mov	r8,49
8000654a:	40 85       	lddsp	r5,sp[0x20]
8000654c:	0a c8       	st.b	r5++,r8
8000654e:	30 08       	mov	r8,0
80006550:	50 48       	stdsp	sp[0x10],r8
80006552:	c0 49       	rjmp	8000675a <_dtoa_r+0xb86>
80006554:	40 dc       	lddsp	r12,sp[0x34]
80006556:	58 0c       	cp.w	r12,0
80006558:	e0 80 00 b5 	breq	800066c2 <_dtoa_r+0xaee>
8000655c:	58 05       	cp.w	r5,0
8000655e:	e0 8a 00 08 	brle	8000656e <_dtoa_r+0x99a>
80006562:	08 9b       	mov	r11,r4
80006564:	0a 9a       	mov	r10,r5
80006566:	0e 9c       	mov	r12,r7
80006568:	e0 a0 09 22 	rcall	800077ac <__lshift>
8000656c:	18 94       	mov	r4,r12
8000656e:	40 6b       	lddsp	r11,sp[0x18]
80006570:	58 0b       	cp.w	r11,0
80006572:	c0 31       	brne	80006578 <_dtoa_r+0x9a4>
80006574:	08 9c       	mov	r12,r4
80006576:	c1 38       	rjmp	8000659c <_dtoa_r+0x9c8>
80006578:	68 1b       	ld.w	r11,r4[0x4]
8000657a:	0e 9c       	mov	r12,r7
8000657c:	e0 a0 08 28 	rcall	800075cc <_Balloc>
80006580:	68 4a       	ld.w	r10,r4[0x10]
80006582:	18 95       	mov	r5,r12
80006584:	e8 cb ff f4 	sub	r11,r4,-12
80006588:	2f ea       	sub	r10,-2
8000658a:	2f 4c       	sub	r12,-12
8000658c:	a3 6a       	lsl	r10,0x2
8000658e:	fe b0 e8 3f 	rcall	8000360c <memcpy>
80006592:	0a 9b       	mov	r11,r5
80006594:	30 1a       	mov	r10,1
80006596:	0e 9c       	mov	r12,r7
80006598:	e0 a0 09 0a 	rcall	800077ac <__lshift>
8000659c:	50 44       	stdsp	sp[0x10],r4
8000659e:	40 3a       	lddsp	r10,sp[0xc]
800065a0:	30 19       	mov	r9,1
800065a2:	f5 da c0 01 	bfextu	r10,r10,0x0,0x1
800065a6:	18 94       	mov	r4,r12
800065a8:	50 da       	stdsp	sp[0x34],r10
800065aa:	40 85       	lddsp	r5,sp[0x20]
800065ac:	50 99       	stdsp	sp[0x24],r9
800065ae:	50 26       	stdsp	sp[0x8],r6
800065b0:	50 e1       	stdsp	sp[0x38],r1
800065b2:	04 9b       	mov	r11,r2
800065b4:	06 9c       	mov	r12,r3
800065b6:	fe b0 fa 7f 	rcall	80005ab4 <quorem>
800065ba:	40 4b       	lddsp	r11,sp[0x10]
800065bc:	f8 c0 ff d0 	sub	r0,r12,-48
800065c0:	06 9c       	mov	r12,r3
800065c2:	e0 a0 07 d1 	rcall	80007564 <__mcmp>
800065c6:	08 9a       	mov	r10,r4
800065c8:	50 6c       	stdsp	sp[0x18],r12
800065ca:	04 9b       	mov	r11,r2
800065cc:	0e 9c       	mov	r12,r7
800065ce:	e0 a0 08 87 	rcall	800076dc <__mdiff>
800065d2:	18 91       	mov	r1,r12
800065d4:	78 38       	ld.w	r8,r12[0xc]
800065d6:	58 08       	cp.w	r8,0
800065d8:	c0 30       	breq	800065de <_dtoa_r+0xa0a>
800065da:	30 16       	mov	r6,1
800065dc:	c0 68       	rjmp	800065e8 <_dtoa_r+0xa14>
800065de:	18 9b       	mov	r11,r12
800065e0:	06 9c       	mov	r12,r3
800065e2:	e0 a0 07 c1 	rcall	80007564 <__mcmp>
800065e6:	18 96       	mov	r6,r12
800065e8:	0e 9c       	mov	r12,r7
800065ea:	02 9b       	mov	r11,r1
800065ec:	e0 a0 07 d6 	rcall	80007598 <_Bfree>
800065f0:	40 cc       	lddsp	r12,sp[0x30]
800065f2:	ed ec 10 08 	or	r8,r6,r12
800065f6:	c0 d1       	brne	80006610 <_dtoa_r+0xa3c>
800065f8:	40 db       	lddsp	r11,sp[0x34]
800065fa:	58 0b       	cp.w	r11,0
800065fc:	c0 a1       	brne	80006610 <_dtoa_r+0xa3c>
800065fe:	40 26       	lddsp	r6,sp[0x8]
80006600:	e0 40 00 39 	cp.w	r0,57
80006604:	c3 00       	breq	80006664 <_dtoa_r+0xa90>
80006606:	40 6a       	lddsp	r10,sp[0x18]
80006608:	58 0a       	cp.w	r10,0
8000660a:	e0 89 00 24 	brgt	80006652 <_dtoa_r+0xa7e>
8000660e:	c2 f8       	rjmp	8000666c <_dtoa_r+0xa98>
80006610:	40 69       	lddsp	r9,sp[0x18]
80006612:	58 09       	cp.w	r9,0
80006614:	c0 85       	brlt	80006624 <_dtoa_r+0xa50>
80006616:	12 98       	mov	r8,r9
80006618:	40 cc       	lddsp	r12,sp[0x30]
8000661a:	18 48       	or	r8,r12
8000661c:	c1 d1       	brne	80006656 <_dtoa_r+0xa82>
8000661e:	40 db       	lddsp	r11,sp[0x34]
80006620:	58 0b       	cp.w	r11,0
80006622:	c1 a1       	brne	80006656 <_dtoa_r+0xa82>
80006624:	0c 99       	mov	r9,r6
80006626:	40 26       	lddsp	r6,sp[0x8]
80006628:	58 09       	cp.w	r9,0
8000662a:	e0 8a 00 21 	brle	8000666c <_dtoa_r+0xa98>
8000662e:	06 9b       	mov	r11,r3
80006630:	30 1a       	mov	r10,1
80006632:	0e 9c       	mov	r12,r7
80006634:	e0 a0 08 bc 	rcall	800077ac <__lshift>
80006638:	04 9b       	mov	r11,r2
8000663a:	18 93       	mov	r3,r12
8000663c:	e0 a0 07 94 	rcall	80007564 <__mcmp>
80006640:	e0 89 00 06 	brgt	8000664c <_dtoa_r+0xa78>
80006644:	c1 41       	brne	8000666c <_dtoa_r+0xa98>
80006646:	ed b0 00 00 	bld	r0,0x0
8000664a:	c1 11       	brne	8000666c <_dtoa_r+0xa98>
8000664c:	e0 40 00 39 	cp.w	r0,57
80006650:	c0 a0       	breq	80006664 <_dtoa_r+0xa90>
80006652:	2f f0       	sub	r0,-1
80006654:	c0 c8       	rjmp	8000666c <_dtoa_r+0xa98>
80006656:	58 06       	cp.w	r6,0
80006658:	e0 8a 00 0c 	brle	80006670 <_dtoa_r+0xa9c>
8000665c:	40 26       	lddsp	r6,sp[0x8]
8000665e:	e0 40 00 39 	cp.w	r0,57
80006662:	c0 41       	brne	8000666a <_dtoa_r+0xa96>
80006664:	33 98       	mov	r8,57
80006666:	0a c8       	st.b	r5++,r8
80006668:	c6 78       	rjmp	80006736 <_dtoa_r+0xb62>
8000666a:	2f f0       	sub	r0,-1
8000666c:	0a c0       	st.b	r5++,r0
8000666e:	c7 58       	rjmp	80006758 <_dtoa_r+0xb84>
80006670:	0a c0       	st.b	r5++,r0
80006672:	40 9a       	lddsp	r10,sp[0x24]
80006674:	40 e9       	lddsp	r9,sp[0x38]
80006676:	12 3a       	cp.w	r10,r9
80006678:	c4 30       	breq	800066fe <_dtoa_r+0xb2a>
8000667a:	06 9b       	mov	r11,r3
8000667c:	30 09       	mov	r9,0
8000667e:	30 aa       	mov	r10,10
80006680:	0e 9c       	mov	r12,r7
80006682:	e0 a0 09 61 	rcall	80007944 <__multadd>
80006686:	40 48       	lddsp	r8,sp[0x10]
80006688:	18 93       	mov	r3,r12
8000668a:	08 38       	cp.w	r8,r4
8000668c:	c0 91       	brne	8000669e <_dtoa_r+0xaca>
8000668e:	10 9b       	mov	r11,r8
80006690:	30 09       	mov	r9,0
80006692:	30 aa       	mov	r10,10
80006694:	0e 9c       	mov	r12,r7
80006696:	e0 a0 09 57 	rcall	80007944 <__multadd>
8000669a:	50 4c       	stdsp	sp[0x10],r12
8000669c:	c0 e8       	rjmp	800066b8 <_dtoa_r+0xae4>
8000669e:	40 4b       	lddsp	r11,sp[0x10]
800066a0:	30 09       	mov	r9,0
800066a2:	30 aa       	mov	r10,10
800066a4:	0e 9c       	mov	r12,r7
800066a6:	e0 a0 09 4f 	rcall	80007944 <__multadd>
800066aa:	08 9b       	mov	r11,r4
800066ac:	50 4c       	stdsp	sp[0x10],r12
800066ae:	30 09       	mov	r9,0
800066b0:	30 aa       	mov	r10,10
800066b2:	0e 9c       	mov	r12,r7
800066b4:	e0 a0 09 48 	rcall	80007944 <__multadd>
800066b8:	18 94       	mov	r4,r12
800066ba:	40 9c       	lddsp	r12,sp[0x24]
800066bc:	2f fc       	sub	r12,-1
800066be:	50 9c       	stdsp	sp[0x24],r12
800066c0:	c7 9b       	rjmp	800065b2 <_dtoa_r+0x9de>
800066c2:	30 18       	mov	r8,1
800066c4:	06 90       	mov	r0,r3
800066c6:	40 85       	lddsp	r5,sp[0x20]
800066c8:	08 93       	mov	r3,r4
800066ca:	0c 94       	mov	r4,r6
800066cc:	10 96       	mov	r6,r8
800066ce:	04 9b       	mov	r11,r2
800066d0:	00 9c       	mov	r12,r0
800066d2:	fe b0 f9 f1 	rcall	80005ab4 <quorem>
800066d6:	2d 0c       	sub	r12,-48
800066d8:	0a cc       	st.b	r5++,r12
800066da:	02 36       	cp.w	r6,r1
800066dc:	c0 a4       	brge	800066f0 <_dtoa_r+0xb1c>
800066de:	00 9b       	mov	r11,r0
800066e0:	30 09       	mov	r9,0
800066e2:	30 aa       	mov	r10,10
800066e4:	0e 9c       	mov	r12,r7
800066e6:	2f f6       	sub	r6,-1
800066e8:	e0 a0 09 2e 	rcall	80007944 <__multadd>
800066ec:	18 90       	mov	r0,r12
800066ee:	cf 0b       	rjmp	800066ce <_dtoa_r+0xafa>
800066f0:	08 96       	mov	r6,r4
800066f2:	30 0b       	mov	r11,0
800066f4:	06 94       	mov	r4,r3
800066f6:	50 4b       	stdsp	sp[0x10],r11
800066f8:	00 93       	mov	r3,r0
800066fa:	18 90       	mov	r0,r12
800066fc:	c0 28       	rjmp	80006700 <_dtoa_r+0xb2c>
800066fe:	40 26       	lddsp	r6,sp[0x8]
80006700:	06 9b       	mov	r11,r3
80006702:	30 1a       	mov	r10,1
80006704:	0e 9c       	mov	r12,r7
80006706:	e0 a0 08 53 	rcall	800077ac <__lshift>
8000670a:	04 9b       	mov	r11,r2
8000670c:	18 93       	mov	r3,r12
8000670e:	e0 a0 07 2b 	rcall	80007564 <__mcmp>
80006712:	e0 89 00 12 	brgt	80006736 <_dtoa_r+0xb62>
80006716:	c1 b1       	brne	8000674c <_dtoa_r+0xb78>
80006718:	e1 d0 c0 01 	bfextu	r0,r0,0x0,0x1
8000671c:	c0 d1       	brne	80006736 <_dtoa_r+0xb62>
8000671e:	c1 78       	rjmp	8000674c <_dtoa_r+0xb78>
80006720:	40 89       	lddsp	r9,sp[0x20]
80006722:	12 38       	cp.w	r8,r9
80006724:	c0 30       	breq	8000672a <_dtoa_r+0xb56>
80006726:	10 95       	mov	r5,r8
80006728:	c0 88       	rjmp	80006738 <_dtoa_r+0xb64>
8000672a:	2f f6       	sub	r6,-1
8000672c:	50 66       	stdsp	sp[0x18],r6
8000672e:	33 18       	mov	r8,49
80006730:	40 8c       	lddsp	r12,sp[0x20]
80006732:	b8 88       	st.b	r12[0x0],r8
80006734:	c1 38       	rjmp	8000675a <_dtoa_r+0xb86>
80006736:	33 9a       	mov	r10,57
80006738:	0a 98       	mov	r8,r5
8000673a:	11 79       	ld.ub	r9,--r8
8000673c:	f4 09 18 00 	cp.b	r9,r10
80006740:	cf 00       	breq	80006720 <_dtoa_r+0xb4c>
80006742:	2f f9       	sub	r9,-1
80006744:	b0 89       	st.b	r8[0x0],r9
80006746:	c0 98       	rjmp	80006758 <_dtoa_r+0xb84>
80006748:	10 95       	mov	r5,r8
8000674a:	c0 28       	rjmp	8000674e <_dtoa_r+0xb7a>
8000674c:	33 09       	mov	r9,48
8000674e:	0a 98       	mov	r8,r5
80006750:	11 7a       	ld.ub	r10,--r8
80006752:	f2 0a 18 00 	cp.b	r10,r9
80006756:	cf 90       	breq	80006748 <_dtoa_r+0xb74>
80006758:	50 66       	stdsp	sp[0x18],r6
8000675a:	04 9b       	mov	r11,r2
8000675c:	0e 9c       	mov	r12,r7
8000675e:	e0 a0 07 1d 	rcall	80007598 <_Bfree>
80006762:	58 04       	cp.w	r4,0
80006764:	c1 20       	breq	80006788 <_dtoa_r+0xbb4>
80006766:	40 4b       	lddsp	r11,sp[0x10]
80006768:	08 3b       	cp.w	r11,r4
8000676a:	5f 19       	srne	r9
8000676c:	58 0b       	cp.w	r11,0
8000676e:	5f 18       	srne	r8
80006770:	f3 e8 00 08 	and	r8,r9,r8
80006774:	c0 40       	breq	8000677c <_dtoa_r+0xba8>
80006776:	0e 9c       	mov	r12,r7
80006778:	e0 a0 07 10 	rcall	80007598 <_Bfree>
8000677c:	08 9b       	mov	r11,r4
8000677e:	0e 9c       	mov	r12,r7
80006780:	e0 a0 07 0c 	rcall	80007598 <_Bfree>
80006784:	c0 28       	rjmp	80006788 <_dtoa_r+0xbb4>
80006786:	50 66       	stdsp	sp[0x18],r6
80006788:	0e 9c       	mov	r12,r7
8000678a:	06 9b       	mov	r11,r3
8000678c:	e0 a0 07 06 	rcall	80007598 <_Bfree>
80006790:	30 08       	mov	r8,0
80006792:	aa 88       	st.b	r5[0x0],r8
80006794:	40 68       	lddsp	r8,sp[0x18]
80006796:	41 5a       	lddsp	r10,sp[0x54]
80006798:	2f f8       	sub	r8,-1
8000679a:	41 29       	lddsp	r9,sp[0x48]
8000679c:	95 08       	st.w	r10[0x0],r8
8000679e:	40 8c       	lddsp	r12,sp[0x20]
800067a0:	58 09       	cp.w	r9,0
800067a2:	fb f8 10 12 	ld.wne	r8,sp[0x48]
800067a6:	f1 f5 1a 00 	st.wne	r8[0x0],r5
800067aa:	2e 6d       	sub	sp,-104
800067ac:	d8 32       	popm	r0-r7,pc
800067ae:	d7 03       	nop

800067b0 <_fflush_r>:
800067b0:	d4 21       	pushm	r4-r7,lr
800067b2:	16 97       	mov	r7,r11
800067b4:	18 96       	mov	r6,r12
800067b6:	76 48       	ld.w	r8,r11[0x10]
800067b8:	58 08       	cp.w	r8,0
800067ba:	c7 f0       	breq	800068b8 <_fflush_r+0x108>
800067bc:	58 0c       	cp.w	r12,0
800067be:	c0 50       	breq	800067c8 <_fflush_r+0x18>
800067c0:	78 68       	ld.w	r8,r12[0x18]
800067c2:	58 08       	cp.w	r8,0
800067c4:	c0 21       	brne	800067c8 <_fflush_r+0x18>
800067c6:	cc dc       	rcall	80006960 <__sinit>
800067c8:	fe c8 d0 14 	sub	r8,pc,-12268
800067cc:	10 37       	cp.w	r7,r8
800067ce:	c0 31       	brne	800067d4 <_fflush_r+0x24>
800067d0:	6c 07       	ld.w	r7,r6[0x0]
800067d2:	c0 c8       	rjmp	800067ea <_fflush_r+0x3a>
800067d4:	fe c8 d0 00 	sub	r8,pc,-12288
800067d8:	10 37       	cp.w	r7,r8
800067da:	c0 31       	brne	800067e0 <_fflush_r+0x30>
800067dc:	6c 17       	ld.w	r7,r6[0x4]
800067de:	c0 68       	rjmp	800067ea <_fflush_r+0x3a>
800067e0:	fe c8 cf ec 	sub	r8,pc,-12308
800067e4:	10 37       	cp.w	r7,r8
800067e6:	ed f7 00 02 	ld.weq	r7,r6[0x8]
800067ea:	8e 6a       	ld.sh	r10,r7[0xc]
800067ec:	14 98       	mov	r8,r10
800067ee:	ed ba 00 03 	bld	r10,0x3
800067f2:	c4 20       	breq	80006876 <_fflush_r+0xc6>
800067f4:	ab ba       	sbr	r10,0xb
800067f6:	ae 6a       	st.h	r7[0xc],r10
800067f8:	6e 18       	ld.w	r8,r7[0x4]
800067fa:	58 08       	cp.w	r8,0
800067fc:	e0 89 00 06 	brgt	80006808 <_fflush_r+0x58>
80006800:	6f 08       	ld.w	r8,r7[0x40]
80006802:	58 08       	cp.w	r8,0
80006804:	e0 8a 00 5a 	brle	800068b8 <_fflush_r+0x108>
80006808:	6e b8       	ld.w	r8,r7[0x2c]
8000680a:	58 08       	cp.w	r8,0
8000680c:	c5 60       	breq	800068b8 <_fflush_r+0x108>
8000680e:	e2 1a 10 00 	andl	r10,0x1000,COH
80006812:	c0 30       	breq	80006818 <_fflush_r+0x68>
80006814:	6f 55       	ld.w	r5,r7[0x54]
80006816:	c0 f8       	rjmp	80006834 <_fflush_r+0x84>
80006818:	30 19       	mov	r9,1
8000681a:	6e 8b       	ld.w	r11,r7[0x20]
8000681c:	0c 9c       	mov	r12,r6
8000681e:	5d 18       	icall	r8
80006820:	18 95       	mov	r5,r12
80006822:	5b fc       	cp.w	r12,-1
80006824:	c0 81       	brne	80006834 <_fflush_r+0x84>
80006826:	6c 38       	ld.w	r8,r6[0xc]
80006828:	59 d8       	cp.w	r8,29
8000682a:	c4 70       	breq	800068b8 <_fflush_r+0x108>
8000682c:	8e 68       	ld.sh	r8,r7[0xc]
8000682e:	a7 a8       	sbr	r8,0x6
80006830:	ae 68       	st.h	r7[0xc],r8
80006832:	d8 22       	popm	r4-r7,pc
80006834:	8e 68       	ld.sh	r8,r7[0xc]
80006836:	ed b8 00 02 	bld	r8,0x2
8000683a:	c0 91       	brne	8000684c <_fflush_r+0x9c>
8000683c:	6e 18       	ld.w	r8,r7[0x4]
8000683e:	10 15       	sub	r5,r8
80006840:	6e d8       	ld.w	r8,r7[0x34]
80006842:	58 08       	cp.w	r8,0
80006844:	ef f8 10 10 	ld.wne	r8,r7[0x40]
80006848:	eb d8 e1 15 	subne	r5,r5,r8
8000684c:	6e b8       	ld.w	r8,r7[0x2c]
8000684e:	0c 9c       	mov	r12,r6
80006850:	30 09       	mov	r9,0
80006852:	0a 9a       	mov	r10,r5
80006854:	6e 8b       	ld.w	r11,r7[0x20]
80006856:	5d 18       	icall	r8
80006858:	8e 68       	ld.sh	r8,r7[0xc]
8000685a:	0a 3c       	cp.w	r12,r5
8000685c:	c2 61       	brne	800068a8 <_fflush_r+0xf8>
8000685e:	ab d8       	cbr	r8,0xb
80006860:	30 0c       	mov	r12,0
80006862:	6e 49       	ld.w	r9,r7[0x10]
80006864:	ae 68       	st.h	r7[0xc],r8
80006866:	8f 1c       	st.w	r7[0x4],r12
80006868:	8f 09       	st.w	r7[0x0],r9
8000686a:	ed b8 00 0c 	bld	r8,0xc
8000686e:	c2 51       	brne	800068b8 <_fflush_r+0x108>
80006870:	ef 45 00 54 	st.w	r7[84],r5
80006874:	d8 22       	popm	r4-r7,pc
80006876:	6e 45       	ld.w	r5,r7[0x10]
80006878:	58 05       	cp.w	r5,0
8000687a:	c1 f0       	breq	800068b8 <_fflush_r+0x108>
8000687c:	6e 04       	ld.w	r4,r7[0x0]
8000687e:	f5 da c0 02 	bfextu	r10,r10,0x0,0x2
80006882:	8f 05       	st.w	r7[0x0],r5
80006884:	f9 b8 01 00 	movne	r8,0
80006888:	ef f8 00 05 	ld.weq	r8,r7[0x14]
8000688c:	0a 14       	sub	r4,r5
8000688e:	8f 28       	st.w	r7[0x8],r8
80006890:	c1 18       	rjmp	800068b2 <_fflush_r+0x102>
80006892:	08 99       	mov	r9,r4
80006894:	0a 9a       	mov	r10,r5
80006896:	6e a8       	ld.w	r8,r7[0x28]
80006898:	6e 8b       	ld.w	r11,r7[0x20]
8000689a:	0c 9c       	mov	r12,r6
8000689c:	5d 18       	icall	r8
8000689e:	18 14       	sub	r4,r12
800068a0:	58 0c       	cp.w	r12,0
800068a2:	e0 89 00 07 	brgt	800068b0 <_fflush_r+0x100>
800068a6:	8e 68       	ld.sh	r8,r7[0xc]
800068a8:	a7 a8       	sbr	r8,0x6
800068aa:	3f fc       	mov	r12,-1
800068ac:	ae 68       	st.h	r7[0xc],r8
800068ae:	d8 22       	popm	r4-r7,pc
800068b0:	18 05       	add	r5,r12
800068b2:	58 04       	cp.w	r4,0
800068b4:	fe 99 ff ef 	brgt	80006892 <_fflush_r+0xe2>
800068b8:	d8 2a       	popm	r4-r7,pc,r12=0
800068ba:	d7 03       	nop

800068bc <__sfp_lock_acquire>:
800068bc:	5e fc       	retal	r12

800068be <__sfp_lock_release>:
800068be:	5e fc       	retal	r12

800068c0 <_cleanup_r>:
800068c0:	d4 01       	pushm	lr
800068c2:	fe cb e8 6a 	sub	r11,pc,-6038
800068c6:	e0 a0 02 fd 	rcall	80006ec0 <_fwalk>
800068ca:	d8 02       	popm	pc

800068cc <__sfmoreglue>:
800068cc:	d4 21       	pushm	r4-r7,lr
800068ce:	16 95       	mov	r5,r11
800068d0:	f6 06 10 5c 	mul	r6,r11,92
800068d4:	ec cb ff f4 	sub	r11,r6,-12
800068d8:	e0 a0 03 84 	rcall	80006fe0 <_malloc_r>
800068dc:	18 97       	mov	r7,r12
800068de:	c0 90       	breq	800068f0 <__sfmoreglue+0x24>
800068e0:	99 15       	st.w	r12[0x4],r5
800068e2:	30 0b       	mov	r11,0
800068e4:	2f 4c       	sub	r12,-12
800068e6:	0c 9a       	mov	r10,r6
800068e8:	8f 2c       	st.w	r7[0x8],r12
800068ea:	8f 0b       	st.w	r7[0x0],r11
800068ec:	e0 a0 05 bc 	rcall	80007464 <memset>
800068f0:	0e 9c       	mov	r12,r7
800068f2:	d8 22       	popm	r4-r7,pc

800068f4 <__sfp>:
800068f4:	d4 21       	pushm	r4-r7,lr
800068f6:	fe c8 d5 2a 	sub	r8,pc,-10966
800068fa:	18 96       	mov	r6,r12
800068fc:	70 07       	ld.w	r7,r8[0x0]
800068fe:	6e 68       	ld.w	r8,r7[0x18]
80006900:	58 08       	cp.w	r8,0
80006902:	c0 31       	brne	80006908 <__sfp+0x14>
80006904:	0e 9c       	mov	r12,r7
80006906:	c2 dc       	rcall	80006960 <__sinit>
80006908:	ee c7 ff 28 	sub	r7,r7,-216
8000690c:	30 05       	mov	r5,0
8000690e:	6e 2c       	ld.w	r12,r7[0x8]
80006910:	6e 18       	ld.w	r8,r7[0x4]
80006912:	c0 68       	rjmp	8000691e <__sfp+0x2a>
80006914:	98 69       	ld.sh	r9,r12[0xc]
80006916:	ea 09 19 00 	cp.h	r9,r5
8000691a:	c1 10       	breq	8000693c <__sfp+0x48>
8000691c:	2a 4c       	sub	r12,-92
8000691e:	20 18       	sub	r8,1
80006920:	cf a7       	brpl	80006914 <__sfp+0x20>
80006922:	6e 08       	ld.w	r8,r7[0x0]
80006924:	58 08       	cp.w	r8,0
80006926:	c0 61       	brne	80006932 <__sfp+0x3e>
80006928:	30 4b       	mov	r11,4
8000692a:	0c 9c       	mov	r12,r6
8000692c:	cd 0f       	rcall	800068cc <__sfmoreglue>
8000692e:	8f 0c       	st.w	r7[0x0],r12
80006930:	c0 30       	breq	80006936 <__sfp+0x42>
80006932:	6e 07       	ld.w	r7,r7[0x0]
80006934:	ce db       	rjmp	8000690e <__sfp+0x1a>
80006936:	30 c8       	mov	r8,12
80006938:	8d 38       	st.w	r6[0xc],r8
8000693a:	d8 22       	popm	r4-r7,pc
8000693c:	30 08       	mov	r8,0
8000693e:	f9 48 00 4c 	st.w	r12[76],r8
80006942:	99 08       	st.w	r12[0x0],r8
80006944:	99 28       	st.w	r12[0x8],r8
80006946:	99 18       	st.w	r12[0x4],r8
80006948:	99 48       	st.w	r12[0x10],r8
8000694a:	99 58       	st.w	r12[0x14],r8
8000694c:	99 68       	st.w	r12[0x18],r8
8000694e:	99 d8       	st.w	r12[0x34],r8
80006950:	99 e8       	st.w	r12[0x38],r8
80006952:	f9 48 00 48 	st.w	r12[72],r8
80006956:	3f f8       	mov	r8,-1
80006958:	b8 78       	st.h	r12[0xe],r8
8000695a:	30 18       	mov	r8,1
8000695c:	b8 68       	st.h	r12[0xc],r8
8000695e:	d8 22       	popm	r4-r7,pc

80006960 <__sinit>:
80006960:	d4 21       	pushm	r4-r7,lr
80006962:	18 96       	mov	r6,r12
80006964:	78 67       	ld.w	r7,r12[0x18]
80006966:	58 07       	cp.w	r7,0
80006968:	c4 91       	brne	800069fa <__sinit+0x9a>
8000696a:	fe c8 00 aa 	sub	r8,pc,170
8000696e:	30 15       	mov	r5,1
80006970:	99 a8       	st.w	r12[0x28],r8
80006972:	f9 47 00 d8 	st.w	r12[216],r7
80006976:	f9 47 00 dc 	st.w	r12[220],r7
8000697a:	f9 47 00 e0 	st.w	r12[224],r7
8000697e:	99 65       	st.w	r12[0x18],r5
80006980:	cb af       	rcall	800068f4 <__sfp>
80006982:	8d 0c       	st.w	r6[0x0],r12
80006984:	0c 9c       	mov	r12,r6
80006986:	cb 7f       	rcall	800068f4 <__sfp>
80006988:	8d 1c       	st.w	r6[0x4],r12
8000698a:	0c 9c       	mov	r12,r6
8000698c:	cb 4f       	rcall	800068f4 <__sfp>
8000698e:	6c 09       	ld.w	r9,r6[0x0]
80006990:	30 48       	mov	r8,4
80006992:	93 07       	st.w	r9[0x0],r7
80006994:	b2 68       	st.h	r9[0xc],r8
80006996:	93 17       	st.w	r9[0x4],r7
80006998:	93 27       	st.w	r9[0x8],r7
8000699a:	6c 18       	ld.w	r8,r6[0x4]
8000699c:	b2 77       	st.h	r9[0xe],r7
8000699e:	93 47       	st.w	r9[0x10],r7
800069a0:	93 57       	st.w	r9[0x14],r7
800069a2:	93 67       	st.w	r9[0x18],r7
800069a4:	93 89       	st.w	r9[0x20],r9
800069a6:	91 07       	st.w	r8[0x0],r7
800069a8:	91 17       	st.w	r8[0x4],r7
800069aa:	91 27       	st.w	r8[0x8],r7
800069ac:	fe ce eb e4 	sub	lr,pc,-5148
800069b0:	fe cb ec 14 	sub	r11,pc,-5100
800069b4:	93 9e       	st.w	r9[0x24],lr
800069b6:	93 ab       	st.w	r9[0x28],r11
800069b8:	fe ca ec 3c 	sub	r10,pc,-5060
800069bc:	fe c4 ec 48 	sub	r4,pc,-5048
800069c0:	93 ba       	st.w	r9[0x2c],r10
800069c2:	93 c4       	st.w	r9[0x30],r4
800069c4:	30 99       	mov	r9,9
800069c6:	b0 69       	st.h	r8[0xc],r9
800069c8:	b0 75       	st.h	r8[0xe],r5
800069ca:	91 c4       	st.w	r8[0x30],r4
800069cc:	91 47       	st.w	r8[0x10],r7
800069ce:	91 57       	st.w	r8[0x14],r7
800069d0:	91 67       	st.w	r8[0x18],r7
800069d2:	91 88       	st.w	r8[0x20],r8
800069d4:	91 9e       	st.w	r8[0x24],lr
800069d6:	91 ab       	st.w	r8[0x28],r11
800069d8:	91 ba       	st.w	r8[0x2c],r10
800069da:	8d 2c       	st.w	r6[0x8],r12
800069dc:	31 28       	mov	r8,18
800069de:	99 07       	st.w	r12[0x0],r7
800069e0:	b8 68       	st.h	r12[0xc],r8
800069e2:	99 17       	st.w	r12[0x4],r7
800069e4:	99 27       	st.w	r12[0x8],r7
800069e6:	30 28       	mov	r8,2
800069e8:	b8 78       	st.h	r12[0xe],r8
800069ea:	99 c4       	st.w	r12[0x30],r4
800069ec:	99 67       	st.w	r12[0x18],r7
800069ee:	99 9e       	st.w	r12[0x24],lr
800069f0:	99 ab       	st.w	r12[0x28],r11
800069f2:	99 ba       	st.w	r12[0x2c],r10
800069f4:	99 47       	st.w	r12[0x10],r7
800069f6:	99 57       	st.w	r12[0x14],r7
800069f8:	99 8c       	st.w	r12[0x20],r12
800069fa:	d8 22       	popm	r4-r7,pc

800069fc <_malloc_trim_r>:
800069fc:	d4 21       	pushm	r4-r7,lr
800069fe:	16 95       	mov	r5,r11
80006a00:	18 97       	mov	r7,r12
80006a02:	e0 a0 05 38 	rcall	80007472 <__malloc_lock>
80006a06:	e0 64 01 08 	mov	r4,264
80006a0a:	68 28       	ld.w	r8,r4[0x8]
80006a0c:	70 16       	ld.w	r6,r8[0x4]
80006a0e:	e0 16 ff fc 	andl	r6,0xfffc
80006a12:	ec c8 ff 91 	sub	r8,r6,-111
80006a16:	f0 05 01 05 	sub	r5,r8,r5
80006a1a:	e0 15 ff 80 	andl	r5,0xff80
80006a1e:	ea c5 00 80 	sub	r5,r5,128
80006a22:	e0 45 00 7f 	cp.w	r5,127
80006a26:	e0 8a 00 25 	brle	80006a70 <_malloc_trim_r+0x74>
80006a2a:	30 0b       	mov	r11,0
80006a2c:	0e 9c       	mov	r12,r7
80006a2e:	e0 a0 09 93 	rcall	80007d54 <_sbrk_r>
80006a32:	68 28       	ld.w	r8,r4[0x8]
80006a34:	0c 08       	add	r8,r6
80006a36:	10 3c       	cp.w	r12,r8
80006a38:	c1 c1       	brne	80006a70 <_malloc_trim_r+0x74>
80006a3a:	ea 0b 11 00 	rsub	r11,r5,0
80006a3e:	0e 9c       	mov	r12,r7
80006a40:	e0 a0 09 8a 	rcall	80007d54 <_sbrk_r>
80006a44:	5b fc       	cp.w	r12,-1
80006a46:	c1 91       	brne	80006a78 <_malloc_trim_r+0x7c>
80006a48:	30 0b       	mov	r11,0
80006a4a:	0e 9c       	mov	r12,r7
80006a4c:	e0 a0 09 84 	rcall	80007d54 <_sbrk_r>
80006a50:	68 28       	ld.w	r8,r4[0x8]
80006a52:	f8 08 01 09 	sub	r9,r12,r8
80006a56:	58 f9       	cp.w	r9,15
80006a58:	e0 8a 00 0c 	brle	80006a70 <_malloc_trim_r+0x74>
80006a5c:	a1 a9       	sbr	r9,0x0
80006a5e:	91 19       	st.w	r8[0x4],r9
80006a60:	e0 68 05 14 	mov	r8,1300
80006a64:	70 09       	ld.w	r9,r8[0x0]
80006a66:	e0 68 06 34 	mov	r8,1588
80006a6a:	f8 09 01 09 	sub	r9,r12,r9
80006a6e:	91 09       	st.w	r8[0x0],r9
80006a70:	0e 9c       	mov	r12,r7
80006a72:	e0 a0 05 01 	rcall	80007474 <__malloc_unlock>
80006a76:	d8 2a       	popm	r4-r7,pc,r12=0
80006a78:	68 28       	ld.w	r8,r4[0x8]
80006a7a:	0a 16       	sub	r6,r5
80006a7c:	a1 a6       	sbr	r6,0x0
80006a7e:	91 16       	st.w	r8[0x4],r6
80006a80:	e0 68 06 34 	mov	r8,1588
80006a84:	70 09       	ld.w	r9,r8[0x0]
80006a86:	0a 19       	sub	r9,r5
80006a88:	0e 9c       	mov	r12,r7
80006a8a:	91 09       	st.w	r8[0x0],r9
80006a8c:	e0 a0 04 f4 	rcall	80007474 <__malloc_unlock>
80006a90:	da 2a       	popm	r4-r7,pc,r12=1
80006a92:	d7 03       	nop

80006a94 <_free_r>:
80006a94:	d4 21       	pushm	r4-r7,lr
80006a96:	16 96       	mov	r6,r11
80006a98:	18 97       	mov	r7,r12
80006a9a:	58 0b       	cp.w	r11,0
80006a9c:	e0 80 00 c0 	breq	80006c1c <_free_r+0x188>
80006aa0:	e0 a0 04 e9 	rcall	80007472 <__malloc_lock>
80006aa4:	20 86       	sub	r6,8
80006aa6:	e0 6a 01 08 	mov	r10,264
80006aaa:	6c 18       	ld.w	r8,r6[0x4]
80006aac:	74 2e       	ld.w	lr,r10[0x8]
80006aae:	f9 d8 c0 01 	bfextu	r12,r8,0x0,0x1
80006ab2:	a1 c8       	cbr	r8,0x0
80006ab4:	ec 08 00 09 	add	r9,r6,r8
80006ab8:	72 1b       	ld.w	r11,r9[0x4]
80006aba:	e0 1b ff fc 	andl	r11,0xfffc
80006abe:	1c 39       	cp.w	r9,lr
80006ac0:	c1 e1       	brne	80006afc <_free_r+0x68>
80006ac2:	f6 08 00 08 	add	r8,r11,r8
80006ac6:	58 0c       	cp.w	r12,0
80006ac8:	c0 81       	brne	80006ad8 <_free_r+0x44>
80006aca:	6c 09       	ld.w	r9,r6[0x0]
80006acc:	12 16       	sub	r6,r9
80006ace:	12 08       	add	r8,r9
80006ad0:	6c 3b       	ld.w	r11,r6[0xc]
80006ad2:	6c 29       	ld.w	r9,r6[0x8]
80006ad4:	97 29       	st.w	r11[0x8],r9
80006ad6:	93 3b       	st.w	r9[0xc],r11
80006ad8:	10 99       	mov	r9,r8
80006ada:	95 26       	st.w	r10[0x8],r6
80006adc:	a1 a9       	sbr	r9,0x0
80006ade:	8d 19       	st.w	r6[0x4],r9
80006ae0:	e0 69 05 10 	mov	r9,1296
80006ae4:	72 09       	ld.w	r9,r9[0x0]
80006ae6:	12 38       	cp.w	r8,r9
80006ae8:	c0 63       	brcs	80006af4 <_free_r+0x60>
80006aea:	e0 68 06 30 	mov	r8,1584
80006aee:	0e 9c       	mov	r12,r7
80006af0:	70 0b       	ld.w	r11,r8[0x0]
80006af2:	c8 5f       	rcall	800069fc <_malloc_trim_r>
80006af4:	0e 9c       	mov	r12,r7
80006af6:	e0 a0 04 bf 	rcall	80007474 <__malloc_unlock>
80006afa:	d8 22       	popm	r4-r7,pc
80006afc:	93 1b       	st.w	r9[0x4],r11
80006afe:	58 0c       	cp.w	r12,0
80006b00:	c0 30       	breq	80006b06 <_free_r+0x72>
80006b02:	30 0c       	mov	r12,0
80006b04:	c1 08       	rjmp	80006b24 <_free_r+0x90>
80006b06:	6c 0e       	ld.w	lr,r6[0x0]
80006b08:	f4 c5 ff f8 	sub	r5,r10,-8
80006b0c:	1c 16       	sub	r6,lr
80006b0e:	1c 08       	add	r8,lr
80006b10:	6c 2e       	ld.w	lr,r6[0x8]
80006b12:	0a 3e       	cp.w	lr,r5
80006b14:	f9 bc 00 01 	moveq	r12,1
80006b18:	ed f5 10 03 	ld.wne	r5,r6[0xc]
80006b1c:	eb fe 1a 02 	st.wne	r5[0x8],lr
80006b20:	fd f5 1a 03 	st.wne	lr[0xc],r5
80006b24:	f2 0b 00 0e 	add	lr,r9,r11
80006b28:	7c 1e       	ld.w	lr,lr[0x4]
80006b2a:	ed be 00 00 	bld	lr,0x0
80006b2e:	c1 40       	breq	80006b56 <_free_r+0xc2>
80006b30:	16 08       	add	r8,r11
80006b32:	58 0c       	cp.w	r12,0
80006b34:	c0 d1       	brne	80006b4e <_free_r+0xba>
80006b36:	e0 6e 01 08 	mov	lr,264
80006b3a:	72 2b       	ld.w	r11,r9[0x8]
80006b3c:	2f 8e       	sub	lr,-8
80006b3e:	1c 3b       	cp.w	r11,lr
80006b40:	c0 71       	brne	80006b4e <_free_r+0xba>
80006b42:	97 36       	st.w	r11[0xc],r6
80006b44:	97 26       	st.w	r11[0x8],r6
80006b46:	8d 2b       	st.w	r6[0x8],r11
80006b48:	8d 3b       	st.w	r6[0xc],r11
80006b4a:	30 1c       	mov	r12,1
80006b4c:	c0 58       	rjmp	80006b56 <_free_r+0xc2>
80006b4e:	72 2b       	ld.w	r11,r9[0x8]
80006b50:	72 39       	ld.w	r9,r9[0xc]
80006b52:	93 2b       	st.w	r9[0x8],r11
80006b54:	97 39       	st.w	r11[0xc],r9
80006b56:	10 99       	mov	r9,r8
80006b58:	ec 08 09 08 	st.w	r6[r8],r8
80006b5c:	a1 a9       	sbr	r9,0x0
80006b5e:	8d 19       	st.w	r6[0x4],r9
80006b60:	58 0c       	cp.w	r12,0
80006b62:	c5 a1       	brne	80006c16 <_free_r+0x182>
80006b64:	e0 48 01 ff 	cp.w	r8,511
80006b68:	e0 8b 00 13 	brhi	80006b8e <_free_r+0xfa>
80006b6c:	a3 98       	lsr	r8,0x3
80006b6e:	f4 08 00 39 	add	r9,r10,r8<<0x3
80006b72:	72 2b       	ld.w	r11,r9[0x8]
80006b74:	8d 39       	st.w	r6[0xc],r9
80006b76:	8d 2b       	st.w	r6[0x8],r11
80006b78:	97 36       	st.w	r11[0xc],r6
80006b7a:	93 26       	st.w	r9[0x8],r6
80006b7c:	a3 48       	asr	r8,0x2
80006b7e:	74 19       	ld.w	r9,r10[0x4]
80006b80:	30 1b       	mov	r11,1
80006b82:	f6 08 09 48 	lsl	r8,r11,r8
80006b86:	f3 e8 10 08 	or	r8,r9,r8
80006b8a:	95 18       	st.w	r10[0x4],r8
80006b8c:	c4 58       	rjmp	80006c16 <_free_r+0x182>
80006b8e:	f0 0b 16 09 	lsr	r11,r8,0x9
80006b92:	58 4b       	cp.w	r11,4
80006b94:	e0 8b 00 06 	brhi	80006ba0 <_free_r+0x10c>
80006b98:	f0 0b 16 06 	lsr	r11,r8,0x6
80006b9c:	2c 8b       	sub	r11,-56
80006b9e:	c2 08       	rjmp	80006bde <_free_r+0x14a>
80006ba0:	59 4b       	cp.w	r11,20
80006ba2:	e0 8b 00 04 	brhi	80006baa <_free_r+0x116>
80006ba6:	2a 5b       	sub	r11,-91
80006ba8:	c1 b8       	rjmp	80006bde <_free_r+0x14a>
80006baa:	e0 4b 00 54 	cp.w	r11,84
80006bae:	e0 8b 00 06 	brhi	80006bba <_free_r+0x126>
80006bb2:	f0 0b 16 0c 	lsr	r11,r8,0xc
80006bb6:	29 2b       	sub	r11,-110
80006bb8:	c1 38       	rjmp	80006bde <_free_r+0x14a>
80006bba:	e0 4b 01 54 	cp.w	r11,340
80006bbe:	e0 8b 00 06 	brhi	80006bca <_free_r+0x136>
80006bc2:	f0 0b 16 0f 	lsr	r11,r8,0xf
80006bc6:	28 9b       	sub	r11,-119
80006bc8:	c0 b8       	rjmp	80006bde <_free_r+0x14a>
80006bca:	e0 4b 05 54 	cp.w	r11,1364
80006bce:	e0 88 00 05 	brls	80006bd8 <_free_r+0x144>
80006bd2:	37 eb       	mov	r11,126
80006bd4:	c0 58       	rjmp	80006bde <_free_r+0x14a>
80006bd6:	d7 03       	nop
80006bd8:	f0 0b 16 12 	lsr	r11,r8,0x12
80006bdc:	28 4b       	sub	r11,-124
80006bde:	f4 0b 00 3c 	add	r12,r10,r11<<0x3
80006be2:	78 29       	ld.w	r9,r12[0x8]
80006be4:	18 39       	cp.w	r9,r12
80006be6:	c0 e1       	brne	80006c02 <_free_r+0x16e>
80006be8:	74 18       	ld.w	r8,r10[0x4]
80006bea:	a3 4b       	asr	r11,0x2
80006bec:	30 1c       	mov	r12,1
80006bee:	f8 0b 09 4b 	lsl	r11,r12,r11
80006bf2:	f1 eb 10 0b 	or	r11,r8,r11
80006bf6:	12 98       	mov	r8,r9
80006bf8:	95 1b       	st.w	r10[0x4],r11
80006bfa:	c0 a8       	rjmp	80006c0e <_free_r+0x17a>
80006bfc:	72 29       	ld.w	r9,r9[0x8]
80006bfe:	18 39       	cp.w	r9,r12
80006c00:	c0 60       	breq	80006c0c <_free_r+0x178>
80006c02:	72 1a       	ld.w	r10,r9[0x4]
80006c04:	e0 1a ff fc 	andl	r10,0xfffc
80006c08:	14 38       	cp.w	r8,r10
80006c0a:	cf 93       	brcs	80006bfc <_free_r+0x168>
80006c0c:	72 38       	ld.w	r8,r9[0xc]
80006c0e:	8d 38       	st.w	r6[0xc],r8
80006c10:	8d 29       	st.w	r6[0x8],r9
80006c12:	93 36       	st.w	r9[0xc],r6
80006c14:	91 26       	st.w	r8[0x8],r6
80006c16:	0e 9c       	mov	r12,r7
80006c18:	e0 a0 04 2e 	rcall	80007474 <__malloc_unlock>
80006c1c:	d8 22       	popm	r4-r7,pc
80006c1e:	d7 03       	nop

80006c20 <__sfvwrite_r>:
80006c20:	d4 31       	pushm	r0-r7,lr
80006c22:	20 3d       	sub	sp,12
80006c24:	14 94       	mov	r4,r10
80006c26:	18 95       	mov	r5,r12
80006c28:	16 97       	mov	r7,r11
80006c2a:	74 28       	ld.w	r8,r10[0x8]
80006c2c:	58 08       	cp.w	r8,0
80006c2e:	e0 80 01 45 	breq	80006eb8 <__sfvwrite_r+0x298>
80006c32:	96 68       	ld.sh	r8,r11[0xc]
80006c34:	ed b8 00 03 	bld	r8,0x3
80006c38:	c0 41       	brne	80006c40 <__sfvwrite_r+0x20>
80006c3a:	76 48       	ld.w	r8,r11[0x10]
80006c3c:	58 08       	cp.w	r8,0
80006c3e:	c0 c1       	brne	80006c56 <__sfvwrite_r+0x36>
80006c40:	0e 9b       	mov	r11,r7
80006c42:	0a 9c       	mov	r12,r5
80006c44:	fe b0 f6 ca 	rcall	800059d8 <__swsetup_r>
80006c48:	c0 70       	breq	80006c56 <__sfvwrite_r+0x36>
80006c4a:	8e 68       	ld.sh	r8,r7[0xc]
80006c4c:	a7 a8       	sbr	r8,0x6
80006c4e:	ae 68       	st.h	r7[0xc],r8
80006c50:	30 98       	mov	r8,9
80006c52:	8b 38       	st.w	r5[0xc],r8
80006c54:	c3 09       	rjmp	80006eb4 <__sfvwrite_r+0x294>
80006c56:	8e 63       	ld.sh	r3,r7[0xc]
80006c58:	68 00       	ld.w	r0,r4[0x0]
80006c5a:	06 96       	mov	r6,r3
80006c5c:	e2 16 00 02 	andl	r6,0x2,COH
80006c60:	c2 10       	breq	80006ca2 <__sfvwrite_r+0x82>
80006c62:	30 03       	mov	r3,0
80006c64:	e0 62 04 00 	mov	r2,1024
80006c68:	06 96       	mov	r6,r3
80006c6a:	c0 48       	rjmp	80006c72 <__sfvwrite_r+0x52>
80006c6c:	60 03       	ld.w	r3,r0[0x0]
80006c6e:	60 16       	ld.w	r6,r0[0x4]
80006c70:	2f 80       	sub	r0,-8
80006c72:	58 06       	cp.w	r6,0
80006c74:	cf c0       	breq	80006c6c <__sfvwrite_r+0x4c>
80006c76:	e0 46 04 00 	cp.w	r6,1024
80006c7a:	ec 09 17 80 	movls	r9,r6
80006c7e:	e4 09 17 b0 	movhi	r9,r2
80006c82:	06 9a       	mov	r10,r3
80006c84:	6e a8       	ld.w	r8,r7[0x28]
80006c86:	6e 8b       	ld.w	r11,r7[0x20]
80006c88:	0a 9c       	mov	r12,r5
80006c8a:	5d 18       	icall	r8
80006c8c:	18 16       	sub	r6,r12
80006c8e:	58 0c       	cp.w	r12,0
80006c90:	e0 8a 01 0f 	brle	80006eae <__sfvwrite_r+0x28e>
80006c94:	68 28       	ld.w	r8,r4[0x8]
80006c96:	18 18       	sub	r8,r12
80006c98:	89 28       	st.w	r4[0x8],r8
80006c9a:	e0 80 01 0f 	breq	80006eb8 <__sfvwrite_r+0x298>
80006c9e:	18 03       	add	r3,r12
80006ca0:	ce 9b       	rjmp	80006c72 <__sfvwrite_r+0x52>
80006ca2:	e7 d3 c0 01 	bfextu	r3,r3,0x0,0x1
80006ca6:	c0 70       	breq	80006cb4 <__sfvwrite_r+0x94>
80006ca8:	50 06       	stdsp	sp[0x0],r6
80006caa:	0c 93       	mov	r3,r6
80006cac:	0c 91       	mov	r1,r6
80006cae:	50 15       	stdsp	sp[0x4],r5
80006cb0:	08 92       	mov	r2,r4
80006cb2:	c9 e8       	rjmp	80006dee <__sfvwrite_r+0x1ce>
80006cb4:	06 96       	mov	r6,r3
80006cb6:	08 91       	mov	r1,r4
80006cb8:	c0 48       	rjmp	80006cc0 <__sfvwrite_r+0xa0>
80006cba:	60 03       	ld.w	r3,r0[0x0]
80006cbc:	60 16       	ld.w	r6,r0[0x4]
80006cbe:	2f 80       	sub	r0,-8
80006cc0:	58 06       	cp.w	r6,0
80006cc2:	cf c0       	breq	80006cba <__sfvwrite_r+0x9a>
80006cc4:	8e 68       	ld.sh	r8,r7[0xc]
80006cc6:	6e 24       	ld.w	r4,r7[0x8]
80006cc8:	10 99       	mov	r9,r8
80006cca:	e2 19 02 00 	andl	r9,0x200,COH
80006cce:	c5 50       	breq	80006d78 <__sfvwrite_r+0x158>
80006cd0:	08 36       	cp.w	r6,r4
80006cd2:	c4 33       	brcs	80006d58 <__sfvwrite_r+0x138>
80006cd4:	10 99       	mov	r9,r8
80006cd6:	e2 19 04 80 	andl	r9,0x480,COH
80006cda:	c3 f0       	breq	80006d58 <__sfvwrite_r+0x138>
80006cdc:	6e 4b       	ld.w	r11,r7[0x10]
80006cde:	6e 09       	ld.w	r9,r7[0x0]
80006ce0:	16 19       	sub	r9,r11
80006ce2:	50 09       	stdsp	sp[0x0],r9
80006ce4:	6e 59       	ld.w	r9,r7[0x14]
80006ce6:	10 9c       	mov	r12,r8
80006ce8:	f2 09 00 1a 	add	r10,r9,r9<<0x1
80006cec:	30 28       	mov	r8,2
80006cee:	f4 08 0c 08 	divs	r8,r10,r8
80006cf2:	fa e9 00 04 	st.d	sp[4],r8
80006cf6:	10 94       	mov	r4,r8
80006cf8:	40 09       	lddsp	r9,sp[0x0]
80006cfa:	e2 1c 04 00 	andl	r12,0x400,COH
80006cfe:	2f f9       	sub	r9,-1
80006d00:	0c 09       	add	r9,r6
80006d02:	12 38       	cp.w	r8,r9
80006d04:	f2 04 17 30 	movlo	r4,r9
80006d08:	58 0c       	cp.w	r12,0
80006d0a:	c1 00       	breq	80006d2a <__sfvwrite_r+0x10a>
80006d0c:	08 9b       	mov	r11,r4
80006d0e:	0a 9c       	mov	r12,r5
80006d10:	c6 8d       	rcall	80006fe0 <_malloc_r>
80006d12:	18 92       	mov	r2,r12
80006d14:	c1 40       	breq	80006d3c <__sfvwrite_r+0x11c>
80006d16:	40 0a       	lddsp	r10,sp[0x0]
80006d18:	6e 4b       	ld.w	r11,r7[0x10]
80006d1a:	fe b0 e4 79 	rcall	8000360c <memcpy>
80006d1e:	8e 68       	ld.sh	r8,r7[0xc]
80006d20:	e0 18 fb 7f 	andl	r8,0xfb7f
80006d24:	a7 b8       	sbr	r8,0x7
80006d26:	ae 68       	st.h	r7[0xc],r8
80006d28:	c0 d8       	rjmp	80006d42 <__sfvwrite_r+0x122>
80006d2a:	08 9a       	mov	r10,r4
80006d2c:	0a 9c       	mov	r12,r5
80006d2e:	e0 a0 06 8f 	rcall	80007a4c <_realloc_r>
80006d32:	18 92       	mov	r2,r12
80006d34:	c0 71       	brne	80006d42 <__sfvwrite_r+0x122>
80006d36:	6e 4b       	ld.w	r11,r7[0x10]
80006d38:	0a 9c       	mov	r12,r5
80006d3a:	ca de       	rcall	80006a94 <_free_r>
80006d3c:	30 c8       	mov	r8,12
80006d3e:	8b 38       	st.w	r5[0xc],r8
80006d40:	cb 78       	rjmp	80006eae <__sfvwrite_r+0x28e>
80006d42:	40 0a       	lddsp	r10,sp[0x0]
80006d44:	40 09       	lddsp	r9,sp[0x0]
80006d46:	e8 0a 01 0a 	sub	r10,r4,r10
80006d4a:	e4 09 00 08 	add	r8,r2,r9
80006d4e:	8f 54       	st.w	r7[0x14],r4
80006d50:	8f 2a       	st.w	r7[0x8],r10
80006d52:	8f 08       	st.w	r7[0x0],r8
80006d54:	8f 42       	st.w	r7[0x10],r2
80006d56:	0c 94       	mov	r4,r6
80006d58:	08 36       	cp.w	r6,r4
80006d5a:	ec 04 17 30 	movlo	r4,r6
80006d5e:	06 9b       	mov	r11,r3
80006d60:	08 9a       	mov	r10,r4
80006d62:	6e 0c       	ld.w	r12,r7[0x0]
80006d64:	e0 a0 03 61 	rcall	80007426 <memmove>
80006d68:	6e 08       	ld.w	r8,r7[0x0]
80006d6a:	08 08       	add	r8,r4
80006d6c:	8f 08       	st.w	r7[0x0],r8
80006d6e:	6e 28       	ld.w	r8,r7[0x8]
80006d70:	08 18       	sub	r8,r4
80006d72:	0c 94       	mov	r4,r6
80006d74:	8f 28       	st.w	r7[0x8],r8
80006d76:	c3 08       	rjmp	80006dd6 <__sfvwrite_r+0x1b6>
80006d78:	08 36       	cp.w	r6,r4
80006d7a:	5f ba       	srhi	r10
80006d7c:	6e 0c       	ld.w	r12,r7[0x0]
80006d7e:	6e 48       	ld.w	r8,r7[0x10]
80006d80:	10 3c       	cp.w	r12,r8
80006d82:	5f b8       	srhi	r8
80006d84:	f5 e8 00 08 	and	r8,r10,r8
80006d88:	f2 08 18 00 	cp.b	r8,r9
80006d8c:	c0 e0       	breq	80006da8 <__sfvwrite_r+0x188>
80006d8e:	06 9b       	mov	r11,r3
80006d90:	08 9a       	mov	r10,r4
80006d92:	e0 a0 03 4a 	rcall	80007426 <memmove>
80006d96:	6e 08       	ld.w	r8,r7[0x0]
80006d98:	08 08       	add	r8,r4
80006d9a:	0e 9b       	mov	r11,r7
80006d9c:	8f 08       	st.w	r7[0x0],r8
80006d9e:	0a 9c       	mov	r12,r5
80006da0:	fe b0 fd 08 	rcall	800067b0 <_fflush_r>
80006da4:	c1 90       	breq	80006dd6 <__sfvwrite_r+0x1b6>
80006da6:	c8 48       	rjmp	80006eae <__sfvwrite_r+0x28e>
80006da8:	6e 59       	ld.w	r9,r7[0x14]
80006daa:	12 36       	cp.w	r6,r9
80006dac:	c0 a3       	brcs	80006dc0 <__sfvwrite_r+0x1a0>
80006dae:	6e a8       	ld.w	r8,r7[0x28]
80006db0:	06 9a       	mov	r10,r3
80006db2:	6e 8b       	ld.w	r11,r7[0x20]
80006db4:	0a 9c       	mov	r12,r5
80006db6:	5d 18       	icall	r8
80006db8:	18 94       	mov	r4,r12
80006dba:	e0 89 00 0e 	brgt	80006dd6 <__sfvwrite_r+0x1b6>
80006dbe:	c7 88       	rjmp	80006eae <__sfvwrite_r+0x28e>
80006dc0:	0c 9a       	mov	r10,r6
80006dc2:	06 9b       	mov	r11,r3
80006dc4:	e0 a0 03 31 	rcall	80007426 <memmove>
80006dc8:	6e 08       	ld.w	r8,r7[0x0]
80006dca:	0c 08       	add	r8,r6
80006dcc:	0c 94       	mov	r4,r6
80006dce:	8f 08       	st.w	r7[0x0],r8
80006dd0:	6e 28       	ld.w	r8,r7[0x8]
80006dd2:	0c 18       	sub	r8,r6
80006dd4:	8f 28       	st.w	r7[0x8],r8
80006dd6:	62 28       	ld.w	r8,r1[0x8]
80006dd8:	08 18       	sub	r8,r4
80006dda:	83 28       	st.w	r1[0x8],r8
80006ddc:	c6 e0       	breq	80006eb8 <__sfvwrite_r+0x298>
80006dde:	08 16       	sub	r6,r4
80006de0:	08 03       	add	r3,r4
80006de2:	c6 fb       	rjmp	80006cc0 <__sfvwrite_r+0xa0>
80006de4:	60 03       	ld.w	r3,r0[0x0]
80006de6:	60 11       	ld.w	r1,r0[0x4]
80006de8:	30 08       	mov	r8,0
80006dea:	2f 80       	sub	r0,-8
80006dec:	50 08       	stdsp	sp[0x0],r8
80006dee:	58 01       	cp.w	r1,0
80006df0:	cf a0       	breq	80006de4 <__sfvwrite_r+0x1c4>
80006df2:	40 0a       	lddsp	r10,sp[0x0]
80006df4:	58 0a       	cp.w	r10,0
80006df6:	c1 51       	brne	80006e20 <__sfvwrite_r+0x200>
80006df8:	e2 c6 ff ff 	sub	r6,r1,-1
80006dfc:	02 9a       	mov	r10,r1
80006dfe:	30 ab       	mov	r11,10
80006e00:	06 9c       	mov	r12,r3
80006e02:	e0 a0 03 07 	rcall	80007410 <memchr>
80006e06:	f8 c8 ff ff 	sub	r8,r12,-1
80006e0a:	58 0c       	cp.w	r12,0
80006e0c:	f1 d3 e1 16 	subne	r6,r8,r3
80006e10:	f9 b9 01 01 	movne	r9,1
80006e14:	fb f9 1a 00 	st.wne	sp[0x0],r9
80006e18:	f9 b8 00 01 	moveq	r8,1
80006e1c:	fb f8 0a 00 	st.weq	sp[0x0],r8
80006e20:	02 36       	cp.w	r6,r1
80006e22:	ec 04 17 80 	movls	r4,r6
80006e26:	e2 04 17 b0 	movhi	r4,r1
80006e2a:	6e 59       	ld.w	r9,r7[0x14]
80006e2c:	6e 25       	ld.w	r5,r7[0x8]
80006e2e:	f2 05 00 05 	add	r5,r9,r5
80006e32:	0a 34       	cp.w	r4,r5
80006e34:	5f 9a       	srgt	r10
80006e36:	6e 0c       	ld.w	r12,r7[0x0]
80006e38:	6e 48       	ld.w	r8,r7[0x10]
80006e3a:	10 3c       	cp.w	r12,r8
80006e3c:	5f b8       	srhi	r8
80006e3e:	f5 e8 00 08 	and	r8,r10,r8
80006e42:	30 0a       	mov	r10,0
80006e44:	f4 08 18 00 	cp.b	r8,r10
80006e48:	c0 e0       	breq	80006e64 <__sfvwrite_r+0x244>
80006e4a:	06 9b       	mov	r11,r3
80006e4c:	0a 9a       	mov	r10,r5
80006e4e:	e0 a0 02 ec 	rcall	80007426 <memmove>
80006e52:	6e 08       	ld.w	r8,r7[0x0]
80006e54:	0a 08       	add	r8,r5
80006e56:	0e 9b       	mov	r11,r7
80006e58:	8f 08       	st.w	r7[0x0],r8
80006e5a:	40 1c       	lddsp	r12,sp[0x4]
80006e5c:	fe b0 fc aa 	rcall	800067b0 <_fflush_r>
80006e60:	c1 80       	breq	80006e90 <__sfvwrite_r+0x270>
80006e62:	c2 68       	rjmp	80006eae <__sfvwrite_r+0x28e>
80006e64:	12 34       	cp.w	r4,r9
80006e66:	c0 a5       	brlt	80006e7a <__sfvwrite_r+0x25a>
80006e68:	6e a8       	ld.w	r8,r7[0x28]
80006e6a:	06 9a       	mov	r10,r3
80006e6c:	6e 8b       	ld.w	r11,r7[0x20]
80006e6e:	40 1c       	lddsp	r12,sp[0x4]
80006e70:	5d 18       	icall	r8
80006e72:	18 95       	mov	r5,r12
80006e74:	e0 89 00 0e 	brgt	80006e90 <__sfvwrite_r+0x270>
80006e78:	c1 b8       	rjmp	80006eae <__sfvwrite_r+0x28e>
80006e7a:	08 9a       	mov	r10,r4
80006e7c:	06 9b       	mov	r11,r3
80006e7e:	e0 a0 02 d4 	rcall	80007426 <memmove>
80006e82:	6e 08       	ld.w	r8,r7[0x0]
80006e84:	08 08       	add	r8,r4
80006e86:	08 95       	mov	r5,r4
80006e88:	8f 08       	st.w	r7[0x0],r8
80006e8a:	6e 28       	ld.w	r8,r7[0x8]
80006e8c:	08 18       	sub	r8,r4
80006e8e:	8f 28       	st.w	r7[0x8],r8
80006e90:	0a 16       	sub	r6,r5
80006e92:	c0 71       	brne	80006ea0 <__sfvwrite_r+0x280>
80006e94:	0e 9b       	mov	r11,r7
80006e96:	40 1c       	lddsp	r12,sp[0x4]
80006e98:	fe b0 fc 8c 	rcall	800067b0 <_fflush_r>
80006e9c:	c0 91       	brne	80006eae <__sfvwrite_r+0x28e>
80006e9e:	50 06       	stdsp	sp[0x0],r6
80006ea0:	64 28       	ld.w	r8,r2[0x8]
80006ea2:	0a 18       	sub	r8,r5
80006ea4:	85 28       	st.w	r2[0x8],r8
80006ea6:	c0 90       	breq	80006eb8 <__sfvwrite_r+0x298>
80006ea8:	0a 11       	sub	r1,r5
80006eaa:	0a 03       	add	r3,r5
80006eac:	ca 1b       	rjmp	80006dee <__sfvwrite_r+0x1ce>
80006eae:	8e 68       	ld.sh	r8,r7[0xc]
80006eb0:	a7 a8       	sbr	r8,0x6
80006eb2:	ae 68       	st.h	r7[0xc],r8
80006eb4:	3f fc       	mov	r12,-1
80006eb6:	c0 28       	rjmp	80006eba <__sfvwrite_r+0x29a>
80006eb8:	30 0c       	mov	r12,0
80006eba:	2f dd       	sub	sp,-12
80006ebc:	d8 32       	popm	r0-r7,pc
80006ebe:	d7 03       	nop

80006ec0 <_fwalk>:
80006ec0:	d4 31       	pushm	r0-r7,lr
80006ec2:	30 05       	mov	r5,0
80006ec4:	16 91       	mov	r1,r11
80006ec6:	f8 c7 ff 28 	sub	r7,r12,-216
80006eca:	0a 92       	mov	r2,r5
80006ecc:	fe b0 fc f8 	rcall	800068bc <__sfp_lock_acquire>
80006ed0:	3f f3       	mov	r3,-1
80006ed2:	c1 68       	rjmp	80006efe <_fwalk+0x3e>
80006ed4:	6e 26       	ld.w	r6,r7[0x8]
80006ed6:	6e 14       	ld.w	r4,r7[0x4]
80006ed8:	2f 46       	sub	r6,-12
80006eda:	c0 c8       	rjmp	80006ef2 <_fwalk+0x32>
80006edc:	8c 08       	ld.sh	r8,r6[0x0]
80006ede:	e4 08 19 00 	cp.h	r8,r2
80006ee2:	c0 70       	breq	80006ef0 <_fwalk+0x30>
80006ee4:	8c 18       	ld.sh	r8,r6[0x2]
80006ee6:	e6 08 19 00 	cp.h	r8,r3
80006eea:	c0 30       	breq	80006ef0 <_fwalk+0x30>
80006eec:	5d 11       	icall	r1
80006eee:	18 45       	or	r5,r12
80006ef0:	2a 46       	sub	r6,-92
80006ef2:	20 14       	sub	r4,1
80006ef4:	ec cc 00 0c 	sub	r12,r6,12
80006ef8:	58 04       	cp.w	r4,0
80006efa:	cf 14       	brge	80006edc <_fwalk+0x1c>
80006efc:	6e 07       	ld.w	r7,r7[0x0]
80006efe:	58 07       	cp.w	r7,0
80006f00:	ce a1       	brne	80006ed4 <_fwalk+0x14>
80006f02:	fe b0 fc de 	rcall	800068be <__sfp_lock_release>
80006f06:	0a 9c       	mov	r12,r5
80006f08:	d8 32       	popm	r0-r7,pc
80006f0a:	d7 03       	nop

80006f0c <_localeconv_r>:
80006f0c:	fe cc d6 f8 	sub	r12,pc,-10504
80006f10:	5e fc       	retal	r12
80006f12:	d7 03       	nop

80006f14 <__smakebuf_r>:
80006f14:	d4 21       	pushm	r4-r7,lr
80006f16:	20 fd       	sub	sp,60
80006f18:	96 68       	ld.sh	r8,r11[0xc]
80006f1a:	16 97       	mov	r7,r11
80006f1c:	18 96       	mov	r6,r12
80006f1e:	e2 18 00 02 	andl	r8,0x2,COH
80006f22:	c3 c1       	brne	80006f9a <__smakebuf_r+0x86>
80006f24:	96 7b       	ld.sh	r11,r11[0xe]
80006f26:	f0 0b 19 00 	cp.h	r11,r8
80006f2a:	c0 55       	brlt	80006f34 <__smakebuf_r+0x20>
80006f2c:	1a 9a       	mov	r10,sp
80006f2e:	e0 a0 08 9d 	rcall	80008068 <_fstat_r>
80006f32:	c0 f4       	brge	80006f50 <__smakebuf_r+0x3c>
80006f34:	8e 65       	ld.sh	r5,r7[0xc]
80006f36:	0a 98       	mov	r8,r5
80006f38:	ab b8       	sbr	r8,0xb
80006f3a:	e2 15 00 80 	andl	r5,0x80,COH
80006f3e:	ae 68       	st.h	r7[0xc],r8
80006f40:	30 04       	mov	r4,0
80006f42:	e0 68 04 00 	mov	r8,1024
80006f46:	f9 b5 01 40 	movne	r5,64
80006f4a:	f0 05 17 00 	moveq	r5,r8
80006f4e:	c1 c8       	rjmp	80006f86 <__smakebuf_r+0x72>
80006f50:	40 18       	lddsp	r8,sp[0x4]
80006f52:	e2 18 f0 00 	andl	r8,0xf000,COH
80006f56:	e0 48 20 00 	cp.w	r8,8192
80006f5a:	5f 04       	sreq	r4
80006f5c:	e0 48 80 00 	cp.w	r8,32768
80006f60:	c0 e1       	brne	80006f7c <__smakebuf_r+0x68>
80006f62:	6e b9       	ld.w	r9,r7[0x2c]
80006f64:	fe c8 f1 e8 	sub	r8,pc,-3608
80006f68:	10 39       	cp.w	r9,r8
80006f6a:	c0 91       	brne	80006f7c <__smakebuf_r+0x68>
80006f6c:	8e 68       	ld.sh	r8,r7[0xc]
80006f6e:	e0 65 04 00 	mov	r5,1024
80006f72:	ab a8       	sbr	r8,0xa
80006f74:	ef 45 00 50 	st.w	r7[80],r5
80006f78:	ae 68       	st.h	r7[0xc],r8
80006f7a:	c0 68       	rjmp	80006f86 <__smakebuf_r+0x72>
80006f7c:	8e 68       	ld.sh	r8,r7[0xc]
80006f7e:	e0 65 04 00 	mov	r5,1024
80006f82:	ab b8       	sbr	r8,0xb
80006f84:	ae 68       	st.h	r7[0xc],r8
80006f86:	0a 9b       	mov	r11,r5
80006f88:	0c 9c       	mov	r12,r6
80006f8a:	c2 bc       	rcall	80006fe0 <_malloc_r>
80006f8c:	8e 68       	ld.sh	r8,r7[0xc]
80006f8e:	c0 d1       	brne	80006fa8 <__smakebuf_r+0x94>
80006f90:	ed b8 00 09 	bld	r8,0x9
80006f94:	c1 b0       	breq	80006fca <__smakebuf_r+0xb6>
80006f96:	a1 b8       	sbr	r8,0x1
80006f98:	ae 68       	st.h	r7[0xc],r8
80006f9a:	ee c8 ff b9 	sub	r8,r7,-71
80006f9e:	8f 48       	st.w	r7[0x10],r8
80006fa0:	8f 08       	st.w	r7[0x0],r8
80006fa2:	30 18       	mov	r8,1
80006fa4:	8f 58       	st.w	r7[0x14],r8
80006fa6:	c1 28       	rjmp	80006fca <__smakebuf_r+0xb6>
80006fa8:	a7 b8       	sbr	r8,0x7
80006faa:	8f 4c       	st.w	r7[0x10],r12
80006fac:	ae 68       	st.h	r7[0xc],r8
80006fae:	8f 55       	st.w	r7[0x14],r5
80006fb0:	fe c8 06 f0 	sub	r8,pc,1776
80006fb4:	8f 0c       	st.w	r7[0x0],r12
80006fb6:	8d a8       	st.w	r6[0x28],r8
80006fb8:	58 04       	cp.w	r4,0
80006fba:	c0 80       	breq	80006fca <__smakebuf_r+0xb6>
80006fbc:	8e 7c       	ld.sh	r12,r7[0xe]
80006fbe:	e0 a0 07 47 	rcall	80007e4c <isatty>
80006fc2:	c0 40       	breq	80006fca <__smakebuf_r+0xb6>
80006fc4:	8e 68       	ld.sh	r8,r7[0xc]
80006fc6:	a1 a8       	sbr	r8,0x0
80006fc8:	ae 68       	st.h	r7[0xc],r8
80006fca:	2f 1d       	sub	sp,-60
80006fcc:	d8 22       	popm	r4-r7,pc
80006fce:	d7 03       	nop

80006fd0 <malloc>:
80006fd0:	d4 01       	pushm	lr
80006fd2:	e0 68 01 04 	mov	r8,260
80006fd6:	18 9b       	mov	r11,r12
80006fd8:	70 0c       	ld.w	r12,r8[0x0]
80006fda:	c0 3c       	rcall	80006fe0 <_malloc_r>
80006fdc:	d8 02       	popm	pc
80006fde:	d7 03       	nop

80006fe0 <_malloc_r>:
80006fe0:	d4 31       	pushm	r0-r7,lr
80006fe2:	f6 c8 ff f5 	sub	r8,r11,-11
80006fe6:	18 95       	mov	r5,r12
80006fe8:	10 97       	mov	r7,r8
80006fea:	e0 17 ff f8 	andl	r7,0xfff8
80006fee:	59 68       	cp.w	r8,22
80006ff0:	f9 b7 08 10 	movls	r7,16
80006ff4:	16 37       	cp.w	r7,r11
80006ff6:	5f 38       	srlo	r8
80006ff8:	f1 e7 13 f8 	or	r8,r8,r7>>0x1f
80006ffc:	c0 50       	breq	80007006 <_malloc_r+0x26>
80006ffe:	30 c8       	mov	r8,12
80007000:	99 38       	st.w	r12[0xc],r8
80007002:	e0 8f 01 f7 	bral	800073f0 <_malloc_r+0x410>
80007006:	e0 a0 02 36 	rcall	80007472 <__malloc_lock>
8000700a:	e0 47 01 f7 	cp.w	r7,503
8000700e:	e0 8b 00 1d 	brhi	80007048 <_malloc_r+0x68>
80007012:	ee 03 16 03 	lsr	r3,r7,0x3
80007016:	e0 68 01 08 	mov	r8,264
8000701a:	f0 03 00 38 	add	r8,r8,r3<<0x3
8000701e:	70 36       	ld.w	r6,r8[0xc]
80007020:	10 36       	cp.w	r6,r8
80007022:	c0 61       	brne	8000702e <_malloc_r+0x4e>
80007024:	ec c8 ff f8 	sub	r8,r6,-8
80007028:	70 36       	ld.w	r6,r8[0xc]
8000702a:	10 36       	cp.w	r6,r8
8000702c:	c0 c0       	breq	80007044 <_malloc_r+0x64>
8000702e:	6c 18       	ld.w	r8,r6[0x4]
80007030:	e0 18 ff fc 	andl	r8,0xfffc
80007034:	6c 3a       	ld.w	r10,r6[0xc]
80007036:	ec 08 00 09 	add	r9,r6,r8
8000703a:	0a 9c       	mov	r12,r5
8000703c:	6c 28       	ld.w	r8,r6[0x8]
8000703e:	95 28       	st.w	r10[0x8],r8
80007040:	91 3a       	st.w	r8[0xc],r10
80007042:	c4 78       	rjmp	800070d0 <_malloc_r+0xf0>
80007044:	2f e3       	sub	r3,-2
80007046:	c4 d8       	rjmp	800070e0 <_malloc_r+0x100>
80007048:	ee 03 16 09 	lsr	r3,r7,0x9
8000704c:	c0 41       	brne	80007054 <_malloc_r+0x74>
8000704e:	ee 03 16 03 	lsr	r3,r7,0x3
80007052:	c2 68       	rjmp	8000709e <_malloc_r+0xbe>
80007054:	58 43       	cp.w	r3,4
80007056:	e0 8b 00 06 	brhi	80007062 <_malloc_r+0x82>
8000705a:	ee 03 16 06 	lsr	r3,r7,0x6
8000705e:	2c 83       	sub	r3,-56
80007060:	c1 f8       	rjmp	8000709e <_malloc_r+0xbe>
80007062:	59 43       	cp.w	r3,20
80007064:	e0 8b 00 04 	brhi	8000706c <_malloc_r+0x8c>
80007068:	2a 53       	sub	r3,-91
8000706a:	c1 a8       	rjmp	8000709e <_malloc_r+0xbe>
8000706c:	e0 43 00 54 	cp.w	r3,84
80007070:	e0 8b 00 06 	brhi	8000707c <_malloc_r+0x9c>
80007074:	ee 03 16 0c 	lsr	r3,r7,0xc
80007078:	29 23       	sub	r3,-110
8000707a:	c1 28       	rjmp	8000709e <_malloc_r+0xbe>
8000707c:	e0 43 01 54 	cp.w	r3,340
80007080:	e0 8b 00 06 	brhi	8000708c <_malloc_r+0xac>
80007084:	ee 03 16 0f 	lsr	r3,r7,0xf
80007088:	28 93       	sub	r3,-119
8000708a:	c0 a8       	rjmp	8000709e <_malloc_r+0xbe>
8000708c:	e0 43 05 54 	cp.w	r3,1364
80007090:	e0 88 00 04 	brls	80007098 <_malloc_r+0xb8>
80007094:	37 e3       	mov	r3,126
80007096:	c0 48       	rjmp	8000709e <_malloc_r+0xbe>
80007098:	ee 03 16 12 	lsr	r3,r7,0x12
8000709c:	28 43       	sub	r3,-124
8000709e:	e0 6a 01 08 	mov	r10,264
800070a2:	f4 03 00 3a 	add	r10,r10,r3<<0x3
800070a6:	74 36       	ld.w	r6,r10[0xc]
800070a8:	c1 98       	rjmp	800070da <_malloc_r+0xfa>
800070aa:	6c 19       	ld.w	r9,r6[0x4]
800070ac:	e0 19 ff fc 	andl	r9,0xfffc
800070b0:	f2 07 01 0b 	sub	r11,r9,r7
800070b4:	58 fb       	cp.w	r11,15
800070b6:	e0 8a 00 04 	brle	800070be <_malloc_r+0xde>
800070ba:	20 13       	sub	r3,1
800070bc:	c1 18       	rjmp	800070de <_malloc_r+0xfe>
800070be:	6c 38       	ld.w	r8,r6[0xc]
800070c0:	58 0b       	cp.w	r11,0
800070c2:	c0 b5       	brlt	800070d8 <_malloc_r+0xf8>
800070c4:	6c 2a       	ld.w	r10,r6[0x8]
800070c6:	ec 09 00 09 	add	r9,r6,r9
800070ca:	0a 9c       	mov	r12,r5
800070cc:	91 2a       	st.w	r8[0x8],r10
800070ce:	95 38       	st.w	r10[0xc],r8
800070d0:	72 18       	ld.w	r8,r9[0x4]
800070d2:	a1 a8       	sbr	r8,0x0
800070d4:	93 18       	st.w	r9[0x4],r8
800070d6:	cb c8       	rjmp	8000724e <_malloc_r+0x26e>
800070d8:	10 96       	mov	r6,r8
800070da:	14 36       	cp.w	r6,r10
800070dc:	ce 71       	brne	800070aa <_malloc_r+0xca>
800070de:	2f f3       	sub	r3,-1
800070e0:	e0 6a 01 08 	mov	r10,264
800070e4:	f4 cc ff f8 	sub	r12,r10,-8
800070e8:	78 26       	ld.w	r6,r12[0x8]
800070ea:	18 36       	cp.w	r6,r12
800070ec:	c6 c0       	breq	800071c4 <_malloc_r+0x1e4>
800070ee:	6c 19       	ld.w	r9,r6[0x4]
800070f0:	e0 19 ff fc 	andl	r9,0xfffc
800070f4:	f2 07 01 08 	sub	r8,r9,r7
800070f8:	58 f8       	cp.w	r8,15
800070fa:	e0 89 00 8f 	brgt	80007218 <_malloc_r+0x238>
800070fe:	99 3c       	st.w	r12[0xc],r12
80007100:	99 2c       	st.w	r12[0x8],r12
80007102:	58 08       	cp.w	r8,0
80007104:	c0 55       	brlt	8000710e <_malloc_r+0x12e>
80007106:	ec 09 00 09 	add	r9,r6,r9
8000710a:	0a 9c       	mov	r12,r5
8000710c:	ce 2b       	rjmp	800070d0 <_malloc_r+0xf0>
8000710e:	e0 49 01 ff 	cp.w	r9,511
80007112:	e0 8b 00 13 	brhi	80007138 <_malloc_r+0x158>
80007116:	a3 99       	lsr	r9,0x3
80007118:	f4 09 00 38 	add	r8,r10,r9<<0x3
8000711c:	70 2b       	ld.w	r11,r8[0x8]
8000711e:	8d 38       	st.w	r6[0xc],r8
80007120:	8d 2b       	st.w	r6[0x8],r11
80007122:	97 36       	st.w	r11[0xc],r6
80007124:	91 26       	st.w	r8[0x8],r6
80007126:	a3 49       	asr	r9,0x2
80007128:	74 18       	ld.w	r8,r10[0x4]
8000712a:	30 1b       	mov	r11,1
8000712c:	f6 09 09 49 	lsl	r9,r11,r9
80007130:	f1 e9 10 09 	or	r9,r8,r9
80007134:	95 19       	st.w	r10[0x4],r9
80007136:	c4 78       	rjmp	800071c4 <_malloc_r+0x1e4>
80007138:	f2 0a 16 09 	lsr	r10,r9,0x9
8000713c:	58 4a       	cp.w	r10,4
8000713e:	e0 8b 00 07 	brhi	8000714c <_malloc_r+0x16c>
80007142:	f2 0a 16 06 	lsr	r10,r9,0x6
80007146:	2c 8a       	sub	r10,-56
80007148:	c2 08       	rjmp	80007188 <_malloc_r+0x1a8>
8000714a:	d7 03       	nop
8000714c:	59 4a       	cp.w	r10,20
8000714e:	e0 8b 00 04 	brhi	80007156 <_malloc_r+0x176>
80007152:	2a 5a       	sub	r10,-91
80007154:	c1 a8       	rjmp	80007188 <_malloc_r+0x1a8>
80007156:	e0 4a 00 54 	cp.w	r10,84
8000715a:	e0 8b 00 06 	brhi	80007166 <_malloc_r+0x186>
8000715e:	f2 0a 16 0c 	lsr	r10,r9,0xc
80007162:	29 2a       	sub	r10,-110
80007164:	c1 28       	rjmp	80007188 <_malloc_r+0x1a8>
80007166:	e0 4a 01 54 	cp.w	r10,340
8000716a:	e0 8b 00 06 	brhi	80007176 <_malloc_r+0x196>
8000716e:	f2 0a 16 0f 	lsr	r10,r9,0xf
80007172:	28 9a       	sub	r10,-119
80007174:	c0 a8       	rjmp	80007188 <_malloc_r+0x1a8>
80007176:	e0 4a 05 54 	cp.w	r10,1364
8000717a:	e0 88 00 04 	brls	80007182 <_malloc_r+0x1a2>
8000717e:	37 ea       	mov	r10,126
80007180:	c0 48       	rjmp	80007188 <_malloc_r+0x1a8>
80007182:	f2 0a 16 12 	lsr	r10,r9,0x12
80007186:	28 4a       	sub	r10,-124
80007188:	e0 6b 01 08 	mov	r11,264
8000718c:	f6 0a 00 34 	add	r4,r11,r10<<0x3
80007190:	68 28       	ld.w	r8,r4[0x8]
80007192:	08 38       	cp.w	r8,r4
80007194:	c0 e1       	brne	800071b0 <_malloc_r+0x1d0>
80007196:	76 19       	ld.w	r9,r11[0x4]
80007198:	a3 4a       	asr	r10,0x2
8000719a:	30 1e       	mov	lr,1
8000719c:	fc 0a 09 4a 	lsl	r10,lr,r10
800071a0:	f3 ea 10 0a 	or	r10,r9,r10
800071a4:	10 99       	mov	r9,r8
800071a6:	97 1a       	st.w	r11[0x4],r10
800071a8:	c0 a8       	rjmp	800071bc <_malloc_r+0x1dc>
800071aa:	70 28       	ld.w	r8,r8[0x8]
800071ac:	08 38       	cp.w	r8,r4
800071ae:	c0 60       	breq	800071ba <_malloc_r+0x1da>
800071b0:	70 1a       	ld.w	r10,r8[0x4]
800071b2:	e0 1a ff fc 	andl	r10,0xfffc
800071b6:	14 39       	cp.w	r9,r10
800071b8:	cf 93       	brcs	800071aa <_malloc_r+0x1ca>
800071ba:	70 39       	ld.w	r9,r8[0xc]
800071bc:	8d 39       	st.w	r6[0xc],r9
800071be:	8d 28       	st.w	r6[0x8],r8
800071c0:	91 36       	st.w	r8[0xc],r6
800071c2:	93 26       	st.w	r9[0x8],r6
800071c4:	e6 08 14 02 	asr	r8,r3,0x2
800071c8:	30 1b       	mov	r11,1
800071ca:	e0 64 01 08 	mov	r4,264
800071ce:	f6 08 09 4b 	lsl	r11,r11,r8
800071d2:	68 18       	ld.w	r8,r4[0x4]
800071d4:	10 3b       	cp.w	r11,r8
800071d6:	e0 8b 00 69 	brhi	800072a8 <_malloc_r+0x2c8>
800071da:	f7 e8 00 09 	and	r9,r11,r8
800071de:	c0 b1       	brne	800071f4 <_malloc_r+0x214>
800071e0:	e0 13 ff fc 	andl	r3,0xfffc
800071e4:	a1 7b       	lsl	r11,0x1
800071e6:	2f c3       	sub	r3,-4
800071e8:	c0 38       	rjmp	800071ee <_malloc_r+0x20e>
800071ea:	2f c3       	sub	r3,-4
800071ec:	a1 7b       	lsl	r11,0x1
800071ee:	f7 e8 00 09 	and	r9,r11,r8
800071f2:	cf c0       	breq	800071ea <_malloc_r+0x20a>
800071f4:	e8 03 00 3e 	add	lr,r4,r3<<0x3
800071f8:	06 92       	mov	r2,r3
800071fa:	1c 91       	mov	r1,lr
800071fc:	62 36       	ld.w	r6,r1[0xc]
800071fe:	c2 d8       	rjmp	80007258 <_malloc_r+0x278>
80007200:	6c 1a       	ld.w	r10,r6[0x4]
80007202:	e0 1a ff fc 	andl	r10,0xfffc
80007206:	f4 07 01 08 	sub	r8,r10,r7
8000720a:	58 f8       	cp.w	r8,15
8000720c:	e0 8a 00 15 	brle	80007236 <_malloc_r+0x256>
80007210:	6c 3a       	ld.w	r10,r6[0xc]
80007212:	6c 29       	ld.w	r9,r6[0x8]
80007214:	95 29       	st.w	r10[0x8],r9
80007216:	93 3a       	st.w	r9[0xc],r10
80007218:	0e 99       	mov	r9,r7
8000721a:	ec 07 00 07 	add	r7,r6,r7
8000721e:	a1 a9       	sbr	r9,0x0
80007220:	99 37       	st.w	r12[0xc],r7
80007222:	99 27       	st.w	r12[0x8],r7
80007224:	8d 19       	st.w	r6[0x4],r9
80007226:	ee 08 09 08 	st.w	r7[r8],r8
8000722a:	8f 2c       	st.w	r7[0x8],r12
8000722c:	8f 3c       	st.w	r7[0xc],r12
8000722e:	a1 a8       	sbr	r8,0x0
80007230:	0a 9c       	mov	r12,r5
80007232:	8f 18       	st.w	r7[0x4],r8
80007234:	c0 d8       	rjmp	8000724e <_malloc_r+0x26e>
80007236:	6c 39       	ld.w	r9,r6[0xc]
80007238:	58 08       	cp.w	r8,0
8000723a:	c0 e5       	brlt	80007256 <_malloc_r+0x276>
8000723c:	ec 0a 00 0a 	add	r10,r6,r10
80007240:	74 18       	ld.w	r8,r10[0x4]
80007242:	a1 a8       	sbr	r8,0x0
80007244:	0a 9c       	mov	r12,r5
80007246:	95 18       	st.w	r10[0x4],r8
80007248:	6c 28       	ld.w	r8,r6[0x8]
8000724a:	93 28       	st.w	r9[0x8],r8
8000724c:	91 39       	st.w	r8[0xc],r9
8000724e:	c1 3d       	rcall	80007474 <__malloc_unlock>
80007250:	ec cc ff f8 	sub	r12,r6,-8
80007254:	d8 32       	popm	r0-r7,pc
80007256:	12 96       	mov	r6,r9
80007258:	02 36       	cp.w	r6,r1
8000725a:	cd 31       	brne	80007200 <_malloc_r+0x220>
8000725c:	2f f2       	sub	r2,-1
8000725e:	f1 d2 c0 02 	bfextu	r8,r2,0x0,0x2
80007262:	c0 30       	breq	80007268 <_malloc_r+0x288>
80007264:	2f 81       	sub	r1,-8
80007266:	cc bb       	rjmp	800071fc <_malloc_r+0x21c>
80007268:	1c 98       	mov	r8,lr
8000726a:	f3 d3 c0 02 	bfextu	r9,r3,0x0,0x2
8000726e:	c0 81       	brne	8000727e <_malloc_r+0x29e>
80007270:	68 19       	ld.w	r9,r4[0x4]
80007272:	f6 08 11 ff 	rsub	r8,r11,-1
80007276:	f3 e8 00 08 	and	r8,r9,r8
8000727a:	89 18       	st.w	r4[0x4],r8
8000727c:	c0 78       	rjmp	8000728a <_malloc_r+0x2aa>
8000727e:	f0 c9 00 08 	sub	r9,r8,8
80007282:	20 13       	sub	r3,1
80007284:	70 08       	ld.w	r8,r8[0x0]
80007286:	12 38       	cp.w	r8,r9
80007288:	cf 10       	breq	8000726a <_malloc_r+0x28a>
8000728a:	a1 7b       	lsl	r11,0x1
8000728c:	68 18       	ld.w	r8,r4[0x4]
8000728e:	10 3b       	cp.w	r11,r8
80007290:	e0 8b 00 0c 	brhi	800072a8 <_malloc_r+0x2c8>
80007294:	58 0b       	cp.w	r11,0
80007296:	c0 90       	breq	800072a8 <_malloc_r+0x2c8>
80007298:	04 93       	mov	r3,r2
8000729a:	c0 38       	rjmp	800072a0 <_malloc_r+0x2c0>
8000729c:	2f c3       	sub	r3,-4
8000729e:	a1 7b       	lsl	r11,0x1
800072a0:	f7 e8 00 09 	and	r9,r11,r8
800072a4:	ca 81       	brne	800071f4 <_malloc_r+0x214>
800072a6:	cf bb       	rjmp	8000729c <_malloc_r+0x2bc>
800072a8:	68 23       	ld.w	r3,r4[0x8]
800072aa:	66 12       	ld.w	r2,r3[0x4]
800072ac:	e0 12 ff fc 	andl	r2,0xfffc
800072b0:	0e 32       	cp.w	r2,r7
800072b2:	5f 39       	srlo	r9
800072b4:	e4 07 01 08 	sub	r8,r2,r7
800072b8:	58 f8       	cp.w	r8,15
800072ba:	5f aa       	srle	r10
800072bc:	f5 e9 10 09 	or	r9,r10,r9
800072c0:	e0 80 00 9a 	breq	800073f4 <_malloc_r+0x414>
800072c4:	e0 68 06 30 	mov	r8,1584
800072c8:	70 01       	ld.w	r1,r8[0x0]
800072ca:	e0 68 05 14 	mov	r8,1300
800072ce:	2f 01       	sub	r1,-16
800072d0:	70 08       	ld.w	r8,r8[0x0]
800072d2:	0e 01       	add	r1,r7
800072d4:	5b f8       	cp.w	r8,-1
800072d6:	c0 40       	breq	800072de <_malloc_r+0x2fe>
800072d8:	28 11       	sub	r1,-127
800072da:	e0 11 ff 80 	andl	r1,0xff80
800072de:	02 9b       	mov	r11,r1
800072e0:	0a 9c       	mov	r12,r5
800072e2:	e0 a0 05 39 	rcall	80007d54 <_sbrk_r>
800072e6:	18 96       	mov	r6,r12
800072e8:	5b fc       	cp.w	r12,-1
800072ea:	c7 50       	breq	800073d4 <_malloc_r+0x3f4>
800072ec:	e6 02 00 08 	add	r8,r3,r2
800072f0:	10 3c       	cp.w	r12,r8
800072f2:	c0 32       	brcc	800072f8 <_malloc_r+0x318>
800072f4:	08 33       	cp.w	r3,r4
800072f6:	c6 f1       	brne	800073d4 <_malloc_r+0x3f4>
800072f8:	e0 6a 06 34 	mov	r10,1588
800072fc:	74 09       	ld.w	r9,r10[0x0]
800072fe:	e2 09 00 09 	add	r9,r1,r9
80007302:	95 09       	st.w	r10[0x0],r9
80007304:	10 36       	cp.w	r6,r8
80007306:	c0 a1       	brne	8000731a <_malloc_r+0x33a>
80007308:	f5 d6 c0 07 	bfextu	r10,r6,0x0,0x7
8000730c:	c0 71       	brne	8000731a <_malloc_r+0x33a>
8000730e:	e2 02 00 02 	add	r2,r1,r2
80007312:	68 28       	ld.w	r8,r4[0x8]
80007314:	a1 a2       	sbr	r2,0x0
80007316:	91 12       	st.w	r8[0x4],r2
80007318:	c4 f8       	rjmp	800073b6 <_malloc_r+0x3d6>
8000731a:	e0 6a 05 14 	mov	r10,1300
8000731e:	74 0b       	ld.w	r11,r10[0x0]
80007320:	5b fb       	cp.w	r11,-1
80007322:	c0 31       	brne	80007328 <_malloc_r+0x348>
80007324:	95 06       	st.w	r10[0x0],r6
80007326:	c0 78       	rjmp	80007334 <_malloc_r+0x354>
80007328:	ec 09 00 09 	add	r9,r6,r9
8000732c:	e0 6a 06 34 	mov	r10,1588
80007330:	10 19       	sub	r9,r8
80007332:	95 09       	st.w	r10[0x0],r9
80007334:	f1 d6 c0 03 	bfextu	r8,r6,0x0,0x3
80007338:	f0 09 11 08 	rsub	r9,r8,8
8000733c:	58 08       	cp.w	r8,0
8000733e:	f2 08 17 10 	movne	r8,r9
80007342:	ed d8 e1 06 	addne	r6,r6,r8
80007346:	28 08       	sub	r8,-128
80007348:	ec 01 00 01 	add	r1,r6,r1
8000734c:	0a 9c       	mov	r12,r5
8000734e:	e3 d1 c0 07 	bfextu	r1,r1,0x0,0x7
80007352:	f0 01 01 01 	sub	r1,r8,r1
80007356:	02 9b       	mov	r11,r1
80007358:	e0 a0 04 fe 	rcall	80007d54 <_sbrk_r>
8000735c:	e0 68 06 34 	mov	r8,1588
80007360:	5b fc       	cp.w	r12,-1
80007362:	ec 0c 17 00 	moveq	r12,r6
80007366:	f9 b1 00 00 	moveq	r1,0
8000736a:	70 09       	ld.w	r9,r8[0x0]
8000736c:	0c 1c       	sub	r12,r6
8000736e:	89 26       	st.w	r4[0x8],r6
80007370:	02 0c       	add	r12,r1
80007372:	12 01       	add	r1,r9
80007374:	a1 ac       	sbr	r12,0x0
80007376:	91 01       	st.w	r8[0x0],r1
80007378:	8d 1c       	st.w	r6[0x4],r12
8000737a:	08 33       	cp.w	r3,r4
8000737c:	c1 d0       	breq	800073b6 <_malloc_r+0x3d6>
8000737e:	58 f2       	cp.w	r2,15
80007380:	e0 8b 00 05 	brhi	8000738a <_malloc_r+0x3aa>
80007384:	30 18       	mov	r8,1
80007386:	8d 18       	st.w	r6[0x4],r8
80007388:	c2 68       	rjmp	800073d4 <_malloc_r+0x3f4>
8000738a:	30 59       	mov	r9,5
8000738c:	20 c2       	sub	r2,12
8000738e:	e0 12 ff f8 	andl	r2,0xfff8
80007392:	e6 02 00 08 	add	r8,r3,r2
80007396:	91 29       	st.w	r8[0x8],r9
80007398:	91 19       	st.w	r8[0x4],r9
8000739a:	66 18       	ld.w	r8,r3[0x4]
8000739c:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800073a0:	e5 e8 10 08 	or	r8,r2,r8
800073a4:	87 18       	st.w	r3[0x4],r8
800073a6:	58 f2       	cp.w	r2,15
800073a8:	e0 88 00 07 	brls	800073b6 <_malloc_r+0x3d6>
800073ac:	e6 cb ff f8 	sub	r11,r3,-8
800073b0:	0a 9c       	mov	r12,r5
800073b2:	fe b0 fb 71 	rcall	80006a94 <_free_r>
800073b6:	e0 69 06 2c 	mov	r9,1580
800073ba:	72 0a       	ld.w	r10,r9[0x0]
800073bc:	e0 68 06 34 	mov	r8,1588
800073c0:	70 08       	ld.w	r8,r8[0x0]
800073c2:	14 38       	cp.w	r8,r10
800073c4:	f3 f8 ba 00 	st.whi	r9[0x0],r8
800073c8:	e0 69 06 28 	mov	r9,1576
800073cc:	72 0a       	ld.w	r10,r9[0x0]
800073ce:	14 38       	cp.w	r8,r10
800073d0:	f3 f8 ba 00 	st.whi	r9[0x0],r8
800073d4:	68 28       	ld.w	r8,r4[0x8]
800073d6:	70 18       	ld.w	r8,r8[0x4]
800073d8:	e0 18 ff fc 	andl	r8,0xfffc
800073dc:	0e 38       	cp.w	r8,r7
800073de:	5f 39       	srlo	r9
800073e0:	0e 18       	sub	r8,r7
800073e2:	58 f8       	cp.w	r8,15
800073e4:	5f aa       	srle	r10
800073e6:	f5 e9 10 09 	or	r9,r10,r9
800073ea:	c0 50       	breq	800073f4 <_malloc_r+0x414>
800073ec:	0a 9c       	mov	r12,r5
800073ee:	c4 3c       	rcall	80007474 <__malloc_unlock>
800073f0:	d8 3a       	popm	r0-r7,pc,r12=0
800073f2:	d7 03       	nop
800073f4:	68 26       	ld.w	r6,r4[0x8]
800073f6:	a1 a8       	sbr	r8,0x0
800073f8:	0e 99       	mov	r9,r7
800073fa:	a1 a9       	sbr	r9,0x0
800073fc:	8d 19       	st.w	r6[0x4],r9
800073fe:	ec 07 00 07 	add	r7,r6,r7
80007402:	0a 9c       	mov	r12,r5
80007404:	89 27       	st.w	r4[0x8],r7
80007406:	8f 18       	st.w	r7[0x4],r8
80007408:	c3 6c       	rcall	80007474 <__malloc_unlock>
8000740a:	ec cc ff f8 	sub	r12,r6,-8
8000740e:	d8 32       	popm	r0-r7,pc

80007410 <memchr>:
80007410:	f7 db c0 08 	bfextu	r11,r11,0x0,0x8
80007414:	c0 68       	rjmp	80007420 <memchr+0x10>
80007416:	20 1a       	sub	r10,1
80007418:	19 88       	ld.ub	r8,r12[0x0]
8000741a:	16 38       	cp.w	r8,r11
8000741c:	5e 0c       	reteq	r12
8000741e:	2f fc       	sub	r12,-1
80007420:	58 0a       	cp.w	r10,0
80007422:	cf a1       	brne	80007416 <memchr+0x6>
80007424:	5e fa       	retal	r10

80007426 <memmove>:
80007426:	d4 01       	pushm	lr
80007428:	18 3b       	cp.w	r11,r12
8000742a:	c1 92       	brcc	8000745c <memmove+0x36>
8000742c:	f6 0a 00 09 	add	r9,r11,r10
80007430:	12 3c       	cp.w	r12,r9
80007432:	c1 52       	brcc	8000745c <memmove+0x36>
80007434:	f8 0a 00 0b 	add	r11,r12,r10
80007438:	30 08       	mov	r8,0
8000743a:	c0 68       	rjmp	80007446 <memmove+0x20>
8000743c:	f2 08 07 0e 	ld.ub	lr,r9[r8]
80007440:	20 1a       	sub	r10,1
80007442:	f6 08 0b 0e 	st.b	r11[r8],lr
80007446:	20 18       	sub	r8,1
80007448:	58 0a       	cp.w	r10,0
8000744a:	cf 91       	brne	8000743c <memmove+0x16>
8000744c:	d8 02       	popm	pc
8000744e:	f6 08 07 09 	ld.ub	r9,r11[r8]
80007452:	20 1a       	sub	r10,1
80007454:	f8 08 0b 09 	st.b	r12[r8],r9
80007458:	2f f8       	sub	r8,-1
8000745a:	c0 28       	rjmp	8000745e <memmove+0x38>
8000745c:	30 08       	mov	r8,0
8000745e:	58 0a       	cp.w	r10,0
80007460:	cf 71       	brne	8000744e <memmove+0x28>
80007462:	d8 02       	popm	pc

80007464 <memset>:
80007464:	18 98       	mov	r8,r12
80007466:	c0 38       	rjmp	8000746c <memset+0x8>
80007468:	10 cb       	st.b	r8++,r11
8000746a:	20 1a       	sub	r10,1
8000746c:	58 0a       	cp.w	r10,0
8000746e:	cf d1       	brne	80007468 <memset+0x4>
80007470:	5e fc       	retal	r12

80007472 <__malloc_lock>:
80007472:	5e fc       	retal	r12

80007474 <__malloc_unlock>:
80007474:	5e fc       	retal	r12

80007476 <__hi0bits>:
80007476:	18 98       	mov	r8,r12
80007478:	e0 1c 00 00 	andl	r12,0x0
8000747c:	f0 09 15 10 	lsl	r9,r8,0x10
80007480:	58 0c       	cp.w	r12,0
80007482:	f2 08 17 00 	moveq	r8,r9
80007486:	f9 bc 00 10 	moveq	r12,16
8000748a:	f9 bc 01 00 	movne	r12,0
8000748e:	10 9a       	mov	r10,r8
80007490:	f0 09 15 08 	lsl	r9,r8,0x8
80007494:	e6 1a ff 00 	andh	r10,0xff00,COH
80007498:	f7 bc 00 f8 	subeq	r12,-8
8000749c:	f2 08 17 00 	moveq	r8,r9
800074a0:	10 9a       	mov	r10,r8
800074a2:	f0 09 15 04 	lsl	r9,r8,0x4
800074a6:	e6 1a f0 00 	andh	r10,0xf000,COH
800074aa:	f7 bc 00 fc 	subeq	r12,-4
800074ae:	f2 08 17 00 	moveq	r8,r9
800074b2:	10 9a       	mov	r10,r8
800074b4:	f0 09 15 02 	lsl	r9,r8,0x2
800074b8:	e6 1a c0 00 	andh	r10,0xc000,COH
800074bc:	f7 bc 00 fe 	subeq	r12,-2
800074c0:	f2 08 17 00 	moveq	r8,r9
800074c4:	58 08       	cp.w	r8,0
800074c6:	5e 5c       	retlt	r12
800074c8:	ed b8 00 1e 	bld	r8,0x1e
800074cc:	f9 bc 01 20 	movne	r12,32
800074d0:	f7 bc 00 ff 	subeq	r12,-1
800074d4:	5e fc       	retal	r12

800074d6 <__lo0bits>:
800074d6:	18 99       	mov	r9,r12
800074d8:	78 08       	ld.w	r8,r12[0x0]
800074da:	f9 d8 c0 03 	bfextu	r12,r8,0x0,0x3
800074de:	c1 50       	breq	80007508 <__lo0bits+0x32>
800074e0:	ed b8 00 00 	bld	r8,0x0
800074e4:	c0 21       	brne	800074e8 <__lo0bits+0x12>
800074e6:	5e fd       	retal	0
800074e8:	10 9b       	mov	r11,r8
800074ea:	f0 0a 16 01 	lsr	r10,r8,0x1
800074ee:	e2 1b 00 02 	andl	r11,0x2,COH
800074f2:	a3 88       	lsr	r8,0x2
800074f4:	58 0b       	cp.w	r11,0
800074f6:	f3 fa 1a 00 	st.wne	r9[0x0],r10
800074fa:	f9 bc 01 01 	movne	r12,1
800074fe:	f3 f8 0a 00 	st.weq	r9[0x0],r8
80007502:	f9 bc 00 02 	moveq	r12,2
80007506:	5e fc       	retal	r12
80007508:	f5 d8 c0 10 	bfextu	r10,r8,0x0,0x10
8000750c:	f0 0b 16 10 	lsr	r11,r8,0x10
80007510:	58 0a       	cp.w	r10,0
80007512:	f6 08 17 00 	moveq	r8,r11
80007516:	f9 bc 00 10 	moveq	r12,16
8000751a:	f7 d8 c0 08 	bfextu	r11,r8,0x0,0x8
8000751e:	f0 0a 16 08 	lsr	r10,r8,0x8
80007522:	58 0b       	cp.w	r11,0
80007524:	f7 bc 00 f8 	subeq	r12,-8
80007528:	f4 08 17 00 	moveq	r8,r10
8000752c:	f7 d8 c0 04 	bfextu	r11,r8,0x0,0x4
80007530:	f0 0a 16 04 	lsr	r10,r8,0x4
80007534:	58 0b       	cp.w	r11,0
80007536:	f7 bc 00 fc 	subeq	r12,-4
8000753a:	f4 08 17 00 	moveq	r8,r10
8000753e:	f7 d8 c0 02 	bfextu	r11,r8,0x0,0x2
80007542:	f0 0a 16 02 	lsr	r10,r8,0x2
80007546:	58 0b       	cp.w	r11,0
80007548:	f7 bc 00 fe 	subeq	r12,-2
8000754c:	f4 08 17 00 	moveq	r8,r10
80007550:	ed b8 00 00 	bld	r8,0x0
80007554:	c0 60       	breq	80007560 <__lo0bits+0x8a>
80007556:	a1 98       	lsr	r8,0x1
80007558:	c0 31       	brne	8000755e <__lo0bits+0x88>
8000755a:	32 0c       	mov	r12,32
8000755c:	5e fc       	retal	r12
8000755e:	2f fc       	sub	r12,-1
80007560:	93 08       	st.w	r9[0x0],r8
80007562:	5e fc       	retal	r12

80007564 <__mcmp>:
80007564:	d4 01       	pushm	lr
80007566:	18 98       	mov	r8,r12
80007568:	76 49       	ld.w	r9,r11[0x10]
8000756a:	78 4c       	ld.w	r12,r12[0x10]
8000756c:	12 1c       	sub	r12,r9
8000756e:	c1 31       	brne	80007594 <__mcmp+0x30>
80007570:	2f b9       	sub	r9,-5
80007572:	a3 69       	lsl	r9,0x2
80007574:	12 0b       	add	r11,r9
80007576:	f0 09 00 09 	add	r9,r8,r9
8000757a:	2e c8       	sub	r8,-20
8000757c:	13 4e       	ld.w	lr,--r9
8000757e:	17 4a       	ld.w	r10,--r11
80007580:	14 3e       	cp.w	lr,r10
80007582:	c0 60       	breq	8000758e <__mcmp+0x2a>
80007584:	f9 bc 03 ff 	movlo	r12,-1
80007588:	f9 bc 02 01 	movhs	r12,1
8000758c:	d8 02       	popm	pc
8000758e:	10 39       	cp.w	r9,r8
80007590:	fe 9b ff f6 	brhi	8000757c <__mcmp+0x18>
80007594:	d8 02       	popm	pc
80007596:	d7 03       	nop

80007598 <_Bfree>:
80007598:	d4 21       	pushm	r4-r7,lr
8000759a:	18 97       	mov	r7,r12
8000759c:	16 95       	mov	r5,r11
8000759e:	78 96       	ld.w	r6,r12[0x24]
800075a0:	58 06       	cp.w	r6,0
800075a2:	c0 91       	brne	800075b4 <_Bfree+0x1c>
800075a4:	31 0c       	mov	r12,16
800075a6:	fe b0 fd 15 	rcall	80006fd0 <malloc>
800075aa:	99 36       	st.w	r12[0xc],r6
800075ac:	8f 9c       	st.w	r7[0x24],r12
800075ae:	99 16       	st.w	r12[0x4],r6
800075b0:	99 26       	st.w	r12[0x8],r6
800075b2:	99 06       	st.w	r12[0x0],r6
800075b4:	58 05       	cp.w	r5,0
800075b6:	c0 90       	breq	800075c8 <_Bfree+0x30>
800075b8:	6a 19       	ld.w	r9,r5[0x4]
800075ba:	6e 98       	ld.w	r8,r7[0x24]
800075bc:	70 38       	ld.w	r8,r8[0xc]
800075be:	f0 09 03 2a 	ld.w	r10,r8[r9<<0x2]
800075c2:	8b 0a       	st.w	r5[0x0],r10
800075c4:	f0 09 09 25 	st.w	r8[r9<<0x2],r5
800075c8:	d8 22       	popm	r4-r7,pc
800075ca:	d7 03       	nop

800075cc <_Balloc>:
800075cc:	d4 21       	pushm	r4-r7,lr
800075ce:	18 97       	mov	r7,r12
800075d0:	16 96       	mov	r6,r11
800075d2:	78 95       	ld.w	r5,r12[0x24]
800075d4:	58 05       	cp.w	r5,0
800075d6:	c0 91       	brne	800075e8 <_Balloc+0x1c>
800075d8:	31 0c       	mov	r12,16
800075da:	fe b0 fc fb 	rcall	80006fd0 <malloc>
800075de:	99 35       	st.w	r12[0xc],r5
800075e0:	8f 9c       	st.w	r7[0x24],r12
800075e2:	99 15       	st.w	r12[0x4],r5
800075e4:	99 25       	st.w	r12[0x8],r5
800075e6:	99 05       	st.w	r12[0x0],r5
800075e8:	6e 95       	ld.w	r5,r7[0x24]
800075ea:	6a 38       	ld.w	r8,r5[0xc]
800075ec:	58 08       	cp.w	r8,0
800075ee:	c0 b1       	brne	80007604 <_Balloc+0x38>
800075f0:	31 0a       	mov	r10,16
800075f2:	30 4b       	mov	r11,4
800075f4:	0e 9c       	mov	r12,r7
800075f6:	e0 a0 04 93 	rcall	80007f1c <_calloc_r>
800075fa:	8b 3c       	st.w	r5[0xc],r12
800075fc:	6e 98       	ld.w	r8,r7[0x24]
800075fe:	70 3c       	ld.w	r12,r8[0xc]
80007600:	58 0c       	cp.w	r12,0
80007602:	c1 b0       	breq	80007638 <_Balloc+0x6c>
80007604:	6e 98       	ld.w	r8,r7[0x24]
80007606:	70 38       	ld.w	r8,r8[0xc]
80007608:	f0 06 00 28 	add	r8,r8,r6<<0x2
8000760c:	70 0c       	ld.w	r12,r8[0x0]
8000760e:	58 0c       	cp.w	r12,0
80007610:	c0 40       	breq	80007618 <_Balloc+0x4c>
80007612:	78 09       	ld.w	r9,r12[0x0]
80007614:	91 09       	st.w	r8[0x0],r9
80007616:	c0 e8       	rjmp	80007632 <_Balloc+0x66>
80007618:	0e 9c       	mov	r12,r7
8000761a:	30 17       	mov	r7,1
8000761c:	0e 9b       	mov	r11,r7
8000761e:	ee 06 09 47 	lsl	r7,r7,r6
80007622:	ee ca ff fb 	sub	r10,r7,-5
80007626:	a3 6a       	lsl	r10,0x2
80007628:	e0 a0 04 7a 	rcall	80007f1c <_calloc_r>
8000762c:	c0 60       	breq	80007638 <_Balloc+0x6c>
8000762e:	99 16       	st.w	r12[0x4],r6
80007630:	99 27       	st.w	r12[0x8],r7
80007632:	30 08       	mov	r8,0
80007634:	99 38       	st.w	r12[0xc],r8
80007636:	99 48       	st.w	r12[0x10],r8
80007638:	d8 22       	popm	r4-r7,pc
8000763a:	d7 03       	nop

8000763c <__d2b>:
8000763c:	d4 31       	pushm	r0-r7,lr
8000763e:	20 2d       	sub	sp,8
80007640:	16 93       	mov	r3,r11
80007642:	12 96       	mov	r6,r9
80007644:	10 95       	mov	r5,r8
80007646:	14 92       	mov	r2,r10
80007648:	30 1b       	mov	r11,1
8000764a:	cc 1f       	rcall	800075cc <_Balloc>
8000764c:	f3 d3 c0 14 	bfextu	r9,r3,0x0,0x14
80007650:	50 09       	stdsp	sp[0x0],r9
80007652:	f1 d3 c0 1f 	bfextu	r8,r3,0x0,0x1f
80007656:	b5 a9       	sbr	r9,0x14
80007658:	f0 01 16 14 	lsr	r1,r8,0x14
8000765c:	fb f9 1a 00 	st.wne	sp[0x0],r9
80007660:	18 94       	mov	r4,r12
80007662:	58 02       	cp.w	r2,0
80007664:	c1 d0       	breq	8000769e <__d2b+0x62>
80007666:	fa cc ff f8 	sub	r12,sp,-8
8000766a:	18 d2       	st.w	--r12,r2
8000766c:	c3 5f       	rcall	800074d6 <__lo0bits>
8000766e:	40 18       	lddsp	r8,sp[0x4]
80007670:	c0 d0       	breq	8000768a <__d2b+0x4e>
80007672:	40 09       	lddsp	r9,sp[0x0]
80007674:	f8 0a 11 20 	rsub	r10,r12,32
80007678:	f2 0a 09 4a 	lsl	r10,r9,r10
8000767c:	f5 e8 10 08 	or	r8,r10,r8
80007680:	89 58       	st.w	r4[0x14],r8
80007682:	f2 0c 0a 49 	lsr	r9,r9,r12
80007686:	50 09       	stdsp	sp[0x0],r9
80007688:	c0 28       	rjmp	8000768c <__d2b+0x50>
8000768a:	89 58       	st.w	r4[0x14],r8
8000768c:	40 08       	lddsp	r8,sp[0x0]
8000768e:	58 08       	cp.w	r8,0
80007690:	f9 b3 01 02 	movne	r3,2
80007694:	f9 b3 00 01 	moveq	r3,1
80007698:	89 68       	st.w	r4[0x18],r8
8000769a:	89 43       	st.w	r4[0x10],r3
8000769c:	c0 88       	rjmp	800076ac <__d2b+0x70>
8000769e:	1a 9c       	mov	r12,sp
800076a0:	c1 bf       	rcall	800074d6 <__lo0bits>
800076a2:	30 13       	mov	r3,1
800076a4:	40 08       	lddsp	r8,sp[0x0]
800076a6:	2e 0c       	sub	r12,-32
800076a8:	89 43       	st.w	r4[0x10],r3
800076aa:	89 58       	st.w	r4[0x14],r8
800076ac:	58 01       	cp.w	r1,0
800076ae:	c0 90       	breq	800076c0 <__d2b+0x84>
800076b0:	e2 c1 04 33 	sub	r1,r1,1075
800076b4:	18 01       	add	r1,r12
800076b6:	8d 01       	st.w	r6[0x0],r1
800076b8:	f8 0c 11 35 	rsub	r12,r12,53
800076bc:	8b 0c       	st.w	r5[0x0],r12
800076be:	c0 c8       	rjmp	800076d6 <__d2b+0x9a>
800076c0:	e6 c8 ff fc 	sub	r8,r3,-4
800076c4:	f8 cc 04 32 	sub	r12,r12,1074
800076c8:	a5 73       	lsl	r3,0x5
800076ca:	8d 0c       	st.w	r6[0x0],r12
800076cc:	e8 08 03 2c 	ld.w	r12,r4[r8<<0x2]
800076d0:	cd 3e       	rcall	80007476 <__hi0bits>
800076d2:	18 13       	sub	r3,r12
800076d4:	8b 03       	st.w	r5[0x0],r3
800076d6:	08 9c       	mov	r12,r4
800076d8:	2f ed       	sub	sp,-8
800076da:	d8 32       	popm	r0-r7,pc

800076dc <__mdiff>:
800076dc:	d4 31       	pushm	r0-r7,lr
800076de:	74 48       	ld.w	r8,r10[0x10]
800076e0:	76 45       	ld.w	r5,r11[0x10]
800076e2:	16 97       	mov	r7,r11
800076e4:	14 96       	mov	r6,r10
800076e6:	10 15       	sub	r5,r8
800076e8:	c1 31       	brne	8000770e <__mdiff+0x32>
800076ea:	2f b8       	sub	r8,-5
800076ec:	ee ce ff ec 	sub	lr,r7,-20
800076f0:	a3 68       	lsl	r8,0x2
800076f2:	f4 08 00 0b 	add	r11,r10,r8
800076f6:	ee 08 00 08 	add	r8,r7,r8
800076fa:	11 4a       	ld.w	r10,--r8
800076fc:	17 49       	ld.w	r9,--r11
800076fe:	12 3a       	cp.w	r10,r9
80007700:	c0 30       	breq	80007706 <__mdiff+0x2a>
80007702:	c0 e2       	brcc	8000771e <__mdiff+0x42>
80007704:	c0 78       	rjmp	80007712 <__mdiff+0x36>
80007706:	1c 38       	cp.w	r8,lr
80007708:	fe 9b ff f9 	brhi	800076fa <__mdiff+0x1e>
8000770c:	c4 98       	rjmp	8000779e <__mdiff+0xc2>
8000770e:	58 05       	cp.w	r5,0
80007710:	c0 64       	brge	8000771c <__mdiff+0x40>
80007712:	0e 98       	mov	r8,r7
80007714:	30 15       	mov	r5,1
80007716:	0c 97       	mov	r7,r6
80007718:	10 96       	mov	r6,r8
8000771a:	c0 28       	rjmp	8000771e <__mdiff+0x42>
8000771c:	30 05       	mov	r5,0
8000771e:	6e 1b       	ld.w	r11,r7[0x4]
80007720:	c5 6f       	rcall	800075cc <_Balloc>
80007722:	6e 49       	ld.w	r9,r7[0x10]
80007724:	6c 44       	ld.w	r4,r6[0x10]
80007726:	99 35       	st.w	r12[0xc],r5
80007728:	2f b4       	sub	r4,-5
8000772a:	f2 c5 ff fb 	sub	r5,r9,-5
8000772e:	ec 04 00 24 	add	r4,r6,r4<<0x2
80007732:	ee 05 00 25 	add	r5,r7,r5<<0x2
80007736:	2e c6       	sub	r6,-20
80007738:	2e c7       	sub	r7,-20
8000773a:	f8 c8 ff ec 	sub	r8,r12,-20
8000773e:	30 0a       	mov	r10,0
80007740:	0f 0e       	ld.w	lr,r7++
80007742:	0d 0b       	ld.w	r11,r6++
80007744:	fc 02 16 10 	lsr	r2,lr,0x10
80007748:	f6 03 16 10 	lsr	r3,r11,0x10
8000774c:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80007750:	e4 03 01 03 	sub	r3,r2,r3
80007754:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80007758:	fc 0b 01 0b 	sub	r11,lr,r11
8000775c:	f6 0a 00 0a 	add	r10,r11,r10
80007760:	b0 1a       	st.h	r8[0x2],r10
80007762:	b1 4a       	asr	r10,0x10
80007764:	e6 0a 00 0a 	add	r10,r3,r10
80007768:	b0 0a       	st.h	r8[0x0],r10
8000776a:	2f c8       	sub	r8,-4
8000776c:	b1 4a       	asr	r10,0x10
8000776e:	08 36       	cp.w	r6,r4
80007770:	ce 83       	brcs	80007740 <__mdiff+0x64>
80007772:	c0 d8       	rjmp	8000778c <__mdiff+0xb0>
80007774:	0f 0b       	ld.w	r11,r7++
80007776:	f6 0e 16 10 	lsr	lr,r11,0x10
8000777a:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
8000777e:	16 0a       	add	r10,r11
80007780:	b0 1a       	st.h	r8[0x2],r10
80007782:	b1 4a       	asr	r10,0x10
80007784:	1c 0a       	add	r10,lr
80007786:	b0 0a       	st.h	r8[0x0],r10
80007788:	2f c8       	sub	r8,-4
8000778a:	b1 4a       	asr	r10,0x10
8000778c:	0a 37       	cp.w	r7,r5
8000778e:	cf 33       	brcs	80007774 <__mdiff+0x98>
80007790:	c0 28       	rjmp	80007794 <__mdiff+0xb8>
80007792:	20 19       	sub	r9,1
80007794:	11 4a       	ld.w	r10,--r8
80007796:	58 0a       	cp.w	r10,0
80007798:	cf d0       	breq	80007792 <__mdiff+0xb6>
8000779a:	99 49       	st.w	r12[0x10],r9
8000779c:	d8 32       	popm	r0-r7,pc
8000779e:	30 0b       	mov	r11,0
800077a0:	c1 6f       	rcall	800075cc <_Balloc>
800077a2:	30 18       	mov	r8,1
800077a4:	99 48       	st.w	r12[0x10],r8
800077a6:	30 08       	mov	r8,0
800077a8:	99 58       	st.w	r12[0x14],r8
800077aa:	d8 32       	popm	r0-r7,pc

800077ac <__lshift>:
800077ac:	d4 31       	pushm	r0-r7,lr
800077ae:	16 97       	mov	r7,r11
800077b0:	76 46       	ld.w	r6,r11[0x10]
800077b2:	f4 02 14 05 	asr	r2,r10,0x5
800077b6:	2f f6       	sub	r6,-1
800077b8:	14 93       	mov	r3,r10
800077ba:	18 94       	mov	r4,r12
800077bc:	04 06       	add	r6,r2
800077be:	76 1b       	ld.w	r11,r11[0x4]
800077c0:	6e 28       	ld.w	r8,r7[0x8]
800077c2:	c0 38       	rjmp	800077c8 <__lshift+0x1c>
800077c4:	2f fb       	sub	r11,-1
800077c6:	a1 78       	lsl	r8,0x1
800077c8:	10 36       	cp.w	r6,r8
800077ca:	fe 99 ff fd 	brgt	800077c4 <__lshift+0x18>
800077ce:	08 9c       	mov	r12,r4
800077d0:	cf ee       	rcall	800075cc <_Balloc>
800077d2:	30 09       	mov	r9,0
800077d4:	18 95       	mov	r5,r12
800077d6:	f8 c8 ff ec 	sub	r8,r12,-20
800077da:	12 9a       	mov	r10,r9
800077dc:	c0 38       	rjmp	800077e2 <__lshift+0x36>
800077de:	10 aa       	st.w	r8++,r10
800077e0:	2f f9       	sub	r9,-1
800077e2:	04 39       	cp.w	r9,r2
800077e4:	cf d5       	brlt	800077de <__lshift+0x32>
800077e6:	6e 4b       	ld.w	r11,r7[0x10]
800077e8:	e7 d3 c0 05 	bfextu	r3,r3,0x0,0x5
800077ec:	2f bb       	sub	r11,-5
800077ee:	ee c9 ff ec 	sub	r9,r7,-20
800077f2:	ee 0b 00 2b 	add	r11,r7,r11<<0x2
800077f6:	58 03       	cp.w	r3,0
800077f8:	c1 30       	breq	8000781e <__lshift+0x72>
800077fa:	e6 0c 11 20 	rsub	r12,r3,32
800077fe:	30 0a       	mov	r10,0
80007800:	72 02       	ld.w	r2,r9[0x0]
80007802:	e4 03 09 42 	lsl	r2,r2,r3
80007806:	04 4a       	or	r10,r2
80007808:	10 aa       	st.w	r8++,r10
8000780a:	13 0a       	ld.w	r10,r9++
8000780c:	f4 0c 0a 4a 	lsr	r10,r10,r12
80007810:	16 39       	cp.w	r9,r11
80007812:	cf 73       	brcs	80007800 <__lshift+0x54>
80007814:	91 0a       	st.w	r8[0x0],r10
80007816:	58 0a       	cp.w	r10,0
80007818:	c0 70       	breq	80007826 <__lshift+0x7a>
8000781a:	2f f6       	sub	r6,-1
8000781c:	c0 58       	rjmp	80007826 <__lshift+0x7a>
8000781e:	13 0a       	ld.w	r10,r9++
80007820:	10 aa       	st.w	r8++,r10
80007822:	16 39       	cp.w	r9,r11
80007824:	cf d3       	brcs	8000781e <__lshift+0x72>
80007826:	08 9c       	mov	r12,r4
80007828:	20 16       	sub	r6,1
8000782a:	0e 9b       	mov	r11,r7
8000782c:	8b 46       	st.w	r5[0x10],r6
8000782e:	cb 5e       	rcall	80007598 <_Bfree>
80007830:	0a 9c       	mov	r12,r5
80007832:	d8 32       	popm	r0-r7,pc

80007834 <__multiply>:
80007834:	d4 31       	pushm	r0-r7,lr
80007836:	20 2d       	sub	sp,8
80007838:	76 49       	ld.w	r9,r11[0x10]
8000783a:	74 48       	ld.w	r8,r10[0x10]
8000783c:	16 96       	mov	r6,r11
8000783e:	14 95       	mov	r5,r10
80007840:	10 39       	cp.w	r9,r8
80007842:	ec 08 17 50 	movlt	r8,r6
80007846:	ea 06 17 50 	movlt	r6,r5
8000784a:	f0 05 17 50 	movlt	r5,r8
8000784e:	6c 28       	ld.w	r8,r6[0x8]
80007850:	76 43       	ld.w	r3,r11[0x10]
80007852:	74 42       	ld.w	r2,r10[0x10]
80007854:	76 1b       	ld.w	r11,r11[0x4]
80007856:	e4 03 00 07 	add	r7,r2,r3
8000785a:	10 37       	cp.w	r7,r8
8000785c:	f7 bb 09 ff 	subgt	r11,-1
80007860:	cb 6e       	rcall	800075cc <_Balloc>
80007862:	ee c4 ff fb 	sub	r4,r7,-5
80007866:	f8 c9 ff ec 	sub	r9,r12,-20
8000786a:	f8 04 00 24 	add	r4,r12,r4<<0x2
8000786e:	30 0a       	mov	r10,0
80007870:	12 98       	mov	r8,r9
80007872:	c0 28       	rjmp	80007876 <__multiply+0x42>
80007874:	10 aa       	st.w	r8++,r10
80007876:	08 38       	cp.w	r8,r4
80007878:	cf e3       	brcs	80007874 <__multiply+0x40>
8000787a:	2f b3       	sub	r3,-5
8000787c:	2f b2       	sub	r2,-5
8000787e:	ec 03 00 23 	add	r3,r6,r3<<0x2
80007882:	ea 02 00 22 	add	r2,r5,r2<<0x2
80007886:	ec cb ff ec 	sub	r11,r6,-20
8000788a:	50 12       	stdsp	sp[0x4],r2
8000788c:	ea ca ff ec 	sub	r10,r5,-20
80007890:	c4 48       	rjmp	80007918 <__multiply+0xe4>
80007892:	94 95       	ld.uh	r5,r10[0x2]
80007894:	58 05       	cp.w	r5,0
80007896:	c2 00       	breq	800078d6 <__multiply+0xa2>
80007898:	12 98       	mov	r8,r9
8000789a:	16 96       	mov	r6,r11
8000789c:	30 0e       	mov	lr,0
8000789e:	50 09       	stdsp	sp[0x0],r9
800078a0:	0d 02       	ld.w	r2,r6++
800078a2:	e4 00 16 10 	lsr	r0,r2,0x10
800078a6:	70 01       	ld.w	r1,r8[0x0]
800078a8:	70 09       	ld.w	r9,r8[0x0]
800078aa:	b1 81       	lsr	r1,0x10
800078ac:	e5 d2 c0 10 	bfextu	r2,r2,0x0,0x10
800078b0:	e0 05 03 41 	mac	r1,r0,r5
800078b4:	ab 32       	mul	r2,r5
800078b6:	e1 d9 c0 10 	bfextu	r0,r9,0x0,0x10
800078ba:	00 02       	add	r2,r0
800078bc:	e4 0e 00 0e 	add	lr,r2,lr
800078c0:	b0 1e       	st.h	r8[0x2],lr
800078c2:	b1 8e       	lsr	lr,0x10
800078c4:	1c 01       	add	r1,lr
800078c6:	b0 01       	st.h	r8[0x0],r1
800078c8:	e2 0e 16 10 	lsr	lr,r1,0x10
800078cc:	2f c8       	sub	r8,-4
800078ce:	06 36       	cp.w	r6,r3
800078d0:	ce 83       	brcs	800078a0 <__multiply+0x6c>
800078d2:	40 09       	lddsp	r9,sp[0x0]
800078d4:	91 0e       	st.w	r8[0x0],lr
800078d6:	94 86       	ld.uh	r6,r10[0x0]
800078d8:	58 06       	cp.w	r6,0
800078da:	c1 d0       	breq	80007914 <__multiply+0xe0>
800078dc:	72 02       	ld.w	r2,r9[0x0]
800078de:	12 98       	mov	r8,r9
800078e0:	16 9e       	mov	lr,r11
800078e2:	30 05       	mov	r5,0
800078e4:	b0 12       	st.h	r8[0x2],r2
800078e6:	1d 01       	ld.w	r1,lr++
800078e8:	90 82       	ld.uh	r2,r8[0x0]
800078ea:	e1 d1 c0 10 	bfextu	r0,r1,0x0,0x10
800078ee:	ad 30       	mul	r0,r6
800078f0:	e0 02 00 02 	add	r2,r0,r2
800078f4:	e4 05 00 05 	add	r5,r2,r5
800078f8:	b0 05       	st.h	r8[0x0],r5
800078fa:	b1 85       	lsr	r5,0x10
800078fc:	b1 81       	lsr	r1,0x10
800078fe:	2f c8       	sub	r8,-4
80007900:	ad 31       	mul	r1,r6
80007902:	90 92       	ld.uh	r2,r8[0x2]
80007904:	e2 02 00 02 	add	r2,r1,r2
80007908:	0a 02       	add	r2,r5
8000790a:	e4 05 16 10 	lsr	r5,r2,0x10
8000790e:	06 3e       	cp.w	lr,r3
80007910:	ce a3       	brcs	800078e4 <__multiply+0xb0>
80007912:	91 02       	st.w	r8[0x0],r2
80007914:	2f ca       	sub	r10,-4
80007916:	2f c9       	sub	r9,-4
80007918:	40 18       	lddsp	r8,sp[0x4]
8000791a:	10 3a       	cp.w	r10,r8
8000791c:	cb b3       	brcs	80007892 <__multiply+0x5e>
8000791e:	c0 28       	rjmp	80007922 <__multiply+0xee>
80007920:	20 17       	sub	r7,1
80007922:	58 07       	cp.w	r7,0
80007924:	e0 8a 00 05 	brle	8000792e <__multiply+0xfa>
80007928:	09 48       	ld.w	r8,--r4
8000792a:	58 08       	cp.w	r8,0
8000792c:	cf a0       	breq	80007920 <__multiply+0xec>
8000792e:	99 47       	st.w	r12[0x10],r7
80007930:	2f ed       	sub	sp,-8
80007932:	d8 32       	popm	r0-r7,pc

80007934 <__i2b>:
80007934:	d4 21       	pushm	r4-r7,lr
80007936:	16 97       	mov	r7,r11
80007938:	30 1b       	mov	r11,1
8000793a:	c4 9e       	rcall	800075cc <_Balloc>
8000793c:	30 19       	mov	r9,1
8000793e:	99 57       	st.w	r12[0x14],r7
80007940:	99 49       	st.w	r12[0x10],r9
80007942:	d8 22       	popm	r4-r7,pc

80007944 <__multadd>:
80007944:	d4 31       	pushm	r0-r7,lr
80007946:	30 08       	mov	r8,0
80007948:	12 95       	mov	r5,r9
8000794a:	16 97       	mov	r7,r11
8000794c:	18 96       	mov	r6,r12
8000794e:	76 44       	ld.w	r4,r11[0x10]
80007950:	f6 c9 ff ec 	sub	r9,r11,-20
80007954:	72 0b       	ld.w	r11,r9[0x0]
80007956:	f6 0c 16 10 	lsr	r12,r11,0x10
8000795a:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
8000795e:	f4 0c 02 4c 	mul	r12,r10,r12
80007962:	f4 0b 03 45 	mac	r5,r10,r11
80007966:	f7 d5 c0 10 	bfextu	r11,r5,0x0,0x10
8000796a:	b1 85       	lsr	r5,0x10
8000796c:	18 05       	add	r5,r12
8000796e:	ea 0c 15 10 	lsl	r12,r5,0x10
80007972:	f8 0b 00 0b 	add	r11,r12,r11
80007976:	12 ab       	st.w	r9++,r11
80007978:	2f f8       	sub	r8,-1
8000797a:	b1 85       	lsr	r5,0x10
8000797c:	08 38       	cp.w	r8,r4
8000797e:	ce b5       	brlt	80007954 <__multadd+0x10>
80007980:	58 05       	cp.w	r5,0
80007982:	c1 c0       	breq	800079ba <__multadd+0x76>
80007984:	6e 28       	ld.w	r8,r7[0x8]
80007986:	10 34       	cp.w	r4,r8
80007988:	c1 35       	brlt	800079ae <__multadd+0x6a>
8000798a:	6e 1b       	ld.w	r11,r7[0x4]
8000798c:	0c 9c       	mov	r12,r6
8000798e:	2f fb       	sub	r11,-1
80007990:	c1 ee       	rcall	800075cc <_Balloc>
80007992:	6e 4a       	ld.w	r10,r7[0x10]
80007994:	ee cb ff f4 	sub	r11,r7,-12
80007998:	18 93       	mov	r3,r12
8000799a:	2f ea       	sub	r10,-2
8000799c:	2f 4c       	sub	r12,-12
8000799e:	a3 6a       	lsl	r10,0x2
800079a0:	fe b0 de 36 	rcall	8000360c <memcpy>
800079a4:	0e 9b       	mov	r11,r7
800079a6:	0c 9c       	mov	r12,r6
800079a8:	fe b0 fd f8 	rcall	80007598 <_Bfree>
800079ac:	06 97       	mov	r7,r3
800079ae:	e8 c8 ff ff 	sub	r8,r4,-1
800079b2:	2f b4       	sub	r4,-5
800079b4:	8f 48       	st.w	r7[0x10],r8
800079b6:	ee 04 09 25 	st.w	r7[r4<<0x2],r5
800079ba:	0e 9c       	mov	r12,r7
800079bc:	d8 32       	popm	r0-r7,pc
800079be:	d7 03       	nop

800079c0 <__pow5mult>:
800079c0:	d4 31       	pushm	r0-r7,lr
800079c2:	14 96       	mov	r6,r10
800079c4:	18 97       	mov	r7,r12
800079c6:	16 94       	mov	r4,r11
800079c8:	f1 da c0 02 	bfextu	r8,r10,0x0,0x2
800079cc:	c0 90       	breq	800079de <__pow5mult+0x1e>
800079ce:	20 18       	sub	r8,1
800079d0:	fe c9 e1 7c 	sub	r9,pc,-7812
800079d4:	f2 08 03 2a 	ld.w	r10,r9[r8<<0x2]
800079d8:	30 09       	mov	r9,0
800079da:	cb 5f       	rcall	80007944 <__multadd>
800079dc:	18 94       	mov	r4,r12
800079de:	a3 46       	asr	r6,0x2
800079e0:	c3 40       	breq	80007a48 <__pow5mult+0x88>
800079e2:	6e 95       	ld.w	r5,r7[0x24]
800079e4:	58 05       	cp.w	r5,0
800079e6:	c0 91       	brne	800079f8 <__pow5mult+0x38>
800079e8:	31 0c       	mov	r12,16
800079ea:	fe b0 fa f3 	rcall	80006fd0 <malloc>
800079ee:	99 35       	st.w	r12[0xc],r5
800079f0:	8f 9c       	st.w	r7[0x24],r12
800079f2:	99 15       	st.w	r12[0x4],r5
800079f4:	99 25       	st.w	r12[0x8],r5
800079f6:	99 05       	st.w	r12[0x0],r5
800079f8:	6e 93       	ld.w	r3,r7[0x24]
800079fa:	66 25       	ld.w	r5,r3[0x8]
800079fc:	58 05       	cp.w	r5,0
800079fe:	c0 c1       	brne	80007a16 <__pow5mult+0x56>
80007a00:	e0 6b 02 71 	mov	r11,625
80007a04:	0e 9c       	mov	r12,r7
80007a06:	c9 7f       	rcall	80007934 <__i2b>
80007a08:	87 2c       	st.w	r3[0x8],r12
80007a0a:	30 08       	mov	r8,0
80007a0c:	18 95       	mov	r5,r12
80007a0e:	99 08       	st.w	r12[0x0],r8
80007a10:	c0 38       	rjmp	80007a16 <__pow5mult+0x56>
80007a12:	06 9c       	mov	r12,r3
80007a14:	18 95       	mov	r5,r12
80007a16:	ed b6 00 00 	bld	r6,0x0
80007a1a:	c0 b1       	brne	80007a30 <__pow5mult+0x70>
80007a1c:	08 9b       	mov	r11,r4
80007a1e:	0a 9a       	mov	r10,r5
80007a20:	0e 9c       	mov	r12,r7
80007a22:	c0 9f       	rcall	80007834 <__multiply>
80007a24:	08 9b       	mov	r11,r4
80007a26:	18 93       	mov	r3,r12
80007a28:	0e 9c       	mov	r12,r7
80007a2a:	06 94       	mov	r4,r3
80007a2c:	fe b0 fd b6 	rcall	80007598 <_Bfree>
80007a30:	a1 56       	asr	r6,0x1
80007a32:	c0 b0       	breq	80007a48 <__pow5mult+0x88>
80007a34:	6a 03       	ld.w	r3,r5[0x0]
80007a36:	58 03       	cp.w	r3,0
80007a38:	ce d1       	brne	80007a12 <__pow5mult+0x52>
80007a3a:	0a 9a       	mov	r10,r5
80007a3c:	0a 9b       	mov	r11,r5
80007a3e:	0e 9c       	mov	r12,r7
80007a40:	cf ae       	rcall	80007834 <__multiply>
80007a42:	8b 0c       	st.w	r5[0x0],r12
80007a44:	99 03       	st.w	r12[0x0],r3
80007a46:	ce 7b       	rjmp	80007a14 <__pow5mult+0x54>
80007a48:	08 9c       	mov	r12,r4
80007a4a:	d8 32       	popm	r0-r7,pc

80007a4c <_realloc_r>:
80007a4c:	d4 31       	pushm	r0-r7,lr
80007a4e:	20 1d       	sub	sp,4
80007a50:	16 94       	mov	r4,r11
80007a52:	18 92       	mov	r2,r12
80007a54:	14 9b       	mov	r11,r10
80007a56:	58 04       	cp.w	r4,0
80007a58:	c0 51       	brne	80007a62 <_realloc_r+0x16>
80007a5a:	fe b0 fa c3 	rcall	80006fe0 <_malloc_r>
80007a5e:	18 95       	mov	r5,r12
80007a60:	c5 39       	rjmp	80007d06 <_realloc_r+0x2ba>
80007a62:	50 0a       	stdsp	sp[0x0],r10
80007a64:	fe b0 fd 07 	rcall	80007472 <__malloc_lock>
80007a68:	40 0b       	lddsp	r11,sp[0x0]
80007a6a:	f6 c8 ff f5 	sub	r8,r11,-11
80007a6e:	e8 c1 00 08 	sub	r1,r4,8
80007a72:	10 96       	mov	r6,r8
80007a74:	62 1c       	ld.w	r12,r1[0x4]
80007a76:	e0 16 ff f8 	andl	r6,0xfff8
80007a7a:	59 68       	cp.w	r8,22
80007a7c:	f9 b6 08 10 	movls	r6,16
80007a80:	16 36       	cp.w	r6,r11
80007a82:	5f 38       	srlo	r8
80007a84:	f1 e6 13 f8 	or	r8,r8,r6>>0x1f
80007a88:	c0 50       	breq	80007a92 <_realloc_r+0x46>
80007a8a:	30 c8       	mov	r8,12
80007a8c:	30 05       	mov	r5,0
80007a8e:	85 38       	st.w	r2[0xc],r8
80007a90:	c3 b9       	rjmp	80007d06 <_realloc_r+0x2ba>
80007a92:	18 90       	mov	r0,r12
80007a94:	e0 10 ff fc 	andl	r0,0xfffc
80007a98:	0c 30       	cp.w	r0,r6
80007a9a:	e0 84 01 0b 	brge	80007cb0 <_realloc_r+0x264>
80007a9e:	e0 68 01 08 	mov	r8,264
80007aa2:	e2 00 00 09 	add	r9,r1,r0
80007aa6:	70 25       	ld.w	r5,r8[0x8]
80007aa8:	0a 39       	cp.w	r9,r5
80007aaa:	c0 90       	breq	80007abc <_realloc_r+0x70>
80007aac:	72 1a       	ld.w	r10,r9[0x4]
80007aae:	a1 ca       	cbr	r10,0x0
80007ab0:	f2 0a 00 0a 	add	r10,r9,r10
80007ab4:	74 1a       	ld.w	r10,r10[0x4]
80007ab6:	ed ba 00 00 	bld	r10,0x0
80007aba:	c2 20       	breq	80007afe <_realloc_r+0xb2>
80007abc:	72 1a       	ld.w	r10,r9[0x4]
80007abe:	e0 1a ff fc 	andl	r10,0xfffc
80007ac2:	f4 00 00 03 	add	r3,r10,r0
80007ac6:	0a 39       	cp.w	r9,r5
80007ac8:	c1 31       	brne	80007aee <_realloc_r+0xa2>
80007aca:	ec c7 ff f0 	sub	r7,r6,-16
80007ace:	0e 33       	cp.w	r3,r7
80007ad0:	c1 95       	brlt	80007b02 <_realloc_r+0xb6>
80007ad2:	e2 06 00 09 	add	r9,r1,r6
80007ad6:	0c 13       	sub	r3,r6
80007ad8:	a1 a3       	sbr	r3,0x0
80007ada:	93 13       	st.w	r9[0x4],r3
80007adc:	91 29       	st.w	r8[0x8],r9
80007ade:	04 9c       	mov	r12,r2
80007ae0:	62 18       	ld.w	r8,r1[0x4]
80007ae2:	08 95       	mov	r5,r4
80007ae4:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007ae8:	10 46       	or	r6,r8
80007aea:	83 16       	st.w	r1[0x4],r6
80007aec:	c0 b9       	rjmp	80007d02 <_realloc_r+0x2b6>
80007aee:	0c 33       	cp.w	r3,r6
80007af0:	c0 95       	brlt	80007b02 <_realloc_r+0xb6>
80007af2:	72 28       	ld.w	r8,r9[0x8]
80007af4:	02 97       	mov	r7,r1
80007af6:	72 39       	ld.w	r9,r9[0xc]
80007af8:	93 28       	st.w	r9[0x8],r8
80007afa:	91 39       	st.w	r8[0xc],r9
80007afc:	cd c8       	rjmp	80007cb4 <_realloc_r+0x268>
80007afe:	30 0a       	mov	r10,0
80007b00:	14 99       	mov	r9,r10
80007b02:	ed bc 00 00 	bld	r12,0x0
80007b06:	e0 80 00 95 	breq	80007c30 <_realloc_r+0x1e4>
80007b0a:	62 07       	ld.w	r7,r1[0x0]
80007b0c:	e2 07 01 07 	sub	r7,r1,r7
80007b10:	6e 1c       	ld.w	r12,r7[0x4]
80007b12:	e0 1c ff fc 	andl	r12,0xfffc
80007b16:	58 09       	cp.w	r9,0
80007b18:	c5 60       	breq	80007bc4 <_realloc_r+0x178>
80007b1a:	f8 00 00 03 	add	r3,r12,r0
80007b1e:	0a 39       	cp.w	r9,r5
80007b20:	c4 81       	brne	80007bb0 <_realloc_r+0x164>
80007b22:	14 03       	add	r3,r10
80007b24:	ec c9 ff f0 	sub	r9,r6,-16
80007b28:	12 33       	cp.w	r3,r9
80007b2a:	c4 d5       	brlt	80007bc4 <_realloc_r+0x178>
80007b2c:	6e 3a       	ld.w	r10,r7[0xc]
80007b2e:	6e 29       	ld.w	r9,r7[0x8]
80007b30:	95 29       	st.w	r10[0x8],r9
80007b32:	93 3a       	st.w	r9[0xc],r10
80007b34:	ee c5 ff f8 	sub	r5,r7,-8
80007b38:	e0 ca 00 04 	sub	r10,r0,4
80007b3c:	e0 4a 00 24 	cp.w	r10,36
80007b40:	e0 8b 00 25 	brhi	80007b8a <_realloc_r+0x13e>
80007b44:	0a 99       	mov	r9,r5
80007b46:	59 3a       	cp.w	r10,19
80007b48:	e0 88 00 1a 	brls	80007b7c <_realloc_r+0x130>
80007b4c:	09 09       	ld.w	r9,r4++
80007b4e:	8b 09       	st.w	r5[0x0],r9
80007b50:	09 09       	ld.w	r9,r4++
80007b52:	8f 39       	st.w	r7[0xc],r9
80007b54:	ee c9 ff f0 	sub	r9,r7,-16
80007b58:	59 ba       	cp.w	r10,27
80007b5a:	e0 88 00 11 	brls	80007b7c <_realloc_r+0x130>
80007b5e:	09 0b       	ld.w	r11,r4++
80007b60:	93 0b       	st.w	r9[0x0],r11
80007b62:	09 09       	ld.w	r9,r4++
80007b64:	8f 59       	st.w	r7[0x14],r9
80007b66:	ee c9 ff e8 	sub	r9,r7,-24
80007b6a:	e0 4a 00 24 	cp.w	r10,36
80007b6e:	c0 71       	brne	80007b7c <_realloc_r+0x130>
80007b70:	09 0a       	ld.w	r10,r4++
80007b72:	93 0a       	st.w	r9[0x0],r10
80007b74:	ee c9 ff e0 	sub	r9,r7,-32
80007b78:	09 0a       	ld.w	r10,r4++
80007b7a:	8f 7a       	st.w	r7[0x1c],r10
80007b7c:	09 0a       	ld.w	r10,r4++
80007b7e:	12 aa       	st.w	r9++,r10
80007b80:	68 0a       	ld.w	r10,r4[0x0]
80007b82:	93 0a       	st.w	r9[0x0],r10
80007b84:	68 1a       	ld.w	r10,r4[0x4]
80007b86:	93 1a       	st.w	r9[0x4],r10
80007b88:	c0 78       	rjmp	80007b96 <_realloc_r+0x14a>
80007b8a:	50 08       	stdsp	sp[0x0],r8
80007b8c:	08 9b       	mov	r11,r4
80007b8e:	0a 9c       	mov	r12,r5
80007b90:	fe b0 fc 4b 	rcall	80007426 <memmove>
80007b94:	40 08       	lddsp	r8,sp[0x0]
80007b96:	ee 06 00 09 	add	r9,r7,r6
80007b9a:	0c 13       	sub	r3,r6
80007b9c:	a1 a3       	sbr	r3,0x0
80007b9e:	93 13       	st.w	r9[0x4],r3
80007ba0:	91 29       	st.w	r8[0x8],r9
80007ba2:	04 9c       	mov	r12,r2
80007ba4:	6e 18       	ld.w	r8,r7[0x4]
80007ba6:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007baa:	10 46       	or	r6,r8
80007bac:	8f 16       	st.w	r7[0x4],r6
80007bae:	ca a8       	rjmp	80007d02 <_realloc_r+0x2b6>
80007bb0:	14 03       	add	r3,r10
80007bb2:	0c 33       	cp.w	r3,r6
80007bb4:	c0 85       	brlt	80007bc4 <_realloc_r+0x178>
80007bb6:	72 28       	ld.w	r8,r9[0x8]
80007bb8:	72 39       	ld.w	r9,r9[0xc]
80007bba:	93 28       	st.w	r9[0x8],r8
80007bbc:	91 39       	st.w	r8[0xc],r9
80007bbe:	6e 28       	ld.w	r8,r7[0x8]
80007bc0:	6e 39       	ld.w	r9,r7[0xc]
80007bc2:	c0 78       	rjmp	80007bd0 <_realloc_r+0x184>
80007bc4:	f8 00 00 03 	add	r3,r12,r0
80007bc8:	0c 33       	cp.w	r3,r6
80007bca:	c3 35       	brlt	80007c30 <_realloc_r+0x1e4>
80007bcc:	6e 39       	ld.w	r9,r7[0xc]
80007bce:	6e 28       	ld.w	r8,r7[0x8]
80007bd0:	93 28       	st.w	r9[0x8],r8
80007bd2:	91 39       	st.w	r8[0xc],r9
80007bd4:	e0 ca 00 04 	sub	r10,r0,4
80007bd8:	ee cc ff f8 	sub	r12,r7,-8
80007bdc:	e0 4a 00 24 	cp.w	r10,36
80007be0:	e0 8b 00 24 	brhi	80007c28 <_realloc_r+0x1dc>
80007be4:	59 3a       	cp.w	r10,19
80007be6:	e0 88 00 1a 	brls	80007c1a <_realloc_r+0x1ce>
80007bea:	09 08       	ld.w	r8,r4++
80007bec:	99 08       	st.w	r12[0x0],r8
80007bee:	09 08       	ld.w	r8,r4++
80007bf0:	8f 38       	st.w	r7[0xc],r8
80007bf2:	ee cc ff f0 	sub	r12,r7,-16
80007bf6:	59 ba       	cp.w	r10,27
80007bf8:	e0 88 00 11 	brls	80007c1a <_realloc_r+0x1ce>
80007bfc:	09 08       	ld.w	r8,r4++
80007bfe:	99 08       	st.w	r12[0x0],r8
80007c00:	09 08       	ld.w	r8,r4++
80007c02:	8f 58       	st.w	r7[0x14],r8
80007c04:	ee cc ff e8 	sub	r12,r7,-24
80007c08:	e0 4a 00 24 	cp.w	r10,36
80007c0c:	c0 71       	brne	80007c1a <_realloc_r+0x1ce>
80007c0e:	09 08       	ld.w	r8,r4++
80007c10:	99 08       	st.w	r12[0x0],r8
80007c12:	ee cc ff e0 	sub	r12,r7,-32
80007c16:	09 08       	ld.w	r8,r4++
80007c18:	8f 78       	st.w	r7[0x1c],r8
80007c1a:	09 08       	ld.w	r8,r4++
80007c1c:	18 a8       	st.w	r12++,r8
80007c1e:	68 08       	ld.w	r8,r4[0x0]
80007c20:	99 08       	st.w	r12[0x0],r8
80007c22:	68 18       	ld.w	r8,r4[0x4]
80007c24:	99 18       	st.w	r12[0x4],r8
80007c26:	c4 78       	rjmp	80007cb4 <_realloc_r+0x268>
80007c28:	08 9b       	mov	r11,r4
80007c2a:	fe b0 fb fe 	rcall	80007426 <memmove>
80007c2e:	c4 38       	rjmp	80007cb4 <_realloc_r+0x268>
80007c30:	04 9c       	mov	r12,r2
80007c32:	fe b0 f9 d7 	rcall	80006fe0 <_malloc_r>
80007c36:	18 95       	mov	r5,r12
80007c38:	c3 a0       	breq	80007cac <_realloc_r+0x260>
80007c3a:	62 18       	ld.w	r8,r1[0x4]
80007c3c:	f8 c9 00 08 	sub	r9,r12,8
80007c40:	a1 c8       	cbr	r8,0x0
80007c42:	e2 08 00 08 	add	r8,r1,r8
80007c46:	10 39       	cp.w	r9,r8
80007c48:	c0 71       	brne	80007c56 <_realloc_r+0x20a>
80007c4a:	72 13       	ld.w	r3,r9[0x4]
80007c4c:	02 97       	mov	r7,r1
80007c4e:	e0 13 ff fc 	andl	r3,0xfffc
80007c52:	00 03       	add	r3,r0
80007c54:	c3 08       	rjmp	80007cb4 <_realloc_r+0x268>
80007c56:	e0 ca 00 04 	sub	r10,r0,4
80007c5a:	e0 4a 00 24 	cp.w	r10,36
80007c5e:	e0 8b 00 20 	brhi	80007c9e <_realloc_r+0x252>
80007c62:	08 99       	mov	r9,r4
80007c64:	18 98       	mov	r8,r12
80007c66:	59 3a       	cp.w	r10,19
80007c68:	e0 88 00 14 	brls	80007c90 <_realloc_r+0x244>
80007c6c:	13 0b       	ld.w	r11,r9++
80007c6e:	10 ab       	st.w	r8++,r11
80007c70:	13 0b       	ld.w	r11,r9++
80007c72:	10 ab       	st.w	r8++,r11
80007c74:	59 ba       	cp.w	r10,27
80007c76:	e0 88 00 0d 	brls	80007c90 <_realloc_r+0x244>
80007c7a:	13 0b       	ld.w	r11,r9++
80007c7c:	10 ab       	st.w	r8++,r11
80007c7e:	13 0b       	ld.w	r11,r9++
80007c80:	10 ab       	st.w	r8++,r11
80007c82:	e0 4a 00 24 	cp.w	r10,36
80007c86:	c0 51       	brne	80007c90 <_realloc_r+0x244>
80007c88:	13 0a       	ld.w	r10,r9++
80007c8a:	10 aa       	st.w	r8++,r10
80007c8c:	13 0a       	ld.w	r10,r9++
80007c8e:	10 aa       	st.w	r8++,r10
80007c90:	13 0a       	ld.w	r10,r9++
80007c92:	10 aa       	st.w	r8++,r10
80007c94:	72 0a       	ld.w	r10,r9[0x0]
80007c96:	91 0a       	st.w	r8[0x0],r10
80007c98:	72 19       	ld.w	r9,r9[0x4]
80007c9a:	91 19       	st.w	r8[0x4],r9
80007c9c:	c0 48       	rjmp	80007ca4 <_realloc_r+0x258>
80007c9e:	08 9b       	mov	r11,r4
80007ca0:	fe b0 fb c3 	rcall	80007426 <memmove>
80007ca4:	08 9b       	mov	r11,r4
80007ca6:	04 9c       	mov	r12,r2
80007ca8:	fe b0 f6 f6 	rcall	80006a94 <_free_r>
80007cac:	04 9c       	mov	r12,r2
80007cae:	c2 a8       	rjmp	80007d02 <_realloc_r+0x2b6>
80007cb0:	00 93       	mov	r3,r0
80007cb2:	02 97       	mov	r7,r1
80007cb4:	e6 06 01 09 	sub	r9,r3,r6
80007cb8:	6e 18       	ld.w	r8,r7[0x4]
80007cba:	58 f9       	cp.w	r9,15
80007cbc:	e0 88 00 16 	brls	80007ce8 <_realloc_r+0x29c>
80007cc0:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007cc4:	ed e8 10 08 	or	r8,r6,r8
80007cc8:	8f 18       	st.w	r7[0x4],r8
80007cca:	12 98       	mov	r8,r9
80007ccc:	a1 a8       	sbr	r8,0x0
80007cce:	ee 06 00 0b 	add	r11,r7,r6
80007cd2:	f6 09 00 09 	add	r9,r11,r9
80007cd6:	97 18       	st.w	r11[0x4],r8
80007cd8:	72 18       	ld.w	r8,r9[0x4]
80007cda:	a1 a8       	sbr	r8,0x0
80007cdc:	2f 8b       	sub	r11,-8
80007cde:	93 18       	st.w	r9[0x4],r8
80007ce0:	04 9c       	mov	r12,r2
80007ce2:	fe b0 f6 d9 	rcall	80006a94 <_free_r>
80007ce6:	c0 b8       	rjmp	80007cfc <_realloc_r+0x2b0>
80007ce8:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007cec:	e7 e8 10 08 	or	r8,r3,r8
80007cf0:	8f 18       	st.w	r7[0x4],r8
80007cf2:	ee 03 00 03 	add	r3,r7,r3
80007cf6:	66 18       	ld.w	r8,r3[0x4]
80007cf8:	a1 a8       	sbr	r8,0x0
80007cfa:	87 18       	st.w	r3[0x4],r8
80007cfc:	04 9c       	mov	r12,r2
80007cfe:	ee c5 ff f8 	sub	r5,r7,-8
80007d02:	fe b0 fb b9 	rcall	80007474 <__malloc_unlock>
80007d06:	0a 9c       	mov	r12,r5
80007d08:	2f fd       	sub	sp,-4
80007d0a:	d8 32       	popm	r0-r7,pc

80007d0c <__isinfd>:
80007d0c:	14 98       	mov	r8,r10
80007d0e:	fc 19 7f f0 	movh	r9,0x7ff0
80007d12:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
80007d16:	f0 0b 11 00 	rsub	r11,r8,0
80007d1a:	f7 e8 10 08 	or	r8,r11,r8
80007d1e:	f5 e8 13 f8 	or	r8,r10,r8>>0x1f
80007d22:	f2 08 01 08 	sub	r8,r9,r8
80007d26:	f0 0c 11 00 	rsub	r12,r8,0
80007d2a:	f9 e8 10 08 	or	r8,r12,r8
80007d2e:	f0 0c 14 1f 	asr	r12,r8,0x1f
80007d32:	2f fc       	sub	r12,-1
80007d34:	5e fc       	retal	r12

80007d36 <__isnand>:
80007d36:	14 98       	mov	r8,r10
80007d38:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
80007d3c:	f0 0c 11 00 	rsub	r12,r8,0
80007d40:	10 4c       	or	r12,r8
80007d42:	fc 18 7f f0 	movh	r8,0x7ff0
80007d46:	f5 ec 13 fc 	or	r12,r10,r12>>0x1f
80007d4a:	f0 0c 01 0c 	sub	r12,r8,r12
80007d4e:	bf 9c       	lsr	r12,0x1f
80007d50:	5e fc       	retal	r12
80007d52:	d7 03       	nop

80007d54 <_sbrk_r>:
80007d54:	d4 21       	pushm	r4-r7,lr
80007d56:	30 08       	mov	r8,0
80007d58:	18 97       	mov	r7,r12
80007d5a:	e0 66 06 94 	mov	r6,1684
80007d5e:	16 9c       	mov	r12,r11
80007d60:	8d 08       	st.w	r6[0x0],r8
80007d62:	ca fc       	rcall	80007ec0 <_sbrk>
80007d64:	5b fc       	cp.w	r12,-1
80007d66:	c0 51       	brne	80007d70 <_sbrk_r+0x1c>
80007d68:	6c 08       	ld.w	r8,r6[0x0]
80007d6a:	58 08       	cp.w	r8,0
80007d6c:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007d70:	d8 22       	popm	r4-r7,pc
80007d72:	d7 03       	nop

80007d74 <__sclose>:
80007d74:	d4 01       	pushm	lr
80007d76:	96 7b       	ld.sh	r11,r11[0xe]
80007d78:	cf ec       	rcall	80007f74 <_close_r>
80007d7a:	d8 02       	popm	pc

80007d7c <__sseek>:
80007d7c:	d4 21       	pushm	r4-r7,lr
80007d7e:	16 97       	mov	r7,r11
80007d80:	96 7b       	ld.sh	r11,r11[0xe]
80007d82:	c8 5d       	rcall	8000808c <_lseek_r>
80007d84:	8e 68       	ld.sh	r8,r7[0xc]
80007d86:	10 99       	mov	r9,r8
80007d88:	ad c8       	cbr	r8,0xc
80007d8a:	ad a9       	sbr	r9,0xc
80007d8c:	5b fc       	cp.w	r12,-1
80007d8e:	ef f8 0c 06 	st.heq	r7[0xc],r8
80007d92:	ef f9 1c 06 	st.hne	r7[0xc],r9
80007d96:	ef fc 1a 15 	st.wne	r7[0x54],r12
80007d9a:	d8 22       	popm	r4-r7,pc

80007d9c <__swrite>:
80007d9c:	d4 21       	pushm	r4-r7,lr
80007d9e:	96 68       	ld.sh	r8,r11[0xc]
80007da0:	16 97       	mov	r7,r11
80007da2:	14 95       	mov	r5,r10
80007da4:	12 94       	mov	r4,r9
80007da6:	e2 18 01 00 	andl	r8,0x100,COH
80007daa:	18 96       	mov	r6,r12
80007dac:	c0 50       	breq	80007db6 <__swrite+0x1a>
80007dae:	30 29       	mov	r9,2
80007db0:	30 0a       	mov	r10,0
80007db2:	96 7b       	ld.sh	r11,r11[0xe]
80007db4:	c6 cd       	rcall	8000808c <_lseek_r>
80007db6:	8e 68       	ld.sh	r8,r7[0xc]
80007db8:	ad c8       	cbr	r8,0xc
80007dba:	08 99       	mov	r9,r4
80007dbc:	0a 9a       	mov	r10,r5
80007dbe:	8e 7b       	ld.sh	r11,r7[0xe]
80007dc0:	0c 9c       	mov	r12,r6
80007dc2:	ae 68       	st.h	r7[0xc],r8
80007dc4:	c9 ac       	rcall	80007ef8 <_write_r>
80007dc6:	d8 22       	popm	r4-r7,pc

80007dc8 <__sread>:
80007dc8:	d4 21       	pushm	r4-r7,lr
80007dca:	16 97       	mov	r7,r11
80007dcc:	96 7b       	ld.sh	r11,r11[0xe]
80007dce:	c7 1d       	rcall	800080b0 <_read_r>
80007dd0:	c0 65       	brlt	80007ddc <__sread+0x14>
80007dd2:	6f 58       	ld.w	r8,r7[0x54]
80007dd4:	18 08       	add	r8,r12
80007dd6:	ef 48 00 54 	st.w	r7[84],r8
80007dda:	d8 22       	popm	r4-r7,pc
80007ddc:	8e 68       	ld.sh	r8,r7[0xc]
80007dde:	ad c8       	cbr	r8,0xc
80007de0:	ae 68       	st.h	r7[0xc],r8
80007de2:	d8 22       	popm	r4-r7,pc

80007de4 <strlen>:
80007de4:	30 09       	mov	r9,0
80007de6:	18 98       	mov	r8,r12
80007de8:	c0 28       	rjmp	80007dec <strlen+0x8>
80007dea:	2f f8       	sub	r8,-1
80007dec:	11 8a       	ld.ub	r10,r8[0x0]
80007dee:	f2 0a 18 00 	cp.b	r10,r9
80007df2:	cf c1       	brne	80007dea <strlen+0x6>
80007df4:	f0 0c 01 0c 	sub	r12,r8,r12
80007df8:	5e fc       	retal	r12
80007dfa:	d7 03       	nop

80007dfc <_close>:
80007dfc:	30 28       	mov	r8,2
80007dfe:	d6 73       	breakpoint
80007e00:	3f fc       	mov	r12,-1
80007e02:	35 8b       	mov	r11,88
80007e04:	58 0c       	cp.w	r12,0
80007e06:	5e 4c       	retge	r12
80007e08:	e0 6a 06 94 	mov	r10,1684
80007e0c:	95 0b       	st.w	r10[0x0],r11
80007e0e:	5e fc       	retal	r12

80007e10 <_lseek>:
80007e10:	30 58       	mov	r8,5
80007e12:	d6 73       	breakpoint
80007e14:	3f fc       	mov	r12,-1
80007e16:	35 8b       	mov	r11,88
80007e18:	58 0c       	cp.w	r12,0
80007e1a:	5e 4c       	retge	r12
80007e1c:	e0 6a 06 94 	mov	r10,1684
80007e20:	95 0b       	st.w	r10[0x0],r11
80007e22:	5e fc       	retal	r12

80007e24 <_read>:
80007e24:	30 38       	mov	r8,3
80007e26:	d6 73       	breakpoint
80007e28:	3f fc       	mov	r12,-1
80007e2a:	35 8b       	mov	r11,88
80007e2c:	58 0c       	cp.w	r12,0
80007e2e:	5e 4c       	retge	r12
80007e30:	e0 6a 06 94 	mov	r10,1684
80007e34:	95 0b       	st.w	r10[0x0],r11
80007e36:	5e fc       	retal	r12

80007e38 <_write>:
80007e38:	30 48       	mov	r8,4
80007e3a:	d6 73       	breakpoint
80007e3c:	3f fc       	mov	r12,-1
80007e3e:	35 8b       	mov	r11,88
80007e40:	58 0c       	cp.w	r12,0
80007e42:	5e 4c       	retge	r12
80007e44:	e0 6a 06 94 	mov	r10,1684
80007e48:	95 0b       	st.w	r10[0x0],r11
80007e4a:	5e fc       	retal	r12

80007e4c <isatty>:
80007e4c:	30 b8       	mov	r8,11
80007e4e:	d6 73       	breakpoint
80007e50:	3f fc       	mov	r12,-1
80007e52:	35 8b       	mov	r11,88
80007e54:	58 0c       	cp.w	r12,0
80007e56:	5e 4c       	retge	r12
80007e58:	e0 6a 06 94 	mov	r10,1684
80007e5c:	95 0b       	st.w	r10[0x0],r11
80007e5e:	5e fc       	retal	r12

80007e60 <_fstat_host>:
80007e60:	30 98       	mov	r8,9
80007e62:	d6 73       	breakpoint
80007e64:	3f fc       	mov	r12,-1
80007e66:	35 8b       	mov	r11,88
80007e68:	58 0c       	cp.w	r12,0
80007e6a:	5e 4c       	retge	r12
80007e6c:	e0 6a 06 94 	mov	r10,1684
80007e70:	95 0b       	st.w	r10[0x0],r11
80007e72:	5e fc       	retal	r12

80007e74 <_fstat>:
80007e74:	d4 21       	pushm	r4-r7,lr
80007e76:	21 0d       	sub	sp,64
80007e78:	16 97       	mov	r7,r11
80007e7a:	1a 9b       	mov	r11,sp
80007e7c:	cf 2f       	rcall	80007e60 <_fstat_host>
80007e7e:	c0 34       	brge	80007e84 <_fstat+0x10>
80007e80:	3f fc       	mov	r12,-1
80007e82:	c1 c8       	rjmp	80007eba <_fstat+0x46>
80007e84:	40 08       	lddsp	r8,sp[0x0]
80007e86:	ae 08       	st.h	r7[0x0],r8
80007e88:	40 18       	lddsp	r8,sp[0x4]
80007e8a:	ae 18       	st.h	r7[0x2],r8
80007e8c:	40 28       	lddsp	r8,sp[0x8]
80007e8e:	8f 18       	st.w	r7[0x4],r8
80007e90:	40 38       	lddsp	r8,sp[0xc]
80007e92:	ae 48       	st.h	r7[0x8],r8
80007e94:	40 48       	lddsp	r8,sp[0x10]
80007e96:	ae 58       	st.h	r7[0xa],r8
80007e98:	40 58       	lddsp	r8,sp[0x14]
80007e9a:	ae 68       	st.h	r7[0xc],r8
80007e9c:	40 68       	lddsp	r8,sp[0x18]
80007e9e:	ae 78       	st.h	r7[0xe],r8
80007ea0:	40 88       	lddsp	r8,sp[0x20]
80007ea2:	8f 48       	st.w	r7[0x10],r8
80007ea4:	40 a8       	lddsp	r8,sp[0x28]
80007ea6:	8f b8       	st.w	r7[0x2c],r8
80007ea8:	40 c8       	lddsp	r8,sp[0x30]
80007eaa:	8f c8       	st.w	r7[0x30],r8
80007eac:	40 d8       	lddsp	r8,sp[0x34]
80007eae:	8f 58       	st.w	r7[0x14],r8
80007eb0:	40 e8       	lddsp	r8,sp[0x38]
80007eb2:	30 0c       	mov	r12,0
80007eb4:	8f 78       	st.w	r7[0x1c],r8
80007eb6:	40 f8       	lddsp	r8,sp[0x3c]
80007eb8:	8f 98       	st.w	r7[0x24],r8
80007eba:	2f 0d       	sub	sp,-64
80007ebc:	d8 22       	popm	r4-r7,pc
80007ebe:	d7 03       	nop

80007ec0 <_sbrk>:
80007ec0:	d4 01       	pushm	lr
80007ec2:	e0 68 06 5c 	mov	r8,1628
80007ec6:	70 09       	ld.w	r9,r8[0x0]
80007ec8:	58 09       	cp.w	r9,0
80007eca:	c0 41       	brne	80007ed2 <_sbrk+0x12>
80007ecc:	e0 69 06 98 	mov	r9,1688
80007ed0:	91 09       	st.w	r8[0x0],r9
80007ed2:	e0 69 06 5c 	mov	r9,1628
80007ed6:	e0 6a f0 00 	mov	r10,61440
80007eda:	72 08       	ld.w	r8,r9[0x0]
80007edc:	f0 0c 00 0c 	add	r12,r8,r12
80007ee0:	14 3c       	cp.w	r12,r10
80007ee2:	e0 8b 00 04 	brhi	80007eea <_sbrk+0x2a>
80007ee6:	93 0c       	st.w	r9[0x0],r12
80007ee8:	c0 58       	rjmp	80007ef2 <_sbrk+0x32>
80007eea:	c5 5c       	rcall	80007f94 <__errno>
80007eec:	30 c8       	mov	r8,12
80007eee:	99 08       	st.w	r12[0x0],r8
80007ef0:	3f f8       	mov	r8,-1
80007ef2:	10 9c       	mov	r12,r8
80007ef4:	d8 02       	popm	pc
80007ef6:	d7 03       	nop

80007ef8 <_write_r>:
80007ef8:	d4 21       	pushm	r4-r7,lr
80007efa:	16 98       	mov	r8,r11
80007efc:	18 97       	mov	r7,r12
80007efe:	10 9c       	mov	r12,r8
80007f00:	30 08       	mov	r8,0
80007f02:	14 9b       	mov	r11,r10
80007f04:	e0 66 06 94 	mov	r6,1684
80007f08:	12 9a       	mov	r10,r9
80007f0a:	8d 08       	st.w	r6[0x0],r8
80007f0c:	c9 6f       	rcall	80007e38 <_write>
80007f0e:	5b fc       	cp.w	r12,-1
80007f10:	c0 51       	brne	80007f1a <_write_r+0x22>
80007f12:	6c 08       	ld.w	r8,r6[0x0]
80007f14:	58 08       	cp.w	r8,0
80007f16:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007f1a:	d8 22       	popm	r4-r7,pc

80007f1c <_calloc_r>:
80007f1c:	d4 21       	pushm	r4-r7,lr
80007f1e:	f4 0b 02 4b 	mul	r11,r10,r11
80007f22:	fe b0 f8 5f 	rcall	80006fe0 <_malloc_r>
80007f26:	18 97       	mov	r7,r12
80007f28:	c2 30       	breq	80007f6e <_calloc_r+0x52>
80007f2a:	f8 fa ff fc 	ld.w	r10,r12[-4]
80007f2e:	e0 1a ff fc 	andl	r10,0xfffc
80007f32:	20 4a       	sub	r10,4
80007f34:	e0 4a 00 24 	cp.w	r10,36
80007f38:	e0 8b 00 18 	brhi	80007f68 <_calloc_r+0x4c>
80007f3c:	18 98       	mov	r8,r12
80007f3e:	59 3a       	cp.w	r10,19
80007f40:	e0 88 00 0f 	brls	80007f5e <_calloc_r+0x42>
80007f44:	30 09       	mov	r9,0
80007f46:	10 a9       	st.w	r8++,r9
80007f48:	10 a9       	st.w	r8++,r9
80007f4a:	59 ba       	cp.w	r10,27
80007f4c:	e0 88 00 09 	brls	80007f5e <_calloc_r+0x42>
80007f50:	10 a9       	st.w	r8++,r9
80007f52:	10 a9       	st.w	r8++,r9
80007f54:	e0 4a 00 24 	cp.w	r10,36
80007f58:	c0 31       	brne	80007f5e <_calloc_r+0x42>
80007f5a:	10 a9       	st.w	r8++,r9
80007f5c:	10 a9       	st.w	r8++,r9
80007f5e:	30 09       	mov	r9,0
80007f60:	10 a9       	st.w	r8++,r9
80007f62:	91 19       	st.w	r8[0x4],r9
80007f64:	91 09       	st.w	r8[0x0],r9
80007f66:	c0 48       	rjmp	80007f6e <_calloc_r+0x52>
80007f68:	30 0b       	mov	r11,0
80007f6a:	fe b0 fa 7d 	rcall	80007464 <memset>
80007f6e:	0e 9c       	mov	r12,r7
80007f70:	d8 22       	popm	r4-r7,pc
80007f72:	d7 03       	nop

80007f74 <_close_r>:
80007f74:	d4 21       	pushm	r4-r7,lr
80007f76:	30 08       	mov	r8,0
80007f78:	18 97       	mov	r7,r12
80007f7a:	e0 66 06 94 	mov	r6,1684
80007f7e:	16 9c       	mov	r12,r11
80007f80:	8d 08       	st.w	r6[0x0],r8
80007f82:	c3 df       	rcall	80007dfc <_close>
80007f84:	5b fc       	cp.w	r12,-1
80007f86:	c0 51       	brne	80007f90 <_close_r+0x1c>
80007f88:	6c 08       	ld.w	r8,r6[0x0]
80007f8a:	58 08       	cp.w	r8,0
80007f8c:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007f90:	d8 22       	popm	r4-r7,pc
80007f92:	d7 03       	nop

80007f94 <__errno>:
80007f94:	e0 68 01 04 	mov	r8,260
80007f98:	70 0c       	ld.w	r12,r8[0x0]
80007f9a:	2f 4c       	sub	r12,-12
80007f9c:	5e fc       	retal	r12
80007f9e:	d7 03       	nop

80007fa0 <_fclose_r>:
80007fa0:	d4 21       	pushm	r4-r7,lr
80007fa2:	18 96       	mov	r6,r12
80007fa4:	16 97       	mov	r7,r11
80007fa6:	58 0b       	cp.w	r11,0
80007fa8:	c0 31       	brne	80007fae <_fclose_r+0xe>
80007faa:	16 95       	mov	r5,r11
80007fac:	c5 38       	rjmp	80008052 <_fclose_r+0xb2>
80007fae:	fe b0 f4 87 	rcall	800068bc <__sfp_lock_acquire>
80007fb2:	58 06       	cp.w	r6,0
80007fb4:	c0 70       	breq	80007fc2 <_fclose_r+0x22>
80007fb6:	6c 68       	ld.w	r8,r6[0x18]
80007fb8:	58 08       	cp.w	r8,0
80007fba:	c0 41       	brne	80007fc2 <_fclose_r+0x22>
80007fbc:	0c 9c       	mov	r12,r6
80007fbe:	fe b0 f4 d1 	rcall	80006960 <__sinit>
80007fc2:	fe c8 e8 0e 	sub	r8,pc,-6130
80007fc6:	10 37       	cp.w	r7,r8
80007fc8:	c0 31       	brne	80007fce <_fclose_r+0x2e>
80007fca:	6c 07       	ld.w	r7,r6[0x0]
80007fcc:	c0 c8       	rjmp	80007fe4 <_fclose_r+0x44>
80007fce:	fe c8 e7 fa 	sub	r8,pc,-6150
80007fd2:	10 37       	cp.w	r7,r8
80007fd4:	c0 31       	brne	80007fda <_fclose_r+0x3a>
80007fd6:	6c 17       	ld.w	r7,r6[0x4]
80007fd8:	c0 68       	rjmp	80007fe4 <_fclose_r+0x44>
80007fda:	fe c8 e7 e6 	sub	r8,pc,-6170
80007fde:	10 37       	cp.w	r7,r8
80007fe0:	ed f7 00 02 	ld.weq	r7,r6[0x8]
80007fe4:	8e 69       	ld.sh	r9,r7[0xc]
80007fe6:	30 08       	mov	r8,0
80007fe8:	f0 09 19 00 	cp.h	r9,r8
80007fec:	c0 51       	brne	80007ff6 <_fclose_r+0x56>
80007fee:	fe b0 f4 68 	rcall	800068be <__sfp_lock_release>
80007ff2:	30 05       	mov	r5,0
80007ff4:	c2 f8       	rjmp	80008052 <_fclose_r+0xb2>
80007ff6:	0e 9b       	mov	r11,r7
80007ff8:	0c 9c       	mov	r12,r6
80007ffa:	fe b0 f3 db 	rcall	800067b0 <_fflush_r>
80007ffe:	6e c8       	ld.w	r8,r7[0x30]
80008000:	18 95       	mov	r5,r12
80008002:	58 08       	cp.w	r8,0
80008004:	c0 60       	breq	80008010 <_fclose_r+0x70>
80008006:	6e 8b       	ld.w	r11,r7[0x20]
80008008:	0c 9c       	mov	r12,r6
8000800a:	5d 18       	icall	r8
8000800c:	f9 b5 05 ff 	movlt	r5,-1
80008010:	8e 68       	ld.sh	r8,r7[0xc]
80008012:	ed b8 00 07 	bld	r8,0x7
80008016:	c0 51       	brne	80008020 <_fclose_r+0x80>
80008018:	6e 4b       	ld.w	r11,r7[0x10]
8000801a:	0c 9c       	mov	r12,r6
8000801c:	fe b0 f5 3c 	rcall	80006a94 <_free_r>
80008020:	6e db       	ld.w	r11,r7[0x34]
80008022:	58 0b       	cp.w	r11,0
80008024:	c0 a0       	breq	80008038 <_fclose_r+0x98>
80008026:	ee c8 ff bc 	sub	r8,r7,-68
8000802a:	10 3b       	cp.w	r11,r8
8000802c:	c0 40       	breq	80008034 <_fclose_r+0x94>
8000802e:	0c 9c       	mov	r12,r6
80008030:	fe b0 f5 32 	rcall	80006a94 <_free_r>
80008034:	30 08       	mov	r8,0
80008036:	8f d8       	st.w	r7[0x34],r8
80008038:	6f 2b       	ld.w	r11,r7[0x48]
8000803a:	58 0b       	cp.w	r11,0
8000803c:	c0 70       	breq	8000804a <_fclose_r+0xaa>
8000803e:	0c 9c       	mov	r12,r6
80008040:	fe b0 f5 2a 	rcall	80006a94 <_free_r>
80008044:	30 08       	mov	r8,0
80008046:	ef 48 00 48 	st.w	r7[72],r8
8000804a:	30 08       	mov	r8,0
8000804c:	ae 68       	st.h	r7[0xc],r8
8000804e:	fe b0 f4 38 	rcall	800068be <__sfp_lock_release>
80008052:	0a 9c       	mov	r12,r5
80008054:	d8 22       	popm	r4-r7,pc
80008056:	d7 03       	nop

80008058 <fclose>:
80008058:	d4 01       	pushm	lr
8000805a:	e0 68 01 04 	mov	r8,260
8000805e:	18 9b       	mov	r11,r12
80008060:	70 0c       	ld.w	r12,r8[0x0]
80008062:	c9 ff       	rcall	80007fa0 <_fclose_r>
80008064:	d8 02       	popm	pc
80008066:	d7 03       	nop

80008068 <_fstat_r>:
80008068:	d4 21       	pushm	r4-r7,lr
8000806a:	16 98       	mov	r8,r11
8000806c:	18 97       	mov	r7,r12
8000806e:	10 9c       	mov	r12,r8
80008070:	30 08       	mov	r8,0
80008072:	e0 66 06 94 	mov	r6,1684
80008076:	14 9b       	mov	r11,r10
80008078:	8d 08       	st.w	r6[0x0],r8
8000807a:	cf de       	rcall	80007e74 <_fstat>
8000807c:	5b fc       	cp.w	r12,-1
8000807e:	c0 51       	brne	80008088 <_fstat_r+0x20>
80008080:	6c 08       	ld.w	r8,r6[0x0]
80008082:	58 08       	cp.w	r8,0
80008084:	ef f8 1a 03 	st.wne	r7[0xc],r8
80008088:	d8 22       	popm	r4-r7,pc
8000808a:	d7 03       	nop

8000808c <_lseek_r>:
8000808c:	d4 21       	pushm	r4-r7,lr
8000808e:	16 98       	mov	r8,r11
80008090:	18 97       	mov	r7,r12
80008092:	10 9c       	mov	r12,r8
80008094:	30 08       	mov	r8,0
80008096:	14 9b       	mov	r11,r10
80008098:	e0 66 06 94 	mov	r6,1684
8000809c:	12 9a       	mov	r10,r9
8000809e:	8d 08       	st.w	r6[0x0],r8
800080a0:	cb 8e       	rcall	80007e10 <_lseek>
800080a2:	5b fc       	cp.w	r12,-1
800080a4:	c0 51       	brne	800080ae <_lseek_r+0x22>
800080a6:	6c 08       	ld.w	r8,r6[0x0]
800080a8:	58 08       	cp.w	r8,0
800080aa:	ef f8 1a 03 	st.wne	r7[0xc],r8
800080ae:	d8 22       	popm	r4-r7,pc

800080b0 <_read_r>:
800080b0:	d4 21       	pushm	r4-r7,lr
800080b2:	16 98       	mov	r8,r11
800080b4:	18 97       	mov	r7,r12
800080b6:	10 9c       	mov	r12,r8
800080b8:	30 08       	mov	r8,0
800080ba:	14 9b       	mov	r11,r10
800080bc:	e0 66 06 94 	mov	r6,1684
800080c0:	12 9a       	mov	r10,r9
800080c2:	8d 08       	st.w	r6[0x0],r8
800080c4:	cb 0e       	rcall	80007e24 <_read>
800080c6:	5b fc       	cp.w	r12,-1
800080c8:	c0 51       	brne	800080d2 <_read_r+0x22>
800080ca:	6c 08       	ld.w	r8,r6[0x0]
800080cc:	58 08       	cp.w	r8,0
800080ce:	ef f8 1a 03 	st.wne	r7[0xc],r8
800080d2:	d8 22       	popm	r4-r7,pc

800080d4 <__avr32_f64_mul>:
800080d4:	f5 eb 10 1c 	or	r12,r10,r11<<0x1
800080d8:	e0 80 00 dc 	breq	80008290 <__avr32_f64_mul_op1_zero>
800080dc:	d4 21       	pushm	r4-r7,lr
800080de:	f7 e9 20 0e 	eor	lr,r11,r9
800080e2:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
800080e6:	30 15       	mov	r5,1
800080e8:	c4 30       	breq	8000816e <__avr32_f64_mul_op1_subnormal>
800080ea:	ab 6b       	lsl	r11,0xa
800080ec:	f7 ea 13 6b 	or	r11,r11,r10>>0x16
800080f0:	ab 6a       	lsl	r10,0xa
800080f2:	f7 d5 d3 c2 	bfins	r11,r5,0x1e,0x2
800080f6:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
800080fa:	c5 c0       	breq	800081b2 <__avr32_f64_mul_op2_subnormal>
800080fc:	a1 78       	lsl	r8,0x1
800080fe:	5c f9       	rol	r9
80008100:	f3 d5 d2 ab 	bfins	r9,r5,0x15,0xb
80008104:	e0 47 07 ff 	cp.w	r7,2047
80008108:	c7 70       	breq	800081f6 <__avr32_f64_mul_op_nan_or_inf>
8000810a:	e0 46 07 ff 	cp.w	r6,2047
8000810e:	c7 40       	breq	800081f6 <__avr32_f64_mul_op_nan_or_inf>
80008110:	ee 06 00 0c 	add	r12,r7,r6
80008114:	e0 2c 03 fe 	sub	r12,1022
80008118:	f6 08 06 44 	mulu.d	r4,r11,r8
8000811c:	f4 09 07 44 	macu.d	r4,r10,r9
80008120:	f4 08 06 46 	mulu.d	r6,r10,r8
80008124:	f6 09 06 4a 	mulu.d	r10,r11,r9
80008128:	08 07       	add	r7,r4
8000812a:	f4 05 00 4a 	adc	r10,r10,r5
8000812e:	5c 0b       	acr	r11
80008130:	ed bb 00 14 	bld	r11,0x14
80008134:	c0 50       	breq	8000813e <__avr32_f64_mul+0x6a>
80008136:	a1 77       	lsl	r7,0x1
80008138:	5c fa       	rol	r10
8000813a:	5c fb       	rol	r11
8000813c:	20 1c       	sub	r12,1
8000813e:	58 0c       	cp.w	r12,0
80008140:	e0 8a 00 6f 	brle	8000821e <__avr32_f64_mul_res_subnormal>
80008144:	e0 4c 07 ff 	cp.w	r12,2047
80008148:	e0 84 00 9c 	brge	80008280 <__avr32_f64_mul_res_inf>
8000814c:	f7 dc d2 8b 	bfins	r11,r12,0x14,0xb
80008150:	ed ea 11 f6 	or	r6,r6,r10<<0x1f
80008154:	ef e6 12 17 	or	r7,r7,r6>>0x1
80008158:	ee 17 80 00 	eorh	r7,0x8000
8000815c:	f1 b7 04 20 	satu	r7,0x1
80008160:	0e 0a       	add	r10,r7
80008162:	5c 0b       	acr	r11
80008164:	ed be 00 1f 	bld	lr,0x1f
80008168:	ef bb 00 1f 	bst	r11,0x1f
8000816c:	d8 22       	popm	r4-r7,pc

8000816e <__avr32_f64_mul_op1_subnormal>:
8000816e:	e4 1b 00 0f 	andh	r11,0xf
80008172:	f4 0c 12 00 	clz	r12,r10
80008176:	f6 06 12 00 	clz	r6,r11
8000817a:	f7 bc 03 e1 	sublo	r12,-31
8000817e:	f8 06 17 30 	movlo	r6,r12
80008182:	f7 b6 02 01 	subhs	r6,1
80008186:	e0 46 00 20 	cp.w	r6,32
8000818a:	c0 d4       	brge	800081a4 <__avr32_f64_mul_op1_subnormal+0x36>
8000818c:	ec 0c 11 20 	rsub	r12,r6,32
80008190:	f6 06 09 4b 	lsl	r11,r11,r6
80008194:	f4 0c 0a 4c 	lsr	r12,r10,r12
80008198:	18 4b       	or	r11,r12
8000819a:	f4 06 09 4a 	lsl	r10,r10,r6
8000819e:	20 b6       	sub	r6,11
800081a0:	0c 17       	sub	r7,r6
800081a2:	ca ab       	rjmp	800080f6 <__avr32_f64_mul+0x22>
800081a4:	f4 06 09 4b 	lsl	r11,r10,r6
800081a8:	c6 40       	breq	80008270 <__avr32_f64_mul_res_zero>
800081aa:	30 0a       	mov	r10,0
800081ac:	20 b6       	sub	r6,11
800081ae:	0c 17       	sub	r7,r6
800081b0:	ca 3b       	rjmp	800080f6 <__avr32_f64_mul+0x22>

800081b2 <__avr32_f64_mul_op2_subnormal>:
800081b2:	e4 19 00 0f 	andh	r9,0xf
800081b6:	f0 0c 12 00 	clz	r12,r8
800081ba:	f2 05 12 00 	clz	r5,r9
800081be:	f7 bc 03 ea 	sublo	r12,-22
800081c2:	f8 05 17 30 	movlo	r5,r12
800081c6:	f7 b5 02 0a 	subhs	r5,10
800081ca:	e0 45 00 20 	cp.w	r5,32
800081ce:	c0 d4       	brge	800081e8 <__avr32_f64_mul_op2_subnormal+0x36>
800081d0:	ea 0c 11 20 	rsub	r12,r5,32
800081d4:	f2 05 09 49 	lsl	r9,r9,r5
800081d8:	f0 0c 0a 4c 	lsr	r12,r8,r12
800081dc:	18 49       	or	r9,r12
800081de:	f0 05 09 48 	lsl	r8,r8,r5
800081e2:	20 25       	sub	r5,2
800081e4:	0a 16       	sub	r6,r5
800081e6:	c8 fb       	rjmp	80008104 <__avr32_f64_mul+0x30>
800081e8:	f0 05 09 49 	lsl	r9,r8,r5
800081ec:	c4 20       	breq	80008270 <__avr32_f64_mul_res_zero>
800081ee:	30 08       	mov	r8,0
800081f0:	20 25       	sub	r5,2
800081f2:	0a 16       	sub	r6,r5
800081f4:	c8 8b       	rjmp	80008104 <__avr32_f64_mul+0x30>

800081f6 <__avr32_f64_mul_op_nan_or_inf>:
800081f6:	e4 19 00 0f 	andh	r9,0xf
800081fa:	e4 1b 00 0f 	andh	r11,0xf
800081fe:	14 4b       	or	r11,r10
80008200:	10 49       	or	r9,r8
80008202:	e0 47 07 ff 	cp.w	r7,2047
80008206:	c0 91       	brne	80008218 <__avr32_f64_mul_op1_not_naninf>
80008208:	58 0b       	cp.w	r11,0
8000820a:	c3 81       	brne	8000827a <__avr32_f64_mul_res_nan>
8000820c:	e0 46 07 ff 	cp.w	r6,2047
80008210:	c3 81       	brne	80008280 <__avr32_f64_mul_res_inf>
80008212:	58 09       	cp.w	r9,0
80008214:	c3 60       	breq	80008280 <__avr32_f64_mul_res_inf>
80008216:	c3 28       	rjmp	8000827a <__avr32_f64_mul_res_nan>

80008218 <__avr32_f64_mul_op1_not_naninf>:
80008218:	58 09       	cp.w	r9,0
8000821a:	c3 30       	breq	80008280 <__avr32_f64_mul_res_inf>
8000821c:	c2 f8       	rjmp	8000827a <__avr32_f64_mul_res_nan>

8000821e <__avr32_f64_mul_res_subnormal>:
8000821e:	5c 3c       	neg	r12
80008220:	2f fc       	sub	r12,-1
80008222:	f1 bc 04 c0 	satu	r12,0x6
80008226:	e0 4c 00 20 	cp.w	r12,32
8000822a:	c1 14       	brge	8000824c <__avr32_f64_mul_res_subnormal+0x2e>
8000822c:	f8 08 11 20 	rsub	r8,r12,32
80008230:	0e 46       	or	r6,r7
80008232:	ee 0c 0a 47 	lsr	r7,r7,r12
80008236:	f4 08 09 49 	lsl	r9,r10,r8
8000823a:	12 47       	or	r7,r9
8000823c:	f4 0c 0a 4a 	lsr	r10,r10,r12
80008240:	f6 08 09 49 	lsl	r9,r11,r8
80008244:	12 4a       	or	r10,r9
80008246:	f6 0c 0a 4b 	lsr	r11,r11,r12
8000824a:	c8 3b       	rjmp	80008150 <__avr32_f64_mul+0x7c>
8000824c:	f8 08 11 20 	rsub	r8,r12,32
80008250:	f9 b9 00 00 	moveq	r9,0
80008254:	c0 30       	breq	8000825a <__avr32_f64_mul_res_subnormal+0x3c>
80008256:	f6 08 09 49 	lsl	r9,r11,r8
8000825a:	0e 46       	or	r6,r7
8000825c:	ed ea 10 16 	or	r6,r6,r10<<0x1
80008260:	f4 0c 0a 4a 	lsr	r10,r10,r12
80008264:	f3 ea 10 07 	or	r7,r9,r10
80008268:	f6 0c 0a 4a 	lsr	r10,r11,r12
8000826c:	30 0b       	mov	r11,0
8000826e:	c7 1b       	rjmp	80008150 <__avr32_f64_mul+0x7c>

80008270 <__avr32_f64_mul_res_zero>:
80008270:	1c 9b       	mov	r11,lr
80008272:	e6 1b 80 00 	andh	r11,0x8000,COH
80008276:	30 0a       	mov	r10,0
80008278:	d8 22       	popm	r4-r7,pc

8000827a <__avr32_f64_mul_res_nan>:
8000827a:	3f fb       	mov	r11,-1
8000827c:	3f fa       	mov	r10,-1
8000827e:	d8 22       	popm	r4-r7,pc

80008280 <__avr32_f64_mul_res_inf>:
80008280:	f0 6b 00 00 	mov	r11,-1048576
80008284:	ed be 00 1f 	bld	lr,0x1f
80008288:	ef bb 00 1f 	bst	r11,0x1f
8000828c:	30 0a       	mov	r10,0
8000828e:	d8 22       	popm	r4-r7,pc

80008290 <__avr32_f64_mul_op1_zero>:
80008290:	f7 e9 20 0b 	eor	r11,r11,r9
80008294:	e6 1b 80 00 	andh	r11,0x8000,COH
80008298:	f9 d9 c2 8b 	bfextu	r12,r9,0x14,0xb
8000829c:	e0 4c 07 ff 	cp.w	r12,2047
800082a0:	5e 1c       	retne	r12
800082a2:	3f fa       	mov	r10,-1
800082a4:	3f fb       	mov	r11,-1
800082a6:	5e fc       	retal	r12

800082a8 <__avr32_f64_sub_from_add>:
800082a8:	ee 19 80 00 	eorh	r9,0x8000

800082ac <__avr32_f64_sub>:
800082ac:	f7 e9 20 0c 	eor	r12,r11,r9
800082b0:	e0 86 00 ca 	brmi	80008444 <__avr32_f64_add_from_sub>
800082b4:	eb cd 40 e0 	pushm	r5-r7,lr
800082b8:	16 9c       	mov	r12,r11
800082ba:	e6 1c 80 00 	andh	r12,0x8000,COH
800082be:	bf db       	cbr	r11,0x1f
800082c0:	bf d9       	cbr	r9,0x1f
800082c2:	10 3a       	cp.w	r10,r8
800082c4:	f2 0b 13 00 	cpc	r11,r9
800082c8:	c0 92       	brcc	800082da <__avr32_f64_sub+0x2e>
800082ca:	16 97       	mov	r7,r11
800082cc:	12 9b       	mov	r11,r9
800082ce:	0e 99       	mov	r9,r7
800082d0:	14 97       	mov	r7,r10
800082d2:	10 9a       	mov	r10,r8
800082d4:	0e 98       	mov	r8,r7
800082d6:	ee 1c 80 00 	eorh	r12,0x8000
800082da:	f6 07 16 14 	lsr	r7,r11,0x14
800082de:	ab 7b       	lsl	r11,0xb
800082e0:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
800082e4:	ab 7a       	lsl	r10,0xb
800082e6:	bf bb       	sbr	r11,0x1f
800082e8:	f2 06 16 14 	lsr	r6,r9,0x14
800082ec:	c4 40       	breq	80008374 <__avr32_f64_sub_opL_subnormal>
800082ee:	ab 79       	lsl	r9,0xb
800082f0:	f3 e8 13 59 	or	r9,r9,r8>>0x15
800082f4:	ab 78       	lsl	r8,0xb
800082f6:	bf b9       	sbr	r9,0x1f

800082f8 <__avr32_f64_sub_opL_subnormal_done>:
800082f8:	e0 47 07 ff 	cp.w	r7,2047
800082fc:	c4 f0       	breq	8000839a <__avr32_f64_sub_opH_nan_or_inf>
800082fe:	0e 26       	rsub	r6,r7
80008300:	c1 20       	breq	80008324 <__avr32_f64_sub_shift_done>
80008302:	ec 05 11 20 	rsub	r5,r6,32
80008306:	e0 46 00 20 	cp.w	r6,32
8000830a:	c7 c2       	brcc	80008402 <__avr32_f64_sub_longshift>
8000830c:	f0 05 09 4e 	lsl	lr,r8,r5
80008310:	f2 05 09 45 	lsl	r5,r9,r5
80008314:	f0 06 0a 48 	lsr	r8,r8,r6
80008318:	f2 06 0a 49 	lsr	r9,r9,r6
8000831c:	0a 48       	or	r8,r5
8000831e:	58 0e       	cp.w	lr,0
80008320:	5f 1e       	srne	lr
80008322:	1c 48       	or	r8,lr

80008324 <__avr32_f64_sub_shift_done>:
80008324:	10 1a       	sub	r10,r8
80008326:	f6 09 01 4b 	sbc	r11,r11,r9
8000832a:	f6 06 12 00 	clz	r6,r11
8000832e:	c0 e0       	breq	8000834a <__avr32_f64_sub_longnormalize_done>
80008330:	c7 83       	brcs	80008420 <__avr32_f64_sub_longnormalize>
80008332:	ec 0e 11 20 	rsub	lr,r6,32
80008336:	f6 06 09 4b 	lsl	r11,r11,r6
8000833a:	f4 0e 0a 4e 	lsr	lr,r10,lr
8000833e:	1c 4b       	or	r11,lr
80008340:	f4 06 09 4a 	lsl	r10,r10,r6
80008344:	0c 17       	sub	r7,r6
80008346:	e0 8a 00 39 	brle	800083b8 <__avr32_f64_sub_subnormal_result>

8000834a <__avr32_f64_sub_longnormalize_done>:
8000834a:	f4 09 15 15 	lsl	r9,r10,0x15
8000834e:	ab 9a       	lsr	r10,0xb
80008350:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80008354:	ab 9b       	lsr	r11,0xb
80008356:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
8000835a:	18 4b       	or	r11,r12

8000835c <__avr32_f64_sub_round>:
8000835c:	fc 17 80 00 	movh	r7,0x8000
80008360:	ed ba 00 00 	bld	r10,0x0
80008364:	f7 b7 01 ff 	subne	r7,-1
80008368:	0e 39       	cp.w	r9,r7
8000836a:	5f 29       	srhs	r9
8000836c:	12 0a       	add	r10,r9
8000836e:	5c 0b       	acr	r11
80008370:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008374 <__avr32_f64_sub_opL_subnormal>:
80008374:	ab 79       	lsl	r9,0xb
80008376:	f3 e8 13 59 	or	r9,r9,r8>>0x15
8000837a:	ab 78       	lsl	r8,0xb
8000837c:	f3 e8 10 0e 	or	lr,r9,r8
80008380:	f9 b6 01 01 	movne	r6,1
80008384:	ee 0e 11 00 	rsub	lr,r7,0
80008388:	f9 b7 00 01 	moveq	r7,1
8000838c:	ef bb 00 1f 	bst	r11,0x1f
80008390:	f7 ea 10 0e 	or	lr,r11,r10
80008394:	f9 b7 00 00 	moveq	r7,0
80008398:	cb 0b       	rjmp	800082f8 <__avr32_f64_sub_opL_subnormal_done>

8000839a <__avr32_f64_sub_opH_nan_or_inf>:
8000839a:	bf db       	cbr	r11,0x1f
8000839c:	f7 ea 10 0e 	or	lr,r11,r10
800083a0:	c0 81       	brne	800083b0 <__avr32_f64_sub_return_nan>
800083a2:	e0 46 07 ff 	cp.w	r6,2047
800083a6:	c0 50       	breq	800083b0 <__avr32_f64_sub_return_nan>
800083a8:	f9 e7 11 4b 	or	r11,r12,r7<<0x14
800083ac:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800083b0 <__avr32_f64_sub_return_nan>:
800083b0:	3f fa       	mov	r10,-1
800083b2:	3f fb       	mov	r11,-1
800083b4:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800083b8 <__avr32_f64_sub_subnormal_result>:
800083b8:	5c 37       	neg	r7
800083ba:	2f f7       	sub	r7,-1
800083bc:	f1 b7 04 c0 	satu	r7,0x6
800083c0:	e0 47 00 20 	cp.w	r7,32
800083c4:	c1 14       	brge	800083e6 <__avr32_f64_sub_subnormal_result+0x2e>
800083c6:	ee 08 11 20 	rsub	r8,r7,32
800083ca:	f4 08 09 49 	lsl	r9,r10,r8
800083ce:	5f 16       	srne	r6
800083d0:	f4 07 0a 4a 	lsr	r10,r10,r7
800083d4:	0c 4a       	or	r10,r6
800083d6:	f6 08 09 49 	lsl	r9,r11,r8
800083da:	f5 e9 10 0a 	or	r10,r10,r9
800083de:	f4 07 0a 4b 	lsr	r11,r10,r7
800083e2:	30 07       	mov	r7,0
800083e4:	cb 3b       	rjmp	8000834a <__avr32_f64_sub_longnormalize_done>
800083e6:	ee 08 11 40 	rsub	r8,r7,64
800083ea:	f6 08 09 49 	lsl	r9,r11,r8
800083ee:	14 49       	or	r9,r10
800083f0:	5f 16       	srne	r6
800083f2:	f6 07 0a 4a 	lsr	r10,r11,r7
800083f6:	0c 4a       	or	r10,r6
800083f8:	30 0b       	mov	r11,0
800083fa:	30 07       	mov	r7,0
800083fc:	ca 7b       	rjmp	8000834a <__avr32_f64_sub_longnormalize_done>
800083fe:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008402 <__avr32_f64_sub_longshift>:
80008402:	f1 b6 04 c0 	satu	r6,0x6
80008406:	f0 0e 17 00 	moveq	lr,r8
8000840a:	c0 40       	breq	80008412 <__avr32_f64_sub_longshift+0x10>
8000840c:	f2 05 09 4e 	lsl	lr,r9,r5
80008410:	10 4e       	or	lr,r8
80008412:	f2 06 0a 48 	lsr	r8,r9,r6
80008416:	30 09       	mov	r9,0
80008418:	58 0e       	cp.w	lr,0
8000841a:	5f 1e       	srne	lr
8000841c:	1c 48       	or	r8,lr
8000841e:	c8 3b       	rjmp	80008324 <__avr32_f64_sub_shift_done>

80008420 <__avr32_f64_sub_longnormalize>:
80008420:	f4 06 12 00 	clz	r6,r10
80008424:	f9 b7 03 00 	movlo	r7,0
80008428:	f9 b6 03 00 	movlo	r6,0
8000842c:	f9 bc 03 00 	movlo	r12,0
80008430:	f7 b6 02 e0 	subhs	r6,-32
80008434:	f4 06 09 4b 	lsl	r11,r10,r6
80008438:	30 0a       	mov	r10,0
8000843a:	0c 17       	sub	r7,r6
8000843c:	fe 9a ff be 	brle	800083b8 <__avr32_f64_sub_subnormal_result>
80008440:	c8 5b       	rjmp	8000834a <__avr32_f64_sub_longnormalize_done>
80008442:	d7 03       	nop

80008444 <__avr32_f64_add_from_sub>:
80008444:	ee 19 80 00 	eorh	r9,0x8000

80008448 <__avr32_f64_add>:
80008448:	f7 e9 20 0c 	eor	r12,r11,r9
8000844c:	fe 96 ff 2e 	brmi	800082a8 <__avr32_f64_sub_from_add>
80008450:	eb cd 40 e0 	pushm	r5-r7,lr
80008454:	16 9c       	mov	r12,r11
80008456:	e6 1c 80 00 	andh	r12,0x8000,COH
8000845a:	bf db       	cbr	r11,0x1f
8000845c:	bf d9       	cbr	r9,0x1f
8000845e:	12 3b       	cp.w	r11,r9
80008460:	c0 72       	brcc	8000846e <__avr32_f64_add+0x26>
80008462:	16 97       	mov	r7,r11
80008464:	12 9b       	mov	r11,r9
80008466:	0e 99       	mov	r9,r7
80008468:	14 97       	mov	r7,r10
8000846a:	10 9a       	mov	r10,r8
8000846c:	0e 98       	mov	r8,r7
8000846e:	30 0e       	mov	lr,0
80008470:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
80008474:	f7 db c0 14 	bfextu	r11,r11,0x0,0x14
80008478:	b5 ab       	sbr	r11,0x14
8000847a:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
8000847e:	c6 20       	breq	80008542 <__avr32_f64_add_op2_subnormal>
80008480:	f3 d9 c0 14 	bfextu	r9,r9,0x0,0x14
80008484:	b5 a9       	sbr	r9,0x14
80008486:	e0 47 07 ff 	cp.w	r7,2047
8000848a:	c2 80       	breq	800084da <__avr32_f64_add_opH_nan_or_inf>
8000848c:	0e 26       	rsub	r6,r7
8000848e:	c1 20       	breq	800084b2 <__avr32_f64_add_shift_done>
80008490:	e0 46 00 36 	cp.w	r6,54
80008494:	c1 52       	brcc	800084be <__avr32_f64_add_res_of_done>
80008496:	ec 05 11 20 	rsub	r5,r6,32
8000849a:	e0 46 00 20 	cp.w	r6,32
8000849e:	c3 52       	brcc	80008508 <__avr32_f64_add_longshift>
800084a0:	f0 05 09 4e 	lsl	lr,r8,r5
800084a4:	f2 05 09 45 	lsl	r5,r9,r5
800084a8:	f0 06 0a 48 	lsr	r8,r8,r6
800084ac:	f2 06 0a 49 	lsr	r9,r9,r6
800084b0:	0a 48       	or	r8,r5

800084b2 <__avr32_f64_add_shift_done>:
800084b2:	10 0a       	add	r10,r8
800084b4:	f6 09 00 4b 	adc	r11,r11,r9
800084b8:	ed bb 00 15 	bld	r11,0x15
800084bc:	c3 40       	breq	80008524 <__avr32_f64_add_res_of>

800084be <__avr32_f64_add_res_of_done>:
800084be:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
800084c2:	18 4b       	or	r11,r12

800084c4 <__avr32_f64_add_round>:
800084c4:	f9 da c0 01 	bfextu	r12,r10,0x0,0x1
800084c8:	18 4e       	or	lr,r12
800084ca:	ee 1e 80 00 	eorh	lr,0x8000
800084ce:	f1 be 04 20 	satu	lr,0x1
800084d2:	1c 0a       	add	r10,lr
800084d4:	5c 0b       	acr	r11
800084d6:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800084da <__avr32_f64_add_opH_nan_or_inf>:
800084da:	b5 cb       	cbr	r11,0x14
800084dc:	f7 ea 10 0e 	or	lr,r11,r10
800084e0:	c1 01       	brne	80008500 <__avr32_f64_add_return_nan>
800084e2:	e0 46 07 ff 	cp.w	r6,2047
800084e6:	c0 30       	breq	800084ec <__avr32_f64_add_opL_nan_or_inf>
800084e8:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

800084ec <__avr32_f64_add_opL_nan_or_inf>:
800084ec:	b5 c9       	cbr	r9,0x14
800084ee:	f3 e8 10 0e 	or	lr,r9,r8
800084f2:	c0 71       	brne	80008500 <__avr32_f64_add_return_nan>
800084f4:	30 0a       	mov	r10,0
800084f6:	fc 1b 7f f0 	movh	r11,0x7ff0
800084fa:	18 4b       	or	r11,r12
800084fc:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008500 <__avr32_f64_add_return_nan>:
80008500:	3f fa       	mov	r10,-1
80008502:	3f fb       	mov	r11,-1
80008504:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80008508 <__avr32_f64_add_longshift>:
80008508:	f1 b6 04 c0 	satu	r6,0x6
8000850c:	f0 0e 17 00 	moveq	lr,r8
80008510:	c0 60       	breq	8000851c <__avr32_f64_add_longshift+0x14>
80008512:	f2 05 09 4e 	lsl	lr,r9,r5
80008516:	58 08       	cp.w	r8,0
80008518:	5f 18       	srne	r8
8000851a:	10 4e       	or	lr,r8
8000851c:	f2 06 0a 48 	lsr	r8,r9,r6
80008520:	30 09       	mov	r9,0
80008522:	cc 8b       	rjmp	800084b2 <__avr32_f64_add_shift_done>

80008524 <__avr32_f64_add_res_of>:
80008524:	fd ee 10 1e 	or	lr,lr,lr<<0x1
80008528:	a1 9b       	lsr	r11,0x1
8000852a:	5d 0a       	ror	r10
8000852c:	5d 0e       	ror	lr
8000852e:	2f f7       	sub	r7,-1
80008530:	e0 47 07 ff 	cp.w	r7,2047
80008534:	f9 ba 00 00 	moveq	r10,0
80008538:	f9 bb 00 00 	moveq	r11,0
8000853c:	f9 be 00 00 	moveq	lr,0
80008540:	cb fb       	rjmp	800084be <__avr32_f64_add_res_of_done>

80008542 <__avr32_f64_add_op2_subnormal>:
80008542:	30 16       	mov	r6,1
80008544:	58 07       	cp.w	r7,0
80008546:	ca 01       	brne	80008486 <__avr32_f64_add+0x3e>
80008548:	b5 cb       	cbr	r11,0x14
8000854a:	10 0a       	add	r10,r8
8000854c:	f6 09 00 4b 	adc	r11,r11,r9
80008550:	18 4b       	or	r11,r12
80008552:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80008556:	d7 03       	nop

80008558 <__avr32_f64_to_u32>:
80008558:	58 0b       	cp.w	r11,0
8000855a:	5e 6d       	retmi	0

8000855c <__avr32_f64_to_s32>:
8000855c:	f6 0c 15 01 	lsl	r12,r11,0x1
80008560:	b5 9c       	lsr	r12,0x15
80008562:	e0 2c 03 ff 	sub	r12,1023
80008566:	5e 3d       	retlo	0
80008568:	f8 0c 11 1f 	rsub	r12,r12,31
8000856c:	16 99       	mov	r9,r11
8000856e:	ab 7b       	lsl	r11,0xb
80008570:	bf bb       	sbr	r11,0x1f
80008572:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
80008576:	f6 0c 0a 4b 	lsr	r11,r11,r12
8000857a:	a1 79       	lsl	r9,0x1
8000857c:	5e 2b       	reths	r11
8000857e:	5c 3b       	neg	r11
80008580:	5e fb       	retal	r11

80008582 <__avr32_u32_to_f64>:
80008582:	f8 cb 00 00 	sub	r11,r12,0
80008586:	30 0c       	mov	r12,0
80008588:	c0 38       	rjmp	8000858e <__avr32_s32_to_f64+0x4>

8000858a <__avr32_s32_to_f64>:
8000858a:	18 9b       	mov	r11,r12
8000858c:	5c 4b       	abs	r11
8000858e:	30 0a       	mov	r10,0
80008590:	5e 0b       	reteq	r11
80008592:	d4 01       	pushm	lr
80008594:	e0 69 04 1e 	mov	r9,1054
80008598:	f6 08 12 00 	clz	r8,r11
8000859c:	c1 70       	breq	800085ca <__avr32_s32_to_f64+0x40>
8000859e:	c0 c3       	brcs	800085b6 <__avr32_s32_to_f64+0x2c>
800085a0:	f0 0e 11 20 	rsub	lr,r8,32
800085a4:	f6 08 09 4b 	lsl	r11,r11,r8
800085a8:	f4 0e 0a 4e 	lsr	lr,r10,lr
800085ac:	1c 4b       	or	r11,lr
800085ae:	f4 08 09 4a 	lsl	r10,r10,r8
800085b2:	10 19       	sub	r9,r8
800085b4:	c0 b8       	rjmp	800085ca <__avr32_s32_to_f64+0x40>
800085b6:	f4 08 12 00 	clz	r8,r10
800085ba:	f9 b8 03 00 	movlo	r8,0
800085be:	f7 b8 02 e0 	subhs	r8,-32
800085c2:	f4 08 09 4b 	lsl	r11,r10,r8
800085c6:	30 0a       	mov	r10,0
800085c8:	10 19       	sub	r9,r8
800085ca:	58 09       	cp.w	r9,0
800085cc:	e0 89 00 30 	brgt	8000862c <__avr32_s32_to_f64+0xa2>
800085d0:	5c 39       	neg	r9
800085d2:	2f f9       	sub	r9,-1
800085d4:	e0 49 00 36 	cp.w	r9,54
800085d8:	c0 43       	brcs	800085e0 <__avr32_s32_to_f64+0x56>
800085da:	30 0b       	mov	r11,0
800085dc:	30 0a       	mov	r10,0
800085de:	c2 68       	rjmp	8000862a <__avr32_s32_to_f64+0xa0>
800085e0:	2f 69       	sub	r9,-10
800085e2:	f2 08 11 20 	rsub	r8,r9,32
800085e6:	e0 49 00 20 	cp.w	r9,32
800085ea:	c0 b2       	brcc	80008600 <__avr32_s32_to_f64+0x76>
800085ec:	f4 08 09 4e 	lsl	lr,r10,r8
800085f0:	f6 08 09 48 	lsl	r8,r11,r8
800085f4:	f4 09 0a 4a 	lsr	r10,r10,r9
800085f8:	f6 09 0a 4b 	lsr	r11,r11,r9
800085fc:	10 4b       	or	r11,r8
800085fe:	c0 88       	rjmp	8000860e <__avr32_s32_to_f64+0x84>
80008600:	f6 08 09 4e 	lsl	lr,r11,r8
80008604:	14 4e       	or	lr,r10
80008606:	16 9a       	mov	r10,r11
80008608:	30 0b       	mov	r11,0
8000860a:	f4 09 0a 4a 	lsr	r10,r10,r9
8000860e:	ed ba 00 00 	bld	r10,0x0
80008612:	c0 92       	brcc	80008624 <__avr32_s32_to_f64+0x9a>
80008614:	1c 7e       	tst	lr,lr
80008616:	c0 41       	brne	8000861e <__avr32_s32_to_f64+0x94>
80008618:	ed ba 00 01 	bld	r10,0x1
8000861c:	c0 42       	brcc	80008624 <__avr32_s32_to_f64+0x9a>
8000861e:	2f fa       	sub	r10,-1
80008620:	f7 bb 02 ff 	subhs	r11,-1
80008624:	5c fc       	rol	r12
80008626:	5d 0b       	ror	r11
80008628:	5d 0a       	ror	r10
8000862a:	d8 02       	popm	pc
8000862c:	e0 68 03 ff 	mov	r8,1023
80008630:	ed ba 00 0b 	bld	r10,0xb
80008634:	f7 b8 00 ff 	subeq	r8,-1
80008638:	10 0a       	add	r10,r8
8000863a:	5c 0b       	acr	r11
8000863c:	f7 b9 03 fe 	sublo	r9,-2
80008640:	e0 49 07 ff 	cp.w	r9,2047
80008644:	c0 55       	brlt	8000864e <__avr32_s32_to_f64+0xc4>
80008646:	30 0a       	mov	r10,0
80008648:	fc 1b ff e0 	movh	r11,0xffe0
8000864c:	c0 c8       	rjmp	80008664 <__floatsidf_return_op1>
8000864e:	ed bb 00 1f 	bld	r11,0x1f
80008652:	f7 b9 01 01 	subne	r9,1
80008656:	ab 9a       	lsr	r10,0xb
80008658:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
8000865c:	a1 7b       	lsl	r11,0x1
8000865e:	ab 9b       	lsr	r11,0xb
80008660:	f7 e9 11 5b 	or	r11,r11,r9<<0x15

80008664 <__floatsidf_return_op1>:
80008664:	a1 7c       	lsl	r12,0x1
80008666:	5d 0b       	ror	r11
80008668:	d8 02       	popm	pc

8000866a <__avr32_f64_cmp_eq>:
8000866a:	10 3a       	cp.w	r10,r8
8000866c:	f2 0b 13 00 	cpc	r11,r9
80008670:	c0 80       	breq	80008680 <__avr32_f64_cmp_eq+0x16>
80008672:	a1 7b       	lsl	r11,0x1
80008674:	a1 79       	lsl	r9,0x1
80008676:	14 4b       	or	r11,r10
80008678:	12 4b       	or	r11,r9
8000867a:	10 4b       	or	r11,r8
8000867c:	5e 0f       	reteq	1
8000867e:	5e fd       	retal	0
80008680:	a1 7b       	lsl	r11,0x1
80008682:	fc 1c ff e0 	movh	r12,0xffe0
80008686:	58 0a       	cp.w	r10,0
80008688:	f8 0b 13 00 	cpc	r11,r12
8000868c:	5e 8f       	retls	1
8000868e:	5e fd       	retal	0

80008690 <__avr32_f64_cmp_ge>:
80008690:	1a de       	st.w	--sp,lr
80008692:	1a d7       	st.w	--sp,r7
80008694:	a1 7b       	lsl	r11,0x1
80008696:	5f 3c       	srlo	r12
80008698:	a1 79       	lsl	r9,0x1
8000869a:	5f 37       	srlo	r7
8000869c:	5c fc       	rol	r12
8000869e:	fc 1e ff e0 	movh	lr,0xffe0
800086a2:	58 0a       	cp.w	r10,0
800086a4:	fc 0b 13 00 	cpc	r11,lr
800086a8:	e0 8b 00 1d 	brhi	800086e2 <__avr32_f64_cmp_ge+0x52>
800086ac:	58 08       	cp.w	r8,0
800086ae:	fc 09 13 00 	cpc	r9,lr
800086b2:	e0 8b 00 18 	brhi	800086e2 <__avr32_f64_cmp_ge+0x52>
800086b6:	58 0b       	cp.w	r11,0
800086b8:	f5 ba 00 00 	subfeq	r10,0
800086bc:	c1 50       	breq	800086e6 <__avr32_f64_cmp_ge+0x56>
800086be:	1b 07       	ld.w	r7,sp++
800086c0:	1b 0e       	ld.w	lr,sp++
800086c2:	58 3c       	cp.w	r12,3
800086c4:	c0 a0       	breq	800086d8 <__avr32_f64_cmp_ge+0x48>
800086c6:	58 1c       	cp.w	r12,1
800086c8:	c0 33       	brcs	800086ce <__avr32_f64_cmp_ge+0x3e>
800086ca:	5e 0f       	reteq	1
800086cc:	5e 1d       	retne	0
800086ce:	10 3a       	cp.w	r10,r8
800086d0:	f2 0b 13 00 	cpc	r11,r9
800086d4:	5e 2f       	reths	1
800086d6:	5e 3d       	retlo	0
800086d8:	14 38       	cp.w	r8,r10
800086da:	f6 09 13 00 	cpc	r9,r11
800086de:	5e 2f       	reths	1
800086e0:	5e 3d       	retlo	0
800086e2:	1b 07       	ld.w	r7,sp++
800086e4:	d8 0a       	popm	pc,r12=0
800086e6:	58 17       	cp.w	r7,1
800086e8:	5f 0c       	sreq	r12
800086ea:	58 09       	cp.w	r9,0
800086ec:	f5 b8 00 00 	subfeq	r8,0
800086f0:	1b 07       	ld.w	r7,sp++
800086f2:	1b 0e       	ld.w	lr,sp++
800086f4:	5e 0f       	reteq	1
800086f6:	5e fc       	retal	r12

800086f8 <__avr32_f64_cmp_lt>:
800086f8:	1a de       	st.w	--sp,lr
800086fa:	1a d7       	st.w	--sp,r7
800086fc:	a1 7b       	lsl	r11,0x1
800086fe:	5f 3c       	srlo	r12
80008700:	a1 79       	lsl	r9,0x1
80008702:	5f 37       	srlo	r7
80008704:	5c fc       	rol	r12
80008706:	fc 1e ff e0 	movh	lr,0xffe0
8000870a:	58 0a       	cp.w	r10,0
8000870c:	fc 0b 13 00 	cpc	r11,lr
80008710:	e0 8b 00 1d 	brhi	8000874a <__avr32_f64_cmp_lt+0x52>
80008714:	58 08       	cp.w	r8,0
80008716:	fc 09 13 00 	cpc	r9,lr
8000871a:	e0 8b 00 18 	brhi	8000874a <__avr32_f64_cmp_lt+0x52>
8000871e:	58 0b       	cp.w	r11,0
80008720:	f5 ba 00 00 	subfeq	r10,0
80008724:	c1 50       	breq	8000874e <__avr32_f64_cmp_lt+0x56>
80008726:	1b 07       	ld.w	r7,sp++
80008728:	1b 0e       	ld.w	lr,sp++
8000872a:	58 3c       	cp.w	r12,3
8000872c:	c0 a0       	breq	80008740 <__avr32_f64_cmp_lt+0x48>
8000872e:	58 1c       	cp.w	r12,1
80008730:	c0 33       	brcs	80008736 <__avr32_f64_cmp_lt+0x3e>
80008732:	5e 0d       	reteq	0
80008734:	5e 1f       	retne	1
80008736:	10 3a       	cp.w	r10,r8
80008738:	f2 0b 13 00 	cpc	r11,r9
8000873c:	5e 2d       	reths	0
8000873e:	5e 3f       	retlo	1
80008740:	14 38       	cp.w	r8,r10
80008742:	f6 09 13 00 	cpc	r9,r11
80008746:	5e 2d       	reths	0
80008748:	5e 3f       	retlo	1
8000874a:	1b 07       	ld.w	r7,sp++
8000874c:	d8 0a       	popm	pc,r12=0
8000874e:	58 17       	cp.w	r7,1
80008750:	5f 1c       	srne	r12
80008752:	58 09       	cp.w	r9,0
80008754:	f5 b8 00 00 	subfeq	r8,0
80008758:	1b 07       	ld.w	r7,sp++
8000875a:	1b 0e       	ld.w	lr,sp++
8000875c:	5e 0d       	reteq	0
8000875e:	5e fc       	retal	r12

80008760 <__avr32_f64_div>:
80008760:	eb cd 40 ff 	pushm	r0-r7,lr
80008764:	f7 e9 20 0e 	eor	lr,r11,r9
80008768:	f6 07 16 14 	lsr	r7,r11,0x14
8000876c:	a9 7b       	lsl	r11,0x9
8000876e:	f7 ea 13 7b 	or	r11,r11,r10>>0x17
80008772:	a9 7a       	lsl	r10,0x9
80008774:	bd bb       	sbr	r11,0x1d
80008776:	e4 1b 3f ff 	andh	r11,0x3fff
8000877a:	ab d7       	cbr	r7,0xb
8000877c:	e0 80 00 cc 	breq	80008914 <__avr32_f64_div_round_subnormal+0x54>
80008780:	e0 47 07 ff 	cp.w	r7,2047
80008784:	e0 84 00 b5 	brge	800088ee <__avr32_f64_div_round_subnormal+0x2e>
80008788:	f2 06 16 14 	lsr	r6,r9,0x14
8000878c:	a9 79       	lsl	r9,0x9
8000878e:	f3 e8 13 79 	or	r9,r9,r8>>0x17
80008792:	a9 78       	lsl	r8,0x9
80008794:	bd b9       	sbr	r9,0x1d
80008796:	e4 19 3f ff 	andh	r9,0x3fff
8000879a:	ab d6       	cbr	r6,0xb
8000879c:	e0 80 00 e2 	breq	80008960 <__avr32_f64_div_round_subnormal+0xa0>
800087a0:	e0 46 07 ff 	cp.w	r6,2047
800087a4:	e0 84 00 b2 	brge	80008908 <__avr32_f64_div_round_subnormal+0x48>
800087a8:	0c 17       	sub	r7,r6
800087aa:	fe 37 fc 01 	sub	r7,-1023
800087ae:	fc 1c 80 00 	movh	r12,0x8000
800087b2:	f8 03 16 01 	lsr	r3,r12,0x1
800087b6:	e9 d9 c3 62 	bfextu	r4,r9,0x1b,0x2
800087ba:	5c d4       	com	r4
800087bc:	e7 d4 d3 82 	bfins	r3,r4,0x1c,0x2
800087c0:	e6 09 06 44 	mulu.d	r4,r3,r9
800087c4:	f8 05 01 25 	sub	r5,r12,r5<<0x2
800087c8:	e6 05 06 44 	mulu.d	r4,r3,r5
800087cc:	ea 03 15 02 	lsl	r3,r5,0x2
800087d0:	e6 09 06 44 	mulu.d	r4,r3,r9
800087d4:	f8 05 01 25 	sub	r5,r12,r5<<0x2
800087d8:	e6 05 06 44 	mulu.d	r4,r3,r5
800087dc:	ea 03 15 02 	lsl	r3,r5,0x2
800087e0:	e6 09 06 44 	mulu.d	r4,r3,r9
800087e4:	f8 05 01 25 	sub	r5,r12,r5<<0x2
800087e8:	e6 05 06 44 	mulu.d	r4,r3,r5
800087ec:	ea 03 15 02 	lsl	r3,r5,0x2
800087f0:	e6 08 06 40 	mulu.d	r0,r3,r8
800087f4:	e4 09 07 40 	macu.d	r0,r2,r9
800087f8:	e6 09 06 44 	mulu.d	r4,r3,r9
800087fc:	02 04       	add	r4,r1
800087fe:	5c 05       	acr	r5
80008800:	a3 65       	lsl	r5,0x2
80008802:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80008806:	a3 64       	lsl	r4,0x2
80008808:	5c 34       	neg	r4
8000880a:	f8 05 01 45 	sbc	r5,r12,r5
8000880e:	e6 04 06 40 	mulu.d	r0,r3,r4
80008812:	e4 05 07 40 	macu.d	r0,r2,r5
80008816:	e6 05 06 44 	mulu.d	r4,r3,r5
8000881a:	02 04       	add	r4,r1
8000881c:	5c 05       	acr	r5
8000881e:	ea 03 15 02 	lsl	r3,r5,0x2
80008822:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80008826:	e8 02 15 02 	lsl	r2,r4,0x2
8000882a:	e6 08 06 40 	mulu.d	r0,r3,r8
8000882e:	e4 09 07 40 	macu.d	r0,r2,r9
80008832:	e6 09 06 44 	mulu.d	r4,r3,r9
80008836:	02 04       	add	r4,r1
80008838:	5c 05       	acr	r5
8000883a:	a3 65       	lsl	r5,0x2
8000883c:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80008840:	a3 64       	lsl	r4,0x2
80008842:	5c 34       	neg	r4
80008844:	f8 05 01 45 	sbc	r5,r12,r5
80008848:	e6 04 06 40 	mulu.d	r0,r3,r4
8000884c:	e4 05 07 40 	macu.d	r0,r2,r5
80008850:	e6 05 06 44 	mulu.d	r4,r3,r5
80008854:	02 04       	add	r4,r1
80008856:	5c 05       	acr	r5
80008858:	ea 03 15 02 	lsl	r3,r5,0x2
8000885c:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80008860:	e8 02 15 02 	lsl	r2,r4,0x2
80008864:	e6 0a 06 40 	mulu.d	r0,r3,r10
80008868:	e4 0b 07 40 	macu.d	r0,r2,r11
8000886c:	e6 0b 06 42 	mulu.d	r2,r3,r11
80008870:	02 02       	add	r2,r1
80008872:	5c 03       	acr	r3
80008874:	ed b3 00 1c 	bld	r3,0x1c
80008878:	c0 90       	breq	8000888a <__avr32_f64_div+0x12a>
8000887a:	a1 72       	lsl	r2,0x1
8000887c:	5c f3       	rol	r3
8000887e:	20 17       	sub	r7,1
80008880:	a3 9a       	lsr	r10,0x3
80008882:	f5 eb 11 da 	or	r10,r10,r11<<0x1d
80008886:	a3 9b       	lsr	r11,0x3
80008888:	c0 58       	rjmp	80008892 <__avr32_f64_div+0x132>
8000888a:	a5 8a       	lsr	r10,0x4
8000888c:	f5 eb 11 ca 	or	r10,r10,r11<<0x1c
80008890:	a5 8b       	lsr	r11,0x4
80008892:	58 07       	cp.w	r7,0
80008894:	e0 8a 00 8b 	brle	800089aa <__avr32_f64_div_res_subnormal>
80008898:	e0 12 ff 00 	andl	r2,0xff00
8000889c:	e8 12 00 80 	orl	r2,0x80
800088a0:	e6 08 06 40 	mulu.d	r0,r3,r8
800088a4:	e4 09 07 40 	macu.d	r0,r2,r9
800088a8:	e4 08 06 44 	mulu.d	r4,r2,r8
800088ac:	e6 09 06 48 	mulu.d	r8,r3,r9
800088b0:	00 05       	add	r5,r0
800088b2:	f0 01 00 48 	adc	r8,r8,r1
800088b6:	5c 09       	acr	r9
800088b8:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
800088bc:	58 04       	cp.w	r4,0
800088be:	5c 25       	cpc	r5

800088c0 <__avr32_f64_div_round_subnormal>:
800088c0:	f4 08 13 00 	cpc	r8,r10
800088c4:	f6 09 13 00 	cpc	r9,r11
800088c8:	5f 36       	srlo	r6
800088ca:	f8 06 17 00 	moveq	r6,r12
800088ce:	e4 0a 16 08 	lsr	r10,r2,0x8
800088d2:	f5 e3 11 8a 	or	r10,r10,r3<<0x18
800088d6:	e6 0b 16 08 	lsr	r11,r3,0x8
800088da:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
800088de:	ed be 00 1f 	bld	lr,0x1f
800088e2:	ef bb 00 1f 	bst	r11,0x1f
800088e6:	0c 0a       	add	r10,r6
800088e8:	5c 0b       	acr	r11
800088ea:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
800088ee:	e4 1b 00 0f 	andh	r11,0xf
800088f2:	14 4b       	or	r11,r10
800088f4:	e0 81 00 a7 	brne	80008a42 <__avr32_f64_div_res_subnormal+0x98>
800088f8:	f2 06 16 14 	lsr	r6,r9,0x14
800088fc:	ab d6       	cbr	r6,0xb
800088fe:	e0 46 07 ff 	cp.w	r6,2047
80008902:	e0 81 00 a4 	brne	80008a4a <__avr32_f64_div_res_subnormal+0xa0>
80008906:	c9 e8       	rjmp	80008a42 <__avr32_f64_div_res_subnormal+0x98>
80008908:	e4 19 00 0f 	andh	r9,0xf
8000890c:	10 49       	or	r9,r8
8000890e:	e0 81 00 9a 	brne	80008a42 <__avr32_f64_div_res_subnormal+0x98>
80008912:	c9 28       	rjmp	80008a36 <__avr32_f64_div_res_subnormal+0x8c>
80008914:	a3 7b       	lsl	r11,0x3
80008916:	f7 ea 13 db 	or	r11,r11,r10>>0x1d
8000891a:	a3 7a       	lsl	r10,0x3
8000891c:	f5 eb 10 04 	or	r4,r10,r11
80008920:	e0 80 00 a0 	breq	80008a60 <__avr32_f64_div_op1_zero>
80008924:	f6 04 12 00 	clz	r4,r11
80008928:	c1 70       	breq	80008956 <__avr32_f64_div_round_subnormal+0x96>
8000892a:	c0 c3       	brcs	80008942 <__avr32_f64_div_round_subnormal+0x82>
8000892c:	e8 05 11 20 	rsub	r5,r4,32
80008930:	f6 04 09 4b 	lsl	r11,r11,r4
80008934:	f4 05 0a 45 	lsr	r5,r10,r5
80008938:	0a 4b       	or	r11,r5
8000893a:	f4 04 09 4a 	lsl	r10,r10,r4
8000893e:	08 17       	sub	r7,r4
80008940:	c0 b8       	rjmp	80008956 <__avr32_f64_div_round_subnormal+0x96>
80008942:	f4 04 12 00 	clz	r4,r10
80008946:	f9 b4 03 00 	movlo	r4,0
8000894a:	f7 b4 02 e0 	subhs	r4,-32
8000894e:	f4 04 09 4b 	lsl	r11,r10,r4
80008952:	30 0a       	mov	r10,0
80008954:	08 17       	sub	r7,r4
80008956:	a3 8a       	lsr	r10,0x2
80008958:	f5 eb 11 ea 	or	r10,r10,r11<<0x1e
8000895c:	a3 8b       	lsr	r11,0x2
8000895e:	c1 1b       	rjmp	80008780 <__avr32_f64_div+0x20>
80008960:	a3 79       	lsl	r9,0x3
80008962:	f3 e8 13 d9 	or	r9,r9,r8>>0x1d
80008966:	a3 78       	lsl	r8,0x3
80008968:	f3 e8 10 04 	or	r4,r9,r8
8000896c:	c6 f0       	breq	80008a4a <__avr32_f64_div_res_subnormal+0xa0>
8000896e:	f2 04 12 00 	clz	r4,r9
80008972:	c1 70       	breq	800089a0 <__avr32_f64_div_round_subnormal+0xe0>
80008974:	c0 c3       	brcs	8000898c <__avr32_f64_div_round_subnormal+0xcc>
80008976:	e8 05 11 20 	rsub	r5,r4,32
8000897a:	f2 04 09 49 	lsl	r9,r9,r4
8000897e:	f0 05 0a 45 	lsr	r5,r8,r5
80008982:	0a 49       	or	r9,r5
80008984:	f0 04 09 48 	lsl	r8,r8,r4
80008988:	08 16       	sub	r6,r4
8000898a:	c0 b8       	rjmp	800089a0 <__avr32_f64_div_round_subnormal+0xe0>
8000898c:	f0 04 12 00 	clz	r4,r8
80008990:	f9 b4 03 00 	movlo	r4,0
80008994:	f7 b4 02 e0 	subhs	r4,-32
80008998:	f0 04 09 49 	lsl	r9,r8,r4
8000899c:	30 08       	mov	r8,0
8000899e:	08 16       	sub	r6,r4
800089a0:	a3 88       	lsr	r8,0x2
800089a2:	f1 e9 11 e8 	or	r8,r8,r9<<0x1e
800089a6:	a3 89       	lsr	r9,0x2
800089a8:	cf ca       	rjmp	800087a0 <__avr32_f64_div+0x40>

800089aa <__avr32_f64_div_res_subnormal>:
800089aa:	5c 37       	neg	r7
800089ac:	2f f7       	sub	r7,-1
800089ae:	f1 b7 04 c0 	satu	r7,0x6
800089b2:	e0 47 00 20 	cp.w	r7,32
800089b6:	c1 54       	brge	800089e0 <__avr32_f64_div_res_subnormal+0x36>
800089b8:	ee 06 11 20 	rsub	r6,r7,32
800089bc:	e4 07 0a 42 	lsr	r2,r2,r7
800089c0:	e6 06 09 4c 	lsl	r12,r3,r6
800089c4:	18 42       	or	r2,r12
800089c6:	e6 07 0a 43 	lsr	r3,r3,r7
800089ca:	f4 06 09 41 	lsl	r1,r10,r6
800089ce:	f4 07 0a 4a 	lsr	r10,r10,r7
800089d2:	f6 06 09 4c 	lsl	r12,r11,r6
800089d6:	18 4a       	or	r10,r12
800089d8:	f6 07 0a 4b 	lsr	r11,r11,r7
800089dc:	30 00       	mov	r0,0
800089de:	c1 58       	rjmp	80008a08 <__avr32_f64_div_res_subnormal+0x5e>
800089e0:	ee 06 11 20 	rsub	r6,r7,32
800089e4:	f9 b0 00 00 	moveq	r0,0
800089e8:	f9 bc 00 00 	moveq	r12,0
800089ec:	c0 50       	breq	800089f6 <__avr32_f64_div_res_subnormal+0x4c>
800089ee:	f4 06 09 40 	lsl	r0,r10,r6
800089f2:	f6 06 09 4c 	lsl	r12,r11,r6
800089f6:	e6 07 0a 42 	lsr	r2,r3,r7
800089fa:	30 03       	mov	r3,0
800089fc:	f4 07 0a 41 	lsr	r1,r10,r7
80008a00:	18 41       	or	r1,r12
80008a02:	f6 07 0a 4a 	lsr	r10,r11,r7
80008a06:	30 0b       	mov	r11,0
80008a08:	e0 12 ff 00 	andl	r2,0xff00
80008a0c:	e8 12 00 80 	orl	r2,0x80
80008a10:	e6 08 06 46 	mulu.d	r6,r3,r8
80008a14:	e4 09 07 46 	macu.d	r6,r2,r9
80008a18:	e4 08 06 44 	mulu.d	r4,r2,r8
80008a1c:	e6 09 06 48 	mulu.d	r8,r3,r9
80008a20:	0c 05       	add	r5,r6
80008a22:	f0 07 00 48 	adc	r8,r8,r7
80008a26:	5c 09       	acr	r9
80008a28:	30 07       	mov	r7,0
80008a2a:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80008a2e:	00 34       	cp.w	r4,r0
80008a30:	e2 05 13 00 	cpc	r5,r1
80008a34:	c4 6b       	rjmp	800088c0 <__avr32_f64_div_round_subnormal>
80008a36:	1c 9b       	mov	r11,lr
80008a38:	e6 1b 80 00 	andh	r11,0x8000,COH
80008a3c:	30 0a       	mov	r10,0
80008a3e:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008a42:	3f fb       	mov	r11,-1
80008a44:	30 0a       	mov	r10,0
80008a46:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008a4a:	f5 eb 10 04 	or	r4,r10,r11
80008a4e:	c0 90       	breq	80008a60 <__avr32_f64_div_op1_zero>
80008a50:	1c 9b       	mov	r11,lr
80008a52:	e6 1b 80 00 	andh	r11,0x8000,COH
80008a56:	ea 1b 7f f0 	orh	r11,0x7ff0
80008a5a:	30 0a       	mov	r10,0
80008a5c:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc

80008a60 <__avr32_f64_div_op1_zero>:
80008a60:	f1 e9 10 15 	or	r5,r8,r9<<0x1
80008a64:	ce f0       	breq	80008a42 <__avr32_f64_div_res_subnormal+0x98>
80008a66:	e9 d9 c2 8b 	bfextu	r4,r9,0x14,0xb
80008a6a:	e0 44 07 ff 	cp.w	r4,2047
80008a6e:	ce 41       	brne	80008a36 <__avr32_f64_div_res_subnormal+0x8c>
80008a70:	f1 e9 10 c5 	or	r5,r8,r9<<0xc
80008a74:	ce 10       	breq	80008a36 <__avr32_f64_div_res_subnormal+0x8c>
80008a76:	ce 6b       	rjmp	80008a42 <__avr32_f64_div_res_subnormal+0x98>

80008a78 <__avr32_udiv64>:
80008a78:	d4 31       	pushm	r0-r7,lr
80008a7a:	1a 97       	mov	r7,sp
80008a7c:	20 3d       	sub	sp,12
80008a7e:	10 9c       	mov	r12,r8
80008a80:	12 9e       	mov	lr,r9
80008a82:	14 93       	mov	r3,r10
80008a84:	58 09       	cp.w	r9,0
80008a86:	e0 81 00 bd 	brne	80008c00 <__avr32_udiv64+0x188>
80008a8a:	16 38       	cp.w	r8,r11
80008a8c:	e0 88 00 40 	brls	80008b0c <__avr32_udiv64+0x94>
80008a90:	f0 08 12 00 	clz	r8,r8
80008a94:	c0 d0       	breq	80008aae <__avr32_udiv64+0x36>
80008a96:	f6 08 09 4b 	lsl	r11,r11,r8
80008a9a:	f0 09 11 20 	rsub	r9,r8,32
80008a9e:	f8 08 09 4c 	lsl	r12,r12,r8
80008aa2:	f4 09 0a 49 	lsr	r9,r10,r9
80008aa6:	f4 08 09 43 	lsl	r3,r10,r8
80008aaa:	f3 eb 10 0b 	or	r11,r9,r11
80008aae:	f8 0e 16 10 	lsr	lr,r12,0x10
80008ab2:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
80008ab6:	f6 0e 0d 00 	divu	r0,r11,lr
80008aba:	e6 0b 16 10 	lsr	r11,r3,0x10
80008abe:	00 99       	mov	r9,r0
80008ac0:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80008ac4:	e0 0a 02 48 	mul	r8,r0,r10
80008ac8:	10 3b       	cp.w	r11,r8
80008aca:	c0 a2       	brcc	80008ade <__avr32_udiv64+0x66>
80008acc:	20 19       	sub	r9,1
80008ace:	18 0b       	add	r11,r12
80008ad0:	18 3b       	cp.w	r11,r12
80008ad2:	c0 63       	brcs	80008ade <__avr32_udiv64+0x66>
80008ad4:	10 3b       	cp.w	r11,r8
80008ad6:	f7 b9 03 01 	sublo	r9,1
80008ada:	f7 dc e3 0b 	addcs	r11,r11,r12
80008ade:	f6 08 01 01 	sub	r1,r11,r8
80008ae2:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
80008ae6:	e2 0e 0d 00 	divu	r0,r1,lr
80008aea:	e7 e1 11 03 	or	r3,r3,r1<<0x10
80008aee:	00 98       	mov	r8,r0
80008af0:	e0 0a 02 4a 	mul	r10,r0,r10
80008af4:	14 33       	cp.w	r3,r10
80008af6:	c0 82       	brcc	80008b06 <__avr32_udiv64+0x8e>
80008af8:	20 18       	sub	r8,1
80008afa:	18 03       	add	r3,r12
80008afc:	18 33       	cp.w	r3,r12
80008afe:	c0 43       	brcs	80008b06 <__avr32_udiv64+0x8e>
80008b00:	14 33       	cp.w	r3,r10
80008b02:	f7 b8 03 01 	sublo	r8,1
80008b06:	f1 e9 11 08 	or	r8,r8,r9<<0x10
80008b0a:	cd f8       	rjmp	80008cc8 <__avr32_udiv64+0x250>
80008b0c:	58 08       	cp.w	r8,0
80008b0e:	c0 51       	brne	80008b18 <__avr32_udiv64+0xa0>
80008b10:	30 19       	mov	r9,1
80008b12:	f2 08 0d 08 	divu	r8,r9,r8
80008b16:	10 9c       	mov	r12,r8
80008b18:	f8 06 12 00 	clz	r6,r12
80008b1c:	c0 41       	brne	80008b24 <__avr32_udiv64+0xac>
80008b1e:	18 1b       	sub	r11,r12
80008b20:	30 19       	mov	r9,1
80008b22:	c4 08       	rjmp	80008ba2 <__avr32_udiv64+0x12a>
80008b24:	ec 01 11 20 	rsub	r1,r6,32
80008b28:	f4 01 0a 49 	lsr	r9,r10,r1
80008b2c:	f8 06 09 4c 	lsl	r12,r12,r6
80008b30:	f6 06 09 48 	lsl	r8,r11,r6
80008b34:	f6 01 0a 41 	lsr	r1,r11,r1
80008b38:	f3 e8 10 08 	or	r8,r9,r8
80008b3c:	f8 03 16 10 	lsr	r3,r12,0x10
80008b40:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80008b44:	e2 03 0d 00 	divu	r0,r1,r3
80008b48:	f0 0b 16 10 	lsr	r11,r8,0x10
80008b4c:	00 9e       	mov	lr,r0
80008b4e:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80008b52:	e0 05 02 49 	mul	r9,r0,r5
80008b56:	12 3b       	cp.w	r11,r9
80008b58:	c0 a2       	brcc	80008b6c <__avr32_udiv64+0xf4>
80008b5a:	20 1e       	sub	lr,1
80008b5c:	18 0b       	add	r11,r12
80008b5e:	18 3b       	cp.w	r11,r12
80008b60:	c0 63       	brcs	80008b6c <__avr32_udiv64+0xf4>
80008b62:	12 3b       	cp.w	r11,r9
80008b64:	f7 be 03 01 	sublo	lr,1
80008b68:	f7 dc e3 0b 	addcs	r11,r11,r12
80008b6c:	12 1b       	sub	r11,r9
80008b6e:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
80008b72:	f6 03 0d 02 	divu	r2,r11,r3
80008b76:	f1 e3 11 08 	or	r8,r8,r3<<0x10
80008b7a:	04 99       	mov	r9,r2
80008b7c:	e4 05 02 4b 	mul	r11,r2,r5
80008b80:	16 38       	cp.w	r8,r11
80008b82:	c0 a2       	brcc	80008b96 <__avr32_udiv64+0x11e>
80008b84:	20 19       	sub	r9,1
80008b86:	18 08       	add	r8,r12
80008b88:	18 38       	cp.w	r8,r12
80008b8a:	c0 63       	brcs	80008b96 <__avr32_udiv64+0x11e>
80008b8c:	16 38       	cp.w	r8,r11
80008b8e:	f7 b9 03 01 	sublo	r9,1
80008b92:	f1 dc e3 08 	addcs	r8,r8,r12
80008b96:	f4 06 09 43 	lsl	r3,r10,r6
80008b9a:	f0 0b 01 0b 	sub	r11,r8,r11
80008b9e:	f3 ee 11 09 	or	r9,r9,lr<<0x10
80008ba2:	f8 06 16 10 	lsr	r6,r12,0x10
80008ba6:	fd dc c0 10 	bfextu	lr,r12,0x0,0x10
80008baa:	f6 06 0d 00 	divu	r0,r11,r6
80008bae:	e6 0b 16 10 	lsr	r11,r3,0x10
80008bb2:	00 9a       	mov	r10,r0
80008bb4:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80008bb8:	e0 0e 02 48 	mul	r8,r0,lr
80008bbc:	10 3b       	cp.w	r11,r8
80008bbe:	c0 a2       	brcc	80008bd2 <__avr32_udiv64+0x15a>
80008bc0:	20 1a       	sub	r10,1
80008bc2:	18 0b       	add	r11,r12
80008bc4:	18 3b       	cp.w	r11,r12
80008bc6:	c0 63       	brcs	80008bd2 <__avr32_udiv64+0x15a>
80008bc8:	10 3b       	cp.w	r11,r8
80008bca:	f7 ba 03 01 	sublo	r10,1
80008bce:	f7 dc e3 0b 	addcs	r11,r11,r12
80008bd2:	f6 08 01 01 	sub	r1,r11,r8
80008bd6:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
80008bda:	e2 06 0d 00 	divu	r0,r1,r6
80008bde:	e7 e1 11 03 	or	r3,r3,r1<<0x10
80008be2:	00 98       	mov	r8,r0
80008be4:	e0 0e 02 4b 	mul	r11,r0,lr
80008be8:	16 33       	cp.w	r3,r11
80008bea:	c0 82       	brcc	80008bfa <__avr32_udiv64+0x182>
80008bec:	20 18       	sub	r8,1
80008bee:	18 03       	add	r3,r12
80008bf0:	18 33       	cp.w	r3,r12
80008bf2:	c0 43       	brcs	80008bfa <__avr32_udiv64+0x182>
80008bf4:	16 33       	cp.w	r3,r11
80008bf6:	f7 b8 03 01 	sublo	r8,1
80008bfa:	f1 ea 11 08 	or	r8,r8,r10<<0x10
80008bfe:	c6 98       	rjmp	80008cd0 <__avr32_udiv64+0x258>
80008c00:	16 39       	cp.w	r9,r11
80008c02:	e0 8b 00 65 	brhi	80008ccc <__avr32_udiv64+0x254>
80008c06:	f2 09 12 00 	clz	r9,r9
80008c0a:	c0 b1       	brne	80008c20 <__avr32_udiv64+0x1a8>
80008c0c:	10 3a       	cp.w	r10,r8
80008c0e:	5f 2a       	srhs	r10
80008c10:	1c 3b       	cp.w	r11,lr
80008c12:	5f b8       	srhi	r8
80008c14:	10 4a       	or	r10,r8
80008c16:	f2 0a 18 00 	cp.b	r10,r9
80008c1a:	c5 90       	breq	80008ccc <__avr32_udiv64+0x254>
80008c1c:	30 18       	mov	r8,1
80008c1e:	c5 98       	rjmp	80008cd0 <__avr32_udiv64+0x258>
80008c20:	f0 09 09 46 	lsl	r6,r8,r9
80008c24:	f2 03 11 20 	rsub	r3,r9,32
80008c28:	fc 09 09 4e 	lsl	lr,lr,r9
80008c2c:	f0 03 0a 48 	lsr	r8,r8,r3
80008c30:	f6 09 09 4c 	lsl	r12,r11,r9
80008c34:	f4 03 0a 42 	lsr	r2,r10,r3
80008c38:	ef 46 ff f4 	st.w	r7[-12],r6
80008c3c:	f6 03 0a 43 	lsr	r3,r11,r3
80008c40:	18 42       	or	r2,r12
80008c42:	f1 ee 10 0c 	or	r12,r8,lr
80008c46:	f8 01 16 10 	lsr	r1,r12,0x10
80008c4a:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
80008c4e:	e6 01 0d 04 	divu	r4,r3,r1
80008c52:	e4 03 16 10 	lsr	r3,r2,0x10
80008c56:	08 9e       	mov	lr,r4
80008c58:	e7 e5 11 03 	or	r3,r3,r5<<0x10
80008c5c:	e8 06 02 48 	mul	r8,r4,r6
80008c60:	10 33       	cp.w	r3,r8
80008c62:	c0 a2       	brcc	80008c76 <__avr32_udiv64+0x1fe>
80008c64:	20 1e       	sub	lr,1
80008c66:	18 03       	add	r3,r12
80008c68:	18 33       	cp.w	r3,r12
80008c6a:	c0 63       	brcs	80008c76 <__avr32_udiv64+0x1fe>
80008c6c:	10 33       	cp.w	r3,r8
80008c6e:	f7 be 03 01 	sublo	lr,1
80008c72:	e7 dc e3 03 	addcs	r3,r3,r12
80008c76:	10 13       	sub	r3,r8
80008c78:	f7 d2 c0 10 	bfextu	r11,r2,0x0,0x10
80008c7c:	e6 01 0d 00 	divu	r0,r3,r1
80008c80:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
80008c84:	00 98       	mov	r8,r0
80008c86:	e0 06 02 46 	mul	r6,r0,r6
80008c8a:	0c 3b       	cp.w	r11,r6
80008c8c:	c0 a2       	brcc	80008ca0 <__avr32_udiv64+0x228>
80008c8e:	20 18       	sub	r8,1
80008c90:	18 0b       	add	r11,r12
80008c92:	18 3b       	cp.w	r11,r12
80008c94:	c0 63       	brcs	80008ca0 <__avr32_udiv64+0x228>
80008c96:	0c 3b       	cp.w	r11,r6
80008c98:	f7 dc e3 0b 	addcs	r11,r11,r12
80008c9c:	f7 b8 03 01 	sublo	r8,1
80008ca0:	f1 ee 11 08 	or	r8,r8,lr<<0x10
80008ca4:	ee f4 ff f4 	ld.w	r4,r7[-12]
80008ca8:	0c 1b       	sub	r11,r6
80008caa:	f0 04 06 42 	mulu.d	r2,r8,r4
80008cae:	06 95       	mov	r5,r3
80008cb0:	16 35       	cp.w	r5,r11
80008cb2:	e0 8b 00 0a 	brhi	80008cc6 <__avr32_udiv64+0x24e>
80008cb6:	5f 0b       	sreq	r11
80008cb8:	f4 09 09 49 	lsl	r9,r10,r9
80008cbc:	12 32       	cp.w	r2,r9
80008cbe:	5f b9       	srhi	r9
80008cc0:	f7 e9 00 09 	and	r9,r11,r9
80008cc4:	c0 60       	breq	80008cd0 <__avr32_udiv64+0x258>
80008cc6:	20 18       	sub	r8,1
80008cc8:	30 09       	mov	r9,0
80008cca:	c0 38       	rjmp	80008cd0 <__avr32_udiv64+0x258>
80008ccc:	30 09       	mov	r9,0
80008cce:	12 98       	mov	r8,r9
80008cd0:	10 9a       	mov	r10,r8
80008cd2:	12 93       	mov	r3,r9
80008cd4:	10 92       	mov	r2,r8
80008cd6:	12 9b       	mov	r11,r9
80008cd8:	2f dd       	sub	sp,-12
80008cda:	d8 32       	popm	r0-r7,pc

80008cdc <__avr32_umod64>:
80008cdc:	d4 31       	pushm	r0-r7,lr
80008cde:	1a 97       	mov	r7,sp
80008ce0:	20 3d       	sub	sp,12
80008ce2:	10 9c       	mov	r12,r8
80008ce4:	12 95       	mov	r5,r9
80008ce6:	14 9e       	mov	lr,r10
80008ce8:	16 91       	mov	r1,r11
80008cea:	16 96       	mov	r6,r11
80008cec:	58 09       	cp.w	r9,0
80008cee:	e0 81 00 81 	brne	80008df0 <__avr32_umod64+0x114>
80008cf2:	16 38       	cp.w	r8,r11
80008cf4:	e0 88 00 12 	brls	80008d18 <__avr32_umod64+0x3c>
80008cf8:	f0 08 12 00 	clz	r8,r8
80008cfc:	c4 e0       	breq	80008d98 <__avr32_umod64+0xbc>
80008cfe:	f6 08 09 46 	lsl	r6,r11,r8
80008d02:	f8 08 09 4c 	lsl	r12,r12,r8
80008d06:	f0 0b 11 20 	rsub	r11,r8,32
80008d0a:	f4 08 09 4e 	lsl	lr,r10,r8
80008d0e:	f4 0b 0a 4b 	lsr	r11,r10,r11
80008d12:	f7 e6 10 06 	or	r6,r11,r6
80008d16:	c4 18       	rjmp	80008d98 <__avr32_umod64+0xbc>
80008d18:	58 08       	cp.w	r8,0
80008d1a:	c0 51       	brne	80008d24 <__avr32_umod64+0x48>
80008d1c:	30 19       	mov	r9,1
80008d1e:	f2 08 0d 08 	divu	r8,r9,r8
80008d22:	10 9c       	mov	r12,r8
80008d24:	f8 08 12 00 	clz	r8,r12
80008d28:	c0 31       	brne	80008d2e <__avr32_umod64+0x52>
80008d2a:	18 16       	sub	r6,r12
80008d2c:	c3 68       	rjmp	80008d98 <__avr32_umod64+0xbc>
80008d2e:	f0 03 11 20 	rsub	r3,r8,32
80008d32:	f4 03 0a 4b 	lsr	r11,r10,r3
80008d36:	f8 08 09 4c 	lsl	r12,r12,r8
80008d3a:	ec 08 09 49 	lsl	r9,r6,r8
80008d3e:	ec 03 0a 43 	lsr	r3,r6,r3
80008d42:	f7 e9 10 09 	or	r9,r11,r9
80008d46:	f8 05 16 10 	lsr	r5,r12,0x10
80008d4a:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
80008d4e:	e6 05 0d 02 	divu	r2,r3,r5
80008d52:	f2 0e 16 10 	lsr	lr,r9,0x10
80008d56:	ec 02 02 4b 	mul	r11,r6,r2
80008d5a:	fd e3 11 0e 	or	lr,lr,r3<<0x10
80008d5e:	16 3e       	cp.w	lr,r11
80008d60:	c0 72       	brcc	80008d6e <__avr32_umod64+0x92>
80008d62:	18 0e       	add	lr,r12
80008d64:	18 3e       	cp.w	lr,r12
80008d66:	c0 43       	brcs	80008d6e <__avr32_umod64+0x92>
80008d68:	16 3e       	cp.w	lr,r11
80008d6a:	fd dc e3 0e 	addcs	lr,lr,r12
80008d6e:	fc 0b 01 03 	sub	r3,lr,r11
80008d72:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
80008d76:	e6 05 0d 02 	divu	r2,r3,r5
80008d7a:	f3 e3 11 09 	or	r9,r9,r3<<0x10
80008d7e:	a5 36       	mul	r6,r2
80008d80:	0c 39       	cp.w	r9,r6
80008d82:	c0 72       	brcc	80008d90 <__avr32_umod64+0xb4>
80008d84:	18 09       	add	r9,r12
80008d86:	18 39       	cp.w	r9,r12
80008d88:	c0 43       	brcs	80008d90 <__avr32_umod64+0xb4>
80008d8a:	0c 39       	cp.w	r9,r6
80008d8c:	f3 dc e3 09 	addcs	r9,r9,r12
80008d90:	f2 06 01 06 	sub	r6,r9,r6
80008d94:	f4 08 09 4e 	lsl	lr,r10,r8
80008d98:	f8 0a 16 10 	lsr	r10,r12,0x10
80008d9c:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80008da0:	ec 0a 0d 02 	divu	r2,r6,r10
80008da4:	fc 09 16 10 	lsr	r9,lr,0x10
80008da8:	ea 02 02 4b 	mul	r11,r5,r2
80008dac:	f3 e3 11 09 	or	r9,r9,r3<<0x10
80008db0:	16 39       	cp.w	r9,r11
80008db2:	c0 72       	brcc	80008dc0 <__avr32_umod64+0xe4>
80008db4:	18 09       	add	r9,r12
80008db6:	18 39       	cp.w	r9,r12
80008db8:	c0 43       	brcs	80008dc0 <__avr32_umod64+0xe4>
80008dba:	16 39       	cp.w	r9,r11
80008dbc:	f3 dc e3 09 	addcs	r9,r9,r12
80008dc0:	f2 0b 01 0b 	sub	r11,r9,r11
80008dc4:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80008dc8:	f6 0a 0d 0a 	divu	r10,r11,r10
80008dcc:	fd eb 11 0e 	or	lr,lr,r11<<0x10
80008dd0:	ea 0a 02 4a 	mul	r10,r5,r10
80008dd4:	14 3e       	cp.w	lr,r10
80008dd6:	c0 72       	brcc	80008de4 <__avr32_umod64+0x108>
80008dd8:	18 0e       	add	lr,r12
80008dda:	18 3e       	cp.w	lr,r12
80008ddc:	c0 43       	brcs	80008de4 <__avr32_umod64+0x108>
80008dde:	14 3e       	cp.w	lr,r10
80008de0:	fd dc e3 0e 	addcs	lr,lr,r12
80008de4:	fc 0a 01 0a 	sub	r10,lr,r10
80008de8:	30 0b       	mov	r11,0
80008dea:	f4 08 0a 4a 	lsr	r10,r10,r8
80008dee:	c7 b8       	rjmp	80008ee4 <__avr32_umod64+0x208>
80008df0:	16 39       	cp.w	r9,r11
80008df2:	e0 8b 00 79 	brhi	80008ee4 <__avr32_umod64+0x208>
80008df6:	f2 09 12 00 	clz	r9,r9
80008dfa:	c1 21       	brne	80008e1e <__avr32_umod64+0x142>
80008dfc:	10 3a       	cp.w	r10,r8
80008dfe:	5f 2b       	srhs	r11
80008e00:	0a 31       	cp.w	r1,r5
80008e02:	5f ba       	srhi	r10
80008e04:	f7 ea 10 0a 	or	r10,r11,r10
80008e08:	f2 0a 18 00 	cp.b	r10,r9
80008e0c:	c0 60       	breq	80008e18 <__avr32_umod64+0x13c>
80008e0e:	fc 08 01 0c 	sub	r12,lr,r8
80008e12:	e2 05 01 46 	sbc	r6,r1,r5
80008e16:	18 9e       	mov	lr,r12
80008e18:	0c 9b       	mov	r11,r6
80008e1a:	1c 9a       	mov	r10,lr
80008e1c:	c6 48       	rjmp	80008ee4 <__avr32_umod64+0x208>
80008e1e:	ea 09 09 4c 	lsl	r12,r5,r9
80008e22:	f2 06 11 20 	rsub	r6,r9,32
80008e26:	f6 09 09 4b 	lsl	r11,r11,r9
80008e2a:	f0 09 09 42 	lsl	r2,r8,r9
80008e2e:	ef 46 ff f4 	st.w	r7[-12],r6
80008e32:	f0 06 0a 48 	lsr	r8,r8,r6
80008e36:	18 48       	or	r8,r12
80008e38:	e2 06 0a 4c 	lsr	r12,r1,r6
80008e3c:	f4 09 09 43 	lsl	r3,r10,r9
80008e40:	fd d8 c0 10 	bfextu	lr,r8,0x0,0x10
80008e44:	f4 06 0a 4a 	lsr	r10,r10,r6
80008e48:	16 4a       	or	r10,r11
80008e4a:	f0 0b 16 10 	lsr	r11,r8,0x10
80008e4e:	f8 0b 0d 04 	divu	r4,r12,r11
80008e52:	f4 0c 16 10 	lsr	r12,r10,0x10
80008e56:	08 91       	mov	r1,r4
80008e58:	f9 e5 11 0c 	or	r12,r12,r5<<0x10
80008e5c:	e8 0e 02 46 	mul	r6,r4,lr
80008e60:	0c 3c       	cp.w	r12,r6
80008e62:	c0 a2       	brcc	80008e76 <__avr32_umod64+0x19a>
80008e64:	20 11       	sub	r1,1
80008e66:	10 0c       	add	r12,r8
80008e68:	10 3c       	cp.w	r12,r8
80008e6a:	c0 63       	brcs	80008e76 <__avr32_umod64+0x19a>
80008e6c:	0c 3c       	cp.w	r12,r6
80008e6e:	f7 b1 03 01 	sublo	r1,1
80008e72:	f9 d8 e3 0c 	addcs	r12,r12,r8
80008e76:	0c 1c       	sub	r12,r6
80008e78:	f5 da c0 10 	bfextu	r10,r10,0x0,0x10
80008e7c:	f8 0b 0d 04 	divu	r4,r12,r11
80008e80:	f5 e5 11 0b 	or	r11,r10,r5<<0x10
80008e84:	08 96       	mov	r6,r4
80008e86:	e8 0e 02 4e 	mul	lr,r4,lr
80008e8a:	1c 3b       	cp.w	r11,lr
80008e8c:	c0 a2       	brcc	80008ea0 <__avr32_umod64+0x1c4>
80008e8e:	20 16       	sub	r6,1
80008e90:	10 0b       	add	r11,r8
80008e92:	10 3b       	cp.w	r11,r8
80008e94:	c0 63       	brcs	80008ea0 <__avr32_umod64+0x1c4>
80008e96:	1c 3b       	cp.w	r11,lr
80008e98:	f7 b6 03 01 	sublo	r6,1
80008e9c:	f7 d8 e3 0b 	addcs	r11,r11,r8
80008ea0:	ed e1 11 01 	or	r1,r6,r1<<0x10
80008ea4:	1c 1b       	sub	r11,lr
80008ea6:	e2 02 06 40 	mulu.d	r0,r1,r2
80008eaa:	00 9e       	mov	lr,r0
80008eac:	02 9c       	mov	r12,r1
80008eae:	16 3c       	cp.w	r12,r11
80008eb0:	e0 8b 00 08 	brhi	80008ec0 <__avr32_umod64+0x1e4>
80008eb4:	5f 06       	sreq	r6
80008eb6:	06 30       	cp.w	r0,r3
80008eb8:	5f ba       	srhi	r10
80008eba:	ed ea 00 0a 	and	r10,r6,r10
80008ebe:	c0 60       	breq	80008eca <__avr32_umod64+0x1ee>
80008ec0:	fc 02 01 04 	sub	r4,lr,r2
80008ec4:	f8 08 01 4c 	sbc	r12,r12,r8
80008ec8:	08 9e       	mov	lr,r4
80008eca:	e6 0e 01 0a 	sub	r10,r3,lr
80008ece:	f6 0c 01 4c 	sbc	r12,r11,r12
80008ed2:	ee f1 ff f4 	ld.w	r1,r7[-12]
80008ed6:	f8 09 0a 4b 	lsr	r11,r12,r9
80008eda:	f4 09 0a 4a 	lsr	r10,r10,r9
80008ede:	f8 01 09 4c 	lsl	r12,r12,r1
80008ee2:	18 4a       	or	r10,r12
80008ee4:	2f dd       	sub	sp,-12
80008ee6:	d8 32       	popm	r0-r7,pc

Disassembly of section .exception:

80009000 <_evba>:
_evba:

	.org  0x000
	// Unrecoverable Exception.
_handle_Unrecoverable_Exception:
	rjmp $
80009000:	c0 08       	rjmp	80009000 <_evba>
	...

80009004 <_handle_TLB_Multiple_Hit>:

	.org  0x004
	// TLB Multiple Hit.
_handle_TLB_Multiple_Hit:
	rjmp $
80009004:	c0 08       	rjmp	80009004 <_handle_TLB_Multiple_Hit>
	...

80009008 <_handle_Bus_Error_Data_Fetch>:

	.org  0x008
	// Bus Error Data Fetch.
_handle_Bus_Error_Data_Fetch:
	rjmp $
80009008:	c0 08       	rjmp	80009008 <_handle_Bus_Error_Data_Fetch>
	...

8000900c <_handle_Bus_Error_Instruction_Fetch>:

	.org  0x00C
	// Bus Error Instruction Fetch.
_handle_Bus_Error_Instruction_Fetch:
	rjmp $
8000900c:	c0 08       	rjmp	8000900c <_handle_Bus_Error_Instruction_Fetch>
	...

80009010 <_handle_NMI>:

	.org  0x010
	// NMI.
_handle_NMI:
	rjmp $
80009010:	c0 08       	rjmp	80009010 <_handle_NMI>
	...

80009014 <_handle_Instruction_Address>:

	.org  0x014
	// Instruction Address.
_handle_Instruction_Address:
	rjmp $
80009014:	c0 08       	rjmp	80009014 <_handle_Instruction_Address>
	...

80009018 <_handle_ITLB_Protection>:

	.org  0x018
	// ITLB Protection.
_handle_ITLB_Protection:
	rjmp $
80009018:	c0 08       	rjmp	80009018 <_handle_ITLB_Protection>
	...

8000901c <_handle_Breakpoint>:

	.org  0x01C
	// Breakpoint.
_handle_Breakpoint:
	rjmp $
8000901c:	c0 08       	rjmp	8000901c <_handle_Breakpoint>
	...

80009020 <_handle_Illegal_Opcode>:

	.org  0x020
	// Illegal Opcode.
_handle_Illegal_Opcode:
	rjmp $
80009020:	c0 08       	rjmp	80009020 <_handle_Illegal_Opcode>
	...

80009024 <_handle_Unimplemented_Instruction>:

	.org  0x024
	// Unimplemented Instruction.
_handle_Unimplemented_Instruction:
	rjmp $
80009024:	c0 08       	rjmp	80009024 <_handle_Unimplemented_Instruction>
	...

80009028 <_handle_Privilege_Violation>:

	.org  0x028
	// Privilege Violation.
_handle_Privilege_Violation:
	rjmp $
80009028:	c0 08       	rjmp	80009028 <_handle_Privilege_Violation>
	...

8000902c <_handle_Floating_Point>:

	.org  0x02C
	// Floating-Point: UNUSED IN AVR32UC and AVR32AP.
_handle_Floating_Point:
	rjmp $
8000902c:	c0 08       	rjmp	8000902c <_handle_Floating_Point>
	...

80009030 <_handle_Coprocessor_Absent>:

	.org  0x030
	// Coprocessor Absent: UNUSED IN AVR32UC.
_handle_Coprocessor_Absent:
	rjmp $
80009030:	c0 08       	rjmp	80009030 <_handle_Coprocessor_Absent>
	...

80009034 <_handle_Data_Address_Read>:

	.org  0x034
	// Data Address (Read).
_handle_Data_Address_Read:
	rjmp $
80009034:	c0 08       	rjmp	80009034 <_handle_Data_Address_Read>
	...

80009038 <_handle_Data_Address_Write>:

	.org  0x038
	// Data Address (Write).
_handle_Data_Address_Write:
	rjmp $
80009038:	c0 08       	rjmp	80009038 <_handle_Data_Address_Write>
	...

8000903c <_handle_DTLB_Protection_Read>:

	.org  0x03C
	// DTLB Protection (Read).
_handle_DTLB_Protection_Read:
	rjmp $
8000903c:	c0 08       	rjmp	8000903c <_handle_DTLB_Protection_Read>
	...

80009040 <_handle_DTLB_Protection_Write>:

	.org  0x040
	// DTLB Protection (Write).
_handle_DTLB_Protection_Write:
	rjmp $
80009040:	c0 08       	rjmp	80009040 <_handle_DTLB_Protection_Write>
	...

80009044 <_handle_DTLB_Modified>:

	.org  0x044
	// DTLB Modified: UNUSED IN AVR32UC.
_handle_DTLB_Modified:
	rjmp $
80009044:	c0 08       	rjmp	80009044 <_handle_DTLB_Modified>
	...

80009050 <_handle_ITLB_Miss>:

	.org  0x050
	// ITLB Miss.
_handle_ITLB_Miss:
	rjmp $
80009050:	c0 08       	rjmp	80009050 <_handle_ITLB_Miss>
	...

80009060 <_handle_DTLB_Miss_Read>:

	.org  0x060
	// DTLB Miss (Read).
_handle_DTLB_Miss_Read:
	rjmp $
80009060:	c0 08       	rjmp	80009060 <_handle_DTLB_Miss_Read>
	...

80009070 <_handle_DTLB_Miss_Write>:

	.org  0x070
	// DTLB Miss (Write).
_handle_DTLB_Miss_Write:
	rjmp $
80009070:	c0 08       	rjmp	80009070 <_handle_DTLB_Miss_Write>
	...

80009100 <_handle_Supervisor_Call>:

	.org  0x100
	// Supervisor Call.
_handle_Supervisor_Call:
	rjmp $
80009100:	c0 08       	rjmp	80009100 <_handle_Supervisor_Call>
80009102:	d7 03       	nop

80009104 <_int0>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80009104:	30 0c       	mov	r12,0
80009106:	fe b0 d0 a7 	rcall	80003254 <_get_interrupt_handler>
8000910a:	58 0c       	cp.w	r12,0
8000910c:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
80009110:	d6 03       	rete

80009112 <_int1>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80009112:	30 1c       	mov	r12,1
80009114:	fe b0 d0 a0 	rcall	80003254 <_get_interrupt_handler>
80009118:	58 0c       	cp.w	r12,0
8000911a:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000911e:	d6 03       	rete

80009120 <_int2>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80009120:	30 2c       	mov	r12,2
80009122:	fe b0 d0 99 	rcall	80003254 <_get_interrupt_handler>
80009126:	58 0c       	cp.w	r12,0
80009128:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000912c:	d6 03       	rete

8000912e <_int3>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
8000912e:	30 3c       	mov	r12,3
80009130:	fe b0 d0 92 	rcall	80003254 <_get_interrupt_handler>
80009134:	58 0c       	cp.w	r12,0
80009136:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000913a:	d6 03       	rete
8000913c:	d7 03       	nop
8000913e:	d7 03       	nop
80009140:	d7 03       	nop
80009142:	d7 03       	nop
80009144:	d7 03       	nop
80009146:	d7 03       	nop
80009148:	d7 03       	nop
8000914a:	d7 03       	nop
8000914c:	d7 03       	nop
8000914e:	d7 03       	nop
80009150:	d7 03       	nop
80009152:	d7 03       	nop
80009154:	d7 03       	nop
80009156:	d7 03       	nop
80009158:	d7 03       	nop
8000915a:	d7 03       	nop
8000915c:	d7 03       	nop
8000915e:	d7 03       	nop
80009160:	d7 03       	nop
80009162:	d7 03       	nop
80009164:	d7 03       	nop
80009166:	d7 03       	nop
80009168:	d7 03       	nop
8000916a:	d7 03       	nop
8000916c:	d7 03       	nop
8000916e:	d7 03       	nop
80009170:	d7 03       	nop
80009172:	d7 03       	nop
80009174:	d7 03       	nop
80009176:	d7 03       	nop
80009178:	d7 03       	nop
8000917a:	d7 03       	nop
8000917c:	d7 03       	nop
8000917e:	d7 03       	nop
80009180:	d7 03       	nop
80009182:	d7 03       	nop
80009184:	d7 03       	nop
80009186:	d7 03       	nop
80009188:	d7 03       	nop
8000918a:	d7 03       	nop
8000918c:	d7 03       	nop
8000918e:	d7 03       	nop
80009190:	d7 03       	nop
80009192:	d7 03       	nop
80009194:	d7 03       	nop
80009196:	d7 03       	nop
80009198:	d7 03       	nop
8000919a:	d7 03       	nop
8000919c:	d7 03       	nop
8000919e:	d7 03       	nop
800091a0:	d7 03       	nop
800091a2:	d7 03       	nop
800091a4:	d7 03       	nop
800091a6:	d7 03       	nop
800091a8:	d7 03       	nop
800091aa:	d7 03       	nop
800091ac:	d7 03       	nop
800091ae:	d7 03       	nop
800091b0:	d7 03       	nop
800091b2:	d7 03       	nop
800091b4:	d7 03       	nop
800091b6:	d7 03       	nop
800091b8:	d7 03       	nop
800091ba:	d7 03       	nop
800091bc:	d7 03       	nop
800091be:	d7 03       	nop
800091c0:	d7 03       	nop
800091c2:	d7 03       	nop
800091c4:	d7 03       	nop
800091c6:	d7 03       	nop
800091c8:	d7 03       	nop
800091ca:	d7 03       	nop
800091cc:	d7 03       	nop
800091ce:	d7 03       	nop
800091d0:	d7 03       	nop
800091d2:	d7 03       	nop
800091d4:	d7 03       	nop
800091d6:	d7 03       	nop
800091d8:	d7 03       	nop
800091da:	d7 03       	nop
800091dc:	d7 03       	nop
800091de:	d7 03       	nop
800091e0:	d7 03       	nop
800091e2:	d7 03       	nop
800091e4:	d7 03       	nop
800091e6:	d7 03       	nop
800091e8:	d7 03       	nop
800091ea:	d7 03       	nop
800091ec:	d7 03       	nop
800091ee:	d7 03       	nop
800091f0:	d7 03       	nop
800091f2:	d7 03       	nop
800091f4:	d7 03       	nop
800091f6:	d7 03       	nop
800091f8:	d7 03       	nop
800091fa:	d7 03       	nop
800091fc:	d7 03       	nop
800091fe:	d7 03       	nop


LAB5.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00002008  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00006618  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .exception    00000200  80008800  80008800  00008c00  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       00000724  80008a00  80008a00  00008e00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .lalign       00000004  80009124  80009124  00009524  2**0
                  ALLOC
  6 .dalign       00000004  00000004  00000004  00000000  2**0
                  ALLOC
  7 .data         0000050c  00000008  80009128  00009808  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .balign       00000004  00000514  80009634  00009d14  2**0
                  ALLOC
  9 .bss          00000130  00000518  00000518  00000000  2**2
                  ALLOC
 10 .heap         0000e9b8  00000648  00000648  00000000  2**0
                  ALLOC
 11 .comment      00000030  00000000  00000000  00009d14  2**0
                  CONTENTS, READONLY
 12 .debug_aranges 00000f40  00000000  00000000  00009d48  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubnames 00001f04  00000000  00000000  0000ac88  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_info   00020858  00000000  00000000  0000cb8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_abbrev 00005429  00000000  00000000  0002d3e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   0000e779  00000000  00000000  0003280d  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_frame  000024f0  00000000  00000000  00040f88  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00004894  00000000  00000000  00043478  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_loc    0000aa47  00000000  00000000  00047d0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_macinfo 00a1f1d1  00000000  00000000  00052753  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .stack        00001000  0000f000  0000f000  00000000  2**0
                  ALLOC
 22 .debug_ranges 00001108  00000000  00000000  00a71928  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_start>:

  .global _start
  .type _start, @function
_start:
  // Jump to the C runtime startup routine.
  lda.w   pc, _stext
80000000:	fe cf d4 8c 	sub	pc,pc,-11124

80000004 <_trampoline>:
80000004:	e0 8f 10 00 	bral	80002004 <program_start>
	...

80002004 <program_start>:
  rjmp    program_start

  .org  PROGRAM_START_OFFSET
program_start:
  // Jump to the C runtime startup routine.
  lda.w   pc, _stext
80002004:	fe cf f4 90 	sub	pc,pc,-2928

Disassembly of section .text:

80002008 <dip204_select>:
80002008:	d4 01       	pushm	lr
8000200a:	30 2b       	mov	r11,2
/*! \brief function to select the LCD
 *
 */
static void dip204_select(void)
{
  spi_selectChip(DIP204_SPI, DIP204_SPI_NPCS);
8000200c:	fe 7c 28 00 	mov	r12,-55296
80002010:	f0 1f 00 02 	mcall	80002018 <dip204_select+0x10>
}
80002014:	d8 02       	popm	pc
80002016:	00 00       	add	r0,r0
80002018:	80 00       	ld.sh	r0,r0[0x0]
8000201a:	2a c4       	sub	r4,-84

8000201c <dip204_write_byte>:
 *
 *  \param  byte  Input. byte to write to the LCD (D7 .. D0)
 *
 */
static void dip204_write_byte(unsigned char byte)
{
8000201c:	eb cd 40 80 	pushm	r7,lr
  unsigned char reverse;

  switch (byte)
80002020:	f8 c8 ff f8 	sub	r8,r12,-8
80002024:	30 69       	mov	r9,6
80002026:	f2 08 18 00 	cp.b	r8,r9
8000202a:	e0 8b 00 0f 	brhi	80002048 <dip204_write_byte+0x2c>
8000202e:	30 19       	mov	r9,1
80002030:	f2 08 09 48 	lsl	r8,r9,r8
80002034:	e2 18 00 55 	andl	r8,0x55,COH
80002038:	c0 80       	breq	80002048 <dip204_write_byte+0x2c>
    {
      /* send D7 to D0 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, byte);
8000203a:	18 9b       	mov	r11,r12
8000203c:	fe 7c 28 00 	mov	r12,-55296
80002040:	f0 1f 00 0c 	mcall	80002070 <dip204_write_byte+0x54>
      Assert( SPI_OK==spi_status );
      break;
80002044:	e3 cd 80 80 	ldm	sp++,r7,pc
    }
    /* LSB first for all other data */
    default:
    {
      /* reverse byte */
      reverse = bit_reverse8(byte);
80002048:	5c 9c       	brev	r12
      /* send D0 to D3 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, (reverse & 0xF0));
8000204a:	f8 07 16 18 	lsr	r7,r12,0x18
8000204e:	0e 9b       	mov	r11,r7
80002050:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002054:	fe 7c 28 00 	mov	r12,-55296
80002058:	f0 1f 00 06 	mcall	80002070 <dip204_write_byte+0x54>
      Assert( SPI_OK==spi_status );
      /* send D4 to D7 */
#ifdef _ASSERT_ENABLE_
      spi_status =
#endif
      spi_write(DIP204_SPI, ((reverse << 4) & 0xF0));
8000205c:	ee 0b 15 04 	lsl	r11,r7,0x4
80002060:	e2 1b 00 f0 	andl	r11,0xf0,COH
80002064:	fe 7c 28 00 	mov	r12,-55296
80002068:	f0 1f 00 02 	mcall	80002070 <dip204_write_byte+0x54>
8000206c:	e3 cd 80 80 	ldm	sp++,r7,pc
80002070:	80 00       	ld.sh	r0,r0[0x0]
80002072:	2b 36       	sub	r6,-77

80002074 <dip204_read_byte>:
 *
 *  \param  byte  Input. byte read from the LCD (D7 .. D0)
 *
 */
static void dip204_read_byte(unsigned char *byte)
{
80002074:	eb cd 40 c0 	pushm	r6-r7,lr
80002078:	20 1d       	sub	sp,4
8000207a:	18 96       	mov	r6,r12
  unsigned short reverse = 0x00;
8000207c:	fa c7 ff fc 	sub	r7,sp,-4
80002080:	30 08       	mov	r8,0
80002082:	0e e8       	st.h	--r7,r8

  /* dummy write */
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_write(DIP204_SPI, 0x00);
80002084:	30 0b       	mov	r11,0
80002086:	fe 7c 28 00 	mov	r12,-55296
8000208a:	f0 1f 00 08 	mcall	800020a8 <dip204_read_byte+0x34>
  Assert( SPI_OK==spi_status );
  /* read RSR register */
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_read(DIP204_SPI, &reverse);
8000208e:	0e 9b       	mov	r11,r7
80002090:	fe 7c 28 00 	mov	r12,-55296
80002094:	f0 1f 00 06 	mcall	800020ac <dip204_read_byte+0x38>
  Assert( SPI_OK==spi_status );
  /* Revert received byte (issued LSB first by the LCD) */
  *byte = bit_reverse8(reverse);
80002098:	1b b8       	ld.ub	r8,sp[0x3]
8000209a:	5c 98       	brev	r8
8000209c:	b9 88       	lsr	r8,0x18
8000209e:	ac 88       	st.b	r6[0x0],r8
}
800020a0:	2f fd       	sub	sp,-4
800020a2:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800020a6:	00 00       	add	r0,r0
800020a8:	80 00       	ld.sh	r0,r0[0x0]
800020aa:	2b 36       	sub	r6,-77
800020ac:	80 00       	ld.sh	r0,r0[0x0]
800020ae:	2b 52       	sub	r2,-75

800020b0 <dip204_wait_busy>:

/*! \brief function to wait for LCD becomes not busy
 *
 */
static void dip204_wait_busy(void)
{
800020b0:	eb cd 40 c0 	pushm	r6-r7,lr
800020b4:	20 1d       	sub	sp,4
  unsigned char status = 0x00;
800020b6:	fa c7 ff fc 	sub	r7,sp,-4
800020ba:	30 08       	mov	r8,0
800020bc:	0e f8       	st.b	--r7,r8

  /* send read command to LCD */
  dip204_write_byte(DIP204_READ_COMMAND);
800020be:	e0 6c 00 fc 	mov	r12,252
800020c2:	f0 1f 00 07 	mcall	800020dc <dip204_wait_busy+0x2c>
  /* read next byte */
  do {
  dip204_read_byte(&status);
  /* keep D7 to know status */
  }while (status & 0x80);
800020c6:	30 06       	mov	r6,0

  /* send read command to LCD */
  dip204_write_byte(DIP204_READ_COMMAND);
  /* read next byte */
  do {
  dip204_read_byte(&status);
800020c8:	0e 9c       	mov	r12,r7
800020ca:	f0 1f 00 06 	mcall	800020e0 <dip204_wait_busy+0x30>
  /* keep D7 to know status */
  }while (status & 0x80);
800020ce:	1b b8       	ld.ub	r8,sp[0x3]
800020d0:	ec 08 18 00 	cp.b	r8,r6
800020d4:	cf a5       	brlt	800020c8 <dip204_wait_busy+0x18>
}
800020d6:	2f fd       	sub	sp,-4
800020d8:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800020dc:	80 00       	ld.sh	r0,r0[0x0]
800020de:	20 1c       	sub	r12,1
800020e0:	80 00       	ld.sh	r0,r0[0x0]
800020e2:	20 74       	sub	r4,7

800020e4 <dip204_unselect>:

/*! \brief function to unselect the LCD
 *
 */
static void dip204_unselect(void)
{
800020e4:	d4 01       	pushm	lr
#ifdef _ASSERT_ENABLE_
  spi_status =
#endif
  spi_unselectChip(DIP204_SPI, DIP204_SPI_NPCS);
800020e6:	30 2b       	mov	r11,2
800020e8:	fe 7c 28 00 	mov	r12,-55296
800020ec:	f0 1f 00 02 	mcall	800020f4 <dip204_unselect+0x10>
  Assert( SPI_OK==spi_status );
}
800020f0:	d8 02       	popm	pc
800020f2:	00 00       	add	r0,r0
800020f4:	80 00       	ld.sh	r0,r0[0x0]
800020f6:	2b 10       	sub	r0,-79

800020f8 <dip204_printf_string>:
  dip204_unselect();
}


void dip204_printf_string(const char *format, ...)
{
800020f8:	d4 21       	pushm	r4-r7,lr
800020fa:	20 6d       	sub	sp,24
  va_list arg;
  char string[21];
  unsigned char i=0;

  va_start(arg, format);
  i = vsprintf(string, format, arg);
800020fc:	fa ca ff d4 	sub	r10,sp,-44
80002100:	18 9b       	mov	r11,r12
80002102:	1a 9c       	mov	r12,sp
80002104:	f0 1f 00 1e 	mcall	8000217c <dip204_printf_string+0x84>
80002108:	5c 5c       	castu.b	r12
  while (i < sizeof(string) - 1) string[i++] = '\0';
8000210a:	31 38       	mov	r8,19
8000210c:	f0 0c 18 00 	cp.b	r12,r8
80002110:	e0 8b 00 0e 	brhi	8000212c <dip204_printf_string+0x34>
80002114:	30 0a       	mov	r10,0
80002116:	31 49       	mov	r9,20
80002118:	fa c8 ff e8 	sub	r8,sp,-24
8000211c:	18 08       	add	r8,r12
8000211e:	f1 6a ff e8 	st.b	r8[-24],r10
80002122:	2f fc       	sub	r12,-1
80002124:	5c 5c       	castu.b	r12
80002126:	f2 0c 18 00 	cp.b	r12,r9
8000212a:	cf 71       	brne	80002118 <dip204_printf_string+0x20>
  va_end(arg);
  dip204_select();
8000212c:	f0 1f 00 15 	mcall	80002180 <dip204_printf_string+0x88>
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002130:	30 08       	mov	r8,0
80002132:	1b 89       	ld.ub	r9,sp[0x0]
80002134:	f0 09 18 00 	cp.b	r9,r8
80002138:	c1 e0       	breq	80002174 <dip204_printf_string+0x7c>
8000213a:	30 06       	mov	r6,0
8000213c:	0c 97       	mov	r7,r6
  {
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
8000213e:	e0 64 00 fa 	mov	r4,250
  while (i < sizeof(string) - 1) string[i++] = '\0';
  va_end(arg);
  dip204_select();
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002142:	10 95       	mov	r5,r8
  {
    /* Send Write Data Start Byte */
    dip204_write_byte(DIP204_WRITE_DATA);
80002144:	08 9c       	mov	r12,r4
80002146:	f0 1f 00 10 	mcall	80002184 <dip204_printf_string+0x8c>
    /* Send byte */
    dip204_write_byte(string[i]);
8000214a:	fa c8 ff e8 	sub	r8,sp,-24
8000214e:	f0 06 00 06 	add	r6,r8,r6
80002152:	ed 3c ff e8 	ld.ub	r12,r6[-24]
80002156:	f0 1f 00 0c 	mcall	80002184 <dip204_printf_string+0x8c>
    /* go to next char */
    i++;
8000215a:	2f f7       	sub	r7,-1
8000215c:	5c 57       	castu.b	r7
    dip204_wait_busy();
8000215e:	f0 1f 00 0b 	mcall	80002188 <dip204_printf_string+0x90>
  while (i < sizeof(string) - 1) string[i++] = '\0';
  va_end(arg);
  dip204_select();
  /* for all chars in string */
  i = 0;
  while(string[i]!='\0')
80002162:	0e 96       	mov	r6,r7
80002164:	fa c8 ff e8 	sub	r8,sp,-24
80002168:	0e 08       	add	r8,r7
8000216a:	f1 38 ff e8 	ld.ub	r8,r8[-24]
8000216e:	ea 08 18 00 	cp.b	r8,r5
80002172:	ce 91       	brne	80002144 <dip204_printf_string+0x4c>
    dip204_write_byte(string[i]);
    /* go to next char */
    i++;
    dip204_wait_busy();
  }
  dip204_unselect();
80002174:	f0 1f 00 06 	mcall	8000218c <dip204_printf_string+0x94>
}
80002178:	2f ad       	sub	sp,-24
8000217a:	d8 22       	popm	r4-r7,pc
8000217c:	80 00       	ld.sh	r0,r0[0x0]
8000217e:	2e b8       	sub	r8,-21
80002180:	80 00       	ld.sh	r0,r0[0x0]
80002182:	20 08       	sub	r8,0
80002184:	80 00       	ld.sh	r0,r0[0x0]
80002186:	20 1c       	sub	r12,1
80002188:	80 00       	ld.sh	r0,r0[0x0]
8000218a:	20 b0       	sub	r0,11
8000218c:	80 00       	ld.sh	r0,r0[0x0]
8000218e:	20 e4       	sub	r4,14

80002190 <dip204_set_cursor_position>:
  dip204_set_cursor_position(column, line);
}


void dip204_set_cursor_position(unsigned char column, unsigned char line)
{
80002190:	eb cd 40 c0 	pushm	r6-r7,lr
80002194:	18 96       	mov	r6,r12
80002196:	16 97       	mov	r7,r11
  unsigned char address = 0;

  dip204_select();
80002198:	f0 1f 00 11 	mcall	800021dc <dip204_set_cursor_position+0x4c>
  if ((column <= 20) && (line <= 4))
8000219c:	31 48       	mov	r8,20
8000219e:	f0 06 18 00 	cp.b	r6,r8
800021a2:	5f 89       	srls	r9
800021a4:	30 48       	mov	r8,4
800021a6:	f0 07 18 00 	cp.b	r7,r8
800021aa:	5f 88       	srls	r8
800021ac:	f3 e8 00 08 	and	r8,r9,r8
800021b0:	c0 31       	brne	800021b6 <dip204_set_cursor_position+0x26>
800021b2:	30 06       	mov	r6,0
800021b4:	c0 68       	rjmp	800021c0 <dip204_set_cursor_position+0x30>
  {
    /* Calculate DDRAM address from line and row values */
    address = ( (line-1) * 32 ) + ( column-1 ) + 128;
800021b6:	28 16       	sub	r6,-127
800021b8:	20 17       	sub	r7,1
800021ba:	a5 77       	lsl	r7,0x5
800021bc:	0e 06       	add	r6,r7
800021be:	5c 56       	castu.b	r6
  }
  /* Send Command Start Byte */
  dip204_write_byte(DIP204_WRITE_COMMAND);
800021c0:	e0 6c 00 f8 	mov	r12,248
800021c4:	f0 1f 00 07 	mcall	800021e0 <dip204_set_cursor_position+0x50>
  /* Send Address lower Nibble */
  dip204_write_byte(address);
800021c8:	0c 9c       	mov	r12,r6
800021ca:	f0 1f 00 06 	mcall	800021e0 <dip204_set_cursor_position+0x50>
  dip204_wait_busy();
800021ce:	f0 1f 00 06 	mcall	800021e4 <dip204_set_cursor_position+0x54>
  dip204_unselect();
800021d2:	f0 1f 00 06 	mcall	800021e8 <dip204_set_cursor_position+0x58>
}
800021d6:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800021da:	00 00       	add	r0,r0
800021dc:	80 00       	ld.sh	r0,r0[0x0]
800021de:	20 08       	sub	r8,0
800021e0:	80 00       	ld.sh	r0,r0[0x0]
800021e2:	20 1c       	sub	r12,1
800021e4:	80 00       	ld.sh	r0,r0[0x0]
800021e6:	20 b0       	sub	r0,11
800021e8:	80 00       	ld.sh	r0,r0[0x0]
800021ea:	20 e4       	sub	r4,14

800021ec <dip204_clear_display>:


void dip204_clear_display(void)
{
800021ec:	d4 01       	pushm	lr
  dip204_select();
800021ee:	f0 1f 00 12 	mcall	80002234 <dip204_clear_display+0x48>
  /* Send Command Start Byte */
  dip204_write_byte(DIP204_WRITE_COMMAND);
800021f2:	e0 6c 00 f8 	mov	r12,248
800021f6:	f0 1f 00 11 	mcall	80002238 <dip204_clear_display+0x4c>
  /* Send Display Clear Command */
  dip204_write_byte(0x01);
800021fa:	30 1c       	mov	r12,1
800021fc:	f0 1f 00 0f 	mcall	80002238 <dip204_clear_display+0x4c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80002200:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
80002204:	f0 ca fe 33 	sub	r10,r8,-461
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80002208:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
8000220c:	14 38       	cp.w	r8,r10
8000220e:	e0 88 00 08 	brls	8000221e <dip204_clear_display+0x32>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80002212:	12 38       	cp.w	r8,r9
80002214:	fe 98 ff fa 	brls	80002208 <dip204_clear_display+0x1c>
80002218:	12 3a       	cp.w	r10,r9
8000221a:	c0 73       	brcs	80002228 <dip204_clear_display+0x3c>
8000221c:	cf 6b       	rjmp	80002208 <dip204_clear_display+0x1c>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
8000221e:	12 38       	cp.w	r8,r9
80002220:	e0 8b 00 04 	brhi	80002228 <dip204_clear_display+0x3c>
80002224:	12 3a       	cp.w	r10,r9
80002226:	cf 12       	brcc	80002208 <dip204_clear_display+0x1c>
  /* Wait for command execution */
  delay_ms(4);
  dip204_wait_busy();
80002228:	f0 1f 00 05 	mcall	8000223c <dip204_clear_display+0x50>
  dip204_unselect();
8000222c:	f0 1f 00 05 	mcall	80002240 <dip204_clear_display+0x54>
}
80002230:	d8 02       	popm	pc
80002232:	00 00       	add	r0,r0
80002234:	80 00       	ld.sh	r0,r0[0x0]
80002236:	20 08       	sub	r8,0
80002238:	80 00       	ld.sh	r0,r0[0x0]
8000223a:	20 1c       	sub	r12,1
8000223c:	80 00       	ld.sh	r0,r0[0x0]
8000223e:	20 b0       	sub	r0,11
80002240:	80 00       	ld.sh	r0,r0[0x0]
80002242:	20 e4       	sub	r4,14

80002244 <flashc_set_wait_state>:
}


void flashc_set_wait_state(unsigned int wait_state)
{
	u_avr32_flashc_fcr_t u_avr32_flashc_fcr = {AVR32_FLASHC.fcr};
80002244:	fe 68 14 00 	mov	r8,-125952
80002248:	70 09       	ld.w	r9,r8[0x0]
	u_avr32_flashc_fcr.FCR.fws = wait_state;
8000224a:	f3 dc d0 c1 	bfins	r9,r12,0x6,0x1
	AVR32_FLASHC.fcr = u_avr32_flashc_fcr.fcr;
8000224e:	91 09       	st.w	r8[0x0],r9
}
80002250:	5e fc       	retal	r12

80002252 <pm_set_osc0_mode>:
 * \param mode Oscillator 0 mode (i.e. AVR32_PM_OSCCTRL0_MODE_x).
 */
static void pm_set_osc0_mode(volatile avr32_pm_t *pm, unsigned int mode)
{
  // Read
  u_avr32_pm_oscctrl0_t u_avr32_pm_oscctrl0 = {pm->oscctrl0};
80002252:	78 a8       	ld.w	r8,r12[0x28]
  // Modify
  u_avr32_pm_oscctrl0.OSCCTRL0.mode = mode;
80002254:	f1 db d0 03 	bfins	r8,r11,0x0,0x3
  // Write
  pm->oscctrl0 = u_avr32_pm_oscctrl0.oscctrl0;
80002258:	99 a8       	st.w	r12[0x28],r8
}
8000225a:	5e fc       	retal	r12

8000225c <pm_enable_osc0_crystal>:
  pm_set_osc0_mode(pm, AVR32_PM_OSCCTRL0_MODE_EXT_CLOCK);
}


void pm_enable_osc0_crystal(volatile avr32_pm_t *pm, unsigned int fosc0)
{
8000225c:	d4 01       	pushm	lr
  pm_set_osc0_mode(pm, (fosc0 <  900000) ? AVR32_PM_OSCCTRL0_MODE_CRYSTAL_G0 :
8000225e:	ec 5b bb 9f 	cp.w	r11,899999
80002262:	e0 8b 00 04 	brhi	8000226a <pm_enable_osc0_crystal+0xe>
80002266:	30 4b       	mov	r11,4
80002268:	c1 38       	rjmp	8000228e <pm_enable_osc0_crystal+0x32>
8000226a:	e0 68 c6 bf 	mov	r8,50879
8000226e:	ea 18 00 2d 	orh	r8,0x2d
80002272:	10 3b       	cp.w	r11,r8
80002274:	e0 8b 00 04 	brhi	8000227c <pm_enable_osc0_crystal+0x20>
80002278:	30 5b       	mov	r11,5
8000227a:	c0 a8       	rjmp	8000228e <pm_enable_osc0_crystal+0x32>
8000227c:	e0 68 12 00 	mov	r8,4608
80002280:	ea 18 00 7a 	orh	r8,0x7a
80002284:	10 3b       	cp.w	r11,r8
80002286:	f9 bb 03 06 	movlo	r11,6
8000228a:	f9 bb 02 07 	movhs	r11,7
8000228e:	f0 1f 00 02 	mcall	80002294 <pm_enable_osc0_crystal+0x38>
                       (fosc0 < 3000000) ? AVR32_PM_OSCCTRL0_MODE_CRYSTAL_G1 :
                       (fosc0 < 8000000) ? AVR32_PM_OSCCTRL0_MODE_CRYSTAL_G2 :
                                           AVR32_PM_OSCCTRL0_MODE_CRYSTAL_G3);
}
80002292:	d8 02       	popm	pc
80002294:	80 00       	ld.sh	r0,r0[0x0]
80002296:	22 52       	sub	r2,37

80002298 <pm_enable_clk0_no_wait>:


void pm_enable_clk0_no_wait(volatile avr32_pm_t *pm, unsigned int startup)
{
  // Read register
  u_avr32_pm_oscctrl0_t u_avr32_pm_oscctrl0 = {pm->oscctrl0};
80002298:	78 a8       	ld.w	r8,r12[0x28]
  // Modify
  u_avr32_pm_oscctrl0.OSCCTRL0.startup = startup;
8000229a:	f1 db d1 03 	bfins	r8,r11,0x8,0x3
  // Write back
  pm->oscctrl0 = u_avr32_pm_oscctrl0.oscctrl0;
8000229e:	99 a8       	st.w	r12[0x28],r8

  pm->mcctrl |= AVR32_PM_MCCTRL_OSC0EN_MASK;
800022a0:	78 08       	ld.w	r8,r12[0x0]
800022a2:	a3 a8       	sbr	r8,0x2
800022a4:	99 08       	st.w	r12[0x0],r8
}
800022a6:	5e fc       	retal	r12

800022a8 <pm_wait_for_clk0_ready>:


void pm_wait_for_clk0_ready(volatile avr32_pm_t *pm)
{
  while (!(pm->poscsr & AVR32_PM_POSCSR_OSC0RDY_MASK));
800022a8:	79 58       	ld.w	r8,r12[0x54]
800022aa:	e2 18 00 80 	andl	r8,0x80,COH
800022ae:	cf d0       	breq	800022a8 <pm_wait_for_clk0_ready>
}
800022b0:	5e fc       	retal	r12
800022b2:	d7 03       	nop

800022b4 <pm_enable_clk0>:
                                           AVR32_PM_OSCCTRL0_MODE_CRYSTAL_G3);
}


void pm_enable_clk0(volatile avr32_pm_t *pm, unsigned int startup)
{
800022b4:	eb cd 40 80 	pushm	r7,lr
800022b8:	18 97       	mov	r7,r12
  pm_enable_clk0_no_wait(pm, startup);
800022ba:	f0 1f 00 04 	mcall	800022c8 <pm_enable_clk0+0x14>
  pm_wait_for_clk0_ready(pm);
800022be:	0e 9c       	mov	r12,r7
800022c0:	f0 1f 00 03 	mcall	800022cc <pm_enable_clk0+0x18>
}
800022c4:	e3 cd 80 80 	ldm	sp++,r7,pc
800022c8:	80 00       	ld.sh	r0,r0[0x0]
800022ca:	22 98       	sub	r8,41
800022cc:	80 00       	ld.sh	r0,r0[0x0]
800022ce:	22 a8       	sub	r8,42

800022d0 <pm_set_osc32_mode>:
 * \param mode 32-kHz oscillator mode (i.e. AVR32_PM_OSCCTRL32_MODE_x).
 */
static void pm_set_osc32_mode(volatile avr32_pm_t *pm, unsigned int mode)
{
  // Read
  u_avr32_pm_oscctrl32_t u_avr32_pm_oscctrl32 = {pm->oscctrl32};
800022d0:	78 c8       	ld.w	r8,r12[0x30]
  // Modify
  u_avr32_pm_oscctrl32.OSCCTRL32.mode = mode;
800022d2:	f1 db d1 03 	bfins	r8,r11,0x8,0x3
  // Write
  pm->oscctrl32 = u_avr32_pm_oscctrl32.oscctrl32;
800022d6:	99 c8       	st.w	r12[0x30],r8
}
800022d8:	5e fc       	retal	r12
800022da:	d7 03       	nop

800022dc <pm_enable_osc32_crystal>:
  pm_set_osc32_mode(pm, AVR32_PM_OSCCTRL32_MODE_EXT_CLOCK);
}


void pm_enable_osc32_crystal(volatile avr32_pm_t *pm)
{
800022dc:	d4 01       	pushm	lr
  pm_set_osc32_mode(pm, AVR32_PM_OSCCTRL32_MODE_CRYSTAL);
800022de:	30 1b       	mov	r11,1
800022e0:	f0 1f 00 02 	mcall	800022e8 <pm_enable_osc32_crystal+0xc>
}
800022e4:	d8 02       	popm	pc
800022e6:	00 00       	add	r0,r0
800022e8:	80 00       	ld.sh	r0,r0[0x0]
800022ea:	22 d0       	sub	r0,45

800022ec <pm_enable_clk32_no_wait>:


void pm_enable_clk32_no_wait(volatile avr32_pm_t *pm, unsigned int startup)
{
  // Read register
  u_avr32_pm_oscctrl32_t u_avr32_pm_oscctrl32 = {pm->oscctrl32};
800022ec:	78 c8       	ld.w	r8,r12[0x30]
  // Modify
  u_avr32_pm_oscctrl32.OSCCTRL32.osc32en = 1;
800022ee:	30 19       	mov	r9,1
800022f0:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
  u_avr32_pm_oscctrl32.OSCCTRL32.startup = startup;
800022f4:	f1 db d2 03 	bfins	r8,r11,0x10,0x3
  // Write back
  pm->oscctrl32 = u_avr32_pm_oscctrl32.oscctrl32;
800022f8:	99 c8       	st.w	r12[0x30],r8
}
800022fa:	5e fc       	retal	r12

800022fc <pm_wait_for_clk32_ready>:


void pm_wait_for_clk32_ready(volatile avr32_pm_t *pm)
{
  while (!(pm->poscsr & AVR32_PM_POSCSR_OSC32RDY_MASK));
800022fc:	79 58       	ld.w	r8,r12[0x54]
800022fe:	e2 18 02 00 	andl	r8,0x200,COH
80002302:	cf d0       	breq	800022fc <pm_wait_for_clk32_ready>
}
80002304:	5e fc       	retal	r12
80002306:	d7 03       	nop

80002308 <pm_enable_clk32>:
  pm_set_osc32_mode(pm, AVR32_PM_OSCCTRL32_MODE_CRYSTAL);
}


void pm_enable_clk32(volatile avr32_pm_t *pm, unsigned int startup)
{
80002308:	eb cd 40 80 	pushm	r7,lr
8000230c:	18 97       	mov	r7,r12
  pm_enable_clk32_no_wait(pm, startup);
8000230e:	f0 1f 00 04 	mcall	8000231c <pm_enable_clk32+0x14>
  pm_wait_for_clk32_ready(pm);
80002312:	0e 9c       	mov	r12,r7
80002314:	f0 1f 00 03 	mcall	80002320 <pm_enable_clk32+0x18>
}
80002318:	e3 cd 80 80 	ldm	sp++,r7,pc
8000231c:	80 00       	ld.sh	r0,r0[0x0]
8000231e:	22 ec       	sub	r12,46
80002320:	80 00       	ld.sh	r0,r0[0x0]
80002322:	22 fc       	sub	r12,47

80002324 <pm_cksel>:
              unsigned int pbasel,
              unsigned int pbbdiv,
              unsigned int pbbsel,
              unsigned int hsbdiv,
              unsigned int hsbsel)
{
80002324:	eb cd 40 d0 	pushm	r4,r6-r7,lr
80002328:	fa c4 ff f0 	sub	r4,sp,-16
  u_avr32_pm_cksel_t u_avr32_pm_cksel = {0};
8000232c:	30 0e       	mov	lr,0

  u_avr32_pm_cksel.CKSEL.cpusel = hsbsel;
8000232e:	09 f7       	ld.ub	r7,r4[0x7]
80002330:	ef d7 c0 03 	bfextu	r7,r7,0x0,0x3
80002334:	fd d7 d0 03 	bfins	lr,r7,0x0,0x3
  u_avr32_pm_cksel.CKSEL.cpudiv = hsbdiv;
80002338:	09 b4       	ld.ub	r4,r4[0x3]
8000233a:	08 96       	mov	r6,r4
8000233c:	e9 d4 c0 01 	bfextu	r4,r4,0x0,0x1
80002340:	fd d4 d0 e1 	bfins	lr,r4,0x7,0x1
  u_avr32_pm_cksel.CKSEL.hsbsel = hsbsel;
80002344:	fd d7 d1 03 	bfins	lr,r7,0x8,0x3
  u_avr32_pm_cksel.CKSEL.hsbdiv = hsbdiv;
80002348:	fd d4 d1 e1 	bfins	lr,r4,0xf,0x1
  u_avr32_pm_cksel.CKSEL.pbasel = pbasel;
8000234c:	fd da d2 03 	bfins	lr,r10,0x10,0x3
  u_avr32_pm_cksel.CKSEL.pbadiv = pbadiv;
80002350:	fd db d2 e1 	bfins	lr,r11,0x17,0x1
  u_avr32_pm_cksel.CKSEL.pbbsel = pbbsel;
80002354:	fd d8 d3 03 	bfins	lr,r8,0x18,0x3
  u_avr32_pm_cksel.CKSEL.pbbdiv = pbbdiv;
80002358:	fd d9 d3 e1 	bfins	lr,r9,0x1f,0x1

  pm->cksel = u_avr32_pm_cksel.cksel;
8000235c:	99 1e       	st.w	r12[0x4],lr

  // Wait for ckrdy bit and then clear it
  while (!(pm->poscsr & AVR32_PM_POSCSR_CKRDY_MASK));
8000235e:	79 58       	ld.w	r8,r12[0x54]
80002360:	e2 18 00 20 	andl	r8,0x20,COH
80002364:	cf d0       	breq	8000235e <pm_cksel+0x3a>
}
80002366:	e3 cd 80 d0 	ldm	sp++,r4,r6-r7,pc

8000236a <pm_pll_setup>:
                  unsigned int pll,
                  unsigned int mul,
                  unsigned int div,
                  unsigned int osc,
                  unsigned int lockcount)
{
8000236a:	eb cd 40 80 	pushm	r7,lr
8000236e:	40 27       	lddsp	r7,sp[0x8]
  u_avr32_pm_pll_t u_avr32_pm_pll = {0};
80002370:	30 0e       	mov	lr,0

  u_avr32_pm_pll.PLL.pllosc   = osc;
80002372:	fd d8 d0 21 	bfins	lr,r8,0x1,0x1
  u_avr32_pm_pll.PLL.plldiv   = div;
80002376:	fd d9 d1 04 	bfins	lr,r9,0x8,0x4
  u_avr32_pm_pll.PLL.pllmul   = mul;
8000237a:	fd da d2 04 	bfins	lr,r10,0x10,0x4
  u_avr32_pm_pll.PLL.pllcount = lockcount;
8000237e:	fd d7 d3 06 	bfins	lr,r7,0x18,0x6

  pm->pll[pll] = u_avr32_pm_pll.pll;
80002382:	2f 8b       	sub	r11,-8
80002384:	f8 0b 09 2e 	st.w	r12[r11<<0x2],lr
}
80002388:	e3 cd 80 80 	ldm	sp++,r7,pc

8000238c <pm_pll_set_option>:
void pm_pll_set_option(volatile avr32_pm_t *pm,
                       unsigned int pll,
                       unsigned int pll_freq,
                       unsigned int pll_div2,
                       unsigned int pll_wbwdisable)
{
8000238c:	d4 01       	pushm	lr
  u_avr32_pm_pll_t u_avr32_pm_pll = {pm->pll[pll]};
8000238e:	2f 8b       	sub	r11,-8
80002390:	f8 0b 03 2e 	ld.w	lr,r12[r11<<0x2]
  u_avr32_pm_pll.PLL.pllopt = pll_freq | (pll_div2 << 1) | (pll_wbwdisable << 2);
80002394:	f5 e9 10 19 	or	r9,r10,r9<<0x1
80002398:	f3 e8 10 28 	or	r8,r9,r8<<0x2
8000239c:	fd d8 d0 43 	bfins	lr,r8,0x2,0x3
  pm->pll[pll] = u_avr32_pm_pll.pll;
800023a0:	f8 0b 09 2e 	st.w	r12[r11<<0x2],lr
}
800023a4:	d8 02       	popm	pc

800023a6 <pm_pll_enable>:


void pm_pll_enable(volatile avr32_pm_t *pm,
                  unsigned int pll)
{
  pm->pll[pll] |= AVR32_PM_PLLEN_MASK;
800023a6:	2f 8b       	sub	r11,-8
800023a8:	f8 0b 03 28 	ld.w	r8,r12[r11<<0x2]
800023ac:	a1 a8       	sbr	r8,0x0
800023ae:	f8 0b 09 28 	st.w	r12[r11<<0x2],r8
}
800023b2:	5e fc       	retal	r12

800023b4 <pm_wait_for_pll0_locked>:
}


void pm_wait_for_pll0_locked(volatile avr32_pm_t *pm)
{
  while (!(pm->poscsr & AVR32_PM_POSCSR_LOCK0_MASK));
800023b4:	79 58       	ld.w	r8,r12[0x54]
800023b6:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800023ba:	cf d0       	breq	800023b4 <pm_wait_for_pll0_locked>
}
800023bc:	5e fc       	retal	r12

800023be <pm_switch_to_clock>:


void pm_switch_to_clock(volatile avr32_pm_t *pm, unsigned long clock)
{
  // Read
  u_avr32_pm_mcctrl_t u_avr32_pm_mcctrl = {pm->mcctrl};
800023be:	78 08       	ld.w	r8,r12[0x0]
  // Modify
  u_avr32_pm_mcctrl.MCCTRL.mcsel = clock;
800023c0:	f1 db d0 02 	bfins	r8,r11,0x0,0x2
  // Write back
  pm->mcctrl = u_avr32_pm_mcctrl.mcctrl;
800023c4:	99 08       	st.w	r12[0x0],r8
}
800023c6:	5e fc       	retal	r12

800023c8 <pm_switch_to_osc0>:


void pm_switch_to_osc0(volatile avr32_pm_t *pm, unsigned int fosc0, unsigned int startup)
{
800023c8:	eb cd 40 c0 	pushm	r6-r7,lr
800023cc:	18 97       	mov	r7,r12
800023ce:	14 96       	mov	r6,r10
  pm_enable_osc0_crystal(pm, fosc0);            // Enable the Osc0 in crystal mode
800023d0:	f0 1f 00 06 	mcall	800023e8 <pm_switch_to_osc0+0x20>
  pm_enable_clk0(pm, startup);                  // Crystal startup time - This parameter is critical and depends on the characteristics of the crystal
800023d4:	0c 9b       	mov	r11,r6
800023d6:	0e 9c       	mov	r12,r7
800023d8:	f0 1f 00 05 	mcall	800023ec <pm_switch_to_osc0+0x24>
  pm_switch_to_clock(pm, AVR32_PM_MCSEL_OSC0);  // Then switch main clock to Osc0
800023dc:	30 1b       	mov	r11,1
800023de:	0e 9c       	mov	r12,r7
800023e0:	f0 1f 00 04 	mcall	800023f0 <pm_switch_to_osc0+0x28>
}
800023e4:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800023e8:	80 00       	ld.sh	r0,r0[0x0]
800023ea:	22 5c       	sub	r12,37
800023ec:	80 00       	ld.sh	r0,r0[0x0]
800023ee:	22 b4       	sub	r4,43
800023f0:	80 00       	ld.sh	r0,r0[0x0]
800023f2:	23 be       	sub	lr,59

800023f4 <pm_configure_clocks>:

#define PM_MAX_MUL                ((1 << AVR32_PM_PLL0_PLLMUL_SIZE) - 1)


int pm_configure_clocks(pm_freq_param_t *param)
{
800023f4:	eb cd 40 fc 	pushm	r2-r7,lr
800023f8:	18 97       	mov	r7,r12
  //  12    8   1  108     1     54    27
  //  12    9   1  120     1     60    15
  //  12    9   1  120     1     60    30
  //  12   10   1  132     1     66    16.5
  //
  unsigned long in_cpu_f  = param->cpu_f;
800023fa:	78 05       	ld.w	r5,r12[0x0]
  unsigned long in_osc0_f = param->osc0_f;
800023fc:	78 26       	ld.w	r6,r12[0x8]
  unsigned long mul, div, div2_en = 0, div2_cpu = 0, div2_pba = 0;
  unsigned long pll_freq, rest;
  bool b_div2_pba, b_div2_cpu;

  // Switch to external Oscillator 0
  pm_switch_to_osc0(&AVR32_PM, in_osc0_f, param->osc0_startup);
800023fe:	78 3a       	ld.w	r10,r12[0xc]
80002400:	0c 9b       	mov	r11,r6
80002402:	fe 7c 0c 00 	mov	r12,-62464
80002406:	f0 1f 00 69 	mcall	800025a8 <pm_configure_clocks+0x1b4>

  // Start with CPU freq config
  if (in_cpu_f == in_osc0_f)
8000240a:	0c 35       	cp.w	r5,r6
8000240c:	c0 51       	brne	80002416 <pm_configure_clocks+0x22>
  {
    param->cpu_f = in_osc0_f;
8000240e:	8f 05       	st.w	r7[0x0],r5
    param->pba_f = in_osc0_f;
80002410:	8f 15       	st.w	r7[0x4],r5
80002412:	e3 cf 80 fc 	ldm	sp++,r2-r7,pc,r12=0
  else if (in_cpu_f < in_osc0_f)
  {
    // TBD
  }

  rest = in_cpu_f % in_osc0_f;
80002416:	ea 06 0d 08 	divu	r8,r5,r6
8000241a:	12 9c       	mov	r12,r9

  for (div = 1; div < 32; div++)
  {
    if ((div * rest) % in_osc0_f == 0)
8000241c:	f8 06 0d 08 	divu	r8,r12,r6
80002420:	58 09       	cp.w	r9,0
80002422:	c0 31       	brne	80002428 <pm_configure_clocks+0x34>
80002424:	30 19       	mov	r9,1
80002426:	c1 28       	rjmp	8000244a <pm_configure_clocks+0x56>
80002428:	f8 08 15 01 	lsl	r8,r12,0x1
8000242c:	30 29       	mov	r9,2
8000242e:	f0 06 0d 0a 	divu	r10,r8,r6
80002432:	58 0b       	cp.w	r11,0
80002434:	c0 70       	breq	80002442 <pm_configure_clocks+0x4e>
    // TBD
  }

  rest = in_cpu_f % in_osc0_f;

  for (div = 1; div < 32; div++)
80002436:	2f f9       	sub	r9,-1
80002438:	18 08       	add	r8,r12
8000243a:	e0 49 00 20 	cp.w	r9,32
8000243e:	cf 81       	brne	8000242e <pm_configure_clocks+0x3a>
80002440:	cb 18       	rjmp	800025a2 <pm_configure_clocks+0x1ae>
  {
    if ((div * rest) % in_osc0_f == 0)
      break;
  }
  if (div == 32)
80002442:	e0 49 00 20 	cp.w	r9,32
80002446:	e0 80 00 ae 	breq	800025a2 <pm_configure_clocks+0x1ae>
    return PM_FREQ_STATUS_FAIL;

  mul = (in_cpu_f * div) / in_osc0_f;
8000244a:	f2 05 02 4b 	mul	r11,r9,r5
8000244e:	f6 06 0d 0a 	divu	r10,r11,r6

  if (mul > PM_MAX_MUL)
80002452:	58 fa       	cp.w	r10,15
80002454:	e0 8b 00 a7 	brhi	800025a2 <pm_configure_clocks+0x1ae>
    return PM_FREQ_STATUS_FAIL;

  // export 2power from PLL div to div2_cpu
  while (!(div % 2))
80002458:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
8000245c:	c0 30       	breq	80002462 <pm_configure_clocks+0x6e>
8000245e:	30 05       	mov	r5,0
80002460:	c0 78       	rjmp	8000246e <pm_configure_clocks+0x7a>
80002462:	30 05       	mov	r5,0
  {
    div /= 2;
80002464:	a1 99       	lsr	r9,0x1
    div2_cpu++;
80002466:	2f f5       	sub	r5,-1

  if (mul > PM_MAX_MUL)
    return PM_FREQ_STATUS_FAIL;

  // export 2power from PLL div to div2_cpu
  while (!(div % 2))
80002468:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
8000246c:	cf c0       	breq	80002464 <pm_configure_clocks+0x70>

  // Here we know the mul and div parameter of the PLL config.
  // . Check out if the PLL has a valid in_cpu_f.
  // . Try to have for the PLL frequency (VCO output) the highest possible value
  //   to reduce jitter.
  while (in_osc0_f * 2 * mul / div < AVR32_PM_PLL_VCO_RANGE0_MAX_FREQ)
8000246e:	f4 06 02 4b 	mul	r11,r10,r6
80002472:	f6 03 15 01 	lsl	r3,r11,0x1
80002476:	e6 09 0d 02 	divu	r2,r3,r9
8000247a:	e0 6c 1b ff 	mov	r12,7167
8000247e:	ea 1c 0e 4e 	orh	r12,0xe4e
80002482:	18 32       	cp.w	r2,r12
80002484:	e0 8b 00 1d 	brhi	800024be <pm_configure_clocks+0xca>
  {
    if (2 * mul > PM_MAX_MUL)
80002488:	f4 08 15 01 	lsl	r8,r10,0x1
8000248c:	58 f8       	cp.w	r8,15
8000248e:	e0 88 00 09 	brls	800024a0 <pm_configure_clocks+0xac>
80002492:	c1 68       	rjmp	800024be <pm_configure_clocks+0xca>
80002494:	f0 0a 15 01 	lsl	r10,r8,0x1
80002498:	58 fa       	cp.w	r10,15
8000249a:	e0 8b 00 11 	brhi	800024bc <pm_configure_clocks+0xc8>
8000249e:	14 98       	mov	r8,r10
      break;
    mul *= 2;
    div2_cpu++;
800024a0:	2f f5       	sub	r5,-1

  // Here we know the mul and div parameter of the PLL config.
  // . Check out if the PLL has a valid in_cpu_f.
  // . Try to have for the PLL frequency (VCO output) the highest possible value
  //   to reduce jitter.
  while (in_osc0_f * 2 * mul / div < AVR32_PM_PLL_VCO_RANGE0_MAX_FREQ)
800024a2:	f0 06 02 4b 	mul	r11,r8,r6
800024a6:	f6 03 15 01 	lsl	r3,r11,0x1
800024aa:	e6 09 0d 02 	divu	r2,r3,r9
800024ae:	e0 6c 1b ff 	mov	r12,7167
800024b2:	ea 1c 0e 4e 	orh	r12,0xe4e
800024b6:	18 32       	cp.w	r2,r12
800024b8:	fe 98 ff ee 	brls	80002494 <pm_configure_clocks+0xa0>
800024bc:	10 9a       	mov	r10,r8
      break;
    mul *= 2;
    div2_cpu++;
  }

  if (div2_cpu != 0)
800024be:	58 05       	cp.w	r5,0
800024c0:	f9 b6 00 00 	moveq	r6,0
  {
    div2_cpu--;
800024c4:	f7 b5 01 01 	subne	r5,1
800024c8:	f9 b6 01 01 	movne	r6,1
    div2_en = 1;
  }

  pll_freq = in_osc0_f * mul / (div * (1 << div2_en));
800024cc:	f2 06 09 43 	lsl	r3,r9,r6
800024d0:	f6 03 0d 02 	divu	r2,r11,r3
800024d4:	04 94       	mov	r4,r2

  // Update real CPU Frequency
  param->cpu_f = pll_freq / (1 << div2_cpu);
800024d6:	e4 05 0a 48 	lsr	r8,r2,r5
800024da:	8f 08       	st.w	r7[0x0],r8
  mul--;

  pm_pll_setup(&AVR32_PM
800024dc:	31 08       	mov	r8,16
800024de:	1a d8       	st.w	--sp,r8
800024e0:	30 08       	mov	r8,0
800024e2:	20 1a       	sub	r10,1
800024e4:	10 9b       	mov	r11,r8
800024e6:	fe 7c 0c 00 	mov	r12,-62464
800024ea:	f0 1f 00 31 	mcall	800025ac <pm_configure_clocks+0x1b8>
  , div // div
  , 0   // osc
  , 16  // lockcount
  );

  pm_pll_set_option(&AVR32_PM
800024ee:	e0 69 67 ff 	mov	r9,26623
800024f2:	ea 19 09 89 	orh	r9,0x989
800024f6:	12 32       	cp.w	r2,r9
800024f8:	5f 8a       	srls	r10
800024fa:	30 08       	mov	r8,0
800024fc:	0c 99       	mov	r9,r6
800024fe:	10 9b       	mov	r11,r8
80002500:	fe 7c 0c 00 	mov	r12,-62464
80002504:	f0 1f 00 2b 	mcall	800025b0 <pm_configure_clocks+0x1bc>
80002508:	04 98       	mov	r8,r2
8000250a:	30 06       	mov	r6,0
  , div2_en // pll_div2
  , 0 // pll_wbwdisable
  );

  rest = pll_freq;
  while (rest > AVR32_PM_PBA_MAX_FREQ ||
8000250c:	2f fd       	sub	sp,-4
8000250e:	c0 78       	rjmp	8000251c <pm_configure_clocks+0x128>
         rest != param->pba_f)
  {
    div2_pba++;
80002510:	2f f6       	sub	r6,-1
    rest = pll_freq / (1 << div2_pba);
80002512:	e8 06 0a 48 	lsr	r8,r4,r6
    if (rest < param->pba_f)
80002516:	6e 19       	ld.w	r9,r7[0x4]
80002518:	12 38       	cp.w	r8,r9
8000251a:	c0 b3       	brcs	80002530 <pm_configure_clocks+0x13c>
  , div2_en // pll_div2
  , 0 // pll_wbwdisable
  );

  rest = pll_freq;
  while (rest > AVR32_PM_PBA_MAX_FREQ ||
8000251c:	e0 6c 14 80 	mov	r12,5248
80002520:	ea 1c 03 ef 	orh	r12,0x3ef
80002524:	18 38       	cp.w	r8,r12
80002526:	fe 9b ff f5 	brhi	80002510 <pm_configure_clocks+0x11c>
         rest != param->pba_f)
8000252a:	6e 19       	ld.w	r9,r7[0x4]
8000252c:	10 39       	cp.w	r9,r8
8000252e:	cf 11       	brne	80002510 <pm_configure_clocks+0x11c>
    if (rest < param->pba_f)
      break;
  }

  // Update real PBA Frequency
  param->pba_f = pll_freq / (1 << div2_pba);
80002530:	e8 06 0a 44 	lsr	r4,r4,r6
80002534:	8f 14       	st.w	r7[0x4],r4

  // Enable PLL0
  pm_pll_enable(&AVR32_PM, 0);
80002536:	30 0b       	mov	r11,0
80002538:	fe 7c 0c 00 	mov	r12,-62464
8000253c:	f0 1f 00 1e 	mcall	800025b4 <pm_configure_clocks+0x1c0>

  // Wait for PLL0 locked
  pm_wait_for_pll0_locked(&AVR32_PM);
80002540:	fe 7c 0c 00 	mov	r12,-62464
80002544:	f0 1f 00 1d 	mcall	800025b8 <pm_configure_clocks+0x1c4>

  if (div2_cpu)
80002548:	58 05       	cp.w	r5,0
8000254a:	f9 b9 00 00 	moveq	r9,0
  {
    b_div2_cpu = true;
    div2_cpu--;
8000254e:	f7 b5 01 01 	subne	r5,1
80002552:	f9 b9 01 01 	movne	r9,1
  }
  else
    b_div2_cpu = false;

  if (div2_pba)
80002556:	58 06       	cp.w	r6,0
80002558:	f9 bb 00 00 	moveq	r11,0
  {
    b_div2_pba = true;
    div2_pba--;
8000255c:	f7 b6 01 01 	subne	r6,1
80002560:	f9 bb 01 01 	movne	r11,1
  }
  else
    b_div2_pba = false;

  pm_cksel(&AVR32_PM
80002564:	1a d5       	st.w	--sp,r5
80002566:	1a d9       	st.w	--sp,r9
80002568:	0a 98       	mov	r8,r5
8000256a:	0c 9a       	mov	r10,r6
8000256c:	fe 7c 0c 00 	mov	r12,-62464
80002570:	f0 1f 00 13 	mcall	800025bc <pm_configure_clocks+0x1c8>
  , b_div2_pba, div2_pba // PBA
  , b_div2_cpu, div2_cpu // PBB
  , b_div2_cpu, div2_cpu // HSB
  );

  if (param->cpu_f > AVR32_FLASHC_FWS_0_MAX_FREQ)
80002574:	2f ed       	sub	sp,-8
80002576:	6e 08       	ld.w	r8,r7[0x0]
80002578:	e0 69 8a 40 	mov	r9,35392
8000257c:	ea 19 01 f7 	orh	r9,0x1f7
80002580:	12 38       	cp.w	r8,r9
80002582:	e0 88 00 06 	brls	8000258e <pm_configure_clocks+0x19a>
  {
    flashc_set_wait_state(1);
80002586:	30 1c       	mov	r12,1
80002588:	f0 1f 00 0e 	mcall	800025c0 <pm_configure_clocks+0x1cc>
8000258c:	c0 48       	rjmp	80002594 <pm_configure_clocks+0x1a0>
      flashc_issue_command(AVR32_FLASHC_FCMD_CMD_HSDIS, -1);
#endif
  }
  else
  {
    flashc_set_wait_state(0);
8000258e:	30 0c       	mov	r12,0
80002590:	f0 1f 00 0c 	mcall	800025c0 <pm_configure_clocks+0x1cc>
    else
      flashc_issue_command(AVR32_FLASHC_FCMD_CMD_HSDIS, -1);
#endif
  }

  pm_switch_to_clock(&AVR32_PM, AVR32_PM_MCCTRL_MCSEL_PLL0);
80002594:	30 2b       	mov	r11,2
80002596:	fe 7c 0c 00 	mov	r12,-62464
8000259a:	f0 1f 00 0b 	mcall	800025c4 <pm_configure_clocks+0x1d0>
8000259e:	e3 cf 80 fc 	ldm	sp++,r2-r7,pc,r12=0

  return PM_FREQ_STATUS_OK;
800025a2:	e3 cf c0 fc 	ldm	sp++,r2-r7,pc,r12=-1
800025a6:	00 00       	add	r0,r0
800025a8:	80 00       	ld.sh	r0,r0[0x0]
800025aa:	23 c8       	sub	r8,60
800025ac:	80 00       	ld.sh	r0,r0[0x0]
800025ae:	23 6a       	sub	r10,54
800025b0:	80 00       	ld.sh	r0,r0[0x0]
800025b2:	23 8c       	sub	r12,56
800025b4:	80 00       	ld.sh	r0,r0[0x0]
800025b6:	23 a6       	sub	r6,58
800025b8:	80 00       	ld.sh	r0,r0[0x0]
800025ba:	23 b4       	sub	r4,59
800025bc:	80 00       	ld.sh	r0,r0[0x0]
800025be:	23 24       	sub	r4,50
800025c0:	80 00       	ld.sh	r0,r0[0x0]
800025c2:	22 44       	sub	r4,36
800025c4:	80 00       	ld.sh	r0,r0[0x0]
800025c6:	23 be       	sub	lr,59

800025c8 <rtc_is_busy>:
#include "rtc.h"


int rtc_is_busy(volatile avr32_rtc_t *rtc)
{
  return (rtc->ctrl & AVR32_RTC_CTRL_BUSY_MASK) != 0;
800025c8:	78 0c       	ld.w	r12,r12[0x0]
}
800025ca:	f9 dc c0 81 	bfextu	r12,r12,0x4,0x1
800025ce:	5e fc       	retal	r12

800025d0 <rtc_set_value>:
  return 1;
}


void rtc_set_value(volatile avr32_rtc_t *rtc, unsigned long val)
{
800025d0:	eb cd 40 c0 	pushm	r6-r7,lr
800025d4:	18 97       	mov	r7,r12
800025d6:	16 96       	mov	r6,r11
  // Wait until we can write into the VAL register
  while (rtc_is_busy(rtc));
800025d8:	0e 9c       	mov	r12,r7
800025da:	f0 1f 00 06 	mcall	800025f0 <rtc_set_value+0x20>
800025de:	cf d1       	brne	800025d8 <rtc_set_value+0x8>
  // Set the new val value
  rtc->val = val;
800025e0:	8f 16       	st.w	r7[0x4],r6
  // Wait until write is done
  while (rtc_is_busy(rtc));
800025e2:	0e 9c       	mov	r12,r7
800025e4:	f0 1f 00 03 	mcall	800025f0 <rtc_set_value+0x20>
800025e8:	cf d1       	brne	800025e2 <rtc_set_value+0x12>
}
800025ea:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800025ee:	00 00       	add	r0,r0
800025f0:	80 00       	ld.sh	r0,r0[0x0]
800025f2:	25 c8       	sub	r8,92

800025f4 <rtc_enable>:
  while (rtc_is_busy(rtc));
}


void rtc_enable(volatile avr32_rtc_t *rtc)
{
800025f4:	eb cd 40 80 	pushm	r7,lr
800025f8:	18 97       	mov	r7,r12
  // Wait until the rtc CTRL register is up-to-date
  while (rtc_is_busy(rtc));
800025fa:	0e 9c       	mov	r12,r7
800025fc:	f0 1f 00 06 	mcall	80002614 <rtc_enable+0x20>
80002600:	cf d1       	brne	800025fa <rtc_enable+0x6>
  // Enable the RTC
  rtc->ctrl |= AVR32_RTC_CTRL_EN_MASK;
80002602:	6e 08       	ld.w	r8,r7[0x0]
80002604:	a1 a8       	sbr	r8,0x0
80002606:	8f 08       	st.w	r7[0x0],r8
  // Wait until write is done
  while (rtc_is_busy(rtc));
80002608:	0e 9c       	mov	r12,r7
8000260a:	f0 1f 00 03 	mcall	80002614 <rtc_enable+0x20>
8000260e:	cf d1       	brne	80002608 <rtc_enable+0x14>
}
80002610:	e3 cd 80 80 	ldm	sp++,r7,pc
80002614:	80 00       	ld.sh	r0,r0[0x0]
80002616:	25 c8       	sub	r8,92

80002618 <rtc_enable_interrupt>:
}


void rtc_enable_interrupt(volatile avr32_rtc_t *rtc)
{
  rtc->ier = AVR32_RTC_IER_TOPI_MASK;
80002618:	30 18       	mov	r8,1
8000261a:	99 48       	st.w	r12[0x10],r8
}
8000261c:	5e fc       	retal	r12
8000261e:	d7 03       	nop

80002620 <rtc_set_top_value>:
  if (global_interrupt_enabled) cpu_irq_enable();
}


void rtc_set_top_value(volatile avr32_rtc_t *rtc, unsigned long top)
{
80002620:	eb cd 40 c0 	pushm	r6-r7,lr
80002624:	18 97       	mov	r7,r12
80002626:	16 96       	mov	r6,r11
  // Wait until we can write into the VAL register
  while (rtc_is_busy(rtc));
80002628:	0e 9c       	mov	r12,r7
8000262a:	f0 1f 00 06 	mcall	80002640 <rtc_set_top_value+0x20>
8000262e:	cf d1       	brne	80002628 <rtc_set_top_value+0x8>
  // Set the new val value
  rtc->top = top;
80002630:	8f 26       	st.w	r7[0x8],r6
  // Wait until write is done
  while (rtc_is_busy(rtc));
80002632:	0e 9c       	mov	r12,r7
80002634:	f0 1f 00 03 	mcall	80002640 <rtc_set_top_value+0x20>
80002638:	cf d1       	brne	80002632 <rtc_set_top_value+0x12>
}
8000263a:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000263e:	00 00       	add	r0,r0
80002640:	80 00       	ld.sh	r0,r0[0x0]
80002642:	25 c8       	sub	r8,92

80002644 <rtc_clear_interrupt>:
}


void rtc_clear_interrupt(volatile avr32_rtc_t *rtc)
{
  bool global_interrupt_enabled = cpu_irq_is_enabled();
80002644:	e1 b8 00 00 	mfsr	r8,0x0

  if (global_interrupt_enabled) cpu_irq_disable();
80002648:	e6 18 00 01 	andh	r8,0x1,COH
8000264c:	c0 71       	brne	8000265a <rtc_clear_interrupt+0x16>
8000264e:	d3 03       	ssrf	0x10
  rtc->icr = AVR32_RTC_ICR_TOPI_MASK;
80002650:	30 18       	mov	r8,1
80002652:	99 88       	st.w	r12[0x20],r8
  rtc->isr;
80002654:	78 78       	ld.w	r8,r12[0x1c]
  if (global_interrupt_enabled) cpu_irq_enable();
80002656:	d5 03       	csrf	0x10
80002658:	5e fc       	retal	r12
void rtc_clear_interrupt(volatile avr32_rtc_t *rtc)
{
  bool global_interrupt_enabled = cpu_irq_is_enabled();

  if (global_interrupt_enabled) cpu_irq_disable();
  rtc->icr = AVR32_RTC_ICR_TOPI_MASK;
8000265a:	30 18       	mov	r8,1
8000265c:	99 88       	st.w	r12[0x20],r8
  rtc->isr;
8000265e:	78 78       	ld.w	r8,r12[0x1c]
80002660:	5e fc       	retal	r12
80002662:	d7 03       	nop

80002664 <rtc_init>:
  return (rtc->ctrl & AVR32_RTC_CTRL_BUSY_MASK) != 0;
}


int rtc_init(volatile avr32_rtc_t *rtc, unsigned char osc_type, unsigned char psel)
{
80002664:	eb cd 40 e0 	pushm	r5-r7,lr
80002668:	18 97       	mov	r7,r12
8000266a:	16 96       	mov	r6,r11
8000266c:	14 95       	mov	r5,r10
  // If exit, it means that the configuration has not been set correctly
  if (osc_type > (1 << AVR32_RTC_CTRL_CLK32_SIZE) - 1 ||
8000266e:	30 18       	mov	r8,1
80002670:	f0 0b 18 00 	cp.b	r11,r8
80002674:	5f b9       	srhi	r9
80002676:	30 f8       	mov	r8,15
80002678:	f0 0a 18 00 	cp.b	r10,r8
8000267c:	5f b8       	srhi	r8
8000267e:	f3 e8 10 08 	or	r8,r9,r8
80002682:	c0 30       	breq	80002688 <rtc_init+0x24>
80002684:	e3 cf 80 e0 	ldm	sp++,r5-r7,pc,r12=0
      psel > (1 << AVR32_RTC_CTRL_PSEL_SIZE) - 1)
    return 0;

  // If we use the 32-kHz oscillator, we have to enable it first
  if (osc_type == RTC_OSC_32KHZ)
80002688:	30 18       	mov	r8,1
8000268a:	f0 0b 18 00 	cp.b	r11,r8
8000268e:	c0 a1       	brne	800026a2 <rtc_init+0x3e>
  {
    // Select the 32-kHz oscillator crystal
    pm_enable_osc32_crystal(&AVR32_PM);
80002690:	fe 7c 0c 00 	mov	r12,-62464
80002694:	f0 1f 00 0f 	mcall	800026d0 <rtc_init+0x6c>
    // Enable the 32-kHz clock and wait until the osc32 clock is ready.
    pm_enable_clk32(&AVR32_PM, AVR32_PM_OSCCTRL32_STARTUP_0_RCOSC);
80002698:	30 0b       	mov	r11,0
8000269a:	fe 7c 0c 00 	mov	r12,-62464
8000269e:	f0 1f 00 0e 	mcall	800026d4 <rtc_init+0x70>
  }

  // Wait until the rtc accepts writes to the CTRL register
  while (rtc_is_busy(rtc));
800026a2:	0e 9c       	mov	r12,r7
800026a4:	f0 1f 00 0d 	mcall	800026d8 <rtc_init+0x74>
800026a8:	cf d1       	brne	800026a2 <rtc_init+0x3e>

  // Set the new RTC configuration
  rtc->ctrl = osc_type << AVR32_RTC_CTRL_CLK32_OFFSET |
800026aa:	a3 76       	lsl	r6,0x3
800026ac:	b1 a6       	sbr	r6,0x10
800026ae:	ed e5 10 85 	or	r5,r6,r5<<0x8
800026b2:	8f 05       	st.w	r7[0x0],r5
              psel << AVR32_RTC_CTRL_PSEL_OFFSET |
              AVR32_RTC_CTRL_CLKEN_MASK;

  // Wait until write is done
  while (rtc_is_busy(rtc));
800026b4:	0e 9c       	mov	r12,r7
800026b6:	f0 1f 00 09 	mcall	800026d8 <rtc_init+0x74>
800026ba:	cf d1       	brne	800026b4 <rtc_init+0x50>

  // Set the counter value to 0
  rtc_set_value(rtc, 0x00000000);
800026bc:	30 0b       	mov	r11,0
800026be:	0e 9c       	mov	r12,r7
800026c0:	f0 1f 00 07 	mcall	800026dc <rtc_init+0x78>
  // Set the top value to 0xFFFFFFFF
  rtc_set_top_value(rtc, 0xFFFFFFFF);
800026c4:	3f fb       	mov	r11,-1
800026c6:	0e 9c       	mov	r12,r7
800026c8:	f0 1f 00 06 	mcall	800026e0 <rtc_init+0x7c>
800026cc:	e3 cf 90 e0 	ldm	sp++,r5-r7,pc,r12=1
800026d0:	80 00       	ld.sh	r0,r0[0x0]
800026d2:	22 dc       	sub	r12,45
800026d4:	80 00       	ld.sh	r0,r0[0x0]
800026d6:	23 08       	sub	r8,48
800026d8:	80 00       	ld.sh	r0,r0[0x0]
800026da:	25 c8       	sub	r8,92
800026dc:	80 00       	ld.sh	r0,r0[0x0]
800026de:	25 d0       	sub	r0,93
800026e0:	80 00       	ld.sh	r0,r0[0x0]
800026e2:	26 20       	sub	r0,98

800026e4 <board_init>:
#if defined (CONF_BOARD_AT45DBX)
#  define AT45DBX_MEM_CNT  1
#endif

void board_init(void)
{
800026e4:	d4 01       	pushm	lr
	gpio_configure_pin(LED0_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800026e6:	30 3b       	mov	r11,3
800026e8:	33 bc       	mov	r12,59
800026ea:	f0 1f 00 2c 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(LED1_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800026ee:	30 3b       	mov	r11,3
800026f0:	33 cc       	mov	r12,60
800026f2:	f0 1f 00 2a 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(LED2_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800026f6:	30 3b       	mov	r11,3
800026f8:	33 dc       	mov	r12,61
800026fa:	f0 1f 00 28 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(LED3_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
800026fe:	30 3b       	mov	r11,3
80002700:	33 ec       	mov	r12,62
80002702:	f0 1f 00 26 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(LED4_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
80002706:	30 3b       	mov	r11,3
80002708:	33 3c       	mov	r12,51
8000270a:	f0 1f 00 24 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(LED5_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
8000270e:	30 3b       	mov	r11,3
80002710:	33 4c       	mov	r12,52
80002712:	f0 1f 00 22 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(LED6_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
80002716:	30 3b       	mov	r11,3
80002718:	33 5c       	mov	r12,53
8000271a:	f0 1f 00 20 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(LED7_GPIO,GPIO_DIR_OUTPUT | GPIO_INIT_HIGH);
8000271e:	30 3b       	mov	r11,3
80002720:	33 6c       	mov	r12,54
80002722:	f0 1f 00 1e 	mcall	80002798 <board_init+0xb4>

	gpio_configure_pin(GPIO_PUSH_BUTTON_0,GPIO_DIR_INPUT);
80002726:	30 0b       	mov	r11,0
80002728:	35 8c       	mov	r12,88
8000272a:	f0 1f 00 1c 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(GPIO_PUSH_BUTTON_1,GPIO_DIR_INPUT);
8000272e:	30 0b       	mov	r11,0
80002730:	35 5c       	mov	r12,85
80002732:	f0 1f 00 1a 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(GPIO_PUSH_BUTTON_2,GPIO_DIR_INPUT);
80002736:	30 0b       	mov	r11,0
80002738:	35 2c       	mov	r12,82
8000273a:	f0 1f 00 18 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(GPIO_JOYSTICK_PUSH,GPIO_DIR_INPUT);
8000273e:	30 0b       	mov	r11,0
80002740:	31 4c       	mov	r12,20
80002742:	f0 1f 00 16 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(GPIO_JOYSTICK_LEFT,GPIO_DIR_INPUT);
80002746:	30 0b       	mov	r11,0
80002748:	31 9c       	mov	r12,25
8000274a:	f0 1f 00 14 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(GPIO_JOYSTICK_UP,GPIO_DIR_INPUT);
8000274e:	30 0b       	mov	r11,0
80002750:	31 ac       	mov	r12,26
80002752:	f0 1f 00 12 	mcall	80002798 <board_init+0xb4>
	gpio_configure_pin(GPIO_JOYSTICK_DOWN,GPIO_DIR_INPUT);
80002756:	30 0b       	mov	r11,0
80002758:	31 bc       	mov	r12,27
8000275a:	f0 1f 00 10 	mcall	80002798 <board_init+0xb4>
		MREPEAT(AT45DBX_MEM_CNT, AT45DBX_ENABLE_NPCS_PIN, ~)
#  undef AT45DBX_ENABLE_NPCS_PIN
	};

	// Assign I/Os to SPI.
	gpio_enable_module(AT45DBX_SPI_GPIO_MAP,
8000275e:	30 4b       	mov	r11,4
80002760:	48 fc       	lddpc	r12,8000279c <board_init+0xb8>
80002762:	f0 1f 00 10 	mcall	800027a0 <board_init+0xbc>
		{SD_MMC_SPI_MOSI_PIN, SD_MMC_SPI_MOSI_FUNCTION},
		{SD_MMC_SPI_NPCS_PIN, SD_MMC_SPI_NPCS_FUNCTION},
	};

	// Assign I/Os to SPI.
	gpio_enable_module(SD_MMC_SPI_GPIO_MAP,
80002766:	30 4b       	mov	r11,4
80002768:	48 fc       	lddpc	r12,800027a4 <board_init+0xc0>
8000276a:	f0 1f 00 0e 	mcall	800027a0 <board_init+0xbc>

	// Configure SD/MMC card detect and write protect pins
#  define SD_MMC_CONFIGURE_CD_WP_PIN(slot, unused) \
	gpio_configure_pin(SD_MMC_##slot##_CD_GPIO,GPIO_DIR_INPUT); \
	gpio_configure_pin(SD_MMC_##slot##_WP_GPIO,GPIO_DIR_INPUT);
	MREPEAT(SD_MMC_SPI_MEM_CNT, SD_MMC_CONFIGURE_CD_WP_PIN, ~)
8000276e:	30 0b       	mov	r11,0
80002770:	30 2c       	mov	r12,2
80002772:	f0 1f 00 0a 	mcall	80002798 <board_init+0xb4>
80002776:	30 0b       	mov	r11,0
80002778:	30 7c       	mov	r12,7
8000277a:	f0 1f 00 08 	mcall	80002798 <board_init+0xb4>
		{AVR32_TWI_SDA_0_0_PIN, AVR32_TWI_SDA_0_0_FUNCTION},
		{AVR32_TWI_SCL_0_0_PIN, AVR32_TWI_SCL_0_0_FUNCTION},
	};

	// TWI gpio pins configuration
	gpio_enable_module(TWI_GPIO_MAP,
8000277e:	30 2b       	mov	r11,2
80002780:	48 ac       	lddpc	r12,800027a8 <board_init+0xc4>
80002782:	f0 1f 00 08 	mcall	800027a0 <board_init+0xbc>
	// USART GPIO pin configuration.
	static const gpio_map_t COMPORT_GPIO_MAP = {
		{USART_RXD_PIN, USART_RXD_FUNCTION },
		{USART_TXD_PIN, USART_TXD_FUNCTION },
	};
	gpio_enable_module(COMPORT_GPIO_MAP,
80002786:	30 2b       	mov	r11,2
80002788:	48 9c       	lddpc	r12,800027ac <board_init+0xc8>
8000278a:	f0 1f 00 06 	mcall	800027a0 <board_init+0xbc>
	// USART GPIO pin configuration.
	static const gpio_map_t COMPORT0_GPIO_MAP = {
		{USART0_RXD_PIN, USART0_RXD_FUNCTION },
		{USART0_TXD_PIN, USART0_TXD_FUNCTION },
	};
	gpio_enable_module(COMPORT0_GPIO_MAP,
8000278e:	30 2b       	mov	r11,2
80002790:	48 8c       	lddpc	r12,800027b0 <board_init+0xcc>
80002792:	f0 1f 00 04 	mcall	800027a0 <board_init+0xbc>
			sizeof(COMPORT0_GPIO_MAP) / sizeof(COMPORT0_GPIO_MAP[0]));
#endif
}
80002796:	d8 02       	popm	pc
80002798:	80 00       	ld.sh	r0,r0[0x0]
8000279a:	28 8c       	sub	r12,-120
8000279c:	80 00       	ld.sh	r0,r0[0x0]
8000279e:	8a 50       	ld.sh	r0,r5[0xa]
800027a0:	80 00       	ld.sh	r0,r0[0x0]
800027a2:	28 5c       	sub	r12,-123
800027a4:	80 00       	ld.sh	r0,r0[0x0]
800027a6:	8a 00       	ld.sh	r0,r5[0x0]
800027a8:	80 00       	ld.sh	r0,r0[0x0]
800027aa:	8a 40       	ld.sh	r0,r5[0x8]
800027ac:	80 00       	ld.sh	r0,r0[0x0]
800027ae:	8a 30       	ld.sh	r0,r5[0x6]
800027b0:	80 00       	ld.sh	r0,r0[0x0]
800027b2:	8a 20       	ld.sh	r0,r5[0x4]

800027b4 <LED_Display>:
  // Use the LED descriptors to get the connections of a given LED to the MCU.
  tLED_DESCRIPTOR *led_descriptor;
  volatile avr32_gpio_port_t *led_gpio_port;

  // Make sure only existing LEDs are specified.
  leds &= (1 << LED_COUNT) - 1;
800027b4:	f9 dc c0 08 	bfextu	r12,r12,0x0,0x8

  // Update the saved state of all LEDs with the requested changes.
  LED_State = leds;
800027b8:	49 28       	lddpc	r8,80002800 <LED_Display+0x4c>
800027ba:	91 0c       	st.w	r8[0x0],r12

  // For all LEDs...
  for (led_descriptor = &LED_DESCRIPTOR[0];
800027bc:	49 28       	lddpc	r8,80002804 <LED_Display+0x50>
800027be:	f0 c9 ff 80 	sub	r9,r8,-128
800027c2:	12 38       	cp.w	r8,r9
800027c4:	5e 2c       	reths	r12
800027c6:	10 9b       	mov	r11,r8
800027c8:	2f c8       	sub	r8,-4
{
  return LED_State;
}


void LED_Display(U32 leds)
800027ca:	f6 cb ff 7c 	sub	r11,r11,-132
  for (led_descriptor = &LED_DESCRIPTOR[0];
       led_descriptor < LED_DESCRIPTOR + LED_COUNT;
       led_descriptor++)
  {
    // Set the LED to the requested state.
    led_gpio_port = &AVR32_GPIO.port[led_descriptor->GPIO.PORT];
800027ce:	f0 f9 ff fc 	ld.w	r9,r8[-4]
800027d2:	a9 69       	lsl	r9,0x8
800027d4:	e0 29 f0 00 	sub	r9,61440
    if (leds & 1)
800027d8:	f5 dc c0 01 	bfextu	r10,r12,0x0,0x1
    {
      led_gpio_port->ovrc  = led_descriptor->GPIO.PIN_MASK;
800027dc:	f1 fa 10 00 	ld.wne	r10,r8[0x0]
800027e0:	f3 fa 1a 16 	st.wne	r9[0x58],r10
    }
    else
    {
      led_gpio_port->ovrs  = led_descriptor->GPIO.PIN_MASK;
800027e4:	f1 fa 00 00 	ld.weq	r10,r8[0x0]
800027e8:	f3 fa 0a 15 	st.weq	r9[0x54],r10
    }
    led_gpio_port->oders = led_descriptor->GPIO.PIN_MASK;
800027ec:	70 0a       	ld.w	r10,r8[0x0]
800027ee:	f3 4a 00 44 	st.w	r9[68],r10
    led_gpio_port->gpers = led_descriptor->GPIO.PIN_MASK;
800027f2:	70 0a       	ld.w	r10,r8[0x0]
800027f4:	93 1a       	st.w	r9[0x4],r10
800027f6:	2f 08       	sub	r8,-16

  // Update the saved state of all LEDs with the requested changes.
  LED_State = leds;

  // For all LEDs...
  for (led_descriptor = &LED_DESCRIPTOR[0];
800027f8:	16 38       	cp.w	r8,r11
800027fa:	5e 0c       	reteq	r12
    {
      led_gpio_port->ovrs  = led_descriptor->GPIO.PIN_MASK;
    }
    led_gpio_port->oders = led_descriptor->GPIO.PIN_MASK;
    led_gpio_port->gpers = led_descriptor->GPIO.PIN_MASK;
    leds >>= 1;
800027fc:	a1 9c       	lsr	r12,0x1
800027fe:	ce 8b       	rjmp	800027ce <LED_Display+0x1a>
80002800:	00 00       	add	r0,r0
80002802:	00 08       	add	r8,r0
80002804:	80 00       	ld.sh	r0,r0[0x0]
80002806:	8a 70       	ld.sh	r0,r5[0xe]

80002808 <gpio_enable_module_pin>:
 *
 * \return \ref GPIO_SUCCESS or \ref GPIO_INVALID_ARGUMENT.
 */
uint32_t gpio_enable_module_pin(uint32_t pin, uint32_t function)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
80002808:	f8 08 16 05 	lsr	r8,r12,0x5
8000280c:	a9 68       	lsl	r8,0x8
8000280e:	e0 28 f0 00 	sub	r8,61440

	/* Enable the correct function. */
	switch (function) {
80002812:	58 1b       	cp.w	r11,1
80002814:	c0 d0       	breq	8000282e <gpio_enable_module_pin+0x26>
80002816:	c0 63       	brcs	80002822 <gpio_enable_module_pin+0x1a>
80002818:	58 2b       	cp.w	r11,2
8000281a:	c1 00       	breq	8000283a <gpio_enable_module_pin+0x32>
8000281c:	58 3b       	cp.w	r11,3
8000281e:	c1 40       	breq	80002846 <gpio_enable_module_pin+0x3e>
80002820:	5e ff       	retal	1
	case 0: /* A function. */
		gpio_port->pmr0c = 1 << (pin & 0x1F);
80002822:	30 19       	mov	r9,1
80002824:	f2 0c 09 49 	lsl	r9,r9,r12
80002828:	91 69       	st.w	r8[0x18],r9
		gpio_port->pmr1c = 1 << (pin & 0x1F);
8000282a:	91 a9       	st.w	r8[0x28],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
8000282c:	c1 28       	rjmp	80002850 <gpio_enable_module_pin+0x48>

	case 1: /* B function. */
		gpio_port->pmr0s = 1 << (pin & 0x1F);
8000282e:	30 19       	mov	r9,1
80002830:	f2 0c 09 49 	lsl	r9,r9,r12
80002834:	91 59       	st.w	r8[0x14],r9
		gpio_port->pmr1c = 1 << (pin & 0x1F);
80002836:	91 a9       	st.w	r8[0x28],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
80002838:	c0 c8       	rjmp	80002850 <gpio_enable_module_pin+0x48>

	case 2: /* C function. */
		gpio_port->pmr0c = 1 << (pin & 0x1F);
8000283a:	30 19       	mov	r9,1
8000283c:	f2 0c 09 49 	lsl	r9,r9,r12
80002840:	91 69       	st.w	r8[0x18],r9
		gpio_port->pmr1s = 1 << (pin & 0x1F);
80002842:	91 99       	st.w	r8[0x24],r9
#if (AVR32_GPIO_H_VERSION >= 210)
		gpio_port->pmr2c = 1 << (pin & 0x1F);
#endif
		break;
80002844:	c0 68       	rjmp	80002850 <gpio_enable_module_pin+0x48>

	case 3: /* D function. */
		gpio_port->pmr0s = 1 << (pin & 0x1F);
80002846:	30 19       	mov	r9,1
80002848:	f2 0c 09 49 	lsl	r9,r9,r12
8000284c:	91 59       	st.w	r8[0x14],r9
		gpio_port->pmr1s = 1 << (pin & 0x1F);
8000284e:	91 99       	st.w	r8[0x24],r9
	default:
		return GPIO_INVALID_ARGUMENT;
	}

	/* Disable GPIO control. */
	gpio_port->gperc = 1 << (pin & 0x1F);
80002850:	30 19       	mov	r9,1
80002852:	f2 0c 09 4c 	lsl	r12,r9,r12
80002856:	91 2c       	st.w	r8[0x8],r12
80002858:	5e fd       	retal	0
8000285a:	d7 03       	nop

8000285c <gpio_enable_module>:
 * \param size The number of pins in \a gpiomap.
 *
 * \return \ref GPIO_SUCCESS or \ref GPIO_INVALID_ARGUMENT.
 */
uint32_t gpio_enable_module(const gpio_map_t gpiomap, uint32_t size)
{
8000285c:	d4 21       	pushm	r4-r7,lr
8000285e:	18 97       	mov	r7,r12
80002860:	16 94       	mov	r4,r11
	uint32_t status = GPIO_SUCCESS;
	uint32_t i;

	for (i = 0; i < size; i++) {
80002862:	58 0b       	cp.w	r11,0
80002864:	c0 31       	brne	8000286a <gpio_enable_module+0xe>
80002866:	30 05       	mov	r5,0
80002868:	c0 d8       	rjmp	80002882 <gpio_enable_module+0x26>
8000286a:	30 06       	mov	r6,0
8000286c:	0c 95       	mov	r5,r6
		status |= gpio_enable_module_pin(gpiomap->pin, gpiomap->function);
8000286e:	6e 1b       	ld.w	r11,r7[0x4]
80002870:	6e 0c       	ld.w	r12,r7[0x0]
80002872:	f0 1f 00 06 	mcall	80002888 <gpio_enable_module+0x2c>
80002876:	18 45       	or	r5,r12
		gpiomap++;
80002878:	2f 87       	sub	r7,-8
uint32_t gpio_enable_module(const gpio_map_t gpiomap, uint32_t size)
{
	uint32_t status = GPIO_SUCCESS;
	uint32_t i;

	for (i = 0; i < size; i++) {
8000287a:	2f f6       	sub	r6,-1
8000287c:	0c 34       	cp.w	r4,r6
8000287e:	fe 9b ff f8 	brhi	8000286e <gpio_enable_module+0x12>
		status |= gpio_enable_module_pin(gpiomap->pin, gpiomap->function);
		gpiomap++;
	}

	return status;
}
80002882:	0a 9c       	mov	r12,r5
80002884:	d8 22       	popm	r4-r7,pc
80002886:	00 00       	add	r0,r0
80002888:	80 00       	ld.sh	r0,r0[0x0]
8000288a:	28 08       	sub	r8,-128

8000288c <gpio_configure_pin>:
 * \param pin The pin number.
 * \param flags The configuration.
 */
void gpio_configure_pin(uint32_t pin, uint32_t flags)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
8000288c:	f8 08 16 05 	lsr	r8,r12,0x5
80002890:	a9 68       	lsl	r8,0x8
80002892:	e0 28 f0 00 	sub	r8,61440
	} else {
		gpio_port->pderc = 1 << (pin & 0x1F);
	}

#endif
	if (flags & GPIO_PULL_UP) {
80002896:	16 99       	mov	r9,r11
80002898:	e2 19 00 04 	andl	r9,0x4,COH
8000289c:	c0 70       	breq	800028aa <gpio_configure_pin+0x1e>
		gpio_port->puers = 1 << (pin & 0x1F);
8000289e:	30 19       	mov	r9,1
800028a0:	f2 0c 09 49 	lsl	r9,r9,r12
800028a4:	f1 49 00 74 	st.w	r8[116],r9
800028a8:	c0 68       	rjmp	800028b4 <gpio_configure_pin+0x28>
	} else {
		gpio_port->puerc = 1 << (pin & 0x1F);
800028aa:	30 19       	mov	r9,1
800028ac:	f2 0c 09 49 	lsl	r9,r9,r12
800028b0:	f1 49 00 78 	st.w	r8[120],r9
	}

#endif

	/* Select interrupt level for group */
	if (flags & GPIO_INTERRUPT) {
800028b4:	16 99       	mov	r9,r11
800028b6:	e2 19 00 80 	andl	r9,0x80,COH
800028ba:	c2 40       	breq	80002902 <gpio_configure_pin+0x76>
		if (flags & GPIO_BOTHEDGES) {
800028bc:	16 99       	mov	r9,r11
800028be:	e2 19 01 80 	andl	r9,0x180,COH
800028c2:	c0 90       	breq	800028d4 <gpio_configure_pin+0x48>
			gpio_port->imr0c = 1 << (pin & 0x1F);
800028c4:	30 19       	mov	r9,1
800028c6:	f2 0c 09 49 	lsl	r9,r9,r12
800028ca:	f1 49 00 a8 	st.w	r8[168],r9
			gpio_port->imr1c = 1 << (pin & 0x1F);
800028ce:	f1 49 00 b8 	st.w	r8[184],r9
800028d2:	c1 88       	rjmp	80002902 <gpio_configure_pin+0x76>
		} else if (flags & GPIO_RISING) {
800028d4:	16 99       	mov	r9,r11
800028d6:	e2 19 02 80 	andl	r9,0x280,COH
800028da:	c0 90       	breq	800028ec <gpio_configure_pin+0x60>
			gpio_port->imr0s = 1 << (pin & 0x1F);
800028dc:	30 19       	mov	r9,1
800028de:	f2 0c 09 49 	lsl	r9,r9,r12
800028e2:	f1 49 00 a4 	st.w	r8[164],r9
			gpio_port->imr1c = 1 << (pin & 0x1F);
800028e6:	f1 49 00 b8 	st.w	r8[184],r9
800028ea:	c0 c8       	rjmp	80002902 <gpio_configure_pin+0x76>
		} else if (flags & GPIO_FALLING) {
800028ec:	16 99       	mov	r9,r11
800028ee:	e2 19 03 80 	andl	r9,0x380,COH
800028f2:	c0 80       	breq	80002902 <gpio_configure_pin+0x76>
			gpio_port->imr0c = 1 << (pin & 0x1F);
800028f4:	30 19       	mov	r9,1
800028f6:	f2 0c 09 49 	lsl	r9,r9,r12
800028fa:	f1 49 00 a8 	st.w	r8[168],r9
			gpio_port->imr1s = 1 << (pin & 0x1F);
800028fe:	f1 49 00 b4 	st.w	r8[180],r9
		}
	}

	/* Select direction and initial pin state */
	if (flags & GPIO_DIR_OUTPUT) {
80002902:	f3 db c0 01 	bfextu	r9,r11,0x0,0x1
80002906:	c1 50       	breq	80002930 <gpio_configure_pin+0xa4>
		if (flags & GPIO_INIT_HIGH) {
80002908:	e2 1b 00 02 	andl	r11,0x2,COH
8000290c:	c0 70       	breq	8000291a <gpio_configure_pin+0x8e>
			gpio_port->ovrs = 1 << (pin & 0x1F);
8000290e:	30 19       	mov	r9,1
80002910:	f2 0c 09 49 	lsl	r9,r9,r12
80002914:	f1 49 00 54 	st.w	r8[84],r9
80002918:	c0 68       	rjmp	80002924 <gpio_configure_pin+0x98>
		} else {
			gpio_port->ovrc = 1 << (pin & 0x1F);
8000291a:	30 19       	mov	r9,1
8000291c:	f2 0c 09 49 	lsl	r9,r9,r12
80002920:	f1 49 00 58 	st.w	r8[88],r9
		}

		gpio_port->oders = 1 << (pin & 0x1F);
80002924:	30 19       	mov	r9,1
80002926:	f2 0c 09 49 	lsl	r9,r9,r12
8000292a:	f1 49 00 44 	st.w	r8[68],r9
8000292e:	c0 68       	rjmp	8000293a <gpio_configure_pin+0xae>
	} else {
		gpio_port->oderc = 1 << (pin & 0x1F);
80002930:	30 19       	mov	r9,1
80002932:	f2 0c 09 49 	lsl	r9,r9,r12
80002936:	f1 49 00 48 	st.w	r8[72],r9
	}

	/* Enable GPIO */
	gpio_port->gpers = 1 << (pin & 0x1F);
8000293a:	30 19       	mov	r9,1
8000293c:	f2 0c 09 4c 	lsl	r12,r9,r12
80002940:	91 1c       	st.w	r8[0x4],r12
}
80002942:	5e fc       	retal	r12

80002944 <gpio_enable_pin_glitch_filter>:
 *
 * \param pin The pin number.
 */
void gpio_enable_pin_glitch_filter(uint32_t pin)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
80002944:	f8 08 16 05 	lsr	r8,r12,0x5
80002948:	a9 68       	lsl	r8,0x8
8000294a:	e0 28 f0 00 	sub	r8,61440
	
	gpio_port->gfers = 1 << (pin & 0x1F);
8000294e:	30 19       	mov	r9,1
80002950:	f2 0c 09 4c 	lsl	r12,r9,r12
80002954:	f1 4c 00 c4 	st.w	r8[196],r12
}
80002958:	5e fc       	retal	r12

8000295a <gpio_enable_pin_interrupt>:
 *
 * \return \ref GPIO_SUCCESS or \ref GPIO_INVALID_ARGUMENT.
 */
uint32_t gpio_enable_pin_interrupt(uint32_t pin, uint32_t mode)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
8000295a:	f8 08 16 05 	lsr	r8,r12,0x5
8000295e:	a9 68       	lsl	r8,0x8
80002960:	e0 28 f0 00 	sub	r8,61440

	/* Enable the glitch filter. */
	gpio_port->gfers = 1 << (pin & 0x1F);
80002964:	30 19       	mov	r9,1
80002966:	f2 0c 09 4c 	lsl	r12,r9,r12
8000296a:	f1 4c 00 c4 	st.w	r8[196],r12
static uint32_t gpio_configure_edge_detector(uint32_t pin, uint32_t mode)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];

	/* Configure the edge detector. */
	switch (mode) {
8000296e:	12 3b       	cp.w	r11,r9
80002970:	c0 a0       	breq	80002984 <gpio_enable_pin_interrupt+0x2a>
80002972:	c0 43       	brcs	8000297a <gpio_enable_pin_interrupt+0x20>
80002974:	58 2b       	cp.w	r11,2
80002976:	c1 11       	brne	80002998 <gpio_enable_pin_interrupt+0x3e>
80002978:	c0 b8       	rjmp	8000298e <gpio_enable_pin_interrupt+0x34>
	case GPIO_PIN_CHANGE:
		gpio_port->imr0c = 1 << (pin & 0x1F);
8000297a:	f1 4c 00 a8 	st.w	r8[168],r12
		gpio_port->imr1c = 1 << (pin & 0x1F);
8000297e:	f1 4c 00 b8 	st.w	r8[184],r12
80002982:	c0 c8       	rjmp	8000299a <gpio_enable_pin_interrupt+0x40>
		break;

	case GPIO_RISING_EDGE:
		gpio_port->imr0s = 1 << (pin & 0x1F);
80002984:	f1 4c 00 a4 	st.w	r8[164],r12
		gpio_port->imr1c = 1 << (pin & 0x1F);
80002988:	f1 4c 00 b8 	st.w	r8[184],r12
8000298c:	c0 78       	rjmp	8000299a <gpio_enable_pin_interrupt+0x40>
		break;

	case GPIO_FALLING_EDGE:
		gpio_port->imr0c = 1 << (pin & 0x1F);
8000298e:	f1 4c 00 a8 	st.w	r8[168],r12
		gpio_port->imr1s = 1 << (pin & 0x1F);
80002992:	f1 4c 00 b4 	st.w	r8[180],r12
80002996:	c0 28       	rjmp	8000299a <gpio_enable_pin_interrupt+0x40>
80002998:	5e ff       	retal	1
	if (GPIO_INVALID_ARGUMENT == gpio_configure_edge_detector(pin, mode)) {
		return(GPIO_INVALID_ARGUMENT);
	}

	/* Enable interrupt. */
	gpio_port->iers = 1 << (pin & 0x1F);
8000299a:	f1 4c 00 94 	st.w	r8[148],r12
8000299e:	5e fd       	retal	0

800029a0 <gpio_clear_pin_interrupt_flag>:
 *
 * \param pin The pin number.
 */
void gpio_clear_pin_interrupt_flag(uint32_t pin)
{
	volatile avr32_gpio_port_t *gpio_port = &AVR32_GPIO.port[pin >> 5];
800029a0:	f8 08 16 05 	lsr	r8,r12,0x5
800029a4:	a9 68       	lsl	r8,0x8
800029a6:	e0 28 f0 00 	sub	r8,61440
	gpio_port->ifrc = 1 << (pin & 0x1F);

	/* Restore interrupt enable register. */
	gpio_port->ier = gpio_ier;
#else
	gpio_port->ifrc = 1 << (pin & 0x1F);
800029aa:	30 19       	mov	r9,1
800029ac:	f2 0c 09 4c 	lsl	r12,r9,r12
800029b0:	f1 4c 00 d8 	st.w	r8[216],r12
#endif
}
800029b4:	5e fc       	retal	r12

800029b6 <_unhandled_interrupt>:
__attribute__((__interrupt__))
#elif (defined __ICCAVR32__)
__interrupt
#endif
static void _unhandled_interrupt(void)
{
800029b6:	c0 08       	rjmp	800029b6 <_unhandled_interrupt>

800029b8 <INTC_register_interrupt>:
 */
void INTC_register_interrupt(__int_handler handler, uint32_t irq,
	uint32_t int_level)
{
	// Determine the group of the IRQ.
	uint32_t int_grp = irq / AVR32_INTC_MAX_NUM_IRQS_PER_GRP;
800029b8:	f6 08 16 05 	lsr	r8,r11,0x5

	/* Store in _int_line_handler_table_x the pointer to the interrupt
	handler, so that _get_interrupt_handler can retrieve it when the
	interrupt is vectored. */
	_int_handler_table[int_grp]
		._int_line_handler_table[irq % AVR32_INTC_MAX_NUM_IRQS_PER_GRP]
800029bc:	49 99       	lddpc	r9,80002a20 <INTC_register_interrupt+0x68>
800029be:	f2 08 00 39 	add	r9,r9,r8<<0x3
800029c2:	f7 db c0 05 	bfextu	r11,r11,0x0,0x5
800029c6:	72 19       	ld.w	r9,r9[0x4]
	uint32_t int_grp = irq / AVR32_INTC_MAX_NUM_IRQS_PER_GRP;

	/* Store in _int_line_handler_table_x the pointer to the interrupt
	handler, so that _get_interrupt_handler can retrieve it when the
	interrupt is vectored. */
	_int_handler_table[int_grp]
800029c8:	f2 0b 09 2c 	st.w	r9[r11<<0x2],r12
	/* Program the corresponding IPRX register to set the interrupt priority
	level and the interrupt vector offset that will be fetched by the core
	interrupt system.
	NOTE: The _intx functions are intermediate assembly functions between
	the core interrupt system and the user interrupt handler. */
	if (int_level == AVR32_INTC_INT0) {
800029cc:	58 0a       	cp.w	r10,0
800029ce:	c0 91       	brne	800029e0 <INTC_register_interrupt+0x28>
		AVR32_INTC.ipr[int_grp] = IPR_INT0;
800029d0:	49 59       	lddpc	r9,80002a24 <INTC_register_interrupt+0x6c>
800029d2:	49 6a       	lddpc	r10,80002a28 <INTC_register_interrupt+0x70>
800029d4:	12 1a       	sub	r10,r9
800029d6:	fe 79 08 00 	mov	r9,-63488
800029da:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800029de:	5e fc       	retal	r12
	} else if (int_level == AVR32_INTC_INT1) {
800029e0:	58 1a       	cp.w	r10,1
800029e2:	c0 a1       	brne	800029f6 <INTC_register_interrupt+0x3e>
		AVR32_INTC.ipr[int_grp] = IPR_INT1;
800029e4:	49 09       	lddpc	r9,80002a24 <INTC_register_interrupt+0x6c>
800029e6:	49 2a       	lddpc	r10,80002a2c <INTC_register_interrupt+0x74>
800029e8:	12 1a       	sub	r10,r9
800029ea:	bf aa       	sbr	r10,0x1e
800029ec:	fe 79 08 00 	mov	r9,-63488
800029f0:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800029f4:	5e fc       	retal	r12
	} else if (int_level == AVR32_INTC_INT2) {
800029f6:	58 2a       	cp.w	r10,2
800029f8:	c0 a1       	brne	80002a0c <INTC_register_interrupt+0x54>
		AVR32_INTC.ipr[int_grp] = IPR_INT2;
800029fa:	48 b9       	lddpc	r9,80002a24 <INTC_register_interrupt+0x6c>
800029fc:	48 da       	lddpc	r10,80002a30 <INTC_register_interrupt+0x78>
800029fe:	12 1a       	sub	r10,r9
80002a00:	bf ba       	sbr	r10,0x1f
80002a02:	fe 79 08 00 	mov	r9,-63488
80002a06:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
80002a0a:	5e fc       	retal	r12
	} else {
		AVR32_INTC.ipr[int_grp] = IPR_INT3;
80002a0c:	48 69       	lddpc	r9,80002a24 <INTC_register_interrupt+0x6c>
80002a0e:	48 aa       	lddpc	r10,80002a34 <INTC_register_interrupt+0x7c>
80002a10:	12 1a       	sub	r10,r9
80002a12:	ea 1a c0 00 	orh	r10,0xc000
80002a16:	fe 79 08 00 	mov	r9,-63488
80002a1a:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
80002a1e:	5e fc       	retal	r12
80002a20:	80 00       	ld.sh	r0,r0[0x0]
80002a22:	8a f0       	ld.uh	r0,r5[0xe]
80002a24:	80 00       	ld.sh	r0,r0[0x0]
80002a26:	88 00       	ld.sh	r0,r4[0x0]
80002a28:	80 00       	ld.sh	r0,r0[0x0]
80002a2a:	89 04       	st.w	r4[0x0],r4
80002a2c:	80 00       	ld.sh	r0,r0[0x0]
80002a2e:	89 12       	st.w	r4[0x4],r2
80002a30:	80 00       	ld.sh	r0,r0[0x0]
80002a32:	89 20       	st.w	r4[0x8],r0
80002a34:	80 00       	ld.sh	r0,r0[0x0]
80002a36:	89 2e       	st.w	r4[0x8],lr

80002a38 <INTC_init_interrupts>:
/**
 * \brief Initializes the hardware interrupt controller driver.
 *
 */
void INTC_init_interrupts(void)
{
80002a38:	d4 21       	pushm	r4-r7,lr
 * \brief Init EVBA address. This operation may or may not have been done by the
 * C startup process.
 */
static __inline__ void INTC_init_evba(void)
{
  Set_system_register(AVR32_EVBA, (int32_t)&_evba );
80002a3a:	49 18       	lddpc	r8,80002a7c <INTC_init_interrupts+0x44>
80002a3c:	e3 b8 00 01 	mtsr	0x4,r8
80002a40:	49 0e       	lddpc	lr,80002a80 <INTC_init_interrupts+0x48>
80002a42:	30 07       	mov	r7,0
80002a44:	0e 94       	mov	r4,r7
			int_req < _int_handler_table[int_grp].num_irqs;
			int_req++)
		{
			/* Assign _unhandled_interrupt as the default interrupt
			handler. */
			_int_handler_table[int_grp]
80002a46:	49 0c       	lddpc	r12,80002a84 <INTC_init_interrupts+0x4c>

		/* Set the interrupt group priority register to its default
		value.
		By default, all interrupt groups are linked to the interrupt
		priority level 0 and to the interrupt vector _int0. */
		AVR32_INTC.ipr[int_grp] = IPR_INT0;
80002a48:	49 05       	lddpc	r5,80002a88 <INTC_init_interrupts+0x50>
80002a4a:	10 15       	sub	r5,r8
80002a4c:	fe 76 08 00 	mov	r6,-63488
80002a50:	c1 08       	rjmp	80002a70 <INTC_init_interrupts+0x38>
 * \brief Init EVBA address. This operation may or may not have been done by the
 * C startup process.
 */
static __inline__ void INTC_init_evba(void)
{
  Set_system_register(AVR32_EVBA, (int32_t)&_evba );
80002a52:	08 98       	mov	r8,r4
			int_req++)
		{
			/* Assign _unhandled_interrupt as the default interrupt
			handler. */
			_int_handler_table[int_grp]
				._int_line_handler_table[int_req]
80002a54:	7c 1b       	ld.w	r11,lr[0x4]

	// For all interrupt groups,
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
80002a56:	7c 0a       	ld.w	r10,lr[0x0]
			int_req < _int_handler_table[int_grp].num_irqs;
			int_req++)
		{
			/* Assign _unhandled_interrupt as the default interrupt
			handler. */
			_int_handler_table[int_grp]
80002a58:	f6 08 09 2c 	st.w	r11[r8<<0x2],r12
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
			int_req < _int_handler_table[int_grp].num_irqs;
			int_req++)
80002a5c:	2f f8       	sub	r8,-1

	// For all interrupt groups,
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
80002a5e:	10 3a       	cp.w	r10,r8
80002a60:	fe 9b ff fc 	brhi	80002a58 <INTC_init_interrupts+0x20>

		/* Set the interrupt group priority register to its default
		value.
		By default, all interrupt groups are linked to the interrupt
		priority level 0 and to the interrupt vector _int0. */
		AVR32_INTC.ipr[int_grp] = IPR_INT0;
80002a64:	ec 07 09 25 	st.w	r6[r7<<0x2],r5
	uint32_t int_grp, int_req;

	INTC_init_evba();

	// For all interrupt groups,
	for (int_grp = 0; int_grp < AVR32_INTC_NUM_INT_GRPS; int_grp++)
80002a68:	2f f7       	sub	r7,-1
80002a6a:	2f 8e       	sub	lr,-8
80002a6c:	59 47       	cp.w	r7,20
80002a6e:	c0 50       	breq	80002a78 <INTC_init_interrupts+0x40>
	{
		// For all interrupt request lines of each group,
		for (int_req = 0;
80002a70:	7c 08       	ld.w	r8,lr[0x0]
80002a72:	58 08       	cp.w	r8,0
80002a74:	ce f1       	brne	80002a52 <INTC_init_interrupts+0x1a>
80002a76:	cf 7b       	rjmp	80002a64 <INTC_init_interrupts+0x2c>
80002a78:	d8 22       	popm	r4-r7,pc
80002a7a:	00 00       	add	r0,r0
80002a7c:	80 00       	ld.sh	r0,r0[0x0]
80002a7e:	88 00       	ld.sh	r0,r4[0x0]
80002a80:	80 00       	ld.sh	r0,r0[0x0]
80002a82:	8a f0       	ld.uh	r0,r5[0xe]
80002a84:	80 00       	ld.sh	r0,r0[0x0]
80002a86:	29 b6       	sub	r6,-101
80002a88:	80 00       	ld.sh	r0,r0[0x0]
80002a8a:	89 04       	st.w	r4[0x0],r4

80002a8c <_get_interrupt_handler>:
__int_handler _get_interrupt_handler(uint32_t int_level)
{
	/* ICR3 is mapped first, ICR0 last.
	Code in exception.S puts int_level in R12 which is used by the compiler
	to pass a single argument to a function. */
	uint32_t int_grp = AVR32_INTC.icr[AVR32_INTC_INT3 - int_level];
80002a8c:	fe 78 08 00 	mov	r8,-63488
80002a90:	e0 69 00 83 	mov	r9,131
80002a94:	f2 0c 01 0c 	sub	r12,r9,r12
80002a98:	f0 0c 03 29 	ld.w	r9,r8[r12<<0x2]
	uint32_t int_req = AVR32_INTC.irr[int_grp];
80002a9c:	f2 ca ff c0 	sub	r10,r9,-64
80002aa0:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
	exception.S will provide the interrupt handler with a clean interrupt
	stack frame, with nothing more pushed onto the stack. The interrupt
	handler must manage the `rete' instruction, which can be done using
	pure assembly, inline assembly or the `__attribute__((__interrupt__))'
	C function attribute.*/
	return (int_req)
80002aa4:	58 08       	cp.w	r8,0
80002aa6:	c0 21       	brne	80002aaa <_get_interrupt_handler+0x1e>
80002aa8:	5e fd       	retal	0
		? _int_handler_table[int_grp]._int_line_handler_table[32
80002aaa:	f0 08 12 00 	clz	r8,r8
80002aae:	48 5a       	lddpc	r10,80002ac0 <_get_interrupt_handler+0x34>
80002ab0:	f4 09 00 39 	add	r9,r10,r9<<0x3
80002ab4:	f0 08 11 1f 	rsub	r8,r8,31
80002ab8:	72 19       	ld.w	r9,r9[0x4]
	exception.S will provide the interrupt handler with a clean interrupt
	stack frame, with nothing more pushed onto the stack. The interrupt
	handler must manage the `rete' instruction, which can be done using
	pure assembly, inline assembly or the `__attribute__((__interrupt__))'
	C function attribute.*/
	return (int_req)
80002aba:	f2 08 03 2c 	ld.w	r12,r9[r8<<0x2]
		? _int_handler_table[int_grp]._int_line_handler_table[32
			- clz(int_req) - 1]
		: NULL;
}
80002abe:	5e fc       	retal	r12
80002ac0:	80 00       	ld.sh	r0,r0[0x0]
80002ac2:	8a f0       	ld.uh	r0,r5[0xe]

80002ac4 <spi_selectChip>:
	while (pdFALSE == xSemaphoreTake(xSPIMutex, 20)) {
	}
#endif

	/* Assert all lines; no peripheral is selected. */
	spi->mr |= AVR32_SPI_MR_PCS_MASK;
80002ac4:	78 18       	ld.w	r8,r12[0x4]
80002ac6:	ea 18 00 0f 	orh	r8,0xf
80002aca:	99 18       	st.w	r12[0x4],r8

	if (spi->mr & AVR32_SPI_MR_PCSDEC_MASK) {
80002acc:	78 18       	ld.w	r8,r12[0x4]
80002ace:	e2 18 00 04 	andl	r8,0x4,COH
80002ad2:	c0 f0       	breq	80002af0 <spi_selectChip+0x2c>
		/* The signal is decoded; allow up to 15 chips. */
		if (chip > 14) {
80002ad4:	30 e8       	mov	r8,14
80002ad6:	f0 0b 18 00 	cp.b	r11,r8
80002ada:	e0 8b 00 19 	brhi	80002b0c <spi_selectChip+0x48>
			return SPI_ERROR_ARGUMENT;
		}

		spi->mr &= ~AVR32_SPI_MR_PCS_MASK |
80002ade:	78 18       	ld.w	r8,r12[0x4]
80002ae0:	b1 6b       	lsl	r11,0x10
80002ae2:	ea 1b ff f0 	orh	r11,0xfff0
80002ae6:	e8 1b ff ff 	orl	r11,0xffff
80002aea:	10 6b       	and	r11,r8
80002aec:	99 1b       	st.w	r12[0x4],r11
80002aee:	5e fd       	retal	0
				(chip << AVR32_SPI_MR_PCS_OFFSET);
	} else {
		if (chip > 3) {
80002af0:	30 38       	mov	r8,3
80002af2:	f0 0b 18 00 	cp.b	r11,r8
80002af6:	e0 8b 00 0b 	brhi	80002b0c <spi_selectChip+0x48>
			return SPI_ERROR_ARGUMENT;
		}

		spi->mr &= ~(1 << (AVR32_SPI_MR_PCS_OFFSET + chip));
80002afa:	78 18       	ld.w	r8,r12[0x4]
80002afc:	2f 0b       	sub	r11,-16
80002afe:	30 19       	mov	r9,1
80002b00:	f2 0b 09 4b 	lsl	r11,r9,r11
80002b04:	5c db       	com	r11
80002b06:	10 6b       	and	r11,r8
80002b08:	99 1b       	st.w	r12[0x4],r11
80002b0a:	5e fd       	retal	0
80002b0c:	30 2c       	mov	r12,2
	}

	return SPI_OK;
}
80002b0e:	5e fc       	retal	r12

80002b10 <spi_unselectChip>:

spi_status_t spi_unselectChip(volatile avr32_spi_t *spi, uint8_t chip)
{
80002b10:	e0 68 3a 98 	mov	r8,15000
	uint32_t timeout = SPI_TIMEOUT;

	while (!(spi->sr & AVR32_SPI_SR_TXEMPTY_MASK)) {
80002b14:	c0 58       	rjmp	80002b1e <spi_unselectChip+0xe>
		if (!timeout--) {
80002b16:	58 08       	cp.w	r8,0
80002b18:	c0 21       	brne	80002b1c <spi_unselectChip+0xc>
80002b1a:	5e ff       	retal	1
80002b1c:	20 18       	sub	r8,1

spi_status_t spi_unselectChip(volatile avr32_spi_t *spi, uint8_t chip)
{
	uint32_t timeout = SPI_TIMEOUT;

	while (!(spi->sr & AVR32_SPI_SR_TXEMPTY_MASK)) {
80002b1e:	78 49       	ld.w	r9,r12[0x10]
80002b20:	e2 19 02 00 	andl	r9,0x200,COH
80002b24:	cf 90       	breq	80002b16 <spi_unselectChip+0x6>
			return SPI_ERROR_TIMEOUT;
		}
	}

	/* Assert all lines; no peripheral is selected. */
	spi->mr |= AVR32_SPI_MR_PCS_MASK;
80002b26:	78 18       	ld.w	r8,r12[0x4]
80002b28:	ea 18 00 0f 	orh	r8,0xf
80002b2c:	99 18       	st.w	r12[0x4],r8

	/* Last transfer, so de-assert the current NPCS if CSAAT is set. */
	spi->cr = AVR32_SPI_CR_LASTXFER_MASK;
80002b2e:	fc 18 01 00 	movh	r8,0x100
80002b32:	99 08       	st.w	r12[0x0],r8
80002b34:	5e fd       	retal	0

80002b36 <spi_write>:
{
	return ((spi->sr & AVR32_SPI_SR_TDRE_MASK) != 0);
}

spi_status_t spi_write(volatile avr32_spi_t *spi, uint16_t data)
{
80002b36:	e0 68 3a 98 	mov	r8,15000
	uint32_t timeout = SPI_TIMEOUT;

	while (!(spi->sr & AVR32_SPI_SR_TDRE_MASK)) {
80002b3a:	c0 58       	rjmp	80002b44 <spi_write+0xe>
		if (!timeout--) {
80002b3c:	58 08       	cp.w	r8,0
80002b3e:	c0 21       	brne	80002b42 <spi_write+0xc>
80002b40:	5e ff       	retal	1
80002b42:	20 18       	sub	r8,1

spi_status_t spi_write(volatile avr32_spi_t *spi, uint16_t data)
{
	uint32_t timeout = SPI_TIMEOUT;

	while (!(spi->sr & AVR32_SPI_SR_TDRE_MASK)) {
80002b44:	78 49       	ld.w	r9,r12[0x10]
80002b46:	e2 19 00 02 	andl	r9,0x2,COH
80002b4a:	cf 90       	breq	80002b3c <spi_write+0x6>
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
		}
	}

	spi->tdr = data << AVR32_SPI_TDR_TD_OFFSET;
80002b4c:	5c 7b       	castu.h	r11
80002b4e:	99 3b       	st.w	r12[0xc],r11
80002b50:	5e fd       	retal	0

80002b52 <spi_read>:
{
	return ((spi->sr & AVR32_SPI_SR_RDRF_MASK) != 0);
}

spi_status_t spi_read(volatile avr32_spi_t *spi, uint16_t *data)
{
80002b52:	e0 68 3a 98 	mov	r8,15000
	unsigned int timeout = SPI_TIMEOUT;

	while ((spi->sr &
80002b56:	c0 58       	rjmp	80002b60 <spi_read+0xe>
			(AVR32_SPI_SR_RDRF_MASK | AVR32_SPI_SR_TXEMPTY_MASK)) !=
			(AVR32_SPI_SR_RDRF_MASK | AVR32_SPI_SR_TXEMPTY_MASK)) {
		if (!timeout--) {
80002b58:	58 08       	cp.w	r8,0
80002b5a:	c0 21       	brne	80002b5e <spi_read+0xc>
80002b5c:	5e ff       	retal	1
80002b5e:	20 18       	sub	r8,1

spi_status_t spi_read(volatile avr32_spi_t *spi, uint16_t *data)
{
	unsigned int timeout = SPI_TIMEOUT;

	while ((spi->sr &
80002b60:	78 49       	ld.w	r9,r12[0x10]
80002b62:	e2 19 02 01 	andl	r9,0x201,COH
80002b66:	e0 49 02 01 	cp.w	r9,513
80002b6a:	cf 71       	brne	80002b58 <spi_read+0x6>
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
		}
	}

	*data = spi->rdr >> AVR32_SPI_RDR_RD_OFFSET;
80002b6c:	78 28       	ld.w	r8,r12[0x8]
80002b6e:	b6 08       	st.h	r11[0x0],r8
80002b70:	5e fd       	retal	0
80002b72:	d7 03       	nop

80002b74 <_stext>:

  .global _stext
  .type _stext, @function
_stext:
  // Set initial stack pointer.
  lda.w   sp, _estack
80002b74:	e0 7d 00 00 	mov	sp,65536

  // Set up EVBA so interrupts can be enabled.
  lda.w   r0, _evba
  mtsr    AVR32_EVBA, r0
80002b78:	fe c0 a3 78 	sub	r0,pc,-23688

  // Enable the exception processing.
  csrf    AVR32_SR_EM_OFFSET
80002b7c:	e3 b0 00 01 	mtsr	0x4,r0

  // Load initialized data having a global lifetime from the data LMA.
  lda.w   r0, _data
  lda.w   r1, _edata
80002b80:	d5 53       	csrf	0x15
  cp      r0, r1
80002b82:	30 80       	mov	r0,8
  brhs    idata_load_loop_end
80002b84:	e0 61 05 18 	mov	r1,1304
  lda.w   r2, _data_lma
idata_load_loop:
  ld.d    r4, r2++
80002b88:	02 30       	cp.w	r0,r1
  st.d    r0++, r4
80002b8a:	c0 72       	brcc	80002b98 <idata_load_loop_end>
  cp      r0, r1
80002b8c:	fe c2 9a 64 	sub	r2,pc,-26012

80002b90 <idata_load_loop>:
  brlo    idata_load_loop
idata_load_loop_end:

  // Clear uninitialized data having a global lifetime in the blank static storage section.
  lda.w   r0, __bss_start
80002b90:	a5 05       	ld.d	r4,r2++
  lda.w   r1, _end
80002b92:	a1 24       	st.d	r0++,r4
  cp      r0, r1
80002b94:	02 30       	cp.w	r0,r1
  brhs    udata_clear_loop_end
80002b96:	cf d3       	brcs	80002b90 <idata_load_loop>

80002b98 <idata_load_loop_end>:
  mov     r2, 0
80002b98:	e0 60 05 18 	mov	r0,1304
  mov     r3, 0
udata_clear_loop:
  st.d    r0++, r2
80002b9c:	e0 61 06 48 	mov	r1,1608
  cp      r0, r1
  brlo    udata_clear_loop
80002ba0:	02 30       	cp.w	r0,r1
  // Safety: Set the default "return" @ to the exit routine address.
  lda.w   lr, exit
#endif

  // Start the show.
  lda.w   pc, main
80002ba2:	c0 62       	brcc	80002bae <udata_clear_loop_end>
80002ba4:	30 02       	mov	r2,0
80002ba6:	30 03       	mov	r3,0

80002ba8 <udata_clear_loop>:
80002ba8:	a1 22       	st.d	r0++,r2
80002baa:	02 30       	cp.w	r0,r1
80002bac:	cf e3       	brcs	80002ba8 <udata_clear_loop>

80002bae <udata_clear_loop_end>:
80002bae:	fe cf fe 7e 	sub	pc,pc,-386
80002bb2:	d7 03       	nop

80002bb4 <but_interrupt>:
}


__attribute__((__interrupt__))

void but_interrupt(void){
80002bb4:	d4 01       	pushm	lr
	dip204_clear_display();
80002bb6:	f0 1f 00 11 	mcall	80002bf8 <but_interrupt+0x44>
	dip204_set_cursor_position(1,1);
80002bba:	30 1b       	mov	r11,1
80002bbc:	16 9c       	mov	r12,r11
80002bbe:	f0 1f 00 10 	mcall	80002bfc <but_interrupt+0x48>
	
	if (vol_state == 0)
80002bc2:	49 08       	lddpc	r8,80002c00 <but_interrupt+0x4c>
80002bc4:	70 08       	ld.w	r8,r8[0x0]
80002bc6:	58 08       	cp.w	r8,0
80002bc8:	c0 51       	brne	80002bd2 <but_interrupt+0x1e>
	{
		vol_state = 1;
80002bca:	30 19       	mov	r9,1
80002bcc:	48 d8       	lddpc	r8,80002c00 <but_interrupt+0x4c>
80002bce:	91 09       	st.w	r8[0x0],r9
80002bd0:	c0 88       	rjmp	80002be0 <but_interrupt+0x2c>
	}
	else if (vol_state == 1)
80002bd2:	48 c8       	lddpc	r8,80002c00 <but_interrupt+0x4c>
80002bd4:	70 08       	ld.w	r8,r8[0x0]
80002bd6:	58 18       	cp.w	r8,1
80002bd8:	c0 41       	brne	80002be0 <but_interrupt+0x2c>
	{
		vol_state = 0;
80002bda:	30 09       	mov	r9,0
80002bdc:	48 98       	lddpc	r8,80002c00 <but_interrupt+0x4c>
80002bde:	91 09       	st.w	r8[0x0],r9
	}
	dip204_printf_string("Sleep: %i", vol_state);
80002be0:	48 88       	lddpc	r8,80002c00 <but_interrupt+0x4c>
80002be2:	70 08       	ld.w	r8,r8[0x0]
80002be4:	1a d8       	st.w	--sp,r8
80002be6:	48 8c       	lddpc	r12,80002c04 <but_interrupt+0x50>
80002be8:	f0 1f 00 08 	mcall	80002c08 <but_interrupt+0x54>
	gpio_clear_pin_interrupt_flag(88);
80002bec:	35 8c       	mov	r12,88
80002bee:	f0 1f 00 08 	mcall	80002c0c <but_interrupt+0x58>
80002bf2:	2f fd       	sub	sp,-4
}
80002bf4:	d4 02       	popm	lr
80002bf6:	d6 03       	rete
80002bf8:	80 00       	ld.sh	r0,r0[0x0]
80002bfa:	21 ec       	sub	r12,30
80002bfc:	80 00       	ld.sh	r0,r0[0x0]
80002bfe:	21 90       	sub	r0,25
80002c00:	00 00       	add	r0,r0
80002c02:	00 0c       	add	r12,r0
80002c04:	80 00       	ld.sh	r0,r0[0x0]
80002c06:	8b 90       	st.w	r5[0x24],r0
80002c08:	80 00       	ld.sh	r0,r0[0x0]
80002c0a:	20 f8       	sub	r8,15
80002c0c:	80 00       	ld.sh	r0,r0[0x0]
80002c0e:	29 a0       	sub	r0,-102

80002c10 <rtc_irq>:



__attribute__((__interrupt__))

void rtc_irq(void){
80002c10:	d4 01       	pushm	lr
	static int led_state = 0;
	
	if (vol_state == 1){
80002c12:	48 e8       	lddpc	r8,80002c48 <rtc_irq+0x38>
80002c14:	70 08       	ld.w	r8,r8[0x0]
80002c16:	58 18       	cp.w	r8,1
80002c18:	c1 21       	brne	80002c3c <rtc_irq+0x2c>
		if (led_state == 0) {
80002c1a:	48 d8       	lddpc	r8,80002c4c <rtc_irq+0x3c>
80002c1c:	70 08       	ld.w	r8,r8[0x0]
80002c1e:	58 08       	cp.w	r8,0
80002c20:	c0 81       	brne	80002c30 <rtc_irq+0x20>
			LED_Display(LED0);
80002c22:	30 1c       	mov	r12,1
80002c24:	f0 1f 00 0b 	mcall	80002c50 <rtc_irq+0x40>
			led_state = 1;
80002c28:	30 19       	mov	r9,1
80002c2a:	48 98       	lddpc	r8,80002c4c <rtc_irq+0x3c>
80002c2c:	91 09       	st.w	r8[0x0],r9
80002c2e:	c0 78       	rjmp	80002c3c <rtc_irq+0x2c>
		}
		else {
			LED_Display(LED1);
80002c30:	30 2c       	mov	r12,2
80002c32:	f0 1f 00 08 	mcall	80002c50 <rtc_irq+0x40>
			led_state = 0;
80002c36:	30 09       	mov	r9,0
80002c38:	48 58       	lddpc	r8,80002c4c <rtc_irq+0x3c>
80002c3a:	91 09       	st.w	r8[0x0],r9
		}
	}
	rtc_clear_interrupt(&AVR32_RTC);
80002c3c:	fe 7c 0d 00 	mov	r12,-62208
80002c40:	f0 1f 00 05 	mcall	80002c54 <rtc_irq+0x44>
}
80002c44:	d4 02       	popm	lr
80002c46:	d6 03       	rete
80002c48:	00 00       	add	r0,r0
80002c4a:	00 0c       	add	r12,r0
80002c4c:	00 00       	add	r0,r0
80002c4e:	06 04       	add	r4,r3
80002c50:	80 00       	ld.sh	r0,r0[0x0]
80002c52:	27 b4       	sub	r4,123
80002c54:	80 00       	ld.sh	r0,r0[0x0]
80002c56:	26 44       	sub	r4,100

80002c58 <set_interrupts>:
	dip204_hide_cursor();
	*/
	while(1){}
}

void set_interrupts(unsigned int ticks_to_interrupt, unsigned int rtcsel){
80002c58:	eb cd 40 c0 	pushm	r6-r7,lr
80002c5c:	18 97       	mov	r7,r12
80002c5e:	16 96       	mov	r6,r11
	
	Disable_global_interrupt();
80002c60:	d3 03       	ssrf	0x10
	INTC_init_interrupts();
80002c62:	f0 1f 00 16 	mcall	80002cb8 <set_interrupts+0x60>

	// Register the RTC interrupt handler to the interrupt controller.
	INTC_register_interrupt(&rtc_irq, AVR32_RTC_IRQ, AVR32_INTC_INT0);
80002c66:	30 0a       	mov	r10,0
80002c68:	32 8b       	mov	r11,40
80002c6a:	49 5c       	lddpc	r12,80002cbc <set_interrupts+0x64>
80002c6c:	f0 1f 00 15 	mcall	80002cc0 <set_interrupts+0x68>
	rtc_init(&AVR32_RTC, RTC_OSC_32KHZ, rtcsel);
80002c70:	f5 d6 c0 08 	bfextu	r10,r6,0x0,0x8
80002c74:	30 1b       	mov	r11,1
80002c76:	fe 7c 0d 00 	mov	r12,-62208
80002c7a:	f0 1f 00 13 	mcall	80002cc4 <set_interrupts+0x6c>
	// Set top value to 0 to generate an interrupt every seconds */
	rtc_set_top_value(&AVR32_RTC, ticks_to_interrupt);
80002c7e:	0e 9b       	mov	r11,r7
80002c80:	fe 7c 0d 00 	mov	r12,-62208
80002c84:	f0 1f 00 11 	mcall	80002cc8 <set_interrupts+0x70>
	// Enable the interrupts
	rtc_enable_interrupt(&AVR32_RTC);
80002c88:	fe 7c 0d 00 	mov	r12,-62208
80002c8c:	f0 1f 00 10 	mcall	80002ccc <set_interrupts+0x74>
	// Enable the RTC
	rtc_enable(&AVR32_RTC);
80002c90:	fe 7c 0d 00 	mov	r12,-62208
80002c94:	f0 1f 00 0f 	mcall	80002cd0 <set_interrupts+0x78>
	
	// Button interrupt
	INTC_register_interrupt(&but_interrupt, (AVR32_GPIO_IRQ_0+88/8), AVR32_INTC_INT0);
80002c98:	30 0a       	mov	r10,0
80002c9a:	34 bb       	mov	r11,75
80002c9c:	48 ec       	lddpc	r12,80002cd4 <set_interrupts+0x7c>
80002c9e:	f0 1f 00 09 	mcall	80002cc0 <set_interrupts+0x68>
	gpio_enable_pin_glitch_filter(88);
80002ca2:	35 8c       	mov	r12,88
80002ca4:	f0 1f 00 0d 	mcall	80002cd8 <set_interrupts+0x80>
	gpio_enable_pin_interrupt(88, GPIO_FALLING_EDGE);
80002ca8:	30 2b       	mov	r11,2
80002caa:	35 8c       	mov	r12,88
80002cac:	f0 1f 00 0c 	mcall	80002cdc <set_interrupts+0x84>
	
	Enable_global_interrupt();
80002cb0:	d5 03       	csrf	0x10
}
80002cb2:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002cb6:	00 00       	add	r0,r0
80002cb8:	80 00       	ld.sh	r0,r0[0x0]
80002cba:	2a 38       	sub	r8,-93
80002cbc:	80 00       	ld.sh	r0,r0[0x0]
80002cbe:	2c 10       	sub	r0,-63
80002cc0:	80 00       	ld.sh	r0,r0[0x0]
80002cc2:	29 b8       	sub	r8,-101
80002cc4:	80 00       	ld.sh	r0,r0[0x0]
80002cc6:	26 64       	sub	r4,102
80002cc8:	80 00       	ld.sh	r0,r0[0x0]
80002cca:	26 20       	sub	r0,98
80002ccc:	80 00       	ld.sh	r0,r0[0x0]
80002cce:	26 18       	sub	r8,97
80002cd0:	80 00       	ld.sh	r0,r0[0x0]
80002cd2:	25 f4       	sub	r4,95
80002cd4:	80 00       	ld.sh	r0,r0[0x0]
80002cd6:	2b b4       	sub	r4,-69
80002cd8:	80 00       	ld.sh	r0,r0[0x0]
80002cda:	29 44       	sub	r4,-108
80002cdc:	80 00       	ld.sh	r0,r0[0x0]
80002cde:	29 5a       	sub	r10,-107

80002ce0 <set_cpu_freq>:
	dip204_hide_cursor();
	*/
	blink_loop();
}

void set_cpu_freq(int cpu_freq, int bus_freq){
80002ce0:	d4 01       	pushm	lr
80002ce2:	20 4d       	sub	sp,16
	// Define struct
	// Input parameters in MHz
	pm_freq_param_t freq_parameters;
	freq_parameters.cpu_f = cpu_freq*1000000;
80002ce4:	ee 78 42 40 	mov	r8,1000000
80002ce8:	b1 3c       	mul	r12,r8
80002cea:	50 0c       	stdsp	sp[0x0],r12
	freq_parameters.pba_f = bus_freq*1000000;
80002cec:	f6 08 02 48 	mul	r8,r11,r8
80002cf0:	50 18       	stdsp	sp[0x4],r8
	freq_parameters.osc0_f = FOSC0;
80002cf2:	e0 68 1b 00 	mov	r8,6912
80002cf6:	ea 18 00 b7 	orh	r8,0xb7
80002cfa:	50 28       	stdsp	sp[0x8],r8
	freq_parameters.osc0_startup = OSC0_STARTUP;
80002cfc:	30 38       	mov	r8,3
80002cfe:	50 38       	stdsp	sp[0xc],r8
	// Set frequency
	pm_configure_clocks(&freq_parameters);
80002d00:	1a 9c       	mov	r12,sp
80002d02:	f0 1f 00 03 	mcall	80002d0c <set_cpu_freq+0x2c>
}
80002d06:	2f cd       	sub	sp,-16
80002d08:	d8 02       	popm	pc
80002d0a:	00 00       	add	r0,r0
80002d0c:	80 00       	ld.sh	r0,r0[0x0]
80002d0e:	23 f4       	sub	r4,63

80002d10 <part4b>:
			software_delay();
		}
	}
}

void part4b(void){
80002d10:	d4 01       	pushm	lr
	set_cpu_freq(66,6);
80002d12:	30 6b       	mov	r11,6
80002d14:	34 2c       	mov	r12,66
80002d16:	f0 1f 00 05 	mcall	80002d28 <part4b+0x18>
	set_interrupts(0, 14);
80002d1a:	30 eb       	mov	r11,14
80002d1c:	30 0c       	mov	r12,0
80002d1e:	f0 1f 00 04 	mcall	80002d2c <part4b+0x1c>
	
	while(1){SLEEP(AVR32_PM_SMODE_STOP)}
80002d22:	e9 b0 00 03 	sleep	0x3
80002d26:	cf eb       	rjmp	80002d22 <part4b+0x12>
80002d28:	80 00       	ld.sh	r0,r0[0x0]
80002d2a:	2c e0       	sub	r0,-50
80002d2c:	80 00       	ld.sh	r0,r0[0x0]
80002d2e:	2c 58       	sub	r8,-59

80002d30 <main>:
}


int main(void) {
80002d30:	d4 01       	pushm	lr
	board_init();
80002d32:	f0 1f 00 03 	mcall	80002d3c <main+0xc>
	// Blink leds with interrupt
	//part3(12,6);
	// Use sleep mode
	//part4();
	// Test different sleep modes at 66 MHz
	part4b();
80002d36:	f0 1f 00 03 	mcall	80002d40 <main+0x10>
	
	return 0;
	
80002d3a:	d8 0a       	popm	pc,r12=0
80002d3c:	80 00       	ld.sh	r0,r0[0x0]
80002d3e:	26 e4       	sub	r4,110
80002d40:	80 00       	ld.sh	r0,r0[0x0]
80002d42:	2d 10       	sub	r0,-47

80002d44 <memcpy>:
80002d44:	58 8a       	cp.w	r10,8
80002d46:	c2 f5       	brlt	80002da4 <memcpy+0x60>
80002d48:	f9 eb 10 09 	or	r9,r12,r11
80002d4c:	e2 19 00 03 	andl	r9,0x3,COH
80002d50:	e0 81 00 97 	brne	80002e7e <memcpy+0x13a>
80002d54:	e0 4a 00 20 	cp.w	r10,32
80002d58:	c3 b4       	brge	80002dce <memcpy+0x8a>
80002d5a:	f4 08 14 02 	asr	r8,r10,0x2
80002d5e:	f0 09 11 08 	rsub	r9,r8,8
80002d62:	fe 09 00 2f 	add	pc,pc,r9<<0x2
80002d66:	76 69       	ld.w	r9,r11[0x18]
80002d68:	99 69       	st.w	r12[0x18],r9
80002d6a:	76 59       	ld.w	r9,r11[0x14]
80002d6c:	99 59       	st.w	r12[0x14],r9
80002d6e:	76 49       	ld.w	r9,r11[0x10]
80002d70:	99 49       	st.w	r12[0x10],r9
80002d72:	76 39       	ld.w	r9,r11[0xc]
80002d74:	99 39       	st.w	r12[0xc],r9
80002d76:	76 29       	ld.w	r9,r11[0x8]
80002d78:	99 29       	st.w	r12[0x8],r9
80002d7a:	76 19       	ld.w	r9,r11[0x4]
80002d7c:	99 19       	st.w	r12[0x4],r9
80002d7e:	76 09       	ld.w	r9,r11[0x0]
80002d80:	99 09       	st.w	r12[0x0],r9
80002d82:	f6 08 00 2b 	add	r11,r11,r8<<0x2
80002d86:	f8 08 00 28 	add	r8,r12,r8<<0x2
80002d8a:	e0 1a 00 03 	andl	r10,0x3
80002d8e:	f4 0a 11 04 	rsub	r10,r10,4
80002d92:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80002d96:	17 a9       	ld.ub	r9,r11[0x2]
80002d98:	b0 a9       	st.b	r8[0x2],r9
80002d9a:	17 99       	ld.ub	r9,r11[0x1]
80002d9c:	b0 99       	st.b	r8[0x1],r9
80002d9e:	17 89       	ld.ub	r9,r11[0x0]
80002da0:	b0 89       	st.b	r8[0x0],r9
80002da2:	5e fc       	retal	r12
80002da4:	f4 0a 11 09 	rsub	r10,r10,9
80002da8:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80002dac:	17 f9       	ld.ub	r9,r11[0x7]
80002dae:	b8 f9       	st.b	r12[0x7],r9
80002db0:	17 e9       	ld.ub	r9,r11[0x6]
80002db2:	b8 e9       	st.b	r12[0x6],r9
80002db4:	17 d9       	ld.ub	r9,r11[0x5]
80002db6:	b8 d9       	st.b	r12[0x5],r9
80002db8:	17 c9       	ld.ub	r9,r11[0x4]
80002dba:	b8 c9       	st.b	r12[0x4],r9
80002dbc:	17 b9       	ld.ub	r9,r11[0x3]
80002dbe:	b8 b9       	st.b	r12[0x3],r9
80002dc0:	17 a9       	ld.ub	r9,r11[0x2]
80002dc2:	b8 a9       	st.b	r12[0x2],r9
80002dc4:	17 99       	ld.ub	r9,r11[0x1]
80002dc6:	b8 99       	st.b	r12[0x1],r9
80002dc8:	17 89       	ld.ub	r9,r11[0x0]
80002dca:	b8 89       	st.b	r12[0x0],r9
80002dcc:	5e fc       	retal	r12
80002dce:	eb cd 40 c0 	pushm	r6-r7,lr
80002dd2:	18 99       	mov	r9,r12
80002dd4:	22 0a       	sub	r10,32
80002dd6:	b7 07       	ld.d	r6,r11++
80002dd8:	b3 26       	st.d	r9++,r6
80002dda:	b7 07       	ld.d	r6,r11++
80002ddc:	b3 26       	st.d	r9++,r6
80002dde:	b7 07       	ld.d	r6,r11++
80002de0:	b3 26       	st.d	r9++,r6
80002de2:	b7 07       	ld.d	r6,r11++
80002de4:	b3 26       	st.d	r9++,r6
80002de6:	22 0a       	sub	r10,32
80002de8:	cf 74       	brge	80002dd6 <memcpy+0x92>
80002dea:	2f 0a       	sub	r10,-16
80002dec:	c0 65       	brlt	80002df8 <memcpy+0xb4>
80002dee:	b7 07       	ld.d	r6,r11++
80002df0:	b3 26       	st.d	r9++,r6
80002df2:	b7 07       	ld.d	r6,r11++
80002df4:	b3 26       	st.d	r9++,r6
80002df6:	21 0a       	sub	r10,16
80002df8:	5c 3a       	neg	r10
80002dfa:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
80002dfe:	d7 03       	nop
80002e00:	d7 03       	nop
80002e02:	f7 36 00 0e 	ld.ub	r6,r11[14]
80002e06:	f3 66 00 0e 	st.b	r9[14],r6
80002e0a:	f7 36 00 0d 	ld.ub	r6,r11[13]
80002e0e:	f3 66 00 0d 	st.b	r9[13],r6
80002e12:	f7 36 00 0c 	ld.ub	r6,r11[12]
80002e16:	f3 66 00 0c 	st.b	r9[12],r6
80002e1a:	f7 36 00 0b 	ld.ub	r6,r11[11]
80002e1e:	f3 66 00 0b 	st.b	r9[11],r6
80002e22:	f7 36 00 0a 	ld.ub	r6,r11[10]
80002e26:	f3 66 00 0a 	st.b	r9[10],r6
80002e2a:	f7 36 00 09 	ld.ub	r6,r11[9]
80002e2e:	f3 66 00 09 	st.b	r9[9],r6
80002e32:	f7 36 00 08 	ld.ub	r6,r11[8]
80002e36:	f3 66 00 08 	st.b	r9[8],r6
80002e3a:	f7 36 00 07 	ld.ub	r6,r11[7]
80002e3e:	f3 66 00 07 	st.b	r9[7],r6
80002e42:	f7 36 00 06 	ld.ub	r6,r11[6]
80002e46:	f3 66 00 06 	st.b	r9[6],r6
80002e4a:	f7 36 00 05 	ld.ub	r6,r11[5]
80002e4e:	f3 66 00 05 	st.b	r9[5],r6
80002e52:	f7 36 00 04 	ld.ub	r6,r11[4]
80002e56:	f3 66 00 04 	st.b	r9[4],r6
80002e5a:	f7 36 00 03 	ld.ub	r6,r11[3]
80002e5e:	f3 66 00 03 	st.b	r9[3],r6
80002e62:	f7 36 00 02 	ld.ub	r6,r11[2]
80002e66:	f3 66 00 02 	st.b	r9[2],r6
80002e6a:	f7 36 00 01 	ld.ub	r6,r11[1]
80002e6e:	f3 66 00 01 	st.b	r9[1],r6
80002e72:	f7 36 00 00 	ld.ub	r6,r11[0]
80002e76:	f3 66 00 00 	st.b	r9[0],r6
80002e7a:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002e7e:	20 1a       	sub	r10,1
80002e80:	f6 0a 07 09 	ld.ub	r9,r11[r10]
80002e84:	f8 0a 0b 09 	st.b	r12[r10],r9
80002e88:	cf b1       	brne	80002e7e <memcpy+0x13a>
80002e8a:	5e fc       	retal	r12

80002e8c <_vsprintf_r>:
80002e8c:	d4 01       	pushm	lr
80002e8e:	21 7d       	sub	sp,92
80002e90:	e0 68 ff ff 	mov	r8,65535
80002e94:	ea 18 7f ff 	orh	r8,0x7fff
80002e98:	50 58       	stdsp	sp[0x14],r8
80002e9a:	50 28       	stdsp	sp[0x8],r8
80002e9c:	e0 68 02 08 	mov	r8,520
80002ea0:	ba 68       	st.h	sp[0xc],r8
80002ea2:	3f f8       	mov	r8,-1
80002ea4:	50 4b       	stdsp	sp[0x10],r11
80002ea6:	50 0b       	stdsp	sp[0x0],r11
80002ea8:	ba 78       	st.h	sp[0xe],r8
80002eaa:	1a 9b       	mov	r11,sp
80002eac:	ca 8d       	rcall	800031fc <_vfprintf_r>
80002eae:	30 09       	mov	r9,0
80002eb0:	40 08       	lddsp	r8,sp[0x0]
80002eb2:	b0 89       	st.b	r8[0x0],r9
80002eb4:	2e 9d       	sub	sp,-92
80002eb6:	d8 02       	popm	pc

80002eb8 <vsprintf>:
80002eb8:	d4 01       	pushm	lr
80002eba:	e0 68 01 00 	mov	r8,256
80002ebe:	14 99       	mov	r9,r10
80002ec0:	16 9a       	mov	r10,r11
80002ec2:	18 9b       	mov	r11,r12
80002ec4:	70 0c       	ld.w	r12,r8[0x0]
80002ec6:	ce 3f       	rcall	80002e8c <_vsprintf_r>
80002ec8:	d8 02       	popm	pc
80002eca:	d7 03       	nop

80002ecc <get_arg>:
80002ecc:	d4 31       	pushm	r0-r7,lr
80002ece:	20 8d       	sub	sp,32
80002ed0:	fa c4 ff bc 	sub	r4,sp,-68
80002ed4:	50 4b       	stdsp	sp[0x10],r11
80002ed6:	68 2e       	ld.w	lr,r4[0x8]
80002ed8:	50 58       	stdsp	sp[0x14],r8
80002eda:	12 96       	mov	r6,r9
80002edc:	7c 0b       	ld.w	r11,lr[0x0]
80002ede:	70 05       	ld.w	r5,r8[0x0]
80002ee0:	50 6e       	stdsp	sp[0x18],lr
80002ee2:	58 0b       	cp.w	r11,0
80002ee4:	f4 0b 17 00 	moveq	r11,r10
80002ee8:	68 03       	ld.w	r3,r4[0x0]
80002eea:	68 11       	ld.w	r1,r4[0x4]
80002eec:	40 49       	lddsp	r9,sp[0x10]
80002eee:	30 08       	mov	r8,0
80002ef0:	c2 89       	rjmp	80003140 <get_arg+0x274>
80002ef2:	2f fb       	sub	r11,-1
80002ef4:	32 5c       	mov	r12,37
80002ef6:	17 8a       	ld.ub	r10,r11[0x0]
80002ef8:	f8 0a 18 00 	cp.b	r10,r12
80002efc:	5f 1e       	srne	lr
80002efe:	f0 0a 18 00 	cp.b	r10,r8
80002f02:	5f 1c       	srne	r12
80002f04:	fd ec 00 0c 	and	r12,lr,r12
80002f08:	f0 0c 18 00 	cp.b	r12,r8
80002f0c:	cf 31       	brne	80002ef2 <get_arg+0x26>
80002f0e:	58 0a       	cp.w	r10,0
80002f10:	e0 80 01 25 	breq	8000315a <get_arg+0x28e>
80002f14:	30 0c       	mov	r12,0
80002f16:	3f fa       	mov	r10,-1
80002f18:	18 90       	mov	r0,r12
80002f1a:	50 3a       	stdsp	sp[0xc],r10
80002f1c:	18 94       	mov	r4,r12
80002f1e:	18 92       	mov	r2,r12
80002f20:	f8 0c 00 3c 	add	r12,r12,r12<<0x3
80002f24:	16 97       	mov	r7,r11
80002f26:	50 7c       	stdsp	sp[0x1c],r12
80002f28:	fe cc a0 b0 	sub	r12,pc,-24400
80002f2c:	0f 3a       	ld.ub	r10,r7++
80002f2e:	f8 0a 07 0e 	ld.ub	lr,r12[r10]
80002f32:	40 7c       	lddsp	r12,sp[0x1c]
80002f34:	1c 0c       	add	r12,lr
80002f36:	fe ce a1 86 	sub	lr,pc,-24186
80002f3a:	fc 0c 07 0e 	ld.ub	lr,lr[r12]
80002f3e:	20 1e       	sub	lr,1
80002f40:	50 0e       	stdsp	sp[0x0],lr
80002f42:	fe ce a1 fe 	sub	lr,pc,-24066
80002f46:	fc 0c 07 0c 	ld.ub	r12,lr[r12]
80002f4a:	50 7c       	stdsp	sp[0x1c],r12
80002f4c:	40 0c       	lddsp	r12,sp[0x0]
80002f4e:	58 7c       	cp.w	r12,7
80002f50:	e0 8b 00 f1 	brhi	80003132 <get_arg+0x266>
80002f54:	fe ce a3 b0 	sub	lr,pc,-23632
80002f58:	fc 0c 03 2f 	ld.w	pc,lr[r12<<0x2]
80002f5c:	36 8b       	mov	r11,104
80002f5e:	f6 0a 18 00 	cp.b	r10,r11
80002f62:	e0 80 00 e8 	breq	80003132 <get_arg+0x266>
80002f66:	37 1b       	mov	r11,113
80002f68:	f6 0a 18 00 	cp.b	r10,r11
80002f6c:	c0 70       	breq	80002f7a <get_arg+0xae>
80002f6e:	34 cb       	mov	r11,76
80002f70:	f6 0a 18 00 	cp.b	r10,r11
80002f74:	c0 51       	brne	80002f7e <get_arg+0xb2>
80002f76:	a3 b4       	sbr	r4,0x3
80002f78:	cd d8       	rjmp	80003132 <get_arg+0x266>
80002f7a:	a5 b4       	sbr	r4,0x5
80002f7c:	cd b8       	rjmp	80003132 <get_arg+0x266>
80002f7e:	08 9a       	mov	r10,r4
80002f80:	0e 9b       	mov	r11,r7
80002f82:	a5 aa       	sbr	r10,0x4
80002f84:	17 3c       	ld.ub	r12,r11++
80002f86:	a5 b4       	sbr	r4,0x5
80002f88:	36 ce       	mov	lr,108
80002f8a:	fc 0c 18 00 	cp.b	r12,lr
80002f8e:	e0 80 00 d3 	breq	80003134 <get_arg+0x268>
80002f92:	14 94       	mov	r4,r10
80002f94:	cc f8       	rjmp	80003132 <get_arg+0x266>
80002f96:	eb d5 c0 05 	bfextu	r5,r5,0x0,0x5
80002f9a:	36 7c       	mov	r12,103
80002f9c:	f8 0a 18 00 	cp.b	r10,r12
80002fa0:	e0 8b 00 27 	brhi	80002fee <get_arg+0x122>
80002fa4:	36 5b       	mov	r11,101
80002fa6:	f6 0a 18 00 	cp.b	r10,r11
80002faa:	c4 82       	brcc	8000303a <get_arg+0x16e>
80002fac:	34 fb       	mov	r11,79
80002fae:	f6 0a 18 00 	cp.b	r10,r11
80002fb2:	c4 80       	breq	80003042 <get_arg+0x176>
80002fb4:	e0 8b 00 0c 	brhi	80002fcc <get_arg+0x100>
80002fb8:	34 5b       	mov	r11,69
80002fba:	f6 0a 18 00 	cp.b	r10,r11
80002fbe:	c3 e0       	breq	8000303a <get_arg+0x16e>
80002fc0:	34 7b       	mov	r11,71
80002fc2:	f6 0a 18 00 	cp.b	r10,r11
80002fc6:	c3 a0       	breq	8000303a <get_arg+0x16e>
80002fc8:	34 4b       	mov	r11,68
80002fca:	c0 88       	rjmp	80002fda <get_arg+0x10e>
80002fcc:	35 8b       	mov	r11,88
80002fce:	f6 0a 18 00 	cp.b	r10,r11
80002fd2:	c2 c0       	breq	8000302a <get_arg+0x15e>
80002fd4:	e0 8b 00 07 	brhi	80002fe2 <get_arg+0x116>
80002fd8:	35 5b       	mov	r11,85
80002fda:	f6 0a 18 00 	cp.b	r10,r11
80002fde:	c3 51       	brne	80003048 <get_arg+0x17c>
80002fe0:	c3 18       	rjmp	80003042 <get_arg+0x176>
80002fe2:	36 3b       	mov	r11,99
80002fe4:	f6 0a 18 00 	cp.b	r10,r11
80002fe8:	c2 f0       	breq	80003046 <get_arg+0x17a>
80002fea:	36 4b       	mov	r11,100
80002fec:	c0 e8       	rjmp	80003008 <get_arg+0x13c>
80002fee:	37 0b       	mov	r11,112
80002ff0:	f6 0a 18 00 	cp.b	r10,r11
80002ff4:	c2 50       	breq	8000303e <get_arg+0x172>
80002ff6:	e0 8b 00 0d 	brhi	80003010 <get_arg+0x144>
80002ffa:	36 eb       	mov	r11,110
80002ffc:	f6 0a 18 00 	cp.b	r10,r11
80003000:	c1 f0       	breq	8000303e <get_arg+0x172>
80003002:	e0 8b 00 14 	brhi	8000302a <get_arg+0x15e>
80003006:	36 9b       	mov	r11,105
80003008:	f6 0a 18 00 	cp.b	r10,r11
8000300c:	c1 e1       	brne	80003048 <get_arg+0x17c>
8000300e:	c0 e8       	rjmp	8000302a <get_arg+0x15e>
80003010:	37 5b       	mov	r11,117
80003012:	f6 0a 18 00 	cp.b	r10,r11
80003016:	c0 a0       	breq	8000302a <get_arg+0x15e>
80003018:	37 8b       	mov	r11,120
8000301a:	f6 0a 18 00 	cp.b	r10,r11
8000301e:	c0 60       	breq	8000302a <get_arg+0x15e>
80003020:	37 3b       	mov	r11,115
80003022:	f6 0a 18 00 	cp.b	r10,r11
80003026:	c1 11       	brne	80003048 <get_arg+0x17c>
80003028:	c0 b8       	rjmp	8000303e <get_arg+0x172>
8000302a:	ed b4 00 04 	bld	r4,0x4
8000302e:	c0 a0       	breq	80003042 <get_arg+0x176>
80003030:	ed b4 00 05 	bld	r4,0x5
80003034:	c0 91       	brne	80003046 <get_arg+0x17a>
80003036:	30 20       	mov	r0,2
80003038:	c0 88       	rjmp	80003048 <get_arg+0x17c>
8000303a:	30 40       	mov	r0,4
8000303c:	c0 68       	rjmp	80003048 <get_arg+0x17c>
8000303e:	30 30       	mov	r0,3
80003040:	c0 48       	rjmp	80003048 <get_arg+0x17c>
80003042:	30 10       	mov	r0,1
80003044:	c0 28       	rjmp	80003048 <get_arg+0x17c>
80003046:	30 00       	mov	r0,0
80003048:	40 3b       	lddsp	r11,sp[0xc]
8000304a:	5b fb       	cp.w	r11,-1
8000304c:	c0 40       	breq	80003054 <get_arg+0x188>
8000304e:	e2 0b 09 20 	st.w	r1[r11<<0x2],r0
80003052:	c7 08       	rjmp	80003132 <get_arg+0x266>
80003054:	58 60       	cp.w	r0,6
80003056:	e0 8b 00 6e 	brhi	80003132 <get_arg+0x266>
8000305a:	6c 0a       	ld.w	r10,r6[0x0]
8000305c:	ea cc ff ff 	sub	r12,r5,-1
80003060:	fe ce a4 9c 	sub	lr,pc,-23396
80003064:	fc 00 03 2f 	ld.w	pc,lr[r0<<0x2]
80003068:	f4 cb ff f8 	sub	r11,r10,-8
8000306c:	8d 0b       	st.w	r6[0x0],r11
8000306e:	f4 ea 00 00 	ld.d	r10,r10[0]
80003072:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
80003076:	c0 f8       	rjmp	80003094 <get_arg+0x1c8>
80003078:	f4 cb ff fc 	sub	r11,r10,-4
8000307c:	8d 0b       	st.w	r6[0x0],r11
8000307e:	74 0a       	ld.w	r10,r10[0x0]
80003080:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
80003084:	c0 88       	rjmp	80003094 <get_arg+0x1c8>
80003086:	f4 cb ff f8 	sub	r11,r10,-8
8000308a:	8d 0b       	st.w	r6[0x0],r11
8000308c:	f4 ea 00 00 	ld.d	r10,r10[0]
80003090:	e6 05 08 3a 	st.d	r3[r5<<0x3],r10
80003094:	0e 9b       	mov	r11,r7
80003096:	18 95       	mov	r5,r12
80003098:	c4 e8       	rjmp	80003134 <get_arg+0x268>
8000309a:	62 0a       	ld.w	r10,r1[0x0]
8000309c:	5b fa       	cp.w	r10,-1
8000309e:	c0 b1       	brne	800030b4 <get_arg+0x1e8>
800030a0:	50 19       	stdsp	sp[0x4],r9
800030a2:	50 28       	stdsp	sp[0x8],r8
800030a4:	e0 6a 00 80 	mov	r10,128
800030a8:	30 0b       	mov	r11,0
800030aa:	02 9c       	mov	r12,r1
800030ac:	e0 a0 1d 78 	rcall	80006b9c <memset>
800030b0:	40 28       	lddsp	r8,sp[0x8]
800030b2:	40 19       	lddsp	r9,sp[0x4]
800030b4:	e4 cc 00 01 	sub	r12,r2,1
800030b8:	0e 9b       	mov	r11,r7
800030ba:	50 3c       	stdsp	sp[0xc],r12
800030bc:	f2 0c 0c 49 	max	r9,r9,r12
800030c0:	c3 a8       	rjmp	80003134 <get_arg+0x268>
800030c2:	62 0a       	ld.w	r10,r1[0x0]
800030c4:	5b fa       	cp.w	r10,-1
800030c6:	c0 b1       	brne	800030dc <get_arg+0x210>
800030c8:	50 19       	stdsp	sp[0x4],r9
800030ca:	50 28       	stdsp	sp[0x8],r8
800030cc:	e0 6a 00 80 	mov	r10,128
800030d0:	30 0b       	mov	r11,0
800030d2:	02 9c       	mov	r12,r1
800030d4:	e0 a0 1d 64 	rcall	80006b9c <memset>
800030d8:	40 28       	lddsp	r8,sp[0x8]
800030da:	40 19       	lddsp	r9,sp[0x4]
800030dc:	20 12       	sub	r2,1
800030de:	30 0a       	mov	r10,0
800030e0:	0e 9b       	mov	r11,r7
800030e2:	e2 02 09 2a 	st.w	r1[r2<<0x2],r10
800030e6:	f2 02 0c 49 	max	r9,r9,r2
800030ea:	c2 58       	rjmp	80003134 <get_arg+0x268>
800030ec:	16 97       	mov	r7,r11
800030ee:	6c 0a       	ld.w	r10,r6[0x0]
800030f0:	f4 cb ff fc 	sub	r11,r10,-4
800030f4:	8d 0b       	st.w	r6[0x0],r11
800030f6:	74 0a       	ld.w	r10,r10[0x0]
800030f8:	0e 9b       	mov	r11,r7
800030fa:	e6 05 09 3a 	st.w	r3[r5<<0x3],r10
800030fe:	2f f5       	sub	r5,-1
80003100:	c1 a8       	rjmp	80003134 <get_arg+0x268>
80003102:	f4 c2 00 30 	sub	r2,r10,48
80003106:	c0 68       	rjmp	80003112 <get_arg+0x246>
80003108:	e4 02 00 22 	add	r2,r2,r2<<0x2
8000310c:	2f f7       	sub	r7,-1
8000310e:	f4 02 00 12 	add	r2,r10,r2<<0x1
80003112:	0f 8a       	ld.ub	r10,r7[0x0]
80003114:	58 0a       	cp.w	r10,0
80003116:	c0 e0       	breq	80003132 <get_arg+0x266>
80003118:	23 0a       	sub	r10,48
8000311a:	58 9a       	cp.w	r10,9
8000311c:	fe 98 ff f6 	brls	80003108 <get_arg+0x23c>
80003120:	c0 98       	rjmp	80003132 <get_arg+0x266>
80003122:	2f f7       	sub	r7,-1
80003124:	0f 8a       	ld.ub	r10,r7[0x0]
80003126:	58 0a       	cp.w	r10,0
80003128:	c0 50       	breq	80003132 <get_arg+0x266>
8000312a:	23 0a       	sub	r10,48
8000312c:	58 9a       	cp.w	r10,9
8000312e:	fe 98 ff fa 	brls	80003122 <get_arg+0x256>
80003132:	0e 9b       	mov	r11,r7
80003134:	40 7c       	lddsp	r12,sp[0x1c]
80003136:	30 ba       	mov	r10,11
80003138:	f4 0c 18 00 	cp.b	r12,r10
8000313c:	fe 91 fe f2 	brne	80002f20 <get_arg+0x54>
80003140:	40 42       	lddsp	r2,sp[0x10]
80003142:	17 8c       	ld.ub	r12,r11[0x0]
80003144:	0a 32       	cp.w	r2,r5
80003146:	5f 4a       	srge	r10
80003148:	f0 0c 18 00 	cp.b	r12,r8
8000314c:	5f 1c       	srne	r12
8000314e:	f9 ea 00 0a 	and	r10,r12,r10
80003152:	f0 0a 18 00 	cp.b	r10,r8
80003156:	fe 91 fe cf 	brne	80002ef4 <get_arg+0x28>
8000315a:	30 08       	mov	r8,0
8000315c:	40 4e       	lddsp	lr,sp[0x10]
8000315e:	17 8a       	ld.ub	r10,r11[0x0]
80003160:	e2 05 00 21 	add	r1,r1,r5<<0x2
80003164:	f0 0a 18 00 	cp.b	r10,r8
80003168:	fc 09 17 10 	movne	r9,lr
8000316c:	e6 05 00 38 	add	r8,r3,r5<<0x3
80003170:	06 9e       	mov	lr,r3
80003172:	c2 a8       	rjmp	800031c6 <get_arg+0x2fa>
80003174:	62 0a       	ld.w	r10,r1[0x0]
80003176:	58 3a       	cp.w	r10,3
80003178:	c1 e0       	breq	800031b4 <get_arg+0x2e8>
8000317a:	e0 89 00 07 	brgt	80003188 <get_arg+0x2bc>
8000317e:	58 1a       	cp.w	r10,1
80003180:	c1 a0       	breq	800031b4 <get_arg+0x2e8>
80003182:	58 2a       	cp.w	r10,2
80003184:	c1 81       	brne	800031b4 <get_arg+0x2e8>
80003186:	c0 58       	rjmp	80003190 <get_arg+0x2c4>
80003188:	58 5a       	cp.w	r10,5
8000318a:	c0 c0       	breq	800031a2 <get_arg+0x2d6>
8000318c:	c0 b5       	brlt	800031a2 <get_arg+0x2d6>
8000318e:	c1 38       	rjmp	800031b4 <get_arg+0x2e8>
80003190:	6c 0a       	ld.w	r10,r6[0x0]
80003192:	f4 cc ff f8 	sub	r12,r10,-8
80003196:	8d 0c       	st.w	r6[0x0],r12
80003198:	f4 e2 00 00 	ld.d	r2,r10[0]
8000319c:	f0 e3 00 00 	st.d	r8[0],r2
800031a0:	c1 08       	rjmp	800031c0 <get_arg+0x2f4>
800031a2:	6c 0a       	ld.w	r10,r6[0x0]
800031a4:	f4 cc ff f8 	sub	r12,r10,-8
800031a8:	8d 0c       	st.w	r6[0x0],r12
800031aa:	f4 e2 00 00 	ld.d	r2,r10[0]
800031ae:	f0 e3 00 00 	st.d	r8[0],r2
800031b2:	c0 78       	rjmp	800031c0 <get_arg+0x2f4>
800031b4:	6c 0a       	ld.w	r10,r6[0x0]
800031b6:	f4 cc ff fc 	sub	r12,r10,-4
800031ba:	8d 0c       	st.w	r6[0x0],r12
800031bc:	74 0a       	ld.w	r10,r10[0x0]
800031be:	91 0a       	st.w	r8[0x0],r10
800031c0:	2f f5       	sub	r5,-1
800031c2:	2f 88       	sub	r8,-8
800031c4:	2f c1       	sub	r1,-4
800031c6:	12 35       	cp.w	r5,r9
800031c8:	fe 9a ff d6 	brle	80003174 <get_arg+0x2a8>
800031cc:	1c 93       	mov	r3,lr
800031ce:	40 52       	lddsp	r2,sp[0x14]
800031d0:	40 6e       	lddsp	lr,sp[0x18]
800031d2:	85 05       	st.w	r2[0x0],r5
800031d4:	9d 0b       	st.w	lr[0x0],r11
800031d6:	40 4b       	lddsp	r11,sp[0x10]
800031d8:	e6 0b 00 3c 	add	r12,r3,r11<<0x3
800031dc:	2f 8d       	sub	sp,-32
800031de:	d8 32       	popm	r0-r7,pc

800031e0 <__sprint_r>:
800031e0:	d4 21       	pushm	r4-r7,lr
800031e2:	14 97       	mov	r7,r10
800031e4:	74 28       	ld.w	r8,r10[0x8]
800031e6:	58 08       	cp.w	r8,0
800031e8:	c0 41       	brne	800031f0 <__sprint_r+0x10>
800031ea:	95 18       	st.w	r10[0x4],r8
800031ec:	10 9c       	mov	r12,r8
800031ee:	d8 22       	popm	r4-r7,pc
800031f0:	e0 a0 18 b4 	rcall	80006358 <__sfvwrite_r>
800031f4:	30 08       	mov	r8,0
800031f6:	8f 18       	st.w	r7[0x4],r8
800031f8:	8f 28       	st.w	r7[0x8],r8
800031fa:	d8 22       	popm	r4-r7,pc

800031fc <_vfprintf_r>:
800031fc:	d4 31       	pushm	r0-r7,lr
800031fe:	fa cd 06 bc 	sub	sp,sp,1724
80003202:	51 09       	stdsp	sp[0x40],r9
80003204:	16 91       	mov	r1,r11
80003206:	14 97       	mov	r7,r10
80003208:	18 95       	mov	r5,r12
8000320a:	e0 a0 1a 1d 	rcall	80006644 <_localeconv_r>
8000320e:	78 0c       	ld.w	r12,r12[0x0]
80003210:	50 cc       	stdsp	sp[0x30],r12
80003212:	58 05       	cp.w	r5,0
80003214:	c0 70       	breq	80003222 <_vfprintf_r+0x26>
80003216:	6a 68       	ld.w	r8,r5[0x18]
80003218:	58 08       	cp.w	r8,0
8000321a:	c0 41       	brne	80003222 <_vfprintf_r+0x26>
8000321c:	0a 9c       	mov	r12,r5
8000321e:	e0 a0 17 3d 	rcall	80006098 <__sinit>
80003222:	fe c8 a2 9a 	sub	r8,pc,-23910
80003226:	10 31       	cp.w	r1,r8
80003228:	c0 31       	brne	8000322e <_vfprintf_r+0x32>
8000322a:	6a 01       	ld.w	r1,r5[0x0]
8000322c:	c0 c8       	rjmp	80003244 <_vfprintf_r+0x48>
8000322e:	fe c8 a2 86 	sub	r8,pc,-23930
80003232:	10 31       	cp.w	r1,r8
80003234:	c0 31       	brne	8000323a <_vfprintf_r+0x3e>
80003236:	6a 11       	ld.w	r1,r5[0x4]
80003238:	c0 68       	rjmp	80003244 <_vfprintf_r+0x48>
8000323a:	fe c8 a2 72 	sub	r8,pc,-23950
8000323e:	10 31       	cp.w	r1,r8
80003240:	eb f1 00 02 	ld.weq	r1,r5[0x8]
80003244:	82 68       	ld.sh	r8,r1[0xc]
80003246:	ed b8 00 03 	bld	r8,0x3
8000324a:	c0 41       	brne	80003252 <_vfprintf_r+0x56>
8000324c:	62 48       	ld.w	r8,r1[0x10]
8000324e:	58 08       	cp.w	r8,0
80003250:	c0 71       	brne	8000325e <_vfprintf_r+0x62>
80003252:	02 9b       	mov	r11,r1
80003254:	0a 9c       	mov	r12,r5
80003256:	e0 a0 0f 5d 	rcall	80005110 <__swsetup_r>
8000325a:	e0 81 0f 54 	brne	80005102 <_vfprintf_r+0x1f06>
8000325e:	82 68       	ld.sh	r8,r1[0xc]
80003260:	10 99       	mov	r9,r8
80003262:	e2 19 00 1a 	andl	r9,0x1a,COH
80003266:	58 a9       	cp.w	r9,10
80003268:	c3 c1       	brne	800032e0 <_vfprintf_r+0xe4>
8000326a:	82 79       	ld.sh	r9,r1[0xe]
8000326c:	30 0a       	mov	r10,0
8000326e:	f4 09 19 00 	cp.h	r9,r10
80003272:	c3 75       	brlt	800032e0 <_vfprintf_r+0xe4>
80003274:	a1 d8       	cbr	r8,0x1
80003276:	fb 58 05 d0 	st.h	sp[1488],r8
8000327a:	62 88       	ld.w	r8,r1[0x20]
8000327c:	fb 48 05 e4 	st.w	sp[1508],r8
80003280:	62 a8       	ld.w	r8,r1[0x28]
80003282:	fb 48 05 ec 	st.w	sp[1516],r8
80003286:	fa c8 ff bc 	sub	r8,sp,-68
8000328a:	fb 48 05 d4 	st.w	sp[1492],r8
8000328e:	fb 48 05 c4 	st.w	sp[1476],r8
80003292:	e0 68 04 00 	mov	r8,1024
80003296:	fb 48 05 d8 	st.w	sp[1496],r8
8000329a:	fb 48 05 cc 	st.w	sp[1484],r8
8000329e:	30 08       	mov	r8,0
800032a0:	fb 59 05 d2 	st.h	sp[1490],r9
800032a4:	0e 9a       	mov	r10,r7
800032a6:	41 09       	lddsp	r9,sp[0x40]
800032a8:	fa c7 fa 3c 	sub	r7,sp,-1476
800032ac:	fb 48 05 dc 	st.w	sp[1500],r8
800032b0:	0a 9c       	mov	r12,r5
800032b2:	0e 9b       	mov	r11,r7
800032b4:	ca 4f       	rcall	800031fc <_vfprintf_r>
800032b6:	50 bc       	stdsp	sp[0x2c],r12
800032b8:	c0 95       	brlt	800032ca <_vfprintf_r+0xce>
800032ba:	0e 9b       	mov	r11,r7
800032bc:	0a 9c       	mov	r12,r5
800032be:	e0 a0 16 15 	rcall	80005ee8 <_fflush_r>
800032c2:	40 be       	lddsp	lr,sp[0x2c]
800032c4:	f9 be 01 ff 	movne	lr,-1
800032c8:	50 be       	stdsp	sp[0x2c],lr
800032ca:	fb 08 05 d0 	ld.sh	r8,sp[1488]
800032ce:	ed b8 00 06 	bld	r8,0x6
800032d2:	e0 81 0f 1a 	brne	80005106 <_vfprintf_r+0x1f0a>
800032d6:	82 68       	ld.sh	r8,r1[0xc]
800032d8:	a7 a8       	sbr	r8,0x6
800032da:	a2 68       	st.h	r1[0xc],r8
800032dc:	e0 8f 0f 15 	bral	80005106 <_vfprintf_r+0x1f0a>
800032e0:	30 08       	mov	r8,0
800032e2:	fb 48 06 b4 	st.w	sp[1716],r8
800032e6:	fb 48 06 90 	st.w	sp[1680],r8
800032ea:	fb 48 06 8c 	st.w	sp[1676],r8
800032ee:	fb 48 06 b0 	st.w	sp[1712],r8
800032f2:	30 08       	mov	r8,0
800032f4:	30 09       	mov	r9,0
800032f6:	50 a7       	stdsp	sp[0x28],r7
800032f8:	50 78       	stdsp	sp[0x1c],r8
800032fa:	fa c3 f9 e0 	sub	r3,sp,-1568
800032fe:	3f f8       	mov	r8,-1
80003300:	50 59       	stdsp	sp[0x14],r9
80003302:	fb 43 06 88 	st.w	sp[1672],r3
80003306:	fb 48 05 44 	st.w	sp[1348],r8
8000330a:	12 9c       	mov	r12,r9
8000330c:	50 69       	stdsp	sp[0x18],r9
8000330e:	50 d9       	stdsp	sp[0x34],r9
80003310:	50 e9       	stdsp	sp[0x38],r9
80003312:	50 b9       	stdsp	sp[0x2c],r9
80003314:	12 97       	mov	r7,r9
80003316:	0a 94       	mov	r4,r5
80003318:	40 a2       	lddsp	r2,sp[0x28]
8000331a:	32 5a       	mov	r10,37
8000331c:	30 08       	mov	r8,0
8000331e:	c0 28       	rjmp	80003322 <_vfprintf_r+0x126>
80003320:	2f f2       	sub	r2,-1
80003322:	05 89       	ld.ub	r9,r2[0x0]
80003324:	f0 09 18 00 	cp.b	r9,r8
80003328:	5f 1b       	srne	r11
8000332a:	f4 09 18 00 	cp.b	r9,r10
8000332e:	5f 19       	srne	r9
80003330:	f3 eb 00 0b 	and	r11,r9,r11
80003334:	f0 0b 18 00 	cp.b	r11,r8
80003338:	cf 41       	brne	80003320 <_vfprintf_r+0x124>
8000333a:	40 ab       	lddsp	r11,sp[0x28]
8000333c:	e4 0b 01 06 	sub	r6,r2,r11
80003340:	c1 e0       	breq	8000337c <_vfprintf_r+0x180>
80003342:	fa f8 06 90 	ld.w	r8,sp[1680]
80003346:	0c 08       	add	r8,r6
80003348:	87 0b       	st.w	r3[0x0],r11
8000334a:	fb 48 06 90 	st.w	sp[1680],r8
8000334e:	87 16       	st.w	r3[0x4],r6
80003350:	fa f8 06 8c 	ld.w	r8,sp[1676]
80003354:	2f f8       	sub	r8,-1
80003356:	fb 48 06 8c 	st.w	sp[1676],r8
8000335a:	58 78       	cp.w	r8,7
8000335c:	e0 89 00 04 	brgt	80003364 <_vfprintf_r+0x168>
80003360:	2f 83       	sub	r3,-8
80003362:	c0 a8       	rjmp	80003376 <_vfprintf_r+0x17a>
80003364:	fa ca f9 78 	sub	r10,sp,-1672
80003368:	02 9b       	mov	r11,r1
8000336a:	08 9c       	mov	r12,r4
8000336c:	c3 af       	rcall	800031e0 <__sprint_r>
8000336e:	e0 81 0e c6 	brne	800050fa <_vfprintf_r+0x1efe>
80003372:	fa c3 f9 e0 	sub	r3,sp,-1568
80003376:	40 ba       	lddsp	r10,sp[0x2c]
80003378:	0c 0a       	add	r10,r6
8000337a:	50 ba       	stdsp	sp[0x2c],r10
8000337c:	05 89       	ld.ub	r9,r2[0x0]
8000337e:	30 08       	mov	r8,0
80003380:	f0 09 18 00 	cp.b	r9,r8
80003384:	e0 80 0e aa 	breq	800050d8 <_vfprintf_r+0x1edc>
80003388:	30 09       	mov	r9,0
8000338a:	fb 68 06 bb 	st.b	sp[1723],r8
8000338e:	0e 96       	mov	r6,r7
80003390:	e4 c8 ff ff 	sub	r8,r2,-1
80003394:	3f fe       	mov	lr,-1
80003396:	50 93       	stdsp	sp[0x24],r3
80003398:	50 41       	stdsp	sp[0x10],r1
8000339a:	0e 93       	mov	r3,r7
8000339c:	04 91       	mov	r1,r2
8000339e:	50 89       	stdsp	sp[0x20],r9
800033a0:	50 a8       	stdsp	sp[0x28],r8
800033a2:	50 2e       	stdsp	sp[0x8],lr
800033a4:	50 39       	stdsp	sp[0xc],r9
800033a6:	12 95       	mov	r5,r9
800033a8:	12 90       	mov	r0,r9
800033aa:	10 97       	mov	r7,r8
800033ac:	08 92       	mov	r2,r4
800033ae:	c0 78       	rjmp	800033bc <_vfprintf_r+0x1c0>
800033b0:	3f fc       	mov	r12,-1
800033b2:	08 97       	mov	r7,r4
800033b4:	50 2c       	stdsp	sp[0x8],r12
800033b6:	c0 38       	rjmp	800033bc <_vfprintf_r+0x1c0>
800033b8:	30 0b       	mov	r11,0
800033ba:	50 3b       	stdsp	sp[0xc],r11
800033bc:	0f 38       	ld.ub	r8,r7++
800033be:	c0 28       	rjmp	800033c2 <_vfprintf_r+0x1c6>
800033c0:	12 90       	mov	r0,r9
800033c2:	f0 c9 00 20 	sub	r9,r8,32
800033c6:	e0 49 00 58 	cp.w	r9,88
800033ca:	e0 8b 0a 30 	brhi	8000482a <_vfprintf_r+0x162e>
800033ce:	fe ca a7 ee 	sub	r10,pc,-22546
800033d2:	f4 09 03 2f 	ld.w	pc,r10[r9<<0x2]
800033d6:	50 a7       	stdsp	sp[0x28],r7
800033d8:	50 80       	stdsp	sp[0x20],r0
800033da:	0c 97       	mov	r7,r6
800033dc:	04 94       	mov	r4,r2
800033de:	06 96       	mov	r6,r3
800033e0:	02 92       	mov	r2,r1
800033e2:	fe c9 a5 c6 	sub	r9,pc,-23098
800033e6:	40 93       	lddsp	r3,sp[0x24]
800033e8:	10 90       	mov	r0,r8
800033ea:	40 41       	lddsp	r1,sp[0x10]
800033ec:	50 d9       	stdsp	sp[0x34],r9
800033ee:	e0 8f 08 8e 	bral	8000450a <_vfprintf_r+0x130e>
800033f2:	30 08       	mov	r8,0
800033f4:	fb 39 06 bb 	ld.ub	r9,sp[1723]
800033f8:	f0 09 18 00 	cp.b	r9,r8
800033fc:	ce 01       	brne	800033bc <_vfprintf_r+0x1c0>
800033fe:	32 08       	mov	r8,32
80003400:	c6 e8       	rjmp	800034dc <_vfprintf_r+0x2e0>
80003402:	a1 a5       	sbr	r5,0x0
80003404:	cd cb       	rjmp	800033bc <_vfprintf_r+0x1c0>
80003406:	0f 89       	ld.ub	r9,r7[0x0]
80003408:	f2 c8 00 30 	sub	r8,r9,48
8000340c:	58 98       	cp.w	r8,9
8000340e:	e0 8b 00 1d 	brhi	80003448 <_vfprintf_r+0x24c>
80003412:	ee c8 ff ff 	sub	r8,r7,-1
80003416:	30 0b       	mov	r11,0
80003418:	23 09       	sub	r9,48
8000341a:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
8000341e:	f2 0b 00 1b 	add	r11,r9,r11<<0x1
80003422:	11 39       	ld.ub	r9,r8++
80003424:	f2 ca 00 30 	sub	r10,r9,48
80003428:	58 9a       	cp.w	r10,9
8000342a:	fe 98 ff f7 	brls	80003418 <_vfprintf_r+0x21c>
8000342e:	e0 49 00 24 	cp.w	r9,36
80003432:	cc 31       	brne	800033b8 <_vfprintf_r+0x1bc>
80003434:	e0 4b 00 20 	cp.w	r11,32
80003438:	e0 89 0e 60 	brgt	800050f8 <_vfprintf_r+0x1efc>
8000343c:	20 1b       	sub	r11,1
8000343e:	fa f9 06 b4 	ld.w	r9,sp[1716]
80003442:	12 3b       	cp.w	r11,r9
80003444:	c0 95       	brlt	80003456 <_vfprintf_r+0x25a>
80003446:	c1 08       	rjmp	80003466 <_vfprintf_r+0x26a>
80003448:	fa f9 06 b4 	ld.w	r9,sp[1716]
8000344c:	ec ca ff ff 	sub	r10,r6,-1
80003450:	12 36       	cp.w	r6,r9
80003452:	c1 f5       	brlt	80003490 <_vfprintf_r+0x294>
80003454:	c2 68       	rjmp	800034a0 <_vfprintf_r+0x2a4>
80003456:	fa ce f9 44 	sub	lr,sp,-1724
8000345a:	10 97       	mov	r7,r8
8000345c:	fc 0b 00 3b 	add	r11,lr,r11<<0x3
80003460:	f6 f0 fd 88 	ld.w	r0,r11[-632]
80003464:	c3 58       	rjmp	800034ce <_vfprintf_r+0x2d2>
80003466:	10 97       	mov	r7,r8
80003468:	fa c8 f9 50 	sub	r8,sp,-1712
8000346c:	1a d8       	st.w	--sp,r8
8000346e:	fa c8 fa b8 	sub	r8,sp,-1352
80003472:	1a d8       	st.w	--sp,r8
80003474:	fa c8 fb b4 	sub	r8,sp,-1100
80003478:	02 9a       	mov	r10,r1
8000347a:	1a d8       	st.w	--sp,r8
8000347c:	04 9c       	mov	r12,r2
8000347e:	fa c8 f9 40 	sub	r8,sp,-1728
80003482:	fa c9 ff b4 	sub	r9,sp,-76
80003486:	fe b0 fd 23 	rcall	80002ecc <get_arg>
8000348a:	2f dd       	sub	sp,-12
8000348c:	78 00       	ld.w	r0,r12[0x0]
8000348e:	c2 08       	rjmp	800034ce <_vfprintf_r+0x2d2>
80003490:	fa cc f9 44 	sub	r12,sp,-1724
80003494:	14 96       	mov	r6,r10
80003496:	f8 03 00 38 	add	r8,r12,r3<<0x3
8000349a:	f0 f0 fd 88 	ld.w	r0,r8[-632]
8000349e:	c1 88       	rjmp	800034ce <_vfprintf_r+0x2d2>
800034a0:	41 08       	lddsp	r8,sp[0x40]
800034a2:	59 f9       	cp.w	r9,31
800034a4:	e0 89 00 11 	brgt	800034c6 <_vfprintf_r+0x2ca>
800034a8:	f0 cb ff fc 	sub	r11,r8,-4
800034ac:	51 0b       	stdsp	sp[0x40],r11
800034ae:	70 00       	ld.w	r0,r8[0x0]
800034b0:	fa cb f9 44 	sub	r11,sp,-1724
800034b4:	f6 09 00 38 	add	r8,r11,r9<<0x3
800034b8:	f1 40 fd 88 	st.w	r8[-632],r0
800034bc:	2f f9       	sub	r9,-1
800034be:	14 96       	mov	r6,r10
800034c0:	fb 49 06 b4 	st.w	sp[1716],r9
800034c4:	c0 58       	rjmp	800034ce <_vfprintf_r+0x2d2>
800034c6:	70 00       	ld.w	r0,r8[0x0]
800034c8:	14 96       	mov	r6,r10
800034ca:	2f c8       	sub	r8,-4
800034cc:	51 08       	stdsp	sp[0x40],r8
800034ce:	58 00       	cp.w	r0,0
800034d0:	fe 94 ff 76 	brge	800033bc <_vfprintf_r+0x1c0>
800034d4:	5c 30       	neg	r0
800034d6:	a3 a5       	sbr	r5,0x2
800034d8:	c7 2b       	rjmp	800033bc <_vfprintf_r+0x1c0>
800034da:	32 b8       	mov	r8,43
800034dc:	fb 68 06 bb 	st.b	sp[1723],r8
800034e0:	c6 eb       	rjmp	800033bc <_vfprintf_r+0x1c0>
800034e2:	0f 38       	ld.ub	r8,r7++
800034e4:	e0 48 00 2a 	cp.w	r8,42
800034e8:	c0 30       	breq	800034ee <_vfprintf_r+0x2f2>
800034ea:	30 09       	mov	r9,0
800034ec:	c7 98       	rjmp	800035de <_vfprintf_r+0x3e2>
800034ee:	0f 88       	ld.ub	r8,r7[0x0]
800034f0:	f0 c9 00 30 	sub	r9,r8,48
800034f4:	58 99       	cp.w	r9,9
800034f6:	e0 8b 00 1f 	brhi	80003534 <_vfprintf_r+0x338>
800034fa:	ee c4 ff ff 	sub	r4,r7,-1
800034fe:	30 0b       	mov	r11,0
80003500:	23 08       	sub	r8,48
80003502:	f6 0b 00 2b 	add	r11,r11,r11<<0x2
80003506:	f0 0b 00 1b 	add	r11,r8,r11<<0x1
8000350a:	09 38       	ld.ub	r8,r4++
8000350c:	f0 c9 00 30 	sub	r9,r8,48
80003510:	58 99       	cp.w	r9,9
80003512:	fe 98 ff f7 	brls	80003500 <_vfprintf_r+0x304>
80003516:	e0 48 00 24 	cp.w	r8,36
8000351a:	fe 91 ff 4f 	brne	800033b8 <_vfprintf_r+0x1bc>
8000351e:	e0 4b 00 20 	cp.w	r11,32
80003522:	e0 89 0d eb 	brgt	800050f8 <_vfprintf_r+0x1efc>
80003526:	20 1b       	sub	r11,1
80003528:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000352c:	10 3b       	cp.w	r11,r8
8000352e:	c0 a5       	brlt	80003542 <_vfprintf_r+0x346>
80003530:	c1 18       	rjmp	80003552 <_vfprintf_r+0x356>
80003532:	d7 03       	nop
80003534:	fa fa 06 b4 	ld.w	r10,sp[1716]
80003538:	ec c9 ff ff 	sub	r9,r6,-1
8000353c:	14 36       	cp.w	r6,r10
8000353e:	c1 f5       	brlt	8000357c <_vfprintf_r+0x380>
80003540:	c2 88       	rjmp	80003590 <_vfprintf_r+0x394>
80003542:	fa ca f9 44 	sub	r10,sp,-1724
80003546:	f4 0b 00 3b 	add	r11,r10,r11<<0x3
8000354a:	f6 fb fd 88 	ld.w	r11,r11[-632]
8000354e:	50 2b       	stdsp	sp[0x8],r11
80003550:	c3 c8       	rjmp	800035c8 <_vfprintf_r+0x3cc>
80003552:	fa c8 f9 50 	sub	r8,sp,-1712
80003556:	1a d8       	st.w	--sp,r8
80003558:	fa c8 fa b8 	sub	r8,sp,-1352
8000355c:	1a d8       	st.w	--sp,r8
8000355e:	fa c8 fb b4 	sub	r8,sp,-1100
80003562:	02 9a       	mov	r10,r1
80003564:	1a d8       	st.w	--sp,r8
80003566:	04 9c       	mov	r12,r2
80003568:	fa c8 f9 40 	sub	r8,sp,-1728
8000356c:	fa c9 ff b4 	sub	r9,sp,-76
80003570:	fe b0 fc ae 	rcall	80002ecc <get_arg>
80003574:	2f dd       	sub	sp,-12
80003576:	78 0c       	ld.w	r12,r12[0x0]
80003578:	50 2c       	stdsp	sp[0x8],r12
8000357a:	c2 78       	rjmp	800035c8 <_vfprintf_r+0x3cc>
8000357c:	12 96       	mov	r6,r9
8000357e:	0e 94       	mov	r4,r7
80003580:	fa c9 f9 44 	sub	r9,sp,-1724
80003584:	f2 03 00 38 	add	r8,r9,r3<<0x3
80003588:	f0 f8 fd 88 	ld.w	r8,r8[-632]
8000358c:	50 28       	stdsp	sp[0x8],r8
8000358e:	c1 d8       	rjmp	800035c8 <_vfprintf_r+0x3cc>
80003590:	41 08       	lddsp	r8,sp[0x40]
80003592:	59 fa       	cp.w	r10,31
80003594:	e0 89 00 14 	brgt	800035bc <_vfprintf_r+0x3c0>
80003598:	f0 cb ff fc 	sub	r11,r8,-4
8000359c:	70 08       	ld.w	r8,r8[0x0]
8000359e:	51 0b       	stdsp	sp[0x40],r11
800035a0:	50 28       	stdsp	sp[0x8],r8
800035a2:	fa c6 f9 44 	sub	r6,sp,-1724
800035a6:	40 2e       	lddsp	lr,sp[0x8]
800035a8:	ec 0a 00 38 	add	r8,r6,r10<<0x3
800035ac:	f1 4e fd 88 	st.w	r8[-632],lr
800035b0:	2f fa       	sub	r10,-1
800035b2:	0e 94       	mov	r4,r7
800035b4:	fb 4a 06 b4 	st.w	sp[1716],r10
800035b8:	12 96       	mov	r6,r9
800035ba:	c0 78       	rjmp	800035c8 <_vfprintf_r+0x3cc>
800035bc:	70 0c       	ld.w	r12,r8[0x0]
800035be:	0e 94       	mov	r4,r7
800035c0:	2f c8       	sub	r8,-4
800035c2:	50 2c       	stdsp	sp[0x8],r12
800035c4:	12 96       	mov	r6,r9
800035c6:	51 08       	stdsp	sp[0x40],r8
800035c8:	40 2b       	lddsp	r11,sp[0x8]
800035ca:	58 0b       	cp.w	r11,0
800035cc:	fe 95 fe f2 	brlt	800033b0 <_vfprintf_r+0x1b4>
800035d0:	08 97       	mov	r7,r4
800035d2:	cf 5a       	rjmp	800033bc <_vfprintf_r+0x1c0>
800035d4:	f2 09 00 29 	add	r9,r9,r9<<0x2
800035d8:	0f 38       	ld.ub	r8,r7++
800035da:	f4 09 00 19 	add	r9,r10,r9<<0x1
800035de:	f0 ca 00 30 	sub	r10,r8,48
800035e2:	58 9a       	cp.w	r10,9
800035e4:	fe 98 ff f8 	brls	800035d4 <_vfprintf_r+0x3d8>
800035e8:	3f fa       	mov	r10,-1
800035ea:	f2 0a 0c 49 	max	r9,r9,r10
800035ee:	50 29       	stdsp	sp[0x8],r9
800035f0:	ce 9a       	rjmp	800033c2 <_vfprintf_r+0x1c6>
800035f2:	a7 b5       	sbr	r5,0x7
800035f4:	ce 4a       	rjmp	800033bc <_vfprintf_r+0x1c0>
800035f6:	30 09       	mov	r9,0
800035f8:	23 08       	sub	r8,48
800035fa:	f2 09 00 29 	add	r9,r9,r9<<0x2
800035fe:	f0 09 00 19 	add	r9,r8,r9<<0x1
80003602:	0f 38       	ld.ub	r8,r7++
80003604:	f0 ca 00 30 	sub	r10,r8,48
80003608:	58 9a       	cp.w	r10,9
8000360a:	fe 98 ff f7 	brls	800035f8 <_vfprintf_r+0x3fc>
8000360e:	e0 48 00 24 	cp.w	r8,36
80003612:	fe 91 fe d7 	brne	800033c0 <_vfprintf_r+0x1c4>
80003616:	e0 49 00 20 	cp.w	r9,32
8000361a:	e0 89 0d 6f 	brgt	800050f8 <_vfprintf_r+0x1efc>
8000361e:	f2 c3 00 01 	sub	r3,r9,1
80003622:	30 19       	mov	r9,1
80003624:	50 39       	stdsp	sp[0xc],r9
80003626:	cc ba       	rjmp	800033bc <_vfprintf_r+0x1c0>
80003628:	a3 b5       	sbr	r5,0x3
8000362a:	cc 9a       	rjmp	800033bc <_vfprintf_r+0x1c0>
8000362c:	a7 a5       	sbr	r5,0x6
8000362e:	cc 7a       	rjmp	800033bc <_vfprintf_r+0x1c0>
80003630:	0a 98       	mov	r8,r5
80003632:	a5 b5       	sbr	r5,0x5
80003634:	a5 a8       	sbr	r8,0x4
80003636:	0f 89       	ld.ub	r9,r7[0x0]
80003638:	36 ce       	mov	lr,108
8000363a:	fc 09 18 00 	cp.b	r9,lr
8000363e:	f7 b7 00 ff 	subeq	r7,-1
80003642:	f0 05 17 10 	movne	r5,r8
80003646:	cb ba       	rjmp	800033bc <_vfprintf_r+0x1c0>
80003648:	a5 b5       	sbr	r5,0x5
8000364a:	cb 9a       	rjmp	800033bc <_vfprintf_r+0x1c0>
8000364c:	50 a7       	stdsp	sp[0x28],r7
8000364e:	50 80       	stdsp	sp[0x20],r0
80003650:	0c 97       	mov	r7,r6
80003652:	10 90       	mov	r0,r8
80003654:	06 96       	mov	r6,r3
80003656:	04 94       	mov	r4,r2
80003658:	40 93       	lddsp	r3,sp[0x24]
8000365a:	02 92       	mov	r2,r1
8000365c:	0e 99       	mov	r9,r7
8000365e:	40 41       	lddsp	r1,sp[0x10]
80003660:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003664:	40 3c       	lddsp	r12,sp[0xc]
80003666:	58 0c       	cp.w	r12,0
80003668:	c1 d0       	breq	800036a2 <_vfprintf_r+0x4a6>
8000366a:	10 36       	cp.w	r6,r8
8000366c:	c0 64       	brge	80003678 <_vfprintf_r+0x47c>
8000366e:	fa cb f9 44 	sub	r11,sp,-1724
80003672:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003676:	c1 d8       	rjmp	800036b0 <_vfprintf_r+0x4b4>
80003678:	fa c8 f9 50 	sub	r8,sp,-1712
8000367c:	1a d8       	st.w	--sp,r8
8000367e:	fa c8 fa b8 	sub	r8,sp,-1352
80003682:	1a d8       	st.w	--sp,r8
80003684:	fa c8 fb b4 	sub	r8,sp,-1100
80003688:	1a d8       	st.w	--sp,r8
8000368a:	fa c8 f9 40 	sub	r8,sp,-1728
8000368e:	fa c9 ff b4 	sub	r9,sp,-76
80003692:	04 9a       	mov	r10,r2
80003694:	0c 9b       	mov	r11,r6
80003696:	08 9c       	mov	r12,r4
80003698:	fe b0 fc 1a 	rcall	80002ecc <get_arg>
8000369c:	2f dd       	sub	sp,-12
8000369e:	19 b8       	ld.ub	r8,r12[0x3]
800036a0:	c2 28       	rjmp	800036e4 <_vfprintf_r+0x4e8>
800036a2:	2f f7       	sub	r7,-1
800036a4:	10 39       	cp.w	r9,r8
800036a6:	c0 84       	brge	800036b6 <_vfprintf_r+0x4ba>
800036a8:	fa ca f9 44 	sub	r10,sp,-1724
800036ac:	f4 06 00 36 	add	r6,r10,r6<<0x3
800036b0:	ed 38 fd 8b 	ld.ub	r8,r6[-629]
800036b4:	c1 88       	rjmp	800036e4 <_vfprintf_r+0x4e8>
800036b6:	41 09       	lddsp	r9,sp[0x40]
800036b8:	59 f8       	cp.w	r8,31
800036ba:	e0 89 00 12 	brgt	800036de <_vfprintf_r+0x4e2>
800036be:	f2 ca ff fc 	sub	r10,r9,-4
800036c2:	51 0a       	stdsp	sp[0x40],r10
800036c4:	72 09       	ld.w	r9,r9[0x0]
800036c6:	fa c6 f9 44 	sub	r6,sp,-1724
800036ca:	ec 08 00 3a 	add	r10,r6,r8<<0x3
800036ce:	2f f8       	sub	r8,-1
800036d0:	f5 49 fd 88 	st.w	r10[-632],r9
800036d4:	fb 48 06 b4 	st.w	sp[1716],r8
800036d8:	f1 d9 c0 08 	bfextu	r8,r9,0x0,0x8
800036dc:	c0 48       	rjmp	800036e4 <_vfprintf_r+0x4e8>
800036de:	13 b8       	ld.ub	r8,r9[0x3]
800036e0:	2f c9       	sub	r9,-4
800036e2:	51 09       	stdsp	sp[0x40],r9
800036e4:	fb 68 06 60 	st.b	sp[1632],r8
800036e8:	30 0e       	mov	lr,0
800036ea:	30 08       	mov	r8,0
800036ec:	30 12       	mov	r2,1
800036ee:	fb 68 06 bb 	st.b	sp[1723],r8
800036f2:	50 2e       	stdsp	sp[0x8],lr
800036f4:	e0 8f 08 ad 	bral	8000484e <_vfprintf_r+0x1652>
800036f8:	50 a7       	stdsp	sp[0x28],r7
800036fa:	50 80       	stdsp	sp[0x20],r0
800036fc:	0c 97       	mov	r7,r6
800036fe:	04 94       	mov	r4,r2
80003700:	06 96       	mov	r6,r3
80003702:	02 92       	mov	r2,r1
80003704:	40 93       	lddsp	r3,sp[0x24]
80003706:	10 90       	mov	r0,r8
80003708:	40 41       	lddsp	r1,sp[0x10]
8000370a:	a5 a5       	sbr	r5,0x4
8000370c:	c0 a8       	rjmp	80003720 <_vfprintf_r+0x524>
8000370e:	50 a7       	stdsp	sp[0x28],r7
80003710:	50 80       	stdsp	sp[0x20],r0
80003712:	0c 97       	mov	r7,r6
80003714:	04 94       	mov	r4,r2
80003716:	06 96       	mov	r6,r3
80003718:	02 92       	mov	r2,r1
8000371a:	40 93       	lddsp	r3,sp[0x24]
8000371c:	10 90       	mov	r0,r8
8000371e:	40 41       	lddsp	r1,sp[0x10]
80003720:	ed b5 00 05 	bld	r5,0x5
80003724:	c5 11       	brne	800037c6 <_vfprintf_r+0x5ca>
80003726:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000372a:	40 3c       	lddsp	r12,sp[0xc]
8000372c:	58 0c       	cp.w	r12,0
8000372e:	c1 e0       	breq	8000376a <_vfprintf_r+0x56e>
80003730:	10 36       	cp.w	r6,r8
80003732:	c0 64       	brge	8000373e <_vfprintf_r+0x542>
80003734:	fa cb f9 44 	sub	r11,sp,-1724
80003738:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000373c:	c2 08       	rjmp	8000377c <_vfprintf_r+0x580>
8000373e:	fa c8 f9 50 	sub	r8,sp,-1712
80003742:	1a d8       	st.w	--sp,r8
80003744:	fa c8 fa b8 	sub	r8,sp,-1352
80003748:	0c 9b       	mov	r11,r6
8000374a:	1a d8       	st.w	--sp,r8
8000374c:	fa c8 fb b4 	sub	r8,sp,-1100
80003750:	1a d8       	st.w	--sp,r8
80003752:	fa c9 ff b4 	sub	r9,sp,-76
80003756:	fa c8 f9 40 	sub	r8,sp,-1728
8000375a:	04 9a       	mov	r10,r2
8000375c:	08 9c       	mov	r12,r4
8000375e:	fe b0 fb b7 	rcall	80002ecc <get_arg>
80003762:	2f dd       	sub	sp,-12
80003764:	78 1b       	ld.w	r11,r12[0x4]
80003766:	78 09       	ld.w	r9,r12[0x0]
80003768:	c2 b8       	rjmp	800037be <_vfprintf_r+0x5c2>
8000376a:	ee ca ff ff 	sub	r10,r7,-1
8000376e:	10 37       	cp.w	r7,r8
80003770:	c0 b4       	brge	80003786 <_vfprintf_r+0x58a>
80003772:	fa c9 f9 44 	sub	r9,sp,-1724
80003776:	14 97       	mov	r7,r10
80003778:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000377c:	ec fb fd 8c 	ld.w	r11,r6[-628]
80003780:	ec f9 fd 88 	ld.w	r9,r6[-632]
80003784:	c1 d8       	rjmp	800037be <_vfprintf_r+0x5c2>
80003786:	41 09       	lddsp	r9,sp[0x40]
80003788:	59 f8       	cp.w	r8,31
8000378a:	e0 89 00 14 	brgt	800037b2 <_vfprintf_r+0x5b6>
8000378e:	f2 cb ff f8 	sub	r11,r9,-8
80003792:	51 0b       	stdsp	sp[0x40],r11
80003794:	fa c6 f9 44 	sub	r6,sp,-1724
80003798:	72 1b       	ld.w	r11,r9[0x4]
8000379a:	ec 08 00 3c 	add	r12,r6,r8<<0x3
8000379e:	72 09       	ld.w	r9,r9[0x0]
800037a0:	f9 4b fd 8c 	st.w	r12[-628],r11
800037a4:	f9 49 fd 88 	st.w	r12[-632],r9
800037a8:	2f f8       	sub	r8,-1
800037aa:	14 97       	mov	r7,r10
800037ac:	fb 48 06 b4 	st.w	sp[1716],r8
800037b0:	c0 78       	rjmp	800037be <_vfprintf_r+0x5c2>
800037b2:	f2 c8 ff f8 	sub	r8,r9,-8
800037b6:	72 1b       	ld.w	r11,r9[0x4]
800037b8:	14 97       	mov	r7,r10
800037ba:	51 08       	stdsp	sp[0x40],r8
800037bc:	72 09       	ld.w	r9,r9[0x0]
800037be:	16 98       	mov	r8,r11
800037c0:	fa e9 00 00 	st.d	sp[0],r8
800037c4:	ca e8       	rjmp	80003920 <_vfprintf_r+0x724>
800037c6:	ed b5 00 04 	bld	r5,0x4
800037ca:	c1 71       	brne	800037f8 <_vfprintf_r+0x5fc>
800037cc:	fa f8 06 b4 	ld.w	r8,sp[1716]
800037d0:	40 3e       	lddsp	lr,sp[0xc]
800037d2:	58 0e       	cp.w	lr,0
800037d4:	c0 80       	breq	800037e4 <_vfprintf_r+0x5e8>
800037d6:	10 36       	cp.w	r6,r8
800037d8:	c6 94       	brge	800038aa <_vfprintf_r+0x6ae>
800037da:	fa cc f9 44 	sub	r12,sp,-1724
800037de:	f8 06 00 36 	add	r6,r12,r6<<0x3
800037e2:	c8 28       	rjmp	800038e6 <_vfprintf_r+0x6ea>
800037e4:	ee ca ff ff 	sub	r10,r7,-1
800037e8:	10 37       	cp.w	r7,r8
800037ea:	e0 84 00 81 	brge	800038ec <_vfprintf_r+0x6f0>
800037ee:	fa cb f9 44 	sub	r11,sp,-1724
800037f2:	f6 06 00 36 	add	r6,r11,r6<<0x3
800037f6:	c7 78       	rjmp	800038e4 <_vfprintf_r+0x6e8>
800037f8:	ed b5 00 06 	bld	r5,0x6
800037fc:	c4 b1       	brne	80003892 <_vfprintf_r+0x696>
800037fe:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003802:	40 3c       	lddsp	r12,sp[0xc]
80003804:	58 0c       	cp.w	r12,0
80003806:	c1 d0       	breq	80003840 <_vfprintf_r+0x644>
80003808:	10 36       	cp.w	r6,r8
8000380a:	c0 64       	brge	80003816 <_vfprintf_r+0x61a>
8000380c:	fa cb f9 44 	sub	r11,sp,-1724
80003810:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003814:	c1 f8       	rjmp	80003852 <_vfprintf_r+0x656>
80003816:	fa c8 f9 50 	sub	r8,sp,-1712
8000381a:	1a d8       	st.w	--sp,r8
8000381c:	fa c8 fa b8 	sub	r8,sp,-1352
80003820:	1a d8       	st.w	--sp,r8
80003822:	fa c8 fb b4 	sub	r8,sp,-1100
80003826:	1a d8       	st.w	--sp,r8
80003828:	fa c8 f9 40 	sub	r8,sp,-1728
8000382c:	fa c9 ff b4 	sub	r9,sp,-76
80003830:	04 9a       	mov	r10,r2
80003832:	0c 9b       	mov	r11,r6
80003834:	08 9c       	mov	r12,r4
80003836:	fe b0 fb 4b 	rcall	80002ecc <get_arg>
8000383a:	2f dd       	sub	sp,-12
8000383c:	98 18       	ld.sh	r8,r12[0x2]
8000383e:	c2 68       	rjmp	8000388a <_vfprintf_r+0x68e>
80003840:	ee ca ff ff 	sub	r10,r7,-1
80003844:	10 37       	cp.w	r7,r8
80003846:	c0 94       	brge	80003858 <_vfprintf_r+0x65c>
80003848:	fa c9 f9 44 	sub	r9,sp,-1724
8000384c:	14 97       	mov	r7,r10
8000384e:	f2 06 00 36 	add	r6,r9,r6<<0x3
80003852:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80003856:	c1 a8       	rjmp	8000388a <_vfprintf_r+0x68e>
80003858:	41 09       	lddsp	r9,sp[0x40]
8000385a:	59 f8       	cp.w	r8,31
8000385c:	e0 89 00 13 	brgt	80003882 <_vfprintf_r+0x686>
80003860:	f2 cb ff fc 	sub	r11,r9,-4
80003864:	51 0b       	stdsp	sp[0x40],r11
80003866:	72 09       	ld.w	r9,r9[0x0]
80003868:	fa c6 f9 44 	sub	r6,sp,-1724
8000386c:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80003870:	2f f8       	sub	r8,-1
80003872:	f7 49 fd 88 	st.w	r11[-632],r9
80003876:	fb 48 06 b4 	st.w	sp[1716],r8
8000387a:	14 97       	mov	r7,r10
8000387c:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80003880:	c0 58       	rjmp	8000388a <_vfprintf_r+0x68e>
80003882:	92 18       	ld.sh	r8,r9[0x2]
80003884:	14 97       	mov	r7,r10
80003886:	2f c9       	sub	r9,-4
80003888:	51 09       	stdsp	sp[0x40],r9
8000388a:	50 18       	stdsp	sp[0x4],r8
8000388c:	bf 58       	asr	r8,0x1f
8000388e:	50 08       	stdsp	sp[0x0],r8
80003890:	c4 88       	rjmp	80003920 <_vfprintf_r+0x724>
80003892:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003896:	40 3c       	lddsp	r12,sp[0xc]
80003898:	58 0c       	cp.w	r12,0
8000389a:	c1 d0       	breq	800038d4 <_vfprintf_r+0x6d8>
8000389c:	10 36       	cp.w	r6,r8
8000389e:	c0 64       	brge	800038aa <_vfprintf_r+0x6ae>
800038a0:	fa cb f9 44 	sub	r11,sp,-1724
800038a4:	f6 06 00 36 	add	r6,r11,r6<<0x3
800038a8:	c1 f8       	rjmp	800038e6 <_vfprintf_r+0x6ea>
800038aa:	fa c8 f9 50 	sub	r8,sp,-1712
800038ae:	1a d8       	st.w	--sp,r8
800038b0:	fa c8 fa b8 	sub	r8,sp,-1352
800038b4:	0c 9b       	mov	r11,r6
800038b6:	1a d8       	st.w	--sp,r8
800038b8:	fa c8 fb b4 	sub	r8,sp,-1100
800038bc:	04 9a       	mov	r10,r2
800038be:	1a d8       	st.w	--sp,r8
800038c0:	08 9c       	mov	r12,r4
800038c2:	fa c8 f9 40 	sub	r8,sp,-1728
800038c6:	fa c9 ff b4 	sub	r9,sp,-76
800038ca:	fe b0 fb 01 	rcall	80002ecc <get_arg>
800038ce:	2f dd       	sub	sp,-12
800038d0:	78 0b       	ld.w	r11,r12[0x0]
800038d2:	c2 48       	rjmp	8000391a <_vfprintf_r+0x71e>
800038d4:	ee ca ff ff 	sub	r10,r7,-1
800038d8:	10 37       	cp.w	r7,r8
800038da:	c0 94       	brge	800038ec <_vfprintf_r+0x6f0>
800038dc:	fa c9 f9 44 	sub	r9,sp,-1724
800038e0:	f2 06 00 36 	add	r6,r9,r6<<0x3
800038e4:	14 97       	mov	r7,r10
800038e6:	ec fb fd 88 	ld.w	r11,r6[-632]
800038ea:	c1 88       	rjmp	8000391a <_vfprintf_r+0x71e>
800038ec:	41 09       	lddsp	r9,sp[0x40]
800038ee:	59 f8       	cp.w	r8,31
800038f0:	e0 89 00 11 	brgt	80003912 <_vfprintf_r+0x716>
800038f4:	f2 cb ff fc 	sub	r11,r9,-4
800038f8:	51 0b       	stdsp	sp[0x40],r11
800038fa:	fa c6 f9 44 	sub	r6,sp,-1724
800038fe:	72 0b       	ld.w	r11,r9[0x0]
80003900:	ec 08 00 39 	add	r9,r6,r8<<0x3
80003904:	f3 4b fd 88 	st.w	r9[-632],r11
80003908:	2f f8       	sub	r8,-1
8000390a:	14 97       	mov	r7,r10
8000390c:	fb 48 06 b4 	st.w	sp[1716],r8
80003910:	c0 58       	rjmp	8000391a <_vfprintf_r+0x71e>
80003912:	72 0b       	ld.w	r11,r9[0x0]
80003914:	14 97       	mov	r7,r10
80003916:	2f c9       	sub	r9,-4
80003918:	51 09       	stdsp	sp[0x40],r9
8000391a:	50 1b       	stdsp	sp[0x4],r11
8000391c:	bf 5b       	asr	r11,0x1f
8000391e:	50 0b       	stdsp	sp[0x0],r11
80003920:	fa ea 00 00 	ld.d	r10,sp[0]
80003924:	58 0a       	cp.w	r10,0
80003926:	5c 2b       	cpc	r11
80003928:	c0 e4       	brge	80003944 <_vfprintf_r+0x748>
8000392a:	30 08       	mov	r8,0
8000392c:	fa ea 00 00 	ld.d	r10,sp[0]
80003930:	30 09       	mov	r9,0
80003932:	f0 0a 01 0a 	sub	r10,r8,r10
80003936:	f2 0b 01 4b 	sbc	r11,r9,r11
8000393a:	32 d8       	mov	r8,45
8000393c:	fa eb 00 00 	st.d	sp[0],r10
80003940:	fb 68 06 bb 	st.b	sp[1723],r8
80003944:	30 18       	mov	r8,1
80003946:	e0 8f 06 fa 	bral	8000473a <_vfprintf_r+0x153e>
8000394a:	50 a7       	stdsp	sp[0x28],r7
8000394c:	50 80       	stdsp	sp[0x20],r0
8000394e:	0c 97       	mov	r7,r6
80003950:	04 94       	mov	r4,r2
80003952:	06 96       	mov	r6,r3
80003954:	02 92       	mov	r2,r1
80003956:	40 93       	lddsp	r3,sp[0x24]
80003958:	10 90       	mov	r0,r8
8000395a:	40 41       	lddsp	r1,sp[0x10]
8000395c:	0e 99       	mov	r9,r7
8000395e:	ed b5 00 03 	bld	r5,0x3
80003962:	c4 11       	brne	800039e4 <_vfprintf_r+0x7e8>
80003964:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003968:	40 3a       	lddsp	r10,sp[0xc]
8000396a:	58 0a       	cp.w	r10,0
8000396c:	c1 90       	breq	8000399e <_vfprintf_r+0x7a2>
8000396e:	10 36       	cp.w	r6,r8
80003970:	c6 45       	brlt	80003a38 <_vfprintf_r+0x83c>
80003972:	fa c8 f9 50 	sub	r8,sp,-1712
80003976:	1a d8       	st.w	--sp,r8
80003978:	fa c8 fa b8 	sub	r8,sp,-1352
8000397c:	1a d8       	st.w	--sp,r8
8000397e:	fa c8 fb b4 	sub	r8,sp,-1100
80003982:	0c 9b       	mov	r11,r6
80003984:	1a d8       	st.w	--sp,r8
80003986:	04 9a       	mov	r10,r2
80003988:	fa c8 f9 40 	sub	r8,sp,-1728
8000398c:	fa c9 ff b4 	sub	r9,sp,-76
80003990:	08 9c       	mov	r12,r4
80003992:	fe b0 fa 9d 	rcall	80002ecc <get_arg>
80003996:	2f dd       	sub	sp,-12
80003998:	78 16       	ld.w	r6,r12[0x4]
8000399a:	50 76       	stdsp	sp[0x1c],r6
8000399c:	c4 88       	rjmp	80003a2c <_vfprintf_r+0x830>
8000399e:	2f f7       	sub	r7,-1
800039a0:	10 39       	cp.w	r9,r8
800039a2:	c0 c4       	brge	800039ba <_vfprintf_r+0x7be>
800039a4:	fa ce f9 44 	sub	lr,sp,-1724
800039a8:	fc 06 00 36 	add	r6,lr,r6<<0x3
800039ac:	ec fc fd 8c 	ld.w	r12,r6[-628]
800039b0:	50 7c       	stdsp	sp[0x1c],r12
800039b2:	ec f6 fd 88 	ld.w	r6,r6[-632]
800039b6:	50 56       	stdsp	sp[0x14],r6
800039b8:	c6 68       	rjmp	80003a84 <_vfprintf_r+0x888>
800039ba:	41 09       	lddsp	r9,sp[0x40]
800039bc:	59 f8       	cp.w	r8,31
800039be:	e0 89 00 10 	brgt	800039de <_vfprintf_r+0x7e2>
800039c2:	f2 ca ff f8 	sub	r10,r9,-8
800039c6:	72 1b       	ld.w	r11,r9[0x4]
800039c8:	51 0a       	stdsp	sp[0x40],r10
800039ca:	72 09       	ld.w	r9,r9[0x0]
800039cc:	fa ca f9 44 	sub	r10,sp,-1724
800039d0:	50 7b       	stdsp	sp[0x1c],r11
800039d2:	50 59       	stdsp	sp[0x14],r9
800039d4:	f4 08 00 39 	add	r9,r10,r8<<0x3
800039d8:	40 5b       	lddsp	r11,sp[0x14]
800039da:	40 7a       	lddsp	r10,sp[0x1c]
800039dc:	c4 78       	rjmp	80003a6a <_vfprintf_r+0x86e>
800039de:	72 18       	ld.w	r8,r9[0x4]
800039e0:	50 78       	stdsp	sp[0x1c],r8
800039e2:	c4 c8       	rjmp	80003a7a <_vfprintf_r+0x87e>
800039e4:	fa f8 06 b4 	ld.w	r8,sp[1716]
800039e8:	40 3e       	lddsp	lr,sp[0xc]
800039ea:	58 0e       	cp.w	lr,0
800039ec:	c2 30       	breq	80003a32 <_vfprintf_r+0x836>
800039ee:	10 36       	cp.w	r6,r8
800039f0:	c0 94       	brge	80003a02 <_vfprintf_r+0x806>
800039f2:	fa cc f9 44 	sub	r12,sp,-1724
800039f6:	f8 06 00 36 	add	r6,r12,r6<<0x3
800039fa:	ec fb fd 8c 	ld.w	r11,r6[-628]
800039fe:	50 7b       	stdsp	sp[0x1c],r11
80003a00:	cd 9b       	rjmp	800039b2 <_vfprintf_r+0x7b6>
80003a02:	fa c8 f9 50 	sub	r8,sp,-1712
80003a06:	1a d8       	st.w	--sp,r8
80003a08:	fa c8 fa b8 	sub	r8,sp,-1352
80003a0c:	04 9a       	mov	r10,r2
80003a0e:	1a d8       	st.w	--sp,r8
80003a10:	fa c8 fb b4 	sub	r8,sp,-1100
80003a14:	0c 9b       	mov	r11,r6
80003a16:	1a d8       	st.w	--sp,r8
80003a18:	08 9c       	mov	r12,r4
80003a1a:	fa c8 f9 40 	sub	r8,sp,-1728
80003a1e:	fa c9 ff b4 	sub	r9,sp,-76
80003a22:	fe b0 fa 55 	rcall	80002ecc <get_arg>
80003a26:	2f dd       	sub	sp,-12
80003a28:	78 1a       	ld.w	r10,r12[0x4]
80003a2a:	50 7a       	stdsp	sp[0x1c],r10
80003a2c:	78 0c       	ld.w	r12,r12[0x0]
80003a2e:	50 5c       	stdsp	sp[0x14],r12
80003a30:	c2 a8       	rjmp	80003a84 <_vfprintf_r+0x888>
80003a32:	2f f7       	sub	r7,-1
80003a34:	10 39       	cp.w	r9,r8
80003a36:	c0 94       	brge	80003a48 <_vfprintf_r+0x84c>
80003a38:	fa c9 f9 44 	sub	r9,sp,-1724
80003a3c:	f2 06 00 36 	add	r6,r9,r6<<0x3
80003a40:	ec f8 fd 8c 	ld.w	r8,r6[-628]
80003a44:	50 78       	stdsp	sp[0x1c],r8
80003a46:	cb 6b       	rjmp	800039b2 <_vfprintf_r+0x7b6>
80003a48:	41 09       	lddsp	r9,sp[0x40]
80003a4a:	59 f8       	cp.w	r8,31
80003a4c:	e0 89 00 15 	brgt	80003a76 <_vfprintf_r+0x87a>
80003a50:	f2 ca ff f8 	sub	r10,r9,-8
80003a54:	72 16       	ld.w	r6,r9[0x4]
80003a56:	72 09       	ld.w	r9,r9[0x0]
80003a58:	51 0a       	stdsp	sp[0x40],r10
80003a5a:	50 59       	stdsp	sp[0x14],r9
80003a5c:	fa ce f9 44 	sub	lr,sp,-1724
80003a60:	50 76       	stdsp	sp[0x1c],r6
80003a62:	fc 08 00 39 	add	r9,lr,r8<<0x3
80003a66:	40 5b       	lddsp	r11,sp[0x14]
80003a68:	0c 9a       	mov	r10,r6
80003a6a:	f2 eb fd 88 	st.d	r9[-632],r10
80003a6e:	2f f8       	sub	r8,-1
80003a70:	fb 48 06 b4 	st.w	sp[1716],r8
80003a74:	c0 88       	rjmp	80003a84 <_vfprintf_r+0x888>
80003a76:	72 1c       	ld.w	r12,r9[0x4]
80003a78:	50 7c       	stdsp	sp[0x1c],r12
80003a7a:	f2 c8 ff f8 	sub	r8,r9,-8
80003a7e:	51 08       	stdsp	sp[0x40],r8
80003a80:	72 09       	ld.w	r9,r9[0x0]
80003a82:	50 59       	stdsp	sp[0x14],r9
80003a84:	40 5b       	lddsp	r11,sp[0x14]
80003a86:	40 7a       	lddsp	r10,sp[0x1c]
80003a88:	e0 a0 1c de 	rcall	80007444 <__isinfd>
80003a8c:	18 96       	mov	r6,r12
80003a8e:	c1 70       	breq	80003abc <_vfprintf_r+0x8c0>
80003a90:	30 08       	mov	r8,0
80003a92:	30 09       	mov	r9,0
80003a94:	40 5b       	lddsp	r11,sp[0x14]
80003a96:	40 7a       	lddsp	r10,sp[0x1c]
80003a98:	e0 a0 21 cc 	rcall	80007e30 <__avr32_f64_cmp_lt>
80003a9c:	c0 40       	breq	80003aa4 <_vfprintf_r+0x8a8>
80003a9e:	32 d8       	mov	r8,45
80003aa0:	fb 68 06 bb 	st.b	sp[1723],r8
80003aa4:	fe c8 ac 74 	sub	r8,pc,-21388
80003aa8:	fe c6 ac 74 	sub	r6,pc,-21388
80003aac:	a7 d5       	cbr	r5,0x7
80003aae:	e0 40 00 47 	cp.w	r0,71
80003ab2:	f0 06 17 a0 	movle	r6,r8
80003ab6:	30 32       	mov	r2,3
80003ab8:	e0 8f 06 ce 	bral	80004854 <_vfprintf_r+0x1658>
80003abc:	40 5b       	lddsp	r11,sp[0x14]
80003abe:	40 7a       	lddsp	r10,sp[0x1c]
80003ac0:	e0 a0 1c d7 	rcall	8000746e <__isnand>
80003ac4:	c0 e0       	breq	80003ae0 <_vfprintf_r+0x8e4>
80003ac6:	50 26       	stdsp	sp[0x8],r6
80003ac8:	fe c8 ac 90 	sub	r8,pc,-21360
80003acc:	fe c6 ac 90 	sub	r6,pc,-21360
80003ad0:	a7 d5       	cbr	r5,0x7
80003ad2:	e0 40 00 47 	cp.w	r0,71
80003ad6:	f0 06 17 a0 	movle	r6,r8
80003ada:	30 32       	mov	r2,3
80003adc:	e0 8f 06 c2 	bral	80004860 <_vfprintf_r+0x1664>
80003ae0:	40 2a       	lddsp	r10,sp[0x8]
80003ae2:	5b fa       	cp.w	r10,-1
80003ae4:	c0 41       	brne	80003aec <_vfprintf_r+0x8f0>
80003ae6:	30 69       	mov	r9,6
80003ae8:	50 29       	stdsp	sp[0x8],r9
80003aea:	c1 18       	rjmp	80003b0c <_vfprintf_r+0x910>
80003aec:	e0 40 00 47 	cp.w	r0,71
80003af0:	5f 09       	sreq	r9
80003af2:	e0 40 00 67 	cp.w	r0,103
80003af6:	5f 08       	sreq	r8
80003af8:	f3 e8 10 08 	or	r8,r9,r8
80003afc:	f8 08 18 00 	cp.b	r8,r12
80003b00:	c0 60       	breq	80003b0c <_vfprintf_r+0x910>
80003b02:	40 28       	lddsp	r8,sp[0x8]
80003b04:	58 08       	cp.w	r8,0
80003b06:	f9 b8 00 01 	moveq	r8,1
80003b0a:	50 28       	stdsp	sp[0x8],r8
80003b0c:	40 78       	lddsp	r8,sp[0x1c]
80003b0e:	40 59       	lddsp	r9,sp[0x14]
80003b10:	fa e9 06 94 	st.d	sp[1684],r8
80003b14:	a9 a5       	sbr	r5,0x8
80003b16:	fa f8 06 94 	ld.w	r8,sp[1684]
80003b1a:	58 08       	cp.w	r8,0
80003b1c:	c0 65       	brlt	80003b28 <_vfprintf_r+0x92c>
80003b1e:	40 5e       	lddsp	lr,sp[0x14]
80003b20:	30 0c       	mov	r12,0
80003b22:	50 6e       	stdsp	sp[0x18],lr
80003b24:	50 9c       	stdsp	sp[0x24],r12
80003b26:	c0 78       	rjmp	80003b34 <_vfprintf_r+0x938>
80003b28:	40 5b       	lddsp	r11,sp[0x14]
80003b2a:	32 da       	mov	r10,45
80003b2c:	ee 1b 80 00 	eorh	r11,0x8000
80003b30:	50 9a       	stdsp	sp[0x24],r10
80003b32:	50 6b       	stdsp	sp[0x18],r11
80003b34:	e0 40 00 46 	cp.w	r0,70
80003b38:	5f 09       	sreq	r9
80003b3a:	e0 40 00 66 	cp.w	r0,102
80003b3e:	5f 08       	sreq	r8
80003b40:	f3 e8 10 08 	or	r8,r9,r8
80003b44:	50 48       	stdsp	sp[0x10],r8
80003b46:	c0 40       	breq	80003b4e <_vfprintf_r+0x952>
80003b48:	40 22       	lddsp	r2,sp[0x8]
80003b4a:	30 39       	mov	r9,3
80003b4c:	c1 08       	rjmp	80003b6c <_vfprintf_r+0x970>
80003b4e:	e0 40 00 45 	cp.w	r0,69
80003b52:	5f 09       	sreq	r9
80003b54:	e0 40 00 65 	cp.w	r0,101
80003b58:	5f 08       	sreq	r8
80003b5a:	40 22       	lddsp	r2,sp[0x8]
80003b5c:	10 49       	or	r9,r8
80003b5e:	2f f2       	sub	r2,-1
80003b60:	40 46       	lddsp	r6,sp[0x10]
80003b62:	ec 09 18 00 	cp.b	r9,r6
80003b66:	fb f2 00 02 	ld.weq	r2,sp[0x8]
80003b6a:	30 29       	mov	r9,2
80003b6c:	fa c8 f9 5c 	sub	r8,sp,-1700
80003b70:	1a d8       	st.w	--sp,r8
80003b72:	fa c8 f9 54 	sub	r8,sp,-1708
80003b76:	1a d8       	st.w	--sp,r8
80003b78:	fa c8 f9 4c 	sub	r8,sp,-1716
80003b7c:	08 9c       	mov	r12,r4
80003b7e:	1a d8       	st.w	--sp,r8
80003b80:	04 98       	mov	r8,r2
80003b82:	40 9b       	lddsp	r11,sp[0x24]
80003b84:	40 aa       	lddsp	r10,sp[0x28]
80003b86:	e0 a0 0b c3 	rcall	8000530c <_dtoa_r>
80003b8a:	e0 40 00 47 	cp.w	r0,71
80003b8e:	5f 19       	srne	r9
80003b90:	e0 40 00 67 	cp.w	r0,103
80003b94:	5f 18       	srne	r8
80003b96:	18 96       	mov	r6,r12
80003b98:	2f dd       	sub	sp,-12
80003b9a:	f3 e8 00 08 	and	r8,r9,r8
80003b9e:	c0 41       	brne	80003ba6 <_vfprintf_r+0x9aa>
80003ba0:	ed b5 00 00 	bld	r5,0x0
80003ba4:	c3 01       	brne	80003c04 <_vfprintf_r+0xa08>
80003ba6:	ec 02 00 0e 	add	lr,r6,r2
80003baa:	50 3e       	stdsp	sp[0xc],lr
80003bac:	40 4c       	lddsp	r12,sp[0x10]
80003bae:	58 0c       	cp.w	r12,0
80003bb0:	c1 50       	breq	80003bda <_vfprintf_r+0x9de>
80003bb2:	0d 89       	ld.ub	r9,r6[0x0]
80003bb4:	33 08       	mov	r8,48
80003bb6:	f0 09 18 00 	cp.b	r9,r8
80003bba:	c0 b1       	brne	80003bd0 <_vfprintf_r+0x9d4>
80003bbc:	30 08       	mov	r8,0
80003bbe:	30 09       	mov	r9,0
80003bc0:	40 6b       	lddsp	r11,sp[0x18]
80003bc2:	40 7a       	lddsp	r10,sp[0x1c]
80003bc4:	e0 a0 20 ef 	rcall	80007da2 <__avr32_f64_cmp_eq>
80003bc8:	fb b2 00 01 	rsubeq	r2,1
80003bcc:	fb f2 0b ab 	st.weq	sp[0x6ac],r2
80003bd0:	40 3b       	lddsp	r11,sp[0xc]
80003bd2:	fa f8 06 ac 	ld.w	r8,sp[1708]
80003bd6:	10 0b       	add	r11,r8
80003bd8:	50 3b       	stdsp	sp[0xc],r11
80003bda:	40 6b       	lddsp	r11,sp[0x18]
80003bdc:	30 08       	mov	r8,0
80003bde:	30 09       	mov	r9,0
80003be0:	40 7a       	lddsp	r10,sp[0x1c]
80003be2:	e0 a0 20 e0 	rcall	80007da2 <__avr32_f64_cmp_eq>
80003be6:	c0 90       	breq	80003bf8 <_vfprintf_r+0x9fc>
80003be8:	40 3a       	lddsp	r10,sp[0xc]
80003bea:	fb 4a 06 a4 	st.w	sp[1700],r10
80003bee:	c0 58       	rjmp	80003bf8 <_vfprintf_r+0x9fc>
80003bf0:	10 c9       	st.b	r8++,r9
80003bf2:	fb 48 06 a4 	st.w	sp[1700],r8
80003bf6:	c0 28       	rjmp	80003bfa <_vfprintf_r+0x9fe>
80003bf8:	33 09       	mov	r9,48
80003bfa:	fa f8 06 a4 	ld.w	r8,sp[1700]
80003bfe:	40 3e       	lddsp	lr,sp[0xc]
80003c00:	1c 38       	cp.w	r8,lr
80003c02:	cf 73       	brcs	80003bf0 <_vfprintf_r+0x9f4>
80003c04:	e0 40 00 47 	cp.w	r0,71
80003c08:	5f 09       	sreq	r9
80003c0a:	e0 40 00 67 	cp.w	r0,103
80003c0e:	5f 08       	sreq	r8
80003c10:	f3 e8 10 08 	or	r8,r9,r8
80003c14:	fa f9 06 a4 	ld.w	r9,sp[1700]
80003c18:	0c 19       	sub	r9,r6
80003c1a:	50 69       	stdsp	sp[0x18],r9
80003c1c:	58 08       	cp.w	r8,0
80003c1e:	c0 b0       	breq	80003c34 <_vfprintf_r+0xa38>
80003c20:	fa f8 06 ac 	ld.w	r8,sp[1708]
80003c24:	5b d8       	cp.w	r8,-3
80003c26:	c0 55       	brlt	80003c30 <_vfprintf_r+0xa34>
80003c28:	40 2c       	lddsp	r12,sp[0x8]
80003c2a:	18 38       	cp.w	r8,r12
80003c2c:	e0 8a 00 6a 	brle	80003d00 <_vfprintf_r+0xb04>
80003c30:	20 20       	sub	r0,2
80003c32:	c0 58       	rjmp	80003c3c <_vfprintf_r+0xa40>
80003c34:	e0 40 00 65 	cp.w	r0,101
80003c38:	e0 89 00 46 	brgt	80003cc4 <_vfprintf_r+0xac8>
80003c3c:	fa fb 06 ac 	ld.w	r11,sp[1708]
80003c40:	fb 60 06 9c 	st.b	sp[1692],r0
80003c44:	20 1b       	sub	r11,1
80003c46:	fb 4b 06 ac 	st.w	sp[1708],r11
80003c4a:	c0 47       	brpl	80003c52 <_vfprintf_r+0xa56>
80003c4c:	5c 3b       	neg	r11
80003c4e:	32 d8       	mov	r8,45
80003c50:	c0 28       	rjmp	80003c54 <_vfprintf_r+0xa58>
80003c52:	32 b8       	mov	r8,43
80003c54:	fb 68 06 9d 	st.b	sp[1693],r8
80003c58:	58 9b       	cp.w	r11,9
80003c5a:	e0 8a 00 1d 	brle	80003c94 <_vfprintf_r+0xa98>
80003c5e:	fa c9 fa 35 	sub	r9,sp,-1483
80003c62:	30 aa       	mov	r10,10
80003c64:	12 98       	mov	r8,r9
80003c66:	0e 9c       	mov	r12,r7
80003c68:	0c 92       	mov	r2,r6
80003c6a:	f6 0a 0c 06 	divs	r6,r11,r10
80003c6e:	0e 9b       	mov	r11,r7
80003c70:	2d 0b       	sub	r11,-48
80003c72:	10 fb       	st.b	--r8,r11
80003c74:	0c 9b       	mov	r11,r6
80003c76:	58 96       	cp.w	r6,9
80003c78:	fe 99 ff f9 	brgt	80003c6a <_vfprintf_r+0xa6e>
80003c7c:	2d 0b       	sub	r11,-48
80003c7e:	18 97       	mov	r7,r12
80003c80:	04 96       	mov	r6,r2
80003c82:	10 fb       	st.b	--r8,r11
80003c84:	fa ca f9 62 	sub	r10,sp,-1694
80003c88:	c0 38       	rjmp	80003c8e <_vfprintf_r+0xa92>
80003c8a:	11 3b       	ld.ub	r11,r8++
80003c8c:	14 cb       	st.b	r10++,r11
80003c8e:	12 38       	cp.w	r8,r9
80003c90:	cf d3       	brcs	80003c8a <_vfprintf_r+0xa8e>
80003c92:	c0 98       	rjmp	80003ca4 <_vfprintf_r+0xaa8>
80003c94:	2d 0b       	sub	r11,-48
80003c96:	33 08       	mov	r8,48
80003c98:	fb 6b 06 9f 	st.b	sp[1695],r11
80003c9c:	fb 68 06 9e 	st.b	sp[1694],r8
80003ca0:	fa ca f9 60 	sub	r10,sp,-1696
80003ca4:	fa c8 f9 64 	sub	r8,sp,-1692
80003ca8:	f4 08 01 08 	sub	r8,r10,r8
80003cac:	50 e8       	stdsp	sp[0x38],r8
80003cae:	10 92       	mov	r2,r8
80003cb0:	40 6b       	lddsp	r11,sp[0x18]
80003cb2:	16 02       	add	r2,r11
80003cb4:	58 1b       	cp.w	r11,1
80003cb6:	e0 89 00 05 	brgt	80003cc0 <_vfprintf_r+0xac4>
80003cba:	ed b5 00 00 	bld	r5,0x0
80003cbe:	c3 51       	brne	80003d28 <_vfprintf_r+0xb2c>
80003cc0:	2f f2       	sub	r2,-1
80003cc2:	c3 38       	rjmp	80003d28 <_vfprintf_r+0xb2c>
80003cc4:	e0 40 00 66 	cp.w	r0,102
80003cc8:	c1 c1       	brne	80003d00 <_vfprintf_r+0xb04>
80003cca:	fa f2 06 ac 	ld.w	r2,sp[1708]
80003cce:	58 02       	cp.w	r2,0
80003cd0:	e0 8a 00 0c 	brle	80003ce8 <_vfprintf_r+0xaec>
80003cd4:	40 2a       	lddsp	r10,sp[0x8]
80003cd6:	58 0a       	cp.w	r10,0
80003cd8:	c0 41       	brne	80003ce0 <_vfprintf_r+0xae4>
80003cda:	ed b5 00 00 	bld	r5,0x0
80003cde:	c2 51       	brne	80003d28 <_vfprintf_r+0xb2c>
80003ce0:	2f f2       	sub	r2,-1
80003ce2:	40 29       	lddsp	r9,sp[0x8]
80003ce4:	12 02       	add	r2,r9
80003ce6:	c0 b8       	rjmp	80003cfc <_vfprintf_r+0xb00>
80003ce8:	40 28       	lddsp	r8,sp[0x8]
80003cea:	58 08       	cp.w	r8,0
80003cec:	c0 61       	brne	80003cf8 <_vfprintf_r+0xafc>
80003cee:	ed b5 00 00 	bld	r5,0x0
80003cf2:	c0 30       	breq	80003cf8 <_vfprintf_r+0xafc>
80003cf4:	30 12       	mov	r2,1
80003cf6:	c1 98       	rjmp	80003d28 <_vfprintf_r+0xb2c>
80003cf8:	40 22       	lddsp	r2,sp[0x8]
80003cfa:	2f e2       	sub	r2,-2
80003cfc:	36 60       	mov	r0,102
80003cfe:	c1 58       	rjmp	80003d28 <_vfprintf_r+0xb2c>
80003d00:	fa f2 06 ac 	ld.w	r2,sp[1708]
80003d04:	40 6e       	lddsp	lr,sp[0x18]
80003d06:	1c 32       	cp.w	r2,lr
80003d08:	c0 65       	brlt	80003d14 <_vfprintf_r+0xb18>
80003d0a:	ed b5 00 00 	bld	r5,0x0
80003d0e:	f7 b2 00 ff 	subeq	r2,-1
80003d12:	c0 a8       	rjmp	80003d26 <_vfprintf_r+0xb2a>
80003d14:	e4 08 11 02 	rsub	r8,r2,2
80003d18:	40 6c       	lddsp	r12,sp[0x18]
80003d1a:	58 02       	cp.w	r2,0
80003d1c:	f0 02 17 a0 	movle	r2,r8
80003d20:	f9 b2 09 01 	movgt	r2,1
80003d24:	18 02       	add	r2,r12
80003d26:	36 70       	mov	r0,103
80003d28:	40 9b       	lddsp	r11,sp[0x24]
80003d2a:	58 0b       	cp.w	r11,0
80003d2c:	e0 80 05 94 	breq	80004854 <_vfprintf_r+0x1658>
80003d30:	32 d8       	mov	r8,45
80003d32:	fb 68 06 bb 	st.b	sp[1723],r8
80003d36:	e0 8f 05 93 	bral	8000485c <_vfprintf_r+0x1660>
80003d3a:	50 a7       	stdsp	sp[0x28],r7
80003d3c:	04 94       	mov	r4,r2
80003d3e:	0c 97       	mov	r7,r6
80003d40:	02 92       	mov	r2,r1
80003d42:	06 96       	mov	r6,r3
80003d44:	40 41       	lddsp	r1,sp[0x10]
80003d46:	40 93       	lddsp	r3,sp[0x24]
80003d48:	0e 99       	mov	r9,r7
80003d4a:	ed b5 00 05 	bld	r5,0x5
80003d4e:	c4 81       	brne	80003dde <_vfprintf_r+0xbe2>
80003d50:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003d54:	40 3e       	lddsp	lr,sp[0xc]
80003d56:	58 0e       	cp.w	lr,0
80003d58:	c1 d0       	breq	80003d92 <_vfprintf_r+0xb96>
80003d5a:	10 36       	cp.w	r6,r8
80003d5c:	c0 64       	brge	80003d68 <_vfprintf_r+0xb6c>
80003d5e:	fa cc f9 44 	sub	r12,sp,-1724
80003d62:	f8 06 00 36 	add	r6,r12,r6<<0x3
80003d66:	c1 d8       	rjmp	80003da0 <_vfprintf_r+0xba4>
80003d68:	fa c8 f9 50 	sub	r8,sp,-1712
80003d6c:	1a d8       	st.w	--sp,r8
80003d6e:	fa c8 fa b8 	sub	r8,sp,-1352
80003d72:	04 9a       	mov	r10,r2
80003d74:	1a d8       	st.w	--sp,r8
80003d76:	fa c8 fb b4 	sub	r8,sp,-1100
80003d7a:	0c 9b       	mov	r11,r6
80003d7c:	1a d8       	st.w	--sp,r8
80003d7e:	08 9c       	mov	r12,r4
80003d80:	fa c8 f9 40 	sub	r8,sp,-1728
80003d84:	fa c9 ff b4 	sub	r9,sp,-76
80003d88:	fe b0 f8 a2 	rcall	80002ecc <get_arg>
80003d8c:	2f dd       	sub	sp,-12
80003d8e:	78 0a       	ld.w	r10,r12[0x0]
80003d90:	c2 08       	rjmp	80003dd0 <_vfprintf_r+0xbd4>
80003d92:	2f f7       	sub	r7,-1
80003d94:	10 39       	cp.w	r9,r8
80003d96:	c0 84       	brge	80003da6 <_vfprintf_r+0xbaa>
80003d98:	fa cb f9 44 	sub	r11,sp,-1724
80003d9c:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003da0:	ec fa fd 88 	ld.w	r10,r6[-632]
80003da4:	c1 68       	rjmp	80003dd0 <_vfprintf_r+0xbd4>
80003da6:	41 09       	lddsp	r9,sp[0x40]
80003da8:	59 f8       	cp.w	r8,31
80003daa:	e0 89 00 10 	brgt	80003dca <_vfprintf_r+0xbce>
80003dae:	f2 ca ff fc 	sub	r10,r9,-4
80003db2:	51 0a       	stdsp	sp[0x40],r10
80003db4:	fa c6 f9 44 	sub	r6,sp,-1724
80003db8:	72 0a       	ld.w	r10,r9[0x0]
80003dba:	ec 08 00 39 	add	r9,r6,r8<<0x3
80003dbe:	f3 4a fd 88 	st.w	r9[-632],r10
80003dc2:	2f f8       	sub	r8,-1
80003dc4:	fb 48 06 b4 	st.w	sp[1716],r8
80003dc8:	c0 48       	rjmp	80003dd0 <_vfprintf_r+0xbd4>
80003dca:	72 0a       	ld.w	r10,r9[0x0]
80003dcc:	2f c9       	sub	r9,-4
80003dce:	51 09       	stdsp	sp[0x40],r9
80003dd0:	40 be       	lddsp	lr,sp[0x2c]
80003dd2:	1c 98       	mov	r8,lr
80003dd4:	95 1e       	st.w	r10[0x4],lr
80003dd6:	bf 58       	asr	r8,0x1f
80003dd8:	95 08       	st.w	r10[0x0],r8
80003dda:	fe 9f fa 9f 	bral	80003318 <_vfprintf_r+0x11c>
80003dde:	ed b5 00 04 	bld	r5,0x4
80003de2:	c4 80       	breq	80003e72 <_vfprintf_r+0xc76>
80003de4:	e2 15 00 40 	andl	r5,0x40,COH
80003de8:	c4 50       	breq	80003e72 <_vfprintf_r+0xc76>
80003dea:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003dee:	40 3c       	lddsp	r12,sp[0xc]
80003df0:	58 0c       	cp.w	r12,0
80003df2:	c1 d0       	breq	80003e2c <_vfprintf_r+0xc30>
80003df4:	10 36       	cp.w	r6,r8
80003df6:	c0 64       	brge	80003e02 <_vfprintf_r+0xc06>
80003df8:	fa cb f9 44 	sub	r11,sp,-1724
80003dfc:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003e00:	c1 d8       	rjmp	80003e3a <_vfprintf_r+0xc3e>
80003e02:	fa c8 f9 50 	sub	r8,sp,-1712
80003e06:	1a d8       	st.w	--sp,r8
80003e08:	fa c8 fa b8 	sub	r8,sp,-1352
80003e0c:	04 9a       	mov	r10,r2
80003e0e:	1a d8       	st.w	--sp,r8
80003e10:	fa c8 fb b4 	sub	r8,sp,-1100
80003e14:	0c 9b       	mov	r11,r6
80003e16:	1a d8       	st.w	--sp,r8
80003e18:	08 9c       	mov	r12,r4
80003e1a:	fa c8 f9 40 	sub	r8,sp,-1728
80003e1e:	fa c9 ff b4 	sub	r9,sp,-76
80003e22:	fe b0 f8 55 	rcall	80002ecc <get_arg>
80003e26:	2f dd       	sub	sp,-12
80003e28:	78 0a       	ld.w	r10,r12[0x0]
80003e2a:	c2 08       	rjmp	80003e6a <_vfprintf_r+0xc6e>
80003e2c:	2f f7       	sub	r7,-1
80003e2e:	10 39       	cp.w	r9,r8
80003e30:	c0 84       	brge	80003e40 <_vfprintf_r+0xc44>
80003e32:	fa ca f9 44 	sub	r10,sp,-1724
80003e36:	f4 06 00 36 	add	r6,r10,r6<<0x3
80003e3a:	ec fa fd 88 	ld.w	r10,r6[-632]
80003e3e:	c1 68       	rjmp	80003e6a <_vfprintf_r+0xc6e>
80003e40:	41 09       	lddsp	r9,sp[0x40]
80003e42:	59 f8       	cp.w	r8,31
80003e44:	e0 89 00 10 	brgt	80003e64 <_vfprintf_r+0xc68>
80003e48:	f2 ca ff fc 	sub	r10,r9,-4
80003e4c:	51 0a       	stdsp	sp[0x40],r10
80003e4e:	fa c6 f9 44 	sub	r6,sp,-1724
80003e52:	72 0a       	ld.w	r10,r9[0x0]
80003e54:	ec 08 00 39 	add	r9,r6,r8<<0x3
80003e58:	f3 4a fd 88 	st.w	r9[-632],r10
80003e5c:	2f f8       	sub	r8,-1
80003e5e:	fb 48 06 b4 	st.w	sp[1716],r8
80003e62:	c0 48       	rjmp	80003e6a <_vfprintf_r+0xc6e>
80003e64:	72 0a       	ld.w	r10,r9[0x0]
80003e66:	2f c9       	sub	r9,-4
80003e68:	51 09       	stdsp	sp[0x40],r9
80003e6a:	40 be       	lddsp	lr,sp[0x2c]
80003e6c:	b4 0e       	st.h	r10[0x0],lr
80003e6e:	fe 9f fa 55 	bral	80003318 <_vfprintf_r+0x11c>
80003e72:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003e76:	40 3c       	lddsp	r12,sp[0xc]
80003e78:	58 0c       	cp.w	r12,0
80003e7a:	c1 d0       	breq	80003eb4 <_vfprintf_r+0xcb8>
80003e7c:	10 36       	cp.w	r6,r8
80003e7e:	c0 64       	brge	80003e8a <_vfprintf_r+0xc8e>
80003e80:	fa cb f9 44 	sub	r11,sp,-1724
80003e84:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003e88:	c1 d8       	rjmp	80003ec2 <_vfprintf_r+0xcc6>
80003e8a:	fa c8 f9 50 	sub	r8,sp,-1712
80003e8e:	1a d8       	st.w	--sp,r8
80003e90:	fa c8 fa b8 	sub	r8,sp,-1352
80003e94:	04 9a       	mov	r10,r2
80003e96:	1a d8       	st.w	--sp,r8
80003e98:	fa c8 fb b4 	sub	r8,sp,-1100
80003e9c:	0c 9b       	mov	r11,r6
80003e9e:	1a d8       	st.w	--sp,r8
80003ea0:	08 9c       	mov	r12,r4
80003ea2:	fa c8 f9 40 	sub	r8,sp,-1728
80003ea6:	fa c9 ff b4 	sub	r9,sp,-76
80003eaa:	fe b0 f8 11 	rcall	80002ecc <get_arg>
80003eae:	2f dd       	sub	sp,-12
80003eb0:	78 0a       	ld.w	r10,r12[0x0]
80003eb2:	c2 08       	rjmp	80003ef2 <_vfprintf_r+0xcf6>
80003eb4:	2f f7       	sub	r7,-1
80003eb6:	10 39       	cp.w	r9,r8
80003eb8:	c0 84       	brge	80003ec8 <_vfprintf_r+0xccc>
80003eba:	fa ca f9 44 	sub	r10,sp,-1724
80003ebe:	f4 06 00 36 	add	r6,r10,r6<<0x3
80003ec2:	ec fa fd 88 	ld.w	r10,r6[-632]
80003ec6:	c1 68       	rjmp	80003ef2 <_vfprintf_r+0xcf6>
80003ec8:	41 09       	lddsp	r9,sp[0x40]
80003eca:	59 f8       	cp.w	r8,31
80003ecc:	e0 89 00 10 	brgt	80003eec <_vfprintf_r+0xcf0>
80003ed0:	f2 ca ff fc 	sub	r10,r9,-4
80003ed4:	51 0a       	stdsp	sp[0x40],r10
80003ed6:	fa c6 f9 44 	sub	r6,sp,-1724
80003eda:	72 0a       	ld.w	r10,r9[0x0]
80003edc:	ec 08 00 39 	add	r9,r6,r8<<0x3
80003ee0:	f3 4a fd 88 	st.w	r9[-632],r10
80003ee4:	2f f8       	sub	r8,-1
80003ee6:	fb 48 06 b4 	st.w	sp[1716],r8
80003eea:	c0 48       	rjmp	80003ef2 <_vfprintf_r+0xcf6>
80003eec:	72 0a       	ld.w	r10,r9[0x0]
80003eee:	2f c9       	sub	r9,-4
80003ef0:	51 09       	stdsp	sp[0x40],r9
80003ef2:	40 be       	lddsp	lr,sp[0x2c]
80003ef4:	95 0e       	st.w	r10[0x0],lr
80003ef6:	fe 9f fa 11 	bral	80003318 <_vfprintf_r+0x11c>
80003efa:	50 a7       	stdsp	sp[0x28],r7
80003efc:	50 80       	stdsp	sp[0x20],r0
80003efe:	0c 97       	mov	r7,r6
80003f00:	04 94       	mov	r4,r2
80003f02:	06 96       	mov	r6,r3
80003f04:	02 92       	mov	r2,r1
80003f06:	40 93       	lddsp	r3,sp[0x24]
80003f08:	10 90       	mov	r0,r8
80003f0a:	40 41       	lddsp	r1,sp[0x10]
80003f0c:	a5 a5       	sbr	r5,0x4
80003f0e:	c0 a8       	rjmp	80003f22 <_vfprintf_r+0xd26>
80003f10:	50 a7       	stdsp	sp[0x28],r7
80003f12:	50 80       	stdsp	sp[0x20],r0
80003f14:	0c 97       	mov	r7,r6
80003f16:	04 94       	mov	r4,r2
80003f18:	06 96       	mov	r6,r3
80003f1a:	02 92       	mov	r2,r1
80003f1c:	40 93       	lddsp	r3,sp[0x24]
80003f1e:	10 90       	mov	r0,r8
80003f20:	40 41       	lddsp	r1,sp[0x10]
80003f22:	ed b5 00 05 	bld	r5,0x5
80003f26:	c5 d1       	brne	80003fe0 <_vfprintf_r+0xde4>
80003f28:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003f2c:	40 3c       	lddsp	r12,sp[0xc]
80003f2e:	58 0c       	cp.w	r12,0
80003f30:	c2 60       	breq	80003f7c <_vfprintf_r+0xd80>
80003f32:	10 36       	cp.w	r6,r8
80003f34:	c0 a4       	brge	80003f48 <_vfprintf_r+0xd4c>
80003f36:	fa cb f9 44 	sub	r11,sp,-1724
80003f3a:	f6 06 00 36 	add	r6,r11,r6<<0x3
80003f3e:	ec e8 fd 88 	ld.d	r8,r6[-632]
80003f42:	fa e9 00 00 	st.d	sp[0],r8
80003f46:	c1 88       	rjmp	80003f76 <_vfprintf_r+0xd7a>
80003f48:	fa c8 f9 50 	sub	r8,sp,-1712
80003f4c:	1a d8       	st.w	--sp,r8
80003f4e:	fa c8 fa b8 	sub	r8,sp,-1352
80003f52:	04 9a       	mov	r10,r2
80003f54:	1a d8       	st.w	--sp,r8
80003f56:	0c 9b       	mov	r11,r6
80003f58:	fa c8 fb b4 	sub	r8,sp,-1100
80003f5c:	08 9c       	mov	r12,r4
80003f5e:	1a d8       	st.w	--sp,r8
80003f60:	fa c8 f9 40 	sub	r8,sp,-1728
80003f64:	fa c9 ff b4 	sub	r9,sp,-76
80003f68:	fe b0 f7 b2 	rcall	80002ecc <get_arg>
80003f6c:	2f dd       	sub	sp,-12
80003f6e:	f8 ea 00 00 	ld.d	r10,r12[0]
80003f72:	fa eb 00 00 	st.d	sp[0],r10
80003f76:	30 08       	mov	r8,0
80003f78:	e0 8f 03 de 	bral	80004734 <_vfprintf_r+0x1538>
80003f7c:	ee ca ff ff 	sub	r10,r7,-1
80003f80:	10 37       	cp.w	r7,r8
80003f82:	c0 b4       	brge	80003f98 <_vfprintf_r+0xd9c>
80003f84:	fa c9 f9 44 	sub	r9,sp,-1724
80003f88:	14 97       	mov	r7,r10
80003f8a:	f2 06 00 36 	add	r6,r9,r6<<0x3
80003f8e:	ec ea fd 88 	ld.d	r10,r6[-632]
80003f92:	fa eb 00 00 	st.d	sp[0],r10
80003f96:	c1 88       	rjmp	80003fc6 <_vfprintf_r+0xdca>
80003f98:	41 09       	lddsp	r9,sp[0x40]
80003f9a:	59 f8       	cp.w	r8,31
80003f9c:	e0 89 00 18 	brgt	80003fcc <_vfprintf_r+0xdd0>
80003fa0:	f2 e6 00 00 	ld.d	r6,r9[0]
80003fa4:	f2 cb ff f8 	sub	r11,r9,-8
80003fa8:	fa e7 00 00 	st.d	sp[0],r6
80003fac:	51 0b       	stdsp	sp[0x40],r11
80003fae:	fa c6 f9 44 	sub	r6,sp,-1724
80003fb2:	ec 08 00 39 	add	r9,r6,r8<<0x3
80003fb6:	fa e6 00 00 	ld.d	r6,sp[0]
80003fba:	f2 e7 fd 88 	st.d	r9[-632],r6
80003fbe:	2f f8       	sub	r8,-1
80003fc0:	14 97       	mov	r7,r10
80003fc2:	fb 48 06 b4 	st.w	sp[1716],r8
80003fc6:	40 38       	lddsp	r8,sp[0xc]
80003fc8:	e0 8f 03 b6 	bral	80004734 <_vfprintf_r+0x1538>
80003fcc:	f2 e6 00 00 	ld.d	r6,r9[0]
80003fd0:	40 38       	lddsp	r8,sp[0xc]
80003fd2:	fa e7 00 00 	st.d	sp[0],r6
80003fd6:	2f 89       	sub	r9,-8
80003fd8:	14 97       	mov	r7,r10
80003fda:	51 09       	stdsp	sp[0x40],r9
80003fdc:	e0 8f 03 ac 	bral	80004734 <_vfprintf_r+0x1538>
80003fe0:	ed b5 00 04 	bld	r5,0x4
80003fe4:	c1 61       	brne	80004010 <_vfprintf_r+0xe14>
80003fe6:	fa f8 06 b4 	ld.w	r8,sp[1716]
80003fea:	40 3e       	lddsp	lr,sp[0xc]
80003fec:	58 0e       	cp.w	lr,0
80003fee:	c0 80       	breq	80003ffe <_vfprintf_r+0xe02>
80003ff0:	10 36       	cp.w	r6,r8
80003ff2:	c6 74       	brge	800040c0 <_vfprintf_r+0xec4>
80003ff4:	fa cc f9 44 	sub	r12,sp,-1724
80003ff8:	f8 06 00 36 	add	r6,r12,r6<<0x3
80003ffc:	c8 08       	rjmp	800040fc <_vfprintf_r+0xf00>
80003ffe:	ee ca ff ff 	sub	r10,r7,-1
80004002:	10 37       	cp.w	r7,r8
80004004:	c7 f4       	brge	80004102 <_vfprintf_r+0xf06>
80004006:	fa cb f9 44 	sub	r11,sp,-1724
8000400a:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000400e:	c7 68       	rjmp	800040fa <_vfprintf_r+0xefe>
80004010:	ed b5 00 06 	bld	r5,0x6
80004014:	c4 a1       	brne	800040a8 <_vfprintf_r+0xeac>
80004016:	fa f8 06 b4 	ld.w	r8,sp[1716]
8000401a:	40 3c       	lddsp	r12,sp[0xc]
8000401c:	58 0c       	cp.w	r12,0
8000401e:	c1 d0       	breq	80004058 <_vfprintf_r+0xe5c>
80004020:	10 36       	cp.w	r6,r8
80004022:	c0 64       	brge	8000402e <_vfprintf_r+0xe32>
80004024:	fa cb f9 44 	sub	r11,sp,-1724
80004028:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000402c:	c1 f8       	rjmp	8000406a <_vfprintf_r+0xe6e>
8000402e:	fa c8 f9 50 	sub	r8,sp,-1712
80004032:	1a d8       	st.w	--sp,r8
80004034:	fa c8 fa b8 	sub	r8,sp,-1352
80004038:	1a d8       	st.w	--sp,r8
8000403a:	fa c8 fb b4 	sub	r8,sp,-1100
8000403e:	1a d8       	st.w	--sp,r8
80004040:	fa c8 f9 40 	sub	r8,sp,-1728
80004044:	fa c9 ff b4 	sub	r9,sp,-76
80004048:	04 9a       	mov	r10,r2
8000404a:	0c 9b       	mov	r11,r6
8000404c:	08 9c       	mov	r12,r4
8000404e:	fe b0 f7 3f 	rcall	80002ecc <get_arg>
80004052:	2f dd       	sub	sp,-12
80004054:	98 18       	ld.sh	r8,r12[0x2]
80004056:	c2 68       	rjmp	800040a2 <_vfprintf_r+0xea6>
80004058:	ee ca ff ff 	sub	r10,r7,-1
8000405c:	10 37       	cp.w	r7,r8
8000405e:	c0 94       	brge	80004070 <_vfprintf_r+0xe74>
80004060:	fa c9 f9 44 	sub	r9,sp,-1724
80004064:	14 97       	mov	r7,r10
80004066:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000406a:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
8000406e:	c1 a8       	rjmp	800040a2 <_vfprintf_r+0xea6>
80004070:	41 09       	lddsp	r9,sp[0x40]
80004072:	59 f8       	cp.w	r8,31
80004074:	e0 89 00 13 	brgt	8000409a <_vfprintf_r+0xe9e>
80004078:	f2 cb ff fc 	sub	r11,r9,-4
8000407c:	51 0b       	stdsp	sp[0x40],r11
8000407e:	72 09       	ld.w	r9,r9[0x0]
80004080:	fa c6 f9 44 	sub	r6,sp,-1724
80004084:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004088:	2f f8       	sub	r8,-1
8000408a:	f7 49 fd 88 	st.w	r11[-632],r9
8000408e:	fb 48 06 b4 	st.w	sp[1716],r8
80004092:	14 97       	mov	r7,r10
80004094:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004098:	c0 58       	rjmp	800040a2 <_vfprintf_r+0xea6>
8000409a:	92 18       	ld.sh	r8,r9[0x2]
8000409c:	14 97       	mov	r7,r10
8000409e:	2f c9       	sub	r9,-4
800040a0:	51 09       	stdsp	sp[0x40],r9
800040a2:	5c 78       	castu.h	r8
800040a4:	50 18       	stdsp	sp[0x4],r8
800040a6:	c4 68       	rjmp	80004132 <_vfprintf_r+0xf36>
800040a8:	fa f8 06 b4 	ld.w	r8,sp[1716]
800040ac:	40 3c       	lddsp	r12,sp[0xc]
800040ae:	58 0c       	cp.w	r12,0
800040b0:	c1 d0       	breq	800040ea <_vfprintf_r+0xeee>
800040b2:	10 36       	cp.w	r6,r8
800040b4:	c0 64       	brge	800040c0 <_vfprintf_r+0xec4>
800040b6:	fa cb f9 44 	sub	r11,sp,-1724
800040ba:	f6 06 00 36 	add	r6,r11,r6<<0x3
800040be:	c1 f8       	rjmp	800040fc <_vfprintf_r+0xf00>
800040c0:	fa c8 f9 50 	sub	r8,sp,-1712
800040c4:	1a d8       	st.w	--sp,r8
800040c6:	fa c8 fa b8 	sub	r8,sp,-1352
800040ca:	0c 9b       	mov	r11,r6
800040cc:	1a d8       	st.w	--sp,r8
800040ce:	fa c8 fb b4 	sub	r8,sp,-1100
800040d2:	04 9a       	mov	r10,r2
800040d4:	1a d8       	st.w	--sp,r8
800040d6:	08 9c       	mov	r12,r4
800040d8:	fa c8 f9 40 	sub	r8,sp,-1728
800040dc:	fa c9 ff b4 	sub	r9,sp,-76
800040e0:	fe b0 f6 f6 	rcall	80002ecc <get_arg>
800040e4:	2f dd       	sub	sp,-12
800040e6:	78 0b       	ld.w	r11,r12[0x0]
800040e8:	c2 48       	rjmp	80004130 <_vfprintf_r+0xf34>
800040ea:	ee ca ff ff 	sub	r10,r7,-1
800040ee:	10 37       	cp.w	r7,r8
800040f0:	c0 94       	brge	80004102 <_vfprintf_r+0xf06>
800040f2:	fa c9 f9 44 	sub	r9,sp,-1724
800040f6:	f2 06 00 36 	add	r6,r9,r6<<0x3
800040fa:	14 97       	mov	r7,r10
800040fc:	ec fb fd 88 	ld.w	r11,r6[-632]
80004100:	c1 88       	rjmp	80004130 <_vfprintf_r+0xf34>
80004102:	41 09       	lddsp	r9,sp[0x40]
80004104:	59 f8       	cp.w	r8,31
80004106:	e0 89 00 11 	brgt	80004128 <_vfprintf_r+0xf2c>
8000410a:	f2 cb ff fc 	sub	r11,r9,-4
8000410e:	51 0b       	stdsp	sp[0x40],r11
80004110:	fa c6 f9 44 	sub	r6,sp,-1724
80004114:	72 0b       	ld.w	r11,r9[0x0]
80004116:	ec 08 00 39 	add	r9,r6,r8<<0x3
8000411a:	f3 4b fd 88 	st.w	r9[-632],r11
8000411e:	2f f8       	sub	r8,-1
80004120:	14 97       	mov	r7,r10
80004122:	fb 48 06 b4 	st.w	sp[1716],r8
80004126:	c0 58       	rjmp	80004130 <_vfprintf_r+0xf34>
80004128:	72 0b       	ld.w	r11,r9[0x0]
8000412a:	14 97       	mov	r7,r10
8000412c:	2f c9       	sub	r9,-4
8000412e:	51 09       	stdsp	sp[0x40],r9
80004130:	50 1b       	stdsp	sp[0x4],r11
80004132:	30 0e       	mov	lr,0
80004134:	50 0e       	stdsp	sp[0x0],lr
80004136:	1c 98       	mov	r8,lr
80004138:	e0 8f 02 fe 	bral	80004734 <_vfprintf_r+0x1538>
8000413c:	50 a7       	stdsp	sp[0x28],r7
8000413e:	50 80       	stdsp	sp[0x20],r0
80004140:	0c 97       	mov	r7,r6
80004142:	04 94       	mov	r4,r2
80004144:	06 96       	mov	r6,r3
80004146:	02 92       	mov	r2,r1
80004148:	40 93       	lddsp	r3,sp[0x24]
8000414a:	40 41       	lddsp	r1,sp[0x10]
8000414c:	0e 99       	mov	r9,r7
8000414e:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004152:	40 3c       	lddsp	r12,sp[0xc]
80004154:	58 0c       	cp.w	r12,0
80004156:	c1 d0       	breq	80004190 <_vfprintf_r+0xf94>
80004158:	10 36       	cp.w	r6,r8
8000415a:	c0 64       	brge	80004166 <_vfprintf_r+0xf6a>
8000415c:	fa cb f9 44 	sub	r11,sp,-1724
80004160:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004164:	c1 d8       	rjmp	8000419e <_vfprintf_r+0xfa2>
80004166:	fa c8 f9 50 	sub	r8,sp,-1712
8000416a:	1a d8       	st.w	--sp,r8
8000416c:	fa c8 fa b8 	sub	r8,sp,-1352
80004170:	1a d8       	st.w	--sp,r8
80004172:	fa c8 fb b4 	sub	r8,sp,-1100
80004176:	1a d8       	st.w	--sp,r8
80004178:	fa c9 ff b4 	sub	r9,sp,-76
8000417c:	fa c8 f9 40 	sub	r8,sp,-1728
80004180:	04 9a       	mov	r10,r2
80004182:	0c 9b       	mov	r11,r6
80004184:	08 9c       	mov	r12,r4
80004186:	fe b0 f6 a3 	rcall	80002ecc <get_arg>
8000418a:	2f dd       	sub	sp,-12
8000418c:	78 09       	ld.w	r9,r12[0x0]
8000418e:	c2 18       	rjmp	800041d0 <_vfprintf_r+0xfd4>
80004190:	2f f7       	sub	r7,-1
80004192:	10 39       	cp.w	r9,r8
80004194:	c0 84       	brge	800041a4 <_vfprintf_r+0xfa8>
80004196:	fa ca f9 44 	sub	r10,sp,-1724
8000419a:	f4 06 00 36 	add	r6,r10,r6<<0x3
8000419e:	ec f9 fd 88 	ld.w	r9,r6[-632]
800041a2:	c1 78       	rjmp	800041d0 <_vfprintf_r+0xfd4>
800041a4:	41 09       	lddsp	r9,sp[0x40]
800041a6:	59 f8       	cp.w	r8,31
800041a8:	e0 89 00 10 	brgt	800041c8 <_vfprintf_r+0xfcc>
800041ac:	f2 ca ff fc 	sub	r10,r9,-4
800041b0:	51 0a       	stdsp	sp[0x40],r10
800041b2:	fa c6 f9 44 	sub	r6,sp,-1724
800041b6:	72 09       	ld.w	r9,r9[0x0]
800041b8:	ec 08 00 3a 	add	r10,r6,r8<<0x3
800041bc:	f5 49 fd 88 	st.w	r10[-632],r9
800041c0:	2f f8       	sub	r8,-1
800041c2:	fb 48 06 b4 	st.w	sp[1716],r8
800041c6:	c0 58       	rjmp	800041d0 <_vfprintf_r+0xfd4>
800041c8:	f2 c8 ff fc 	sub	r8,r9,-4
800041cc:	51 08       	stdsp	sp[0x40],r8
800041ce:	72 09       	ld.w	r9,r9[0x0]
800041d0:	33 08       	mov	r8,48
800041d2:	fb 68 06 b8 	st.b	sp[1720],r8
800041d6:	37 88       	mov	r8,120
800041d8:	30 0e       	mov	lr,0
800041da:	fb 68 06 b9 	st.b	sp[1721],r8
800041de:	fe cc b3 9e 	sub	r12,pc,-19554
800041e2:	50 19       	stdsp	sp[0x4],r9
800041e4:	a1 b5       	sbr	r5,0x1
800041e6:	50 0e       	stdsp	sp[0x0],lr
800041e8:	50 dc       	stdsp	sp[0x34],r12
800041ea:	30 28       	mov	r8,2
800041ec:	37 80       	mov	r0,120
800041ee:	e0 8f 02 a3 	bral	80004734 <_vfprintf_r+0x1538>
800041f2:	50 a7       	stdsp	sp[0x28],r7
800041f4:	50 80       	stdsp	sp[0x20],r0
800041f6:	10 90       	mov	r0,r8
800041f8:	30 08       	mov	r8,0
800041fa:	fb 68 06 bb 	st.b	sp[1723],r8
800041fe:	0c 97       	mov	r7,r6
80004200:	04 94       	mov	r4,r2
80004202:	06 96       	mov	r6,r3
80004204:	02 92       	mov	r2,r1
80004206:	40 93       	lddsp	r3,sp[0x24]
80004208:	40 41       	lddsp	r1,sp[0x10]
8000420a:	0e 99       	mov	r9,r7
8000420c:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004210:	40 3b       	lddsp	r11,sp[0xc]
80004212:	58 0b       	cp.w	r11,0
80004214:	c1 d0       	breq	8000424e <_vfprintf_r+0x1052>
80004216:	10 36       	cp.w	r6,r8
80004218:	c0 64       	brge	80004224 <_vfprintf_r+0x1028>
8000421a:	fa ca f9 44 	sub	r10,sp,-1724
8000421e:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004222:	c1 d8       	rjmp	8000425c <_vfprintf_r+0x1060>
80004224:	fa c8 f9 50 	sub	r8,sp,-1712
80004228:	1a d8       	st.w	--sp,r8
8000422a:	fa c8 fa b8 	sub	r8,sp,-1352
8000422e:	1a d8       	st.w	--sp,r8
80004230:	fa c8 fb b4 	sub	r8,sp,-1100
80004234:	0c 9b       	mov	r11,r6
80004236:	1a d8       	st.w	--sp,r8
80004238:	04 9a       	mov	r10,r2
8000423a:	fa c8 f9 40 	sub	r8,sp,-1728
8000423e:	fa c9 ff b4 	sub	r9,sp,-76
80004242:	08 9c       	mov	r12,r4
80004244:	fe b0 f6 44 	rcall	80002ecc <get_arg>
80004248:	2f dd       	sub	sp,-12
8000424a:	78 06       	ld.w	r6,r12[0x0]
8000424c:	c2 08       	rjmp	8000428c <_vfprintf_r+0x1090>
8000424e:	2f f7       	sub	r7,-1
80004250:	10 39       	cp.w	r9,r8
80004252:	c0 84       	brge	80004262 <_vfprintf_r+0x1066>
80004254:	fa c9 f9 44 	sub	r9,sp,-1724
80004258:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000425c:	ec f6 fd 88 	ld.w	r6,r6[-632]
80004260:	c1 68       	rjmp	8000428c <_vfprintf_r+0x1090>
80004262:	41 09       	lddsp	r9,sp[0x40]
80004264:	59 f8       	cp.w	r8,31
80004266:	e0 89 00 10 	brgt	80004286 <_vfprintf_r+0x108a>
8000426a:	f2 ca ff fc 	sub	r10,r9,-4
8000426e:	51 0a       	stdsp	sp[0x40],r10
80004270:	72 06       	ld.w	r6,r9[0x0]
80004272:	fa ce f9 44 	sub	lr,sp,-1724
80004276:	fc 08 00 39 	add	r9,lr,r8<<0x3
8000427a:	f3 46 fd 88 	st.w	r9[-632],r6
8000427e:	2f f8       	sub	r8,-1
80004280:	fb 48 06 b4 	st.w	sp[1716],r8
80004284:	c0 48       	rjmp	8000428c <_vfprintf_r+0x1090>
80004286:	72 06       	ld.w	r6,r9[0x0]
80004288:	2f c9       	sub	r9,-4
8000428a:	51 09       	stdsp	sp[0x40],r9
8000428c:	40 2c       	lddsp	r12,sp[0x8]
8000428e:	58 0c       	cp.w	r12,0
80004290:	c1 05       	brlt	800042b0 <_vfprintf_r+0x10b4>
80004292:	18 9a       	mov	r10,r12
80004294:	30 0b       	mov	r11,0
80004296:	0c 9c       	mov	r12,r6
80004298:	e0 a0 14 58 	rcall	80006b48 <memchr>
8000429c:	e0 80 02 df 	breq	8000485a <_vfprintf_r+0x165e>
800042a0:	f8 06 01 02 	sub	r2,r12,r6
800042a4:	40 2b       	lddsp	r11,sp[0x8]
800042a6:	16 32       	cp.w	r2,r11
800042a8:	e0 89 02 d9 	brgt	8000485a <_vfprintf_r+0x165e>
800042ac:	e0 8f 02 d4 	bral	80004854 <_vfprintf_r+0x1658>
800042b0:	30 0a       	mov	r10,0
800042b2:	0c 9c       	mov	r12,r6
800042b4:	50 2a       	stdsp	sp[0x8],r10
800042b6:	e0 a0 19 33 	rcall	8000751c <strlen>
800042ba:	18 92       	mov	r2,r12
800042bc:	e0 8f 02 d2 	bral	80004860 <_vfprintf_r+0x1664>
800042c0:	50 a7       	stdsp	sp[0x28],r7
800042c2:	50 80       	stdsp	sp[0x20],r0
800042c4:	0c 97       	mov	r7,r6
800042c6:	04 94       	mov	r4,r2
800042c8:	06 96       	mov	r6,r3
800042ca:	02 92       	mov	r2,r1
800042cc:	40 93       	lddsp	r3,sp[0x24]
800042ce:	10 90       	mov	r0,r8
800042d0:	40 41       	lddsp	r1,sp[0x10]
800042d2:	a5 a5       	sbr	r5,0x4
800042d4:	c0 a8       	rjmp	800042e8 <_vfprintf_r+0x10ec>
800042d6:	50 a7       	stdsp	sp[0x28],r7
800042d8:	50 80       	stdsp	sp[0x20],r0
800042da:	0c 97       	mov	r7,r6
800042dc:	04 94       	mov	r4,r2
800042de:	06 96       	mov	r6,r3
800042e0:	02 92       	mov	r2,r1
800042e2:	40 93       	lddsp	r3,sp[0x24]
800042e4:	10 90       	mov	r0,r8
800042e6:	40 41       	lddsp	r1,sp[0x10]
800042e8:	ed b5 00 05 	bld	r5,0x5
800042ec:	c5 61       	brne	80004398 <_vfprintf_r+0x119c>
800042ee:	fa f8 06 b4 	ld.w	r8,sp[1716]
800042f2:	40 39       	lddsp	r9,sp[0xc]
800042f4:	58 09       	cp.w	r9,0
800042f6:	c2 10       	breq	80004338 <_vfprintf_r+0x113c>
800042f8:	10 36       	cp.w	r6,r8
800042fa:	c0 74       	brge	80004308 <_vfprintf_r+0x110c>
800042fc:	fa c8 f9 44 	sub	r8,sp,-1724
80004300:	f0 06 00 36 	add	r6,r8,r6<<0x3
80004304:	c2 38       	rjmp	8000434a <_vfprintf_r+0x114e>
80004306:	d7 03       	nop
80004308:	fa c8 f9 50 	sub	r8,sp,-1712
8000430c:	1a d8       	st.w	--sp,r8
8000430e:	fa c8 fa b8 	sub	r8,sp,-1352
80004312:	1a d8       	st.w	--sp,r8
80004314:	fa c8 fb b4 	sub	r8,sp,-1100
80004318:	1a d8       	st.w	--sp,r8
8000431a:	fa c8 f9 40 	sub	r8,sp,-1728
8000431e:	fa c9 ff b4 	sub	r9,sp,-76
80004322:	04 9a       	mov	r10,r2
80004324:	0c 9b       	mov	r11,r6
80004326:	08 9c       	mov	r12,r4
80004328:	fe b0 f5 d2 	rcall	80002ecc <get_arg>
8000432c:	2f dd       	sub	sp,-12
8000432e:	f8 e8 00 00 	ld.d	r8,r12[0]
80004332:	fa e9 00 00 	st.d	sp[0],r8
80004336:	c2 e8       	rjmp	80004392 <_vfprintf_r+0x1196>
80004338:	ee ca ff ff 	sub	r10,r7,-1
8000433c:	10 37       	cp.w	r7,r8
8000433e:	c0 b4       	brge	80004354 <_vfprintf_r+0x1158>
80004340:	fa c8 f9 44 	sub	r8,sp,-1724
80004344:	14 97       	mov	r7,r10
80004346:	f0 06 00 36 	add	r6,r8,r6<<0x3
8000434a:	ec ea fd 88 	ld.d	r10,r6[-632]
8000434e:	fa eb 00 00 	st.d	sp[0],r10
80004352:	c2 08       	rjmp	80004392 <_vfprintf_r+0x1196>
80004354:	41 09       	lddsp	r9,sp[0x40]
80004356:	59 f8       	cp.w	r8,31
80004358:	e0 89 00 16 	brgt	80004384 <_vfprintf_r+0x1188>
8000435c:	f2 e6 00 00 	ld.d	r6,r9[0]
80004360:	f2 cb ff f8 	sub	r11,r9,-8
80004364:	fa e7 00 00 	st.d	sp[0],r6
80004368:	51 0b       	stdsp	sp[0x40],r11
8000436a:	fa c6 f9 44 	sub	r6,sp,-1724
8000436e:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004372:	fa e6 00 00 	ld.d	r6,sp[0]
80004376:	f2 e7 fd 88 	st.d	r9[-632],r6
8000437a:	2f f8       	sub	r8,-1
8000437c:	14 97       	mov	r7,r10
8000437e:	fb 48 06 b4 	st.w	sp[1716],r8
80004382:	c0 88       	rjmp	80004392 <_vfprintf_r+0x1196>
80004384:	f2 e6 00 00 	ld.d	r6,r9[0]
80004388:	2f 89       	sub	r9,-8
8000438a:	fa e7 00 00 	st.d	sp[0],r6
8000438e:	51 09       	stdsp	sp[0x40],r9
80004390:	14 97       	mov	r7,r10
80004392:	30 18       	mov	r8,1
80004394:	e0 8f 01 d0 	bral	80004734 <_vfprintf_r+0x1538>
80004398:	ed b5 00 04 	bld	r5,0x4
8000439c:	c1 61       	brne	800043c8 <_vfprintf_r+0x11cc>
8000439e:	fa f8 06 b4 	ld.w	r8,sp[1716]
800043a2:	40 3e       	lddsp	lr,sp[0xc]
800043a4:	58 0e       	cp.w	lr,0
800043a6:	c0 80       	breq	800043b6 <_vfprintf_r+0x11ba>
800043a8:	10 36       	cp.w	r6,r8
800043aa:	c6 74       	brge	80004478 <_vfprintf_r+0x127c>
800043ac:	fa cc f9 44 	sub	r12,sp,-1724
800043b0:	f8 06 00 36 	add	r6,r12,r6<<0x3
800043b4:	c8 08       	rjmp	800044b4 <_vfprintf_r+0x12b8>
800043b6:	ee ca ff ff 	sub	r10,r7,-1
800043ba:	10 37       	cp.w	r7,r8
800043bc:	c7 f4       	brge	800044ba <_vfprintf_r+0x12be>
800043be:	fa cb f9 44 	sub	r11,sp,-1724
800043c2:	f6 06 00 36 	add	r6,r11,r6<<0x3
800043c6:	c7 68       	rjmp	800044b2 <_vfprintf_r+0x12b6>
800043c8:	ed b5 00 06 	bld	r5,0x6
800043cc:	c4 a1       	brne	80004460 <_vfprintf_r+0x1264>
800043ce:	fa f8 06 b4 	ld.w	r8,sp[1716]
800043d2:	40 3c       	lddsp	r12,sp[0xc]
800043d4:	58 0c       	cp.w	r12,0
800043d6:	c1 d0       	breq	80004410 <_vfprintf_r+0x1214>
800043d8:	10 36       	cp.w	r6,r8
800043da:	c0 64       	brge	800043e6 <_vfprintf_r+0x11ea>
800043dc:	fa cb f9 44 	sub	r11,sp,-1724
800043e0:	f6 06 00 36 	add	r6,r11,r6<<0x3
800043e4:	c1 f8       	rjmp	80004422 <_vfprintf_r+0x1226>
800043e6:	fa c8 f9 50 	sub	r8,sp,-1712
800043ea:	1a d8       	st.w	--sp,r8
800043ec:	fa c8 fa b8 	sub	r8,sp,-1352
800043f0:	1a d8       	st.w	--sp,r8
800043f2:	fa c8 fb b4 	sub	r8,sp,-1100
800043f6:	1a d8       	st.w	--sp,r8
800043f8:	fa c8 f9 40 	sub	r8,sp,-1728
800043fc:	fa c9 ff b4 	sub	r9,sp,-76
80004400:	04 9a       	mov	r10,r2
80004402:	0c 9b       	mov	r11,r6
80004404:	08 9c       	mov	r12,r4
80004406:	fe b0 f5 63 	rcall	80002ecc <get_arg>
8000440a:	2f dd       	sub	sp,-12
8000440c:	98 18       	ld.sh	r8,r12[0x2]
8000440e:	c2 68       	rjmp	8000445a <_vfprintf_r+0x125e>
80004410:	ee ca ff ff 	sub	r10,r7,-1
80004414:	10 37       	cp.w	r7,r8
80004416:	c0 94       	brge	80004428 <_vfprintf_r+0x122c>
80004418:	fa c9 f9 44 	sub	r9,sp,-1724
8000441c:	14 97       	mov	r7,r10
8000441e:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004422:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004426:	c1 a8       	rjmp	8000445a <_vfprintf_r+0x125e>
80004428:	41 09       	lddsp	r9,sp[0x40]
8000442a:	59 f8       	cp.w	r8,31
8000442c:	e0 89 00 13 	brgt	80004452 <_vfprintf_r+0x1256>
80004430:	f2 cb ff fc 	sub	r11,r9,-4
80004434:	51 0b       	stdsp	sp[0x40],r11
80004436:	72 09       	ld.w	r9,r9[0x0]
80004438:	fa c6 f9 44 	sub	r6,sp,-1724
8000443c:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004440:	2f f8       	sub	r8,-1
80004442:	f7 49 fd 88 	st.w	r11[-632],r9
80004446:	fb 48 06 b4 	st.w	sp[1716],r8
8000444a:	14 97       	mov	r7,r10
8000444c:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004450:	c0 58       	rjmp	8000445a <_vfprintf_r+0x125e>
80004452:	92 18       	ld.sh	r8,r9[0x2]
80004454:	14 97       	mov	r7,r10
80004456:	2f c9       	sub	r9,-4
80004458:	51 09       	stdsp	sp[0x40],r9
8000445a:	5c 78       	castu.h	r8
8000445c:	50 18       	stdsp	sp[0x4],r8
8000445e:	c4 68       	rjmp	800044ea <_vfprintf_r+0x12ee>
80004460:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004464:	40 3c       	lddsp	r12,sp[0xc]
80004466:	58 0c       	cp.w	r12,0
80004468:	c1 d0       	breq	800044a2 <_vfprintf_r+0x12a6>
8000446a:	10 36       	cp.w	r6,r8
8000446c:	c0 64       	brge	80004478 <_vfprintf_r+0x127c>
8000446e:	fa cb f9 44 	sub	r11,sp,-1724
80004472:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004476:	c1 f8       	rjmp	800044b4 <_vfprintf_r+0x12b8>
80004478:	fa c8 f9 50 	sub	r8,sp,-1712
8000447c:	1a d8       	st.w	--sp,r8
8000447e:	fa c8 fa b8 	sub	r8,sp,-1352
80004482:	0c 9b       	mov	r11,r6
80004484:	1a d8       	st.w	--sp,r8
80004486:	fa c8 fb b4 	sub	r8,sp,-1100
8000448a:	04 9a       	mov	r10,r2
8000448c:	1a d8       	st.w	--sp,r8
8000448e:	08 9c       	mov	r12,r4
80004490:	fa c8 f9 40 	sub	r8,sp,-1728
80004494:	fa c9 ff b4 	sub	r9,sp,-76
80004498:	fe b0 f5 1a 	rcall	80002ecc <get_arg>
8000449c:	2f dd       	sub	sp,-12
8000449e:	78 0b       	ld.w	r11,r12[0x0]
800044a0:	c2 48       	rjmp	800044e8 <_vfprintf_r+0x12ec>
800044a2:	ee ca ff ff 	sub	r10,r7,-1
800044a6:	10 37       	cp.w	r7,r8
800044a8:	c0 94       	brge	800044ba <_vfprintf_r+0x12be>
800044aa:	fa c9 f9 44 	sub	r9,sp,-1724
800044ae:	f2 06 00 36 	add	r6,r9,r6<<0x3
800044b2:	14 97       	mov	r7,r10
800044b4:	ec fb fd 88 	ld.w	r11,r6[-632]
800044b8:	c1 88       	rjmp	800044e8 <_vfprintf_r+0x12ec>
800044ba:	41 09       	lddsp	r9,sp[0x40]
800044bc:	59 f8       	cp.w	r8,31
800044be:	e0 89 00 11 	brgt	800044e0 <_vfprintf_r+0x12e4>
800044c2:	f2 cb ff fc 	sub	r11,r9,-4
800044c6:	51 0b       	stdsp	sp[0x40],r11
800044c8:	fa c6 f9 44 	sub	r6,sp,-1724
800044cc:	72 0b       	ld.w	r11,r9[0x0]
800044ce:	ec 08 00 39 	add	r9,r6,r8<<0x3
800044d2:	f3 4b fd 88 	st.w	r9[-632],r11
800044d6:	2f f8       	sub	r8,-1
800044d8:	14 97       	mov	r7,r10
800044da:	fb 48 06 b4 	st.w	sp[1716],r8
800044de:	c0 58       	rjmp	800044e8 <_vfprintf_r+0x12ec>
800044e0:	72 0b       	ld.w	r11,r9[0x0]
800044e2:	14 97       	mov	r7,r10
800044e4:	2f c9       	sub	r9,-4
800044e6:	51 09       	stdsp	sp[0x40],r9
800044e8:	50 1b       	stdsp	sp[0x4],r11
800044ea:	30 0e       	mov	lr,0
800044ec:	30 18       	mov	r8,1
800044ee:	50 0e       	stdsp	sp[0x0],lr
800044f0:	c2 29       	rjmp	80004734 <_vfprintf_r+0x1538>
800044f2:	50 a7       	stdsp	sp[0x28],r7
800044f4:	50 80       	stdsp	sp[0x20],r0
800044f6:	0c 97       	mov	r7,r6
800044f8:	04 94       	mov	r4,r2
800044fa:	06 96       	mov	r6,r3
800044fc:	02 92       	mov	r2,r1
800044fe:	fe cc b6 be 	sub	r12,pc,-18754
80004502:	40 93       	lddsp	r3,sp[0x24]
80004504:	10 90       	mov	r0,r8
80004506:	40 41       	lddsp	r1,sp[0x10]
80004508:	50 dc       	stdsp	sp[0x34],r12
8000450a:	ed b5 00 05 	bld	r5,0x5
8000450e:	c5 51       	brne	800045b8 <_vfprintf_r+0x13bc>
80004510:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004514:	40 3b       	lddsp	r11,sp[0xc]
80004516:	58 0b       	cp.w	r11,0
80004518:	c2 20       	breq	8000455c <_vfprintf_r+0x1360>
8000451a:	10 36       	cp.w	r6,r8
8000451c:	c0 a4       	brge	80004530 <_vfprintf_r+0x1334>
8000451e:	fa ca f9 44 	sub	r10,sp,-1724
80004522:	f4 06 00 36 	add	r6,r10,r6<<0x3
80004526:	ec e8 fd 88 	ld.d	r8,r6[-632]
8000452a:	fa e9 00 00 	st.d	sp[0],r8
8000452e:	cf 28       	rjmp	80004712 <_vfprintf_r+0x1516>
80004530:	fa c8 f9 50 	sub	r8,sp,-1712
80004534:	1a d8       	st.w	--sp,r8
80004536:	fa c8 fa b8 	sub	r8,sp,-1352
8000453a:	04 9a       	mov	r10,r2
8000453c:	1a d8       	st.w	--sp,r8
8000453e:	0c 9b       	mov	r11,r6
80004540:	fa c8 fb b4 	sub	r8,sp,-1100
80004544:	08 9c       	mov	r12,r4
80004546:	1a d8       	st.w	--sp,r8
80004548:	fa c8 f9 40 	sub	r8,sp,-1728
8000454c:	fa c9 ff b4 	sub	r9,sp,-76
80004550:	fe b0 f4 be 	rcall	80002ecc <get_arg>
80004554:	2f dd       	sub	sp,-12
80004556:	f8 ea 00 00 	ld.d	r10,r12[0]
8000455a:	c0 c8       	rjmp	80004572 <_vfprintf_r+0x1376>
8000455c:	ee ca ff ff 	sub	r10,r7,-1
80004560:	10 37       	cp.w	r7,r8
80004562:	c0 b4       	brge	80004578 <_vfprintf_r+0x137c>
80004564:	fa c9 f9 44 	sub	r9,sp,-1724
80004568:	14 97       	mov	r7,r10
8000456a:	f2 06 00 36 	add	r6,r9,r6<<0x3
8000456e:	ec ea fd 88 	ld.d	r10,r6[-632]
80004572:	fa eb 00 00 	st.d	sp[0],r10
80004576:	cc e8       	rjmp	80004712 <_vfprintf_r+0x1516>
80004578:	41 09       	lddsp	r9,sp[0x40]
8000457a:	59 f8       	cp.w	r8,31
8000457c:	e0 89 00 16 	brgt	800045a8 <_vfprintf_r+0x13ac>
80004580:	f2 e6 00 00 	ld.d	r6,r9[0]
80004584:	f2 cb ff f8 	sub	r11,r9,-8
80004588:	fa e7 00 00 	st.d	sp[0],r6
8000458c:	51 0b       	stdsp	sp[0x40],r11
8000458e:	fa c6 f9 44 	sub	r6,sp,-1724
80004592:	ec 08 00 39 	add	r9,r6,r8<<0x3
80004596:	fa e6 00 00 	ld.d	r6,sp[0]
8000459a:	f2 e7 fd 88 	st.d	r9[-632],r6
8000459e:	2f f8       	sub	r8,-1
800045a0:	14 97       	mov	r7,r10
800045a2:	fb 48 06 b4 	st.w	sp[1716],r8
800045a6:	cb 68       	rjmp	80004712 <_vfprintf_r+0x1516>
800045a8:	f2 e6 00 00 	ld.d	r6,r9[0]
800045ac:	2f 89       	sub	r9,-8
800045ae:	fa e7 00 00 	st.d	sp[0],r6
800045b2:	51 09       	stdsp	sp[0x40],r9
800045b4:	14 97       	mov	r7,r10
800045b6:	ca e8       	rjmp	80004712 <_vfprintf_r+0x1516>
800045b8:	ed b5 00 04 	bld	r5,0x4
800045bc:	c1 71       	brne	800045ea <_vfprintf_r+0x13ee>
800045be:	fa f8 06 b4 	ld.w	r8,sp[1716]
800045c2:	40 3e       	lddsp	lr,sp[0xc]
800045c4:	58 0e       	cp.w	lr,0
800045c6:	c0 80       	breq	800045d6 <_vfprintf_r+0x13da>
800045c8:	10 36       	cp.w	r6,r8
800045ca:	c6 94       	brge	8000469c <_vfprintf_r+0x14a0>
800045cc:	fa cc f9 44 	sub	r12,sp,-1724
800045d0:	f8 06 00 36 	add	r6,r12,r6<<0x3
800045d4:	c8 28       	rjmp	800046d8 <_vfprintf_r+0x14dc>
800045d6:	ee ca ff ff 	sub	r10,r7,-1
800045da:	10 37       	cp.w	r7,r8
800045dc:	e0 84 00 81 	brge	800046de <_vfprintf_r+0x14e2>
800045e0:	fa cb f9 44 	sub	r11,sp,-1724
800045e4:	f6 06 00 36 	add	r6,r11,r6<<0x3
800045e8:	c7 78       	rjmp	800046d6 <_vfprintf_r+0x14da>
800045ea:	ed b5 00 06 	bld	r5,0x6
800045ee:	c4 b1       	brne	80004684 <_vfprintf_r+0x1488>
800045f0:	fa f8 06 b4 	ld.w	r8,sp[1716]
800045f4:	40 3c       	lddsp	r12,sp[0xc]
800045f6:	58 0c       	cp.w	r12,0
800045f8:	c1 d0       	breq	80004632 <_vfprintf_r+0x1436>
800045fa:	10 36       	cp.w	r6,r8
800045fc:	c0 64       	brge	80004608 <_vfprintf_r+0x140c>
800045fe:	fa cb f9 44 	sub	r11,sp,-1724
80004602:	f6 06 00 36 	add	r6,r11,r6<<0x3
80004606:	c1 f8       	rjmp	80004644 <_vfprintf_r+0x1448>
80004608:	fa c8 f9 50 	sub	r8,sp,-1712
8000460c:	1a d8       	st.w	--sp,r8
8000460e:	fa c8 fa b8 	sub	r8,sp,-1352
80004612:	1a d8       	st.w	--sp,r8
80004614:	fa c8 fb b4 	sub	r8,sp,-1100
80004618:	1a d8       	st.w	--sp,r8
8000461a:	fa c8 f9 40 	sub	r8,sp,-1728
8000461e:	fa c9 ff b4 	sub	r9,sp,-76
80004622:	04 9a       	mov	r10,r2
80004624:	0c 9b       	mov	r11,r6
80004626:	08 9c       	mov	r12,r4
80004628:	fe b0 f4 52 	rcall	80002ecc <get_arg>
8000462c:	2f dd       	sub	sp,-12
8000462e:	98 18       	ld.sh	r8,r12[0x2]
80004630:	c2 78       	rjmp	8000467e <_vfprintf_r+0x1482>
80004632:	ee ca ff ff 	sub	r10,r7,-1
80004636:	10 37       	cp.w	r7,r8
80004638:	c0 a4       	brge	8000464c <_vfprintf_r+0x1450>
8000463a:	fa c9 f9 44 	sub	r9,sp,-1724
8000463e:	14 97       	mov	r7,r10
80004640:	f2 06 00 36 	add	r6,r9,r6<<0x3
80004644:	ed 08 fd 8a 	ld.sh	r8,r6[-630]
80004648:	c1 b8       	rjmp	8000467e <_vfprintf_r+0x1482>
8000464a:	d7 03       	nop
8000464c:	41 09       	lddsp	r9,sp[0x40]
8000464e:	59 f8       	cp.w	r8,31
80004650:	e0 89 00 13 	brgt	80004676 <_vfprintf_r+0x147a>
80004654:	f2 cb ff fc 	sub	r11,r9,-4
80004658:	51 0b       	stdsp	sp[0x40],r11
8000465a:	72 09       	ld.w	r9,r9[0x0]
8000465c:	fa c6 f9 44 	sub	r6,sp,-1724
80004660:	ec 08 00 3b 	add	r11,r6,r8<<0x3
80004664:	2f f8       	sub	r8,-1
80004666:	f7 49 fd 88 	st.w	r11[-632],r9
8000466a:	fb 48 06 b4 	st.w	sp[1716],r8
8000466e:	14 97       	mov	r7,r10
80004670:	f1 d9 b0 10 	bfexts	r8,r9,0x0,0x10
80004674:	c0 58       	rjmp	8000467e <_vfprintf_r+0x1482>
80004676:	92 18       	ld.sh	r8,r9[0x2]
80004678:	14 97       	mov	r7,r10
8000467a:	2f c9       	sub	r9,-4
8000467c:	51 09       	stdsp	sp[0x40],r9
8000467e:	5c 78       	castu.h	r8
80004680:	50 18       	stdsp	sp[0x4],r8
80004682:	c4 68       	rjmp	8000470e <_vfprintf_r+0x1512>
80004684:	fa f8 06 b4 	ld.w	r8,sp[1716]
80004688:	40 3c       	lddsp	r12,sp[0xc]
8000468a:	58 0c       	cp.w	r12,0
8000468c:	c1 d0       	breq	800046c6 <_vfprintf_r+0x14ca>
8000468e:	10 36       	cp.w	r6,r8
80004690:	c0 64       	brge	8000469c <_vfprintf_r+0x14a0>
80004692:	fa cb f9 44 	sub	r11,sp,-1724
80004696:	f6 06 00 36 	add	r6,r11,r6<<0x3
8000469a:	c1 f8       	rjmp	800046d8 <_vfprintf_r+0x14dc>
8000469c:	fa c8 f9 50 	sub	r8,sp,-1712
800046a0:	1a d8       	st.w	--sp,r8
800046a2:	fa c8 fa b8 	sub	r8,sp,-1352
800046a6:	0c 9b       	mov	r11,r6
800046a8:	1a d8       	st.w	--sp,r8
800046aa:	fa c8 fb b4 	sub	r8,sp,-1100
800046ae:	04 9a       	mov	r10,r2
800046b0:	1a d8       	st.w	--sp,r8
800046b2:	08 9c       	mov	r12,r4
800046b4:	fa c8 f9 40 	sub	r8,sp,-1728
800046b8:	fa c9 ff b4 	sub	r9,sp,-76
800046bc:	fe b0 f4 08 	rcall	80002ecc <get_arg>
800046c0:	2f dd       	sub	sp,-12
800046c2:	78 0b       	ld.w	r11,r12[0x0]
800046c4:	c2 48       	rjmp	8000470c <_vfprintf_r+0x1510>
800046c6:	ee ca ff ff 	sub	r10,r7,-1
800046ca:	10 37       	cp.w	r7,r8
800046cc:	c0 94       	brge	800046de <_vfprintf_r+0x14e2>
800046ce:	fa c9 f9 44 	sub	r9,sp,-1724
800046d2:	f2 06 00 36 	add	r6,r9,r6<<0x3
800046d6:	14 97       	mov	r7,r10
800046d8:	ec fb fd 88 	ld.w	r11,r6[-632]
800046dc:	c1 88       	rjmp	8000470c <_vfprintf_r+0x1510>
800046de:	41 09       	lddsp	r9,sp[0x40]
800046e0:	59 f8       	cp.w	r8,31
800046e2:	e0 89 00 11 	brgt	80004704 <_vfprintf_r+0x1508>
800046e6:	f2 cb ff fc 	sub	r11,r9,-4
800046ea:	51 0b       	stdsp	sp[0x40],r11
800046ec:	fa c6 f9 44 	sub	r6,sp,-1724
800046f0:	72 0b       	ld.w	r11,r9[0x0]
800046f2:	ec 08 00 39 	add	r9,r6,r8<<0x3
800046f6:	f3 4b fd 88 	st.w	r9[-632],r11
800046fa:	2f f8       	sub	r8,-1
800046fc:	14 97       	mov	r7,r10
800046fe:	fb 48 06 b4 	st.w	sp[1716],r8
80004702:	c0 58       	rjmp	8000470c <_vfprintf_r+0x1510>
80004704:	72 0b       	ld.w	r11,r9[0x0]
80004706:	14 97       	mov	r7,r10
80004708:	2f c9       	sub	r9,-4
8000470a:	51 09       	stdsp	sp[0x40],r9
8000470c:	50 1b       	stdsp	sp[0x4],r11
8000470e:	30 0e       	mov	lr,0
80004710:	50 0e       	stdsp	sp[0x0],lr
80004712:	40 08       	lddsp	r8,sp[0x0]
80004714:	40 1c       	lddsp	r12,sp[0x4]
80004716:	18 48       	or	r8,r12
80004718:	5f 19       	srne	r9
8000471a:	0a 98       	mov	r8,r5
8000471c:	eb e9 00 09 	and	r9,r5,r9
80004720:	a1 b8       	sbr	r8,0x1
80004722:	58 09       	cp.w	r9,0
80004724:	c0 70       	breq	80004732 <_vfprintf_r+0x1536>
80004726:	10 95       	mov	r5,r8
80004728:	fb 60 06 b9 	st.b	sp[1721],r0
8000472c:	33 08       	mov	r8,48
8000472e:	fb 68 06 b8 	st.b	sp[1720],r8
80004732:	30 28       	mov	r8,2
80004734:	30 09       	mov	r9,0
80004736:	fb 69 06 bb 	st.b	sp[1723],r9
8000473a:	0a 99       	mov	r9,r5
8000473c:	a7 d9       	cbr	r9,0x7
8000473e:	40 2b       	lddsp	r11,sp[0x8]
80004740:	40 16       	lddsp	r6,sp[0x4]
80004742:	58 0b       	cp.w	r11,0
80004744:	5f 1a       	srne	r10
80004746:	f2 05 17 40 	movge	r5,r9
8000474a:	fa c2 f9 78 	sub	r2,sp,-1672
8000474e:	40 09       	lddsp	r9,sp[0x0]
80004750:	0c 49       	or	r9,r6
80004752:	5f 19       	srne	r9
80004754:	f5 e9 10 09 	or	r9,r10,r9
80004758:	c5 c0       	breq	80004810 <_vfprintf_r+0x1614>
8000475a:	30 19       	mov	r9,1
8000475c:	f2 08 18 00 	cp.b	r8,r9
80004760:	c0 60       	breq	8000476c <_vfprintf_r+0x1570>
80004762:	30 29       	mov	r9,2
80004764:	f2 08 18 00 	cp.b	r8,r9
80004768:	c0 41       	brne	80004770 <_vfprintf_r+0x1574>
8000476a:	c3 c8       	rjmp	800047e2 <_vfprintf_r+0x15e6>
8000476c:	04 96       	mov	r6,r2
8000476e:	c3 08       	rjmp	800047ce <_vfprintf_r+0x15d2>
80004770:	04 96       	mov	r6,r2
80004772:	fa e8 00 00 	ld.d	r8,sp[0]
80004776:	f5 d8 c0 03 	bfextu	r10,r8,0x0,0x3
8000477a:	2d 0a       	sub	r10,-48
8000477c:	0c fa       	st.b	--r6,r10
8000477e:	f0 0b 16 03 	lsr	r11,r8,0x3
80004782:	f2 0c 16 03 	lsr	r12,r9,0x3
80004786:	f7 e9 11 db 	or	r11,r11,r9<<0x1d
8000478a:	18 99       	mov	r9,r12
8000478c:	16 98       	mov	r8,r11
8000478e:	58 08       	cp.w	r8,0
80004790:	5c 29       	cpc	r9
80004792:	cf 21       	brne	80004776 <_vfprintf_r+0x157a>
80004794:	fa e9 00 00 	st.d	sp[0],r8
80004798:	ed b5 00 00 	bld	r5,0x0
8000479c:	c4 51       	brne	80004826 <_vfprintf_r+0x162a>
8000479e:	33 09       	mov	r9,48
800047a0:	f2 0a 18 00 	cp.b	r10,r9
800047a4:	c4 10       	breq	80004826 <_vfprintf_r+0x162a>
800047a6:	0c f9       	st.b	--r6,r9
800047a8:	c3 f8       	rjmp	80004826 <_vfprintf_r+0x162a>
800047aa:	fa ea 00 00 	ld.d	r10,sp[0]
800047ae:	30 a8       	mov	r8,10
800047b0:	30 09       	mov	r9,0
800047b2:	e0 a0 1e 31 	rcall	80008414 <__avr32_umod64>
800047b6:	30 a8       	mov	r8,10
800047b8:	2d 0a       	sub	r10,-48
800047ba:	30 09       	mov	r9,0
800047bc:	ac 8a       	st.b	r6[0x0],r10
800047be:	fa ea 00 00 	ld.d	r10,sp[0]
800047c2:	e0 a0 1c f7 	rcall	800081b0 <__avr32_udiv64>
800047c6:	16 99       	mov	r9,r11
800047c8:	14 98       	mov	r8,r10
800047ca:	fa e9 00 00 	st.d	sp[0],r8
800047ce:	20 16       	sub	r6,1
800047d0:	fa ea 00 00 	ld.d	r10,sp[0]
800047d4:	58 9a       	cp.w	r10,9
800047d6:	5c 2b       	cpc	r11
800047d8:	fe 9b ff e9 	brhi	800047aa <_vfprintf_r+0x15ae>
800047dc:	1b f8       	ld.ub	r8,sp[0x7]
800047de:	2d 08       	sub	r8,-48
800047e0:	c2 08       	rjmp	80004820 <_vfprintf_r+0x1624>
800047e2:	04 96       	mov	r6,r2
800047e4:	fa e8 00 00 	ld.d	r8,sp[0]
800047e8:	f5 d8 c0 04 	bfextu	r10,r8,0x0,0x4
800047ec:	40 de       	lddsp	lr,sp[0x34]
800047ee:	fc 0a 07 0a 	ld.ub	r10,lr[r10]
800047f2:	0c fa       	st.b	--r6,r10
800047f4:	f2 0b 16 04 	lsr	r11,r9,0x4
800047f8:	f0 0a 16 04 	lsr	r10,r8,0x4
800047fc:	f5 e9 11 ca 	or	r10,r10,r9<<0x1c
80004800:	16 99       	mov	r9,r11
80004802:	14 98       	mov	r8,r10
80004804:	58 08       	cp.w	r8,0
80004806:	5c 29       	cpc	r9
80004808:	cf 01       	brne	800047e8 <_vfprintf_r+0x15ec>
8000480a:	fa e9 00 00 	st.d	sp[0],r8
8000480e:	c0 c8       	rjmp	80004826 <_vfprintf_r+0x162a>
80004810:	58 08       	cp.w	r8,0
80004812:	c0 91       	brne	80004824 <_vfprintf_r+0x1628>
80004814:	ed b5 00 00 	bld	r5,0x0
80004818:	c0 61       	brne	80004824 <_vfprintf_r+0x1628>
8000481a:	fa c6 f9 79 	sub	r6,sp,-1671
8000481e:	33 08       	mov	r8,48
80004820:	ac 88       	st.b	r6[0x0],r8
80004822:	c0 28       	rjmp	80004826 <_vfprintf_r+0x162a>
80004824:	04 96       	mov	r6,r2
80004826:	0c 12       	sub	r2,r6
80004828:	c1 c8       	rjmp	80004860 <_vfprintf_r+0x1664>
8000482a:	50 a7       	stdsp	sp[0x28],r7
8000482c:	50 80       	stdsp	sp[0x20],r0
8000482e:	40 93       	lddsp	r3,sp[0x24]
80004830:	0c 97       	mov	r7,r6
80004832:	10 90       	mov	r0,r8
80004834:	04 94       	mov	r4,r2
80004836:	40 41       	lddsp	r1,sp[0x10]
80004838:	58 08       	cp.w	r8,0
8000483a:	e0 80 04 4f 	breq	800050d8 <_vfprintf_r+0x1edc>
8000483e:	fb 68 06 60 	st.b	sp[1632],r8
80004842:	30 0c       	mov	r12,0
80004844:	30 08       	mov	r8,0
80004846:	30 12       	mov	r2,1
80004848:	fb 68 06 bb 	st.b	sp[1723],r8
8000484c:	50 2c       	stdsp	sp[0x8],r12
8000484e:	fa c6 f9 a0 	sub	r6,sp,-1632
80004852:	c0 78       	rjmp	80004860 <_vfprintf_r+0x1664>
80004854:	30 0b       	mov	r11,0
80004856:	50 2b       	stdsp	sp[0x8],r11
80004858:	c0 48       	rjmp	80004860 <_vfprintf_r+0x1664>
8000485a:	40 22       	lddsp	r2,sp[0x8]
8000485c:	30 0a       	mov	r10,0
8000485e:	50 2a       	stdsp	sp[0x8],r10
80004860:	40 29       	lddsp	r9,sp[0x8]
80004862:	e4 09 0c 49 	max	r9,r2,r9
80004866:	fb 38 06 bb 	ld.ub	r8,sp[1723]
8000486a:	50 39       	stdsp	sp[0xc],r9
8000486c:	0a 9e       	mov	lr,r5
8000486e:	30 09       	mov	r9,0
80004870:	e2 1e 00 02 	andl	lr,0x2,COH
80004874:	f2 08 18 00 	cp.b	r8,r9
80004878:	fb f8 10 03 	ld.wne	r8,sp[0xc]
8000487c:	f7 b8 01 ff 	subne	r8,-1
80004880:	fb f8 1a 03 	st.wne	sp[0xc],r8
80004884:	0a 9b       	mov	r11,r5
80004886:	58 0e       	cp.w	lr,0
80004888:	fb fc 10 03 	ld.wne	r12,sp[0xc]
8000488c:	f7 bc 01 fe 	subne	r12,-2
80004890:	fb fc 1a 03 	st.wne	sp[0xc],r12
80004894:	e2 1b 00 84 	andl	r11,0x84,COH
80004898:	50 fe       	stdsp	sp[0x3c],lr
8000489a:	50 9b       	stdsp	sp[0x24],r11
8000489c:	c4 71       	brne	8000492a <_vfprintf_r+0x172e>
8000489e:	40 8a       	lddsp	r10,sp[0x20]
800048a0:	40 39       	lddsp	r9,sp[0xc]
800048a2:	12 1a       	sub	r10,r9
800048a4:	50 4a       	stdsp	sp[0x10],r10
800048a6:	58 0a       	cp.w	r10,0
800048a8:	e0 89 00 20 	brgt	800048e8 <_vfprintf_r+0x16ec>
800048ac:	c3 f8       	rjmp	8000492a <_vfprintf_r+0x172e>
800048ae:	2f 09       	sub	r9,-16
800048b0:	2f f8       	sub	r8,-1
800048b2:	fe ce ba 5a 	sub	lr,pc,-17830
800048b6:	31 0c       	mov	r12,16
800048b8:	fb 49 06 90 	st.w	sp[1680],r9
800048bc:	87 0e       	st.w	r3[0x0],lr
800048be:	87 1c       	st.w	r3[0x4],r12
800048c0:	fb 48 06 8c 	st.w	sp[1676],r8
800048c4:	58 78       	cp.w	r8,7
800048c6:	e0 89 00 04 	brgt	800048ce <_vfprintf_r+0x16d2>
800048ca:	2f 83       	sub	r3,-8
800048cc:	c0 b8       	rjmp	800048e2 <_vfprintf_r+0x16e6>
800048ce:	fa ca f9 78 	sub	r10,sp,-1672
800048d2:	02 9b       	mov	r11,r1
800048d4:	08 9c       	mov	r12,r4
800048d6:	fe b0 f4 85 	rcall	800031e0 <__sprint_r>
800048da:	e0 81 04 10 	brne	800050fa <_vfprintf_r+0x1efe>
800048de:	fa c3 f9 e0 	sub	r3,sp,-1568
800048e2:	40 4b       	lddsp	r11,sp[0x10]
800048e4:	21 0b       	sub	r11,16
800048e6:	50 4b       	stdsp	sp[0x10],r11
800048e8:	fa f9 06 90 	ld.w	r9,sp[1680]
800048ec:	fa f8 06 8c 	ld.w	r8,sp[1676]
800048f0:	fe ca ba 98 	sub	r10,pc,-17768
800048f4:	40 4e       	lddsp	lr,sp[0x10]
800048f6:	59 0e       	cp.w	lr,16
800048f8:	fe 99 ff db 	brgt	800048ae <_vfprintf_r+0x16b2>
800048fc:	1c 09       	add	r9,lr
800048fe:	2f f8       	sub	r8,-1
80004900:	87 0a       	st.w	r3[0x0],r10
80004902:	fb 49 06 90 	st.w	sp[1680],r9
80004906:	87 1e       	st.w	r3[0x4],lr
80004908:	fb 48 06 8c 	st.w	sp[1676],r8
8000490c:	58 78       	cp.w	r8,7
8000490e:	e0 89 00 04 	brgt	80004916 <_vfprintf_r+0x171a>
80004912:	2f 83       	sub	r3,-8
80004914:	c0 b8       	rjmp	8000492a <_vfprintf_r+0x172e>
80004916:	fa ca f9 78 	sub	r10,sp,-1672
8000491a:	02 9b       	mov	r11,r1
8000491c:	08 9c       	mov	r12,r4
8000491e:	fe b0 f4 61 	rcall	800031e0 <__sprint_r>
80004922:	e0 81 03 ec 	brne	800050fa <_vfprintf_r+0x1efe>
80004926:	fa c3 f9 e0 	sub	r3,sp,-1568
8000492a:	30 09       	mov	r9,0
8000492c:	fb 38 06 bb 	ld.ub	r8,sp[1723]
80004930:	f2 08 18 00 	cp.b	r8,r9
80004934:	c1 f0       	breq	80004972 <_vfprintf_r+0x1776>
80004936:	fa f8 06 90 	ld.w	r8,sp[1680]
8000493a:	fa c9 f9 45 	sub	r9,sp,-1723
8000493e:	2f f8       	sub	r8,-1
80004940:	87 09       	st.w	r3[0x0],r9
80004942:	fb 48 06 90 	st.w	sp[1680],r8
80004946:	30 19       	mov	r9,1
80004948:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000494c:	87 19       	st.w	r3[0x4],r9
8000494e:	2f f8       	sub	r8,-1
80004950:	fb 48 06 8c 	st.w	sp[1676],r8
80004954:	58 78       	cp.w	r8,7
80004956:	e0 89 00 04 	brgt	8000495e <_vfprintf_r+0x1762>
8000495a:	2f 83       	sub	r3,-8
8000495c:	c0 b8       	rjmp	80004972 <_vfprintf_r+0x1776>
8000495e:	fa ca f9 78 	sub	r10,sp,-1672
80004962:	02 9b       	mov	r11,r1
80004964:	08 9c       	mov	r12,r4
80004966:	fe b0 f4 3d 	rcall	800031e0 <__sprint_r>
8000496a:	e0 81 03 c8 	brne	800050fa <_vfprintf_r+0x1efe>
8000496e:	fa c3 f9 e0 	sub	r3,sp,-1568
80004972:	40 fc       	lddsp	r12,sp[0x3c]
80004974:	58 0c       	cp.w	r12,0
80004976:	c1 f0       	breq	800049b4 <_vfprintf_r+0x17b8>
80004978:	fa f8 06 90 	ld.w	r8,sp[1680]
8000497c:	fa c9 f9 48 	sub	r9,sp,-1720
80004980:	2f e8       	sub	r8,-2
80004982:	87 09       	st.w	r3[0x0],r9
80004984:	fb 48 06 90 	st.w	sp[1680],r8
80004988:	30 29       	mov	r9,2
8000498a:	fa f8 06 8c 	ld.w	r8,sp[1676]
8000498e:	87 19       	st.w	r3[0x4],r9
80004990:	2f f8       	sub	r8,-1
80004992:	fb 48 06 8c 	st.w	sp[1676],r8
80004996:	58 78       	cp.w	r8,7
80004998:	e0 89 00 04 	brgt	800049a0 <_vfprintf_r+0x17a4>
8000499c:	2f 83       	sub	r3,-8
8000499e:	c0 b8       	rjmp	800049b4 <_vfprintf_r+0x17b8>
800049a0:	fa ca f9 78 	sub	r10,sp,-1672
800049a4:	02 9b       	mov	r11,r1
800049a6:	08 9c       	mov	r12,r4
800049a8:	fe b0 f4 1c 	rcall	800031e0 <__sprint_r>
800049ac:	e0 81 03 a7 	brne	800050fa <_vfprintf_r+0x1efe>
800049b0:	fa c3 f9 e0 	sub	r3,sp,-1568
800049b4:	40 9b       	lddsp	r11,sp[0x24]
800049b6:	e0 4b 00 80 	cp.w	r11,128
800049ba:	c4 71       	brne	80004a48 <_vfprintf_r+0x184c>
800049bc:	40 8a       	lddsp	r10,sp[0x20]
800049be:	40 39       	lddsp	r9,sp[0xc]
800049c0:	12 1a       	sub	r10,r9
800049c2:	50 4a       	stdsp	sp[0x10],r10
800049c4:	58 0a       	cp.w	r10,0
800049c6:	e0 89 00 20 	brgt	80004a06 <_vfprintf_r+0x180a>
800049ca:	c3 f8       	rjmp	80004a48 <_vfprintf_r+0x184c>
800049cc:	2f 09       	sub	r9,-16
800049ce:	2f f8       	sub	r8,-1
800049d0:	fe ce bb 68 	sub	lr,pc,-17560
800049d4:	31 0c       	mov	r12,16
800049d6:	fb 49 06 90 	st.w	sp[1680],r9
800049da:	87 0e       	st.w	r3[0x0],lr
800049dc:	87 1c       	st.w	r3[0x4],r12
800049de:	fb 48 06 8c 	st.w	sp[1676],r8
800049e2:	58 78       	cp.w	r8,7
800049e4:	e0 89 00 04 	brgt	800049ec <_vfprintf_r+0x17f0>
800049e8:	2f 83       	sub	r3,-8
800049ea:	c0 b8       	rjmp	80004a00 <_vfprintf_r+0x1804>
800049ec:	fa ca f9 78 	sub	r10,sp,-1672
800049f0:	02 9b       	mov	r11,r1
800049f2:	08 9c       	mov	r12,r4
800049f4:	fe b0 f3 f6 	rcall	800031e0 <__sprint_r>
800049f8:	e0 81 03 81 	brne	800050fa <_vfprintf_r+0x1efe>
800049fc:	fa c3 f9 e0 	sub	r3,sp,-1568
80004a00:	40 4b       	lddsp	r11,sp[0x10]
80004a02:	21 0b       	sub	r11,16
80004a04:	50 4b       	stdsp	sp[0x10],r11
80004a06:	fa f9 06 90 	ld.w	r9,sp[1680]
80004a0a:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004a0e:	fe ca bb a6 	sub	r10,pc,-17498
80004a12:	40 4e       	lddsp	lr,sp[0x10]
80004a14:	59 0e       	cp.w	lr,16
80004a16:	fe 99 ff db 	brgt	800049cc <_vfprintf_r+0x17d0>
80004a1a:	1c 09       	add	r9,lr
80004a1c:	2f f8       	sub	r8,-1
80004a1e:	87 0a       	st.w	r3[0x0],r10
80004a20:	fb 49 06 90 	st.w	sp[1680],r9
80004a24:	87 1e       	st.w	r3[0x4],lr
80004a26:	fb 48 06 8c 	st.w	sp[1676],r8
80004a2a:	58 78       	cp.w	r8,7
80004a2c:	e0 89 00 04 	brgt	80004a34 <_vfprintf_r+0x1838>
80004a30:	2f 83       	sub	r3,-8
80004a32:	c0 b8       	rjmp	80004a48 <_vfprintf_r+0x184c>
80004a34:	fa ca f9 78 	sub	r10,sp,-1672
80004a38:	02 9b       	mov	r11,r1
80004a3a:	08 9c       	mov	r12,r4
80004a3c:	fe b0 f3 d2 	rcall	800031e0 <__sprint_r>
80004a40:	e0 81 03 5d 	brne	800050fa <_vfprintf_r+0x1efe>
80004a44:	fa c3 f9 e0 	sub	r3,sp,-1568
80004a48:	40 2c       	lddsp	r12,sp[0x8]
80004a4a:	04 1c       	sub	r12,r2
80004a4c:	50 2c       	stdsp	sp[0x8],r12
80004a4e:	58 0c       	cp.w	r12,0
80004a50:	e0 89 00 20 	brgt	80004a90 <_vfprintf_r+0x1894>
80004a54:	c3 f8       	rjmp	80004ad2 <_vfprintf_r+0x18d6>
80004a56:	2f 09       	sub	r9,-16
80004a58:	2f f8       	sub	r8,-1
80004a5a:	fe cb bb f2 	sub	r11,pc,-17422
80004a5e:	31 0a       	mov	r10,16
80004a60:	fb 49 06 90 	st.w	sp[1680],r9
80004a64:	87 0b       	st.w	r3[0x0],r11
80004a66:	87 1a       	st.w	r3[0x4],r10
80004a68:	fb 48 06 8c 	st.w	sp[1676],r8
80004a6c:	58 78       	cp.w	r8,7
80004a6e:	e0 89 00 04 	brgt	80004a76 <_vfprintf_r+0x187a>
80004a72:	2f 83       	sub	r3,-8
80004a74:	c0 b8       	rjmp	80004a8a <_vfprintf_r+0x188e>
80004a76:	fa ca f9 78 	sub	r10,sp,-1672
80004a7a:	02 9b       	mov	r11,r1
80004a7c:	08 9c       	mov	r12,r4
80004a7e:	fe b0 f3 b1 	rcall	800031e0 <__sprint_r>
80004a82:	e0 81 03 3c 	brne	800050fa <_vfprintf_r+0x1efe>
80004a86:	fa c3 f9 e0 	sub	r3,sp,-1568
80004a8a:	40 29       	lddsp	r9,sp[0x8]
80004a8c:	21 09       	sub	r9,16
80004a8e:	50 29       	stdsp	sp[0x8],r9
80004a90:	fa f9 06 90 	ld.w	r9,sp[1680]
80004a94:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004a98:	fe ca bc 30 	sub	r10,pc,-17360
80004a9c:	40 2e       	lddsp	lr,sp[0x8]
80004a9e:	59 0e       	cp.w	lr,16
80004aa0:	fe 99 ff db 	brgt	80004a56 <_vfprintf_r+0x185a>
80004aa4:	1c 09       	add	r9,lr
80004aa6:	2f f8       	sub	r8,-1
80004aa8:	87 0a       	st.w	r3[0x0],r10
80004aaa:	fb 49 06 90 	st.w	sp[1680],r9
80004aae:	87 1e       	st.w	r3[0x4],lr
80004ab0:	fb 48 06 8c 	st.w	sp[1676],r8
80004ab4:	58 78       	cp.w	r8,7
80004ab6:	e0 89 00 04 	brgt	80004abe <_vfprintf_r+0x18c2>
80004aba:	2f 83       	sub	r3,-8
80004abc:	c0 b8       	rjmp	80004ad2 <_vfprintf_r+0x18d6>
80004abe:	fa ca f9 78 	sub	r10,sp,-1672
80004ac2:	02 9b       	mov	r11,r1
80004ac4:	08 9c       	mov	r12,r4
80004ac6:	fe b0 f3 8d 	rcall	800031e0 <__sprint_r>
80004aca:	e0 81 03 18 	brne	800050fa <_vfprintf_r+0x1efe>
80004ace:	fa c3 f9 e0 	sub	r3,sp,-1568
80004ad2:	ed b5 00 08 	bld	r5,0x8
80004ad6:	c0 b0       	breq	80004aec <_vfprintf_r+0x18f0>
80004ad8:	fa f8 06 90 	ld.w	r8,sp[1680]
80004adc:	87 12       	st.w	r3[0x4],r2
80004ade:	87 06       	st.w	r3[0x0],r6
80004ae0:	f0 02 00 02 	add	r2,r8,r2
80004ae4:	fb 42 06 90 	st.w	sp[1680],r2
80004ae8:	e0 8f 01 d4 	bral	80004e90 <_vfprintf_r+0x1c94>
80004aec:	e0 40 00 65 	cp.w	r0,101
80004af0:	e0 8a 01 d6 	brle	80004e9c <_vfprintf_r+0x1ca0>
80004af4:	30 08       	mov	r8,0
80004af6:	30 09       	mov	r9,0
80004af8:	40 5b       	lddsp	r11,sp[0x14]
80004afa:	40 7a       	lddsp	r10,sp[0x1c]
80004afc:	e0 a0 19 53 	rcall	80007da2 <__avr32_f64_cmp_eq>
80004b00:	c7 90       	breq	80004bf2 <_vfprintf_r+0x19f6>
80004b02:	fa f8 06 90 	ld.w	r8,sp[1680]
80004b06:	fe c9 bc b2 	sub	r9,pc,-17230
80004b0a:	2f f8       	sub	r8,-1
80004b0c:	87 09       	st.w	r3[0x0],r9
80004b0e:	fb 48 06 90 	st.w	sp[1680],r8
80004b12:	30 19       	mov	r9,1
80004b14:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004b18:	87 19       	st.w	r3[0x4],r9
80004b1a:	2f f8       	sub	r8,-1
80004b1c:	fb 48 06 8c 	st.w	sp[1676],r8
80004b20:	58 78       	cp.w	r8,7
80004b22:	e0 89 00 05 	brgt	80004b2c <_vfprintf_r+0x1930>
80004b26:	2f 83       	sub	r3,-8
80004b28:	c0 c8       	rjmp	80004b40 <_vfprintf_r+0x1944>
80004b2a:	d7 03       	nop
80004b2c:	fa ca f9 78 	sub	r10,sp,-1672
80004b30:	02 9b       	mov	r11,r1
80004b32:	08 9c       	mov	r12,r4
80004b34:	fe b0 f3 56 	rcall	800031e0 <__sprint_r>
80004b38:	e0 81 02 e1 	brne	800050fa <_vfprintf_r+0x1efe>
80004b3c:	fa c3 f9 e0 	sub	r3,sp,-1568
80004b40:	fa f8 06 ac 	ld.w	r8,sp[1708]
80004b44:	40 6c       	lddsp	r12,sp[0x18]
80004b46:	18 38       	cp.w	r8,r12
80004b48:	c0 55       	brlt	80004b52 <_vfprintf_r+0x1956>
80004b4a:	ed b5 00 00 	bld	r5,0x0
80004b4e:	e0 81 02 6b 	brne	80005024 <_vfprintf_r+0x1e28>
80004b52:	fa f8 06 90 	ld.w	r8,sp[1680]
80004b56:	2f f8       	sub	r8,-1
80004b58:	40 cb       	lddsp	r11,sp[0x30]
80004b5a:	fb 48 06 90 	st.w	sp[1680],r8
80004b5e:	30 19       	mov	r9,1
80004b60:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004b64:	87 0b       	st.w	r3[0x0],r11
80004b66:	2f f8       	sub	r8,-1
80004b68:	87 19       	st.w	r3[0x4],r9
80004b6a:	fb 48 06 8c 	st.w	sp[1676],r8
80004b6e:	58 78       	cp.w	r8,7
80004b70:	e0 89 00 04 	brgt	80004b78 <_vfprintf_r+0x197c>
80004b74:	2f 83       	sub	r3,-8
80004b76:	c0 b8       	rjmp	80004b8c <_vfprintf_r+0x1990>
80004b78:	fa ca f9 78 	sub	r10,sp,-1672
80004b7c:	02 9b       	mov	r11,r1
80004b7e:	08 9c       	mov	r12,r4
80004b80:	fe b0 f3 30 	rcall	800031e0 <__sprint_r>
80004b84:	e0 81 02 bb 	brne	800050fa <_vfprintf_r+0x1efe>
80004b88:	fa c3 f9 e0 	sub	r3,sp,-1568
80004b8c:	40 66       	lddsp	r6,sp[0x18]
80004b8e:	20 16       	sub	r6,1
80004b90:	58 06       	cp.w	r6,0
80004b92:	e0 89 00 1d 	brgt	80004bcc <_vfprintf_r+0x19d0>
80004b96:	e0 8f 02 47 	bral	80005024 <_vfprintf_r+0x1e28>
80004b9a:	2f 09       	sub	r9,-16
80004b9c:	2f f8       	sub	r8,-1
80004b9e:	fb 49 06 90 	st.w	sp[1680],r9
80004ba2:	87 02       	st.w	r3[0x0],r2
80004ba4:	87 10       	st.w	r3[0x4],r0
80004ba6:	fb 48 06 8c 	st.w	sp[1676],r8
80004baa:	58 78       	cp.w	r8,7
80004bac:	e0 89 00 04 	brgt	80004bb4 <_vfprintf_r+0x19b8>
80004bb0:	2f 83       	sub	r3,-8
80004bb2:	c0 b8       	rjmp	80004bc8 <_vfprintf_r+0x19cc>
80004bb4:	fa ca f9 78 	sub	r10,sp,-1672
80004bb8:	02 9b       	mov	r11,r1
80004bba:	08 9c       	mov	r12,r4
80004bbc:	fe b0 f3 12 	rcall	800031e0 <__sprint_r>
80004bc0:	e0 81 02 9d 	brne	800050fa <_vfprintf_r+0x1efe>
80004bc4:	fa c3 f9 e0 	sub	r3,sp,-1568
80004bc8:	21 06       	sub	r6,16
80004bca:	c0 48       	rjmp	80004bd2 <_vfprintf_r+0x19d6>
80004bcc:	fe c2 bd 64 	sub	r2,pc,-17052
80004bd0:	31 00       	mov	r0,16
80004bd2:	fa f9 06 90 	ld.w	r9,sp[1680]
80004bd6:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004bda:	fe ca bd 72 	sub	r10,pc,-17038
80004bde:	59 06       	cp.w	r6,16
80004be0:	fe 99 ff dd 	brgt	80004b9a <_vfprintf_r+0x199e>
80004be4:	0c 09       	add	r9,r6
80004be6:	87 0a       	st.w	r3[0x0],r10
80004be8:	fb 49 06 90 	st.w	sp[1680],r9
80004bec:	2f f8       	sub	r8,-1
80004bee:	87 16       	st.w	r3[0x4],r6
80004bf0:	c5 39       	rjmp	80004e96 <_vfprintf_r+0x1c9a>
80004bf2:	fa fa 06 ac 	ld.w	r10,sp[1708]
80004bf6:	58 0a       	cp.w	r10,0
80004bf8:	e0 89 00 92 	brgt	80004d1c <_vfprintf_r+0x1b20>
80004bfc:	fa f8 06 90 	ld.w	r8,sp[1680]
80004c00:	fe c9 bd ac 	sub	r9,pc,-16980
80004c04:	2f f8       	sub	r8,-1
80004c06:	87 09       	st.w	r3[0x0],r9
80004c08:	fb 48 06 90 	st.w	sp[1680],r8
80004c0c:	30 19       	mov	r9,1
80004c0e:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004c12:	87 19       	st.w	r3[0x4],r9
80004c14:	2f f8       	sub	r8,-1
80004c16:	fb 48 06 8c 	st.w	sp[1676],r8
80004c1a:	58 78       	cp.w	r8,7
80004c1c:	e0 89 00 04 	brgt	80004c24 <_vfprintf_r+0x1a28>
80004c20:	2f 83       	sub	r3,-8
80004c22:	c0 b8       	rjmp	80004c38 <_vfprintf_r+0x1a3c>
80004c24:	fa ca f9 78 	sub	r10,sp,-1672
80004c28:	02 9b       	mov	r11,r1
80004c2a:	08 9c       	mov	r12,r4
80004c2c:	fe b0 f2 da 	rcall	800031e0 <__sprint_r>
80004c30:	e0 81 02 65 	brne	800050fa <_vfprintf_r+0x1efe>
80004c34:	fa c3 f9 e0 	sub	r3,sp,-1568
80004c38:	fa f8 06 ac 	ld.w	r8,sp[1708]
80004c3c:	58 08       	cp.w	r8,0
80004c3e:	c0 81       	brne	80004c4e <_vfprintf_r+0x1a52>
80004c40:	40 6a       	lddsp	r10,sp[0x18]
80004c42:	58 0a       	cp.w	r10,0
80004c44:	c0 51       	brne	80004c4e <_vfprintf_r+0x1a52>
80004c46:	ed b5 00 00 	bld	r5,0x0
80004c4a:	e0 81 01 ed 	brne	80005024 <_vfprintf_r+0x1e28>
80004c4e:	40 c9       	lddsp	r9,sp[0x30]
80004c50:	fa f8 06 90 	ld.w	r8,sp[1680]
80004c54:	2f f8       	sub	r8,-1
80004c56:	87 09       	st.w	r3[0x0],r9
80004c58:	fb 48 06 90 	st.w	sp[1680],r8
80004c5c:	30 19       	mov	r9,1
80004c5e:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004c62:	87 19       	st.w	r3[0x4],r9
80004c64:	2f f8       	sub	r8,-1
80004c66:	fb 48 06 8c 	st.w	sp[1676],r8
80004c6a:	58 78       	cp.w	r8,7
80004c6c:	e0 89 00 04 	brgt	80004c74 <_vfprintf_r+0x1a78>
80004c70:	2f 83       	sub	r3,-8
80004c72:	c0 b8       	rjmp	80004c88 <_vfprintf_r+0x1a8c>
80004c74:	fa ca f9 78 	sub	r10,sp,-1672
80004c78:	02 9b       	mov	r11,r1
80004c7a:	08 9c       	mov	r12,r4
80004c7c:	fe b0 f2 b2 	rcall	800031e0 <__sprint_r>
80004c80:	e0 81 02 3d 	brne	800050fa <_vfprintf_r+0x1efe>
80004c84:	fa c3 f9 e0 	sub	r3,sp,-1568
80004c88:	fa f2 06 ac 	ld.w	r2,sp[1708]
80004c8c:	5c 32       	neg	r2
80004c8e:	58 02       	cp.w	r2,0
80004c90:	e0 89 00 1d 	brgt	80004cca <_vfprintf_r+0x1ace>
80004c94:	c3 d8       	rjmp	80004d0e <_vfprintf_r+0x1b12>
80004c96:	2f 09       	sub	r9,-16
80004c98:	2f f8       	sub	r8,-1
80004c9a:	31 0e       	mov	lr,16
80004c9c:	fb 49 06 90 	st.w	sp[1680],r9
80004ca0:	87 00       	st.w	r3[0x0],r0
80004ca2:	87 1e       	st.w	r3[0x4],lr
80004ca4:	fb 48 06 8c 	st.w	sp[1676],r8
80004ca8:	58 78       	cp.w	r8,7
80004caa:	e0 89 00 04 	brgt	80004cb2 <_vfprintf_r+0x1ab6>
80004cae:	2f 83       	sub	r3,-8
80004cb0:	c0 b8       	rjmp	80004cc6 <_vfprintf_r+0x1aca>
80004cb2:	fa ca f9 78 	sub	r10,sp,-1672
80004cb6:	02 9b       	mov	r11,r1
80004cb8:	08 9c       	mov	r12,r4
80004cba:	fe b0 f2 93 	rcall	800031e0 <__sprint_r>
80004cbe:	e0 81 02 1e 	brne	800050fa <_vfprintf_r+0x1efe>
80004cc2:	fa c3 f9 e0 	sub	r3,sp,-1568
80004cc6:	21 02       	sub	r2,16
80004cc8:	c0 38       	rjmp	80004cce <_vfprintf_r+0x1ad2>
80004cca:	fe c0 be 62 	sub	r0,pc,-16798
80004cce:	fa f9 06 90 	ld.w	r9,sp[1680]
80004cd2:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004cd6:	fe ca be 6e 	sub	r10,pc,-16786
80004cda:	59 02       	cp.w	r2,16
80004cdc:	fe 99 ff dd 	brgt	80004c96 <_vfprintf_r+0x1a9a>
80004ce0:	04 09       	add	r9,r2
80004ce2:	2f f8       	sub	r8,-1
80004ce4:	87 0a       	st.w	r3[0x0],r10
80004ce6:	fb 49 06 90 	st.w	sp[1680],r9
80004cea:	87 12       	st.w	r3[0x4],r2
80004cec:	fb 48 06 8c 	st.w	sp[1676],r8
80004cf0:	58 78       	cp.w	r8,7
80004cf2:	e0 89 00 04 	brgt	80004cfa <_vfprintf_r+0x1afe>
80004cf6:	2f 83       	sub	r3,-8
80004cf8:	c0 b8       	rjmp	80004d0e <_vfprintf_r+0x1b12>
80004cfa:	fa ca f9 78 	sub	r10,sp,-1672
80004cfe:	02 9b       	mov	r11,r1
80004d00:	08 9c       	mov	r12,r4
80004d02:	fe b0 f2 6f 	rcall	800031e0 <__sprint_r>
80004d06:	e0 81 01 fa 	brne	800050fa <_vfprintf_r+0x1efe>
80004d0a:	fa c3 f9 e0 	sub	r3,sp,-1568
80004d0e:	40 6c       	lddsp	r12,sp[0x18]
80004d10:	fa f8 06 90 	ld.w	r8,sp[1680]
80004d14:	87 06       	st.w	r3[0x0],r6
80004d16:	87 1c       	st.w	r3[0x4],r12
80004d18:	18 08       	add	r8,r12
80004d1a:	cb 98       	rjmp	80004e8c <_vfprintf_r+0x1c90>
80004d1c:	fa f9 06 90 	ld.w	r9,sp[1680]
80004d20:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004d24:	40 6b       	lddsp	r11,sp[0x18]
80004d26:	16 3a       	cp.w	r10,r11
80004d28:	c6 f5       	brlt	80004e06 <_vfprintf_r+0x1c0a>
80004d2a:	16 09       	add	r9,r11
80004d2c:	2f f8       	sub	r8,-1
80004d2e:	87 06       	st.w	r3[0x0],r6
80004d30:	fb 49 06 90 	st.w	sp[1680],r9
80004d34:	87 1b       	st.w	r3[0x4],r11
80004d36:	fb 48 06 8c 	st.w	sp[1676],r8
80004d3a:	58 78       	cp.w	r8,7
80004d3c:	e0 89 00 04 	brgt	80004d44 <_vfprintf_r+0x1b48>
80004d40:	2f 83       	sub	r3,-8
80004d42:	c0 b8       	rjmp	80004d58 <_vfprintf_r+0x1b5c>
80004d44:	fa ca f9 78 	sub	r10,sp,-1672
80004d48:	02 9b       	mov	r11,r1
80004d4a:	08 9c       	mov	r12,r4
80004d4c:	fe b0 f2 4a 	rcall	800031e0 <__sprint_r>
80004d50:	e0 81 01 d5 	brne	800050fa <_vfprintf_r+0x1efe>
80004d54:	fa c3 f9 e0 	sub	r3,sp,-1568
80004d58:	fa f6 06 ac 	ld.w	r6,sp[1708]
80004d5c:	40 6a       	lddsp	r10,sp[0x18]
80004d5e:	14 16       	sub	r6,r10
80004d60:	58 06       	cp.w	r6,0
80004d62:	e0 89 00 1c 	brgt	80004d9a <_vfprintf_r+0x1b9e>
80004d66:	c3 d8       	rjmp	80004de0 <_vfprintf_r+0x1be4>
80004d68:	2f 09       	sub	r9,-16
80004d6a:	2f f8       	sub	r8,-1
80004d6c:	fb 49 06 90 	st.w	sp[1680],r9
80004d70:	87 02       	st.w	r3[0x0],r2
80004d72:	87 10       	st.w	r3[0x4],r0
80004d74:	fb 48 06 8c 	st.w	sp[1676],r8
80004d78:	58 78       	cp.w	r8,7
80004d7a:	e0 89 00 04 	brgt	80004d82 <_vfprintf_r+0x1b86>
80004d7e:	2f 83       	sub	r3,-8
80004d80:	c0 b8       	rjmp	80004d96 <_vfprintf_r+0x1b9a>
80004d82:	fa ca f9 78 	sub	r10,sp,-1672
80004d86:	02 9b       	mov	r11,r1
80004d88:	08 9c       	mov	r12,r4
80004d8a:	fe b0 f2 2b 	rcall	800031e0 <__sprint_r>
80004d8e:	e0 81 01 b6 	brne	800050fa <_vfprintf_r+0x1efe>
80004d92:	fa c3 f9 e0 	sub	r3,sp,-1568
80004d96:	21 06       	sub	r6,16
80004d98:	c0 48       	rjmp	80004da0 <_vfprintf_r+0x1ba4>
80004d9a:	fe c2 bf 32 	sub	r2,pc,-16590
80004d9e:	31 00       	mov	r0,16
80004da0:	fa f9 06 90 	ld.w	r9,sp[1680]
80004da4:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004da8:	fe ca bf 40 	sub	r10,pc,-16576
80004dac:	59 06       	cp.w	r6,16
80004dae:	fe 99 ff dd 	brgt	80004d68 <_vfprintf_r+0x1b6c>
80004db2:	0c 09       	add	r9,r6
80004db4:	2f f8       	sub	r8,-1
80004db6:	87 0a       	st.w	r3[0x0],r10
80004db8:	fb 49 06 90 	st.w	sp[1680],r9
80004dbc:	87 16       	st.w	r3[0x4],r6
80004dbe:	fb 48 06 8c 	st.w	sp[1676],r8
80004dc2:	58 78       	cp.w	r8,7
80004dc4:	e0 89 00 04 	brgt	80004dcc <_vfprintf_r+0x1bd0>
80004dc8:	2f 83       	sub	r3,-8
80004dca:	c0 b8       	rjmp	80004de0 <_vfprintf_r+0x1be4>
80004dcc:	fa ca f9 78 	sub	r10,sp,-1672
80004dd0:	02 9b       	mov	r11,r1
80004dd2:	08 9c       	mov	r12,r4
80004dd4:	fe b0 f2 06 	rcall	800031e0 <__sprint_r>
80004dd8:	e0 81 01 91 	brne	800050fa <_vfprintf_r+0x1efe>
80004ddc:	fa c3 f9 e0 	sub	r3,sp,-1568
80004de0:	ed b5 00 00 	bld	r5,0x0
80004de4:	e0 81 01 20 	brne	80005024 <_vfprintf_r+0x1e28>
80004de8:	40 c9       	lddsp	r9,sp[0x30]
80004dea:	fa f8 06 90 	ld.w	r8,sp[1680]
80004dee:	2f f8       	sub	r8,-1
80004df0:	87 09       	st.w	r3[0x0],r9
80004df2:	fb 48 06 90 	st.w	sp[1680],r8
80004df6:	30 19       	mov	r9,1
80004df8:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004dfc:	87 19       	st.w	r3[0x4],r9
80004dfe:	2f f8       	sub	r8,-1
80004e00:	fb 48 06 8c 	st.w	sp[1676],r8
80004e04:	c0 29       	rjmp	80005008 <_vfprintf_r+0x1e0c>
80004e06:	14 09       	add	r9,r10
80004e08:	2f f8       	sub	r8,-1
80004e0a:	fb 49 06 90 	st.w	sp[1680],r9
80004e0e:	87 06       	st.w	r3[0x0],r6
80004e10:	87 1a       	st.w	r3[0x4],r10
80004e12:	fb 48 06 8c 	st.w	sp[1676],r8
80004e16:	58 78       	cp.w	r8,7
80004e18:	e0 89 00 04 	brgt	80004e20 <_vfprintf_r+0x1c24>
80004e1c:	2f 83       	sub	r3,-8
80004e1e:	c0 b8       	rjmp	80004e34 <_vfprintf_r+0x1c38>
80004e20:	fa ca f9 78 	sub	r10,sp,-1672
80004e24:	02 9b       	mov	r11,r1
80004e26:	08 9c       	mov	r12,r4
80004e28:	fe b0 f1 dc 	rcall	800031e0 <__sprint_r>
80004e2c:	e0 81 01 67 	brne	800050fa <_vfprintf_r+0x1efe>
80004e30:	fa c3 f9 e0 	sub	r3,sp,-1568
80004e34:	40 c8       	lddsp	r8,sp[0x30]
80004e36:	87 08       	st.w	r3[0x0],r8
80004e38:	fa f8 06 90 	ld.w	r8,sp[1680]
80004e3c:	2f f8       	sub	r8,-1
80004e3e:	30 19       	mov	r9,1
80004e40:	fb 48 06 90 	st.w	sp[1680],r8
80004e44:	87 19       	st.w	r3[0x4],r9
80004e46:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004e4a:	2f f8       	sub	r8,-1
80004e4c:	fb 48 06 8c 	st.w	sp[1676],r8
80004e50:	fa f2 06 ac 	ld.w	r2,sp[1708]
80004e54:	58 78       	cp.w	r8,7
80004e56:	e0 89 00 04 	brgt	80004e5e <_vfprintf_r+0x1c62>
80004e5a:	2f 83       	sub	r3,-8
80004e5c:	c0 b8       	rjmp	80004e72 <_vfprintf_r+0x1c76>
80004e5e:	fa ca f9 78 	sub	r10,sp,-1672
80004e62:	02 9b       	mov	r11,r1
80004e64:	08 9c       	mov	r12,r4
80004e66:	fe b0 f1 bd 	rcall	800031e0 <__sprint_r>
80004e6a:	e0 81 01 48 	brne	800050fa <_vfprintf_r+0x1efe>
80004e6e:	fa c3 f9 e0 	sub	r3,sp,-1568
80004e72:	04 06       	add	r6,r2
80004e74:	fa f8 06 ac 	ld.w	r8,sp[1708]
80004e78:	87 06       	st.w	r3[0x0],r6
80004e7a:	fa f9 06 90 	ld.w	r9,sp[1680]
80004e7e:	40 66       	lddsp	r6,sp[0x18]
80004e80:	40 6e       	lddsp	lr,sp[0x18]
80004e82:	10 16       	sub	r6,r8
80004e84:	f2 08 01 08 	sub	r8,r9,r8
80004e88:	87 16       	st.w	r3[0x4],r6
80004e8a:	1c 08       	add	r8,lr
80004e8c:	fb 48 06 90 	st.w	sp[1680],r8
80004e90:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004e94:	2f f8       	sub	r8,-1
80004e96:	fb 48 06 8c 	st.w	sp[1676],r8
80004e9a:	cb 78       	rjmp	80005008 <_vfprintf_r+0x1e0c>
80004e9c:	40 6c       	lddsp	r12,sp[0x18]
80004e9e:	58 1c       	cp.w	r12,1
80004ea0:	e0 89 00 06 	brgt	80004eac <_vfprintf_r+0x1cb0>
80004ea4:	ed b5 00 00 	bld	r5,0x0
80004ea8:	e0 81 00 85 	brne	80004fb2 <_vfprintf_r+0x1db6>
80004eac:	fa f8 06 90 	ld.w	r8,sp[1680]
80004eb0:	2f f8       	sub	r8,-1
80004eb2:	30 19       	mov	r9,1
80004eb4:	fb 48 06 90 	st.w	sp[1680],r8
80004eb8:	87 06       	st.w	r3[0x0],r6
80004eba:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004ebe:	87 19       	st.w	r3[0x4],r9
80004ec0:	2f f8       	sub	r8,-1
80004ec2:	fb 48 06 8c 	st.w	sp[1676],r8
80004ec6:	58 78       	cp.w	r8,7
80004ec8:	e0 89 00 04 	brgt	80004ed0 <_vfprintf_r+0x1cd4>
80004ecc:	2f 83       	sub	r3,-8
80004ece:	c0 b8       	rjmp	80004ee4 <_vfprintf_r+0x1ce8>
80004ed0:	fa ca f9 78 	sub	r10,sp,-1672
80004ed4:	02 9b       	mov	r11,r1
80004ed6:	08 9c       	mov	r12,r4
80004ed8:	fe b0 f1 84 	rcall	800031e0 <__sprint_r>
80004edc:	e0 81 01 0f 	brne	800050fa <_vfprintf_r+0x1efe>
80004ee0:	fa c3 f9 e0 	sub	r3,sp,-1568
80004ee4:	fa f8 06 90 	ld.w	r8,sp[1680]
80004ee8:	2f f8       	sub	r8,-1
80004eea:	40 cb       	lddsp	r11,sp[0x30]
80004eec:	fb 48 06 90 	st.w	sp[1680],r8
80004ef0:	30 19       	mov	r9,1
80004ef2:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004ef6:	87 0b       	st.w	r3[0x0],r11
80004ef8:	2f f8       	sub	r8,-1
80004efa:	87 19       	st.w	r3[0x4],r9
80004efc:	fb 48 06 8c 	st.w	sp[1676],r8
80004f00:	58 78       	cp.w	r8,7
80004f02:	e0 89 00 05 	brgt	80004f0c <_vfprintf_r+0x1d10>
80004f06:	2f 83       	sub	r3,-8
80004f08:	c0 c8       	rjmp	80004f20 <_vfprintf_r+0x1d24>
80004f0a:	d7 03       	nop
80004f0c:	fa ca f9 78 	sub	r10,sp,-1672
80004f10:	02 9b       	mov	r11,r1
80004f12:	08 9c       	mov	r12,r4
80004f14:	fe b0 f1 66 	rcall	800031e0 <__sprint_r>
80004f18:	e0 81 00 f1 	brne	800050fa <_vfprintf_r+0x1efe>
80004f1c:	fa c3 f9 e0 	sub	r3,sp,-1568
80004f20:	30 08       	mov	r8,0
80004f22:	30 09       	mov	r9,0
80004f24:	40 5b       	lddsp	r11,sp[0x14]
80004f26:	40 7a       	lddsp	r10,sp[0x1c]
80004f28:	e0 a0 17 3d 	rcall	80007da2 <__avr32_f64_cmp_eq>
80004f2c:	40 68       	lddsp	r8,sp[0x18]
80004f2e:	20 18       	sub	r8,1
80004f30:	58 0c       	cp.w	r12,0
80004f32:	c0 d1       	brne	80004f4c <_vfprintf_r+0x1d50>
80004f34:	2f f6       	sub	r6,-1
80004f36:	87 18       	st.w	r3[0x4],r8
80004f38:	87 06       	st.w	r3[0x0],r6
80004f3a:	fa f6 06 90 	ld.w	r6,sp[1680]
80004f3e:	10 06       	add	r6,r8
80004f40:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004f44:	fb 46 06 90 	st.w	sp[1680],r6
80004f48:	2f f8       	sub	r8,-1
80004f4a:	c3 18       	rjmp	80004fac <_vfprintf_r+0x1db0>
80004f4c:	10 96       	mov	r6,r8
80004f4e:	58 08       	cp.w	r8,0
80004f50:	e0 89 00 1c 	brgt	80004f88 <_vfprintf_r+0x1d8c>
80004f54:	c4 b8       	rjmp	80004fea <_vfprintf_r+0x1dee>
80004f56:	2f 09       	sub	r9,-16
80004f58:	2f f8       	sub	r8,-1
80004f5a:	fb 49 06 90 	st.w	sp[1680],r9
80004f5e:	87 02       	st.w	r3[0x0],r2
80004f60:	87 10       	st.w	r3[0x4],r0
80004f62:	fb 48 06 8c 	st.w	sp[1676],r8
80004f66:	58 78       	cp.w	r8,7
80004f68:	e0 89 00 04 	brgt	80004f70 <_vfprintf_r+0x1d74>
80004f6c:	2f 83       	sub	r3,-8
80004f6e:	c0 b8       	rjmp	80004f84 <_vfprintf_r+0x1d88>
80004f70:	fa ca f9 78 	sub	r10,sp,-1672
80004f74:	02 9b       	mov	r11,r1
80004f76:	08 9c       	mov	r12,r4
80004f78:	fe b0 f1 34 	rcall	800031e0 <__sprint_r>
80004f7c:	e0 81 00 bf 	brne	800050fa <_vfprintf_r+0x1efe>
80004f80:	fa c3 f9 e0 	sub	r3,sp,-1568
80004f84:	21 06       	sub	r6,16
80004f86:	c0 48       	rjmp	80004f8e <_vfprintf_r+0x1d92>
80004f88:	fe c2 c1 20 	sub	r2,pc,-16096
80004f8c:	31 00       	mov	r0,16
80004f8e:	fa f9 06 90 	ld.w	r9,sp[1680]
80004f92:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004f96:	fe ca c1 2e 	sub	r10,pc,-16082
80004f9a:	59 06       	cp.w	r6,16
80004f9c:	fe 99 ff dd 	brgt	80004f56 <_vfprintf_r+0x1d5a>
80004fa0:	0c 09       	add	r9,r6
80004fa2:	87 0a       	st.w	r3[0x0],r10
80004fa4:	fb 49 06 90 	st.w	sp[1680],r9
80004fa8:	2f f8       	sub	r8,-1
80004faa:	87 16       	st.w	r3[0x4],r6
80004fac:	fb 48 06 8c 	st.w	sp[1676],r8
80004fb0:	c0 e8       	rjmp	80004fcc <_vfprintf_r+0x1dd0>
80004fb2:	fa f8 06 90 	ld.w	r8,sp[1680]
80004fb6:	2f f8       	sub	r8,-1
80004fb8:	30 19       	mov	r9,1
80004fba:	fb 48 06 90 	st.w	sp[1680],r8
80004fbe:	87 06       	st.w	r3[0x0],r6
80004fc0:	fa f8 06 8c 	ld.w	r8,sp[1676]
80004fc4:	87 19       	st.w	r3[0x4],r9
80004fc6:	2f f8       	sub	r8,-1
80004fc8:	fb 48 06 8c 	st.w	sp[1676],r8
80004fcc:	58 78       	cp.w	r8,7
80004fce:	e0 89 00 04 	brgt	80004fd6 <_vfprintf_r+0x1dda>
80004fd2:	2f 83       	sub	r3,-8
80004fd4:	c0 b8       	rjmp	80004fea <_vfprintf_r+0x1dee>
80004fd6:	fa ca f9 78 	sub	r10,sp,-1672
80004fda:	02 9b       	mov	r11,r1
80004fdc:	08 9c       	mov	r12,r4
80004fde:	fe b0 f1 01 	rcall	800031e0 <__sprint_r>
80004fe2:	e0 81 00 8c 	brne	800050fa <_vfprintf_r+0x1efe>
80004fe6:	fa c3 f9 e0 	sub	r3,sp,-1568
80004fea:	40 ea       	lddsp	r10,sp[0x38]
80004fec:	fa f8 06 90 	ld.w	r8,sp[1680]
80004ff0:	14 08       	add	r8,r10
80004ff2:	fa c9 f9 64 	sub	r9,sp,-1692
80004ff6:	fb 48 06 90 	st.w	sp[1680],r8
80004ffa:	87 1a       	st.w	r3[0x4],r10
80004ffc:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005000:	87 09       	st.w	r3[0x0],r9
80005002:	2f f8       	sub	r8,-1
80005004:	fb 48 06 8c 	st.w	sp[1676],r8
80005008:	58 78       	cp.w	r8,7
8000500a:	e0 89 00 04 	brgt	80005012 <_vfprintf_r+0x1e16>
8000500e:	2f 83       	sub	r3,-8
80005010:	c0 a8       	rjmp	80005024 <_vfprintf_r+0x1e28>
80005012:	fa ca f9 78 	sub	r10,sp,-1672
80005016:	02 9b       	mov	r11,r1
80005018:	08 9c       	mov	r12,r4
8000501a:	fe b0 f0 e3 	rcall	800031e0 <__sprint_r>
8000501e:	c6 e1       	brne	800050fa <_vfprintf_r+0x1efe>
80005020:	fa c3 f9 e0 	sub	r3,sp,-1568
80005024:	e2 15 00 04 	andl	r5,0x4,COH
80005028:	c3 f0       	breq	800050a6 <_vfprintf_r+0x1eaa>
8000502a:	40 86       	lddsp	r6,sp[0x20]
8000502c:	40 39       	lddsp	r9,sp[0xc]
8000502e:	12 16       	sub	r6,r9
80005030:	58 06       	cp.w	r6,0
80005032:	e0 89 00 1a 	brgt	80005066 <_vfprintf_r+0x1e6a>
80005036:	c3 88       	rjmp	800050a6 <_vfprintf_r+0x1eaa>
80005038:	2f 09       	sub	r9,-16
8000503a:	2f f8       	sub	r8,-1
8000503c:	fb 49 06 90 	st.w	sp[1680],r9
80005040:	87 05       	st.w	r3[0x0],r5
80005042:	87 12       	st.w	r3[0x4],r2
80005044:	fb 48 06 8c 	st.w	sp[1676],r8
80005048:	58 78       	cp.w	r8,7
8000504a:	e0 89 00 04 	brgt	80005052 <_vfprintf_r+0x1e56>
8000504e:	2f 83       	sub	r3,-8
80005050:	c0 98       	rjmp	80005062 <_vfprintf_r+0x1e66>
80005052:	00 9a       	mov	r10,r0
80005054:	02 9b       	mov	r11,r1
80005056:	08 9c       	mov	r12,r4
80005058:	fe b0 f0 c4 	rcall	800031e0 <__sprint_r>
8000505c:	c4 f1       	brne	800050fa <_vfprintf_r+0x1efe>
8000505e:	fa c3 f9 e0 	sub	r3,sp,-1568
80005062:	21 06       	sub	r6,16
80005064:	c0 68       	rjmp	80005070 <_vfprintf_r+0x1e74>
80005066:	fe c5 c2 0e 	sub	r5,pc,-15858
8000506a:	31 02       	mov	r2,16
8000506c:	fa c0 f9 78 	sub	r0,sp,-1672
80005070:	fa f9 06 90 	ld.w	r9,sp[1680]
80005074:	fa f8 06 8c 	ld.w	r8,sp[1676]
80005078:	fe ca c2 20 	sub	r10,pc,-15840
8000507c:	59 06       	cp.w	r6,16
8000507e:	fe 99 ff dd 	brgt	80005038 <_vfprintf_r+0x1e3c>
80005082:	0c 09       	add	r9,r6
80005084:	2f f8       	sub	r8,-1
80005086:	87 0a       	st.w	r3[0x0],r10
80005088:	87 16       	st.w	r3[0x4],r6
8000508a:	fb 49 06 90 	st.w	sp[1680],r9
8000508e:	fb 48 06 8c 	st.w	sp[1676],r8
80005092:	58 78       	cp.w	r8,7
80005094:	e0 8a 00 09 	brle	800050a6 <_vfprintf_r+0x1eaa>
80005098:	fa ca f9 78 	sub	r10,sp,-1672
8000509c:	02 9b       	mov	r11,r1
8000509e:	08 9c       	mov	r12,r4
800050a0:	fe b0 f0 a0 	rcall	800031e0 <__sprint_r>
800050a4:	c2 b1       	brne	800050fa <_vfprintf_r+0x1efe>
800050a6:	40 bc       	lddsp	r12,sp[0x2c]
800050a8:	40 36       	lddsp	r6,sp[0xc]
800050aa:	40 8e       	lddsp	lr,sp[0x20]
800050ac:	ec 0e 0c 48 	max	r8,r6,lr
800050b0:	10 0c       	add	r12,r8
800050b2:	50 bc       	stdsp	sp[0x2c],r12
800050b4:	fa f8 06 90 	ld.w	r8,sp[1680]
800050b8:	58 08       	cp.w	r8,0
800050ba:	c0 80       	breq	800050ca <_vfprintf_r+0x1ece>
800050bc:	fa ca f9 78 	sub	r10,sp,-1672
800050c0:	02 9b       	mov	r11,r1
800050c2:	08 9c       	mov	r12,r4
800050c4:	fe b0 f0 8e 	rcall	800031e0 <__sprint_r>
800050c8:	c1 91       	brne	800050fa <_vfprintf_r+0x1efe>
800050ca:	30 0b       	mov	r11,0
800050cc:	fa c3 f9 e0 	sub	r3,sp,-1568
800050d0:	fb 4b 06 8c 	st.w	sp[1676],r11
800050d4:	fe 9f f1 22 	bral	80003318 <_vfprintf_r+0x11c>
800050d8:	08 95       	mov	r5,r4
800050da:	fa f8 06 90 	ld.w	r8,sp[1680]
800050de:	58 08       	cp.w	r8,0
800050e0:	c0 80       	breq	800050f0 <_vfprintf_r+0x1ef4>
800050e2:	08 9c       	mov	r12,r4
800050e4:	fa ca f9 78 	sub	r10,sp,-1672
800050e8:	02 9b       	mov	r11,r1
800050ea:	fe b0 f0 7b 	rcall	800031e0 <__sprint_r>
800050ee:	c0 61       	brne	800050fa <_vfprintf_r+0x1efe>
800050f0:	30 08       	mov	r8,0
800050f2:	fb 48 06 8c 	st.w	sp[1676],r8
800050f6:	c0 28       	rjmp	800050fa <_vfprintf_r+0x1efe>
800050f8:	40 41       	lddsp	r1,sp[0x10]
800050fa:	82 68       	ld.sh	r8,r1[0xc]
800050fc:	ed b8 00 06 	bld	r8,0x6
80005100:	c0 31       	brne	80005106 <_vfprintf_r+0x1f0a>
80005102:	3f fa       	mov	r10,-1
80005104:	50 ba       	stdsp	sp[0x2c],r10
80005106:	40 bc       	lddsp	r12,sp[0x2c]
80005108:	fe 3d f9 44 	sub	sp,-1724
8000510c:	d8 32       	popm	r0-r7,pc
8000510e:	d7 03       	nop

80005110 <__swsetup_r>:
80005110:	d4 21       	pushm	r4-r7,lr
80005112:	e0 68 01 00 	mov	r8,256
80005116:	18 96       	mov	r6,r12
80005118:	16 97       	mov	r7,r11
8000511a:	70 0c       	ld.w	r12,r8[0x0]
8000511c:	58 0c       	cp.w	r12,0
8000511e:	c0 60       	breq	8000512a <__swsetup_r+0x1a>
80005120:	78 68       	ld.w	r8,r12[0x18]
80005122:	58 08       	cp.w	r8,0
80005124:	c0 31       	brne	8000512a <__swsetup_r+0x1a>
80005126:	e0 a0 07 b9 	rcall	80006098 <__sinit>
8000512a:	fe c8 c1 a2 	sub	r8,pc,-15966
8000512e:	10 37       	cp.w	r7,r8
80005130:	c0 61       	brne	8000513c <__swsetup_r+0x2c>
80005132:	e0 68 01 00 	mov	r8,256
80005136:	70 08       	ld.w	r8,r8[0x0]
80005138:	70 07       	ld.w	r7,r8[0x0]
8000513a:	c1 28       	rjmp	8000515e <__swsetup_r+0x4e>
8000513c:	fe c8 c1 94 	sub	r8,pc,-15980
80005140:	10 37       	cp.w	r7,r8
80005142:	c0 61       	brne	8000514e <__swsetup_r+0x3e>
80005144:	e0 68 01 00 	mov	r8,256
80005148:	70 08       	ld.w	r8,r8[0x0]
8000514a:	70 17       	ld.w	r7,r8[0x4]
8000514c:	c0 98       	rjmp	8000515e <__swsetup_r+0x4e>
8000514e:	fe c8 c1 86 	sub	r8,pc,-15994
80005152:	10 37       	cp.w	r7,r8
80005154:	c0 51       	brne	8000515e <__swsetup_r+0x4e>
80005156:	e0 68 01 00 	mov	r8,256
8000515a:	70 08       	ld.w	r8,r8[0x0]
8000515c:	70 27       	ld.w	r7,r8[0x8]
8000515e:	8e 68       	ld.sh	r8,r7[0xc]
80005160:	ed b8 00 03 	bld	r8,0x3
80005164:	c1 e0       	breq	800051a0 <__swsetup_r+0x90>
80005166:	ed b8 00 04 	bld	r8,0x4
8000516a:	c3 e1       	brne	800051e6 <__swsetup_r+0xd6>
8000516c:	ed b8 00 02 	bld	r8,0x2
80005170:	c1 51       	brne	8000519a <__swsetup_r+0x8a>
80005172:	6e db       	ld.w	r11,r7[0x34]
80005174:	58 0b       	cp.w	r11,0
80005176:	c0 a0       	breq	8000518a <__swsetup_r+0x7a>
80005178:	ee c8 ff bc 	sub	r8,r7,-68
8000517c:	10 3b       	cp.w	r11,r8
8000517e:	c0 40       	breq	80005186 <__swsetup_r+0x76>
80005180:	0c 9c       	mov	r12,r6
80005182:	e0 a0 08 25 	rcall	800061cc <_free_r>
80005186:	30 08       	mov	r8,0
80005188:	8f d8       	st.w	r7[0x34],r8
8000518a:	8e 68       	ld.sh	r8,r7[0xc]
8000518c:	e0 18 ff db 	andl	r8,0xffdb
80005190:	ae 68       	st.h	r7[0xc],r8
80005192:	30 08       	mov	r8,0
80005194:	8f 18       	st.w	r7[0x4],r8
80005196:	6e 48       	ld.w	r8,r7[0x10]
80005198:	8f 08       	st.w	r7[0x0],r8
8000519a:	8e 68       	ld.sh	r8,r7[0xc]
8000519c:	a3 b8       	sbr	r8,0x3
8000519e:	ae 68       	st.h	r7[0xc],r8
800051a0:	6e 48       	ld.w	r8,r7[0x10]
800051a2:	58 08       	cp.w	r8,0
800051a4:	c0 b1       	brne	800051ba <__swsetup_r+0xaa>
800051a6:	8e 68       	ld.sh	r8,r7[0xc]
800051a8:	e2 18 02 80 	andl	r8,0x280,COH
800051ac:	e0 48 02 00 	cp.w	r8,512
800051b0:	c0 50       	breq	800051ba <__swsetup_r+0xaa>
800051b2:	0c 9c       	mov	r12,r6
800051b4:	0e 9b       	mov	r11,r7
800051b6:	e0 a0 0a 4b 	rcall	8000664c <__smakebuf_r>
800051ba:	8e 69       	ld.sh	r9,r7[0xc]
800051bc:	f1 d9 c0 01 	bfextu	r8,r9,0x0,0x1
800051c0:	c0 70       	breq	800051ce <__swsetup_r+0xbe>
800051c2:	30 08       	mov	r8,0
800051c4:	8f 28       	st.w	r7[0x8],r8
800051c6:	6e 58       	ld.w	r8,r7[0x14]
800051c8:	5c 38       	neg	r8
800051ca:	8f 68       	st.w	r7[0x18],r8
800051cc:	c0 68       	rjmp	800051d8 <__swsetup_r+0xc8>
800051ce:	ed b9 00 01 	bld	r9,0x1
800051d2:	ef f8 10 05 	ld.wne	r8,r7[0x14]
800051d6:	8f 28       	st.w	r7[0x8],r8
800051d8:	6e 48       	ld.w	r8,r7[0x10]
800051da:	58 08       	cp.w	r8,0
800051dc:	c0 61       	brne	800051e8 <__swsetup_r+0xd8>
800051de:	8e 68       	ld.sh	r8,r7[0xc]
800051e0:	ed b8 00 07 	bld	r8,0x7
800051e4:	c0 21       	brne	800051e8 <__swsetup_r+0xd8>
800051e6:	dc 2a       	popm	r4-r7,pc,r12=-1
800051e8:	d8 2a       	popm	r4-r7,pc,r12=0
800051ea:	d7 03       	nop

800051ec <quorem>:
800051ec:	d4 31       	pushm	r0-r7,lr
800051ee:	20 2d       	sub	sp,8
800051f0:	18 97       	mov	r7,r12
800051f2:	78 48       	ld.w	r8,r12[0x10]
800051f4:	76 46       	ld.w	r6,r11[0x10]
800051f6:	0c 38       	cp.w	r8,r6
800051f8:	c0 34       	brge	800051fe <quorem+0x12>
800051fa:	30 0c       	mov	r12,0
800051fc:	c8 58       	rjmp	80005306 <quorem+0x11a>
800051fe:	ec c2 ff fc 	sub	r2,r6,-4
80005202:	f6 c3 ff ec 	sub	r3,r11,-20
80005206:	f6 02 03 29 	ld.w	r9,r11[r2<<0x2]
8000520a:	f8 02 03 2c 	ld.w	r12,r12[r2<<0x2]
8000520e:	2f f9       	sub	r9,-1
80005210:	20 16       	sub	r6,1
80005212:	f8 09 0d 08 	divu	r8,r12,r9
80005216:	f6 02 00 22 	add	r2,r11,r2<<0x2
8000521a:	ee c4 ff ec 	sub	r4,r7,-20
8000521e:	10 95       	mov	r5,r8
80005220:	58 08       	cp.w	r8,0
80005222:	c4 10       	breq	800052a4 <quorem+0xb8>
80005224:	30 09       	mov	r9,0
80005226:	06 9a       	mov	r10,r3
80005228:	08 98       	mov	r8,r4
8000522a:	12 91       	mov	r1,r9
8000522c:	50 0b       	stdsp	sp[0x0],r11
8000522e:	70 0e       	ld.w	lr,r8[0x0]
80005230:	b1 8e       	lsr	lr,0x10
80005232:	50 1e       	stdsp	sp[0x4],lr
80005234:	15 0e       	ld.w	lr,r10++
80005236:	fc 00 16 10 	lsr	r0,lr,0x10
8000523a:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
8000523e:	ea 0e 03 41 	mac	r1,r5,lr
80005242:	fd d1 c0 10 	bfextu	lr,r1,0x0,0x10
80005246:	b1 81       	lsr	r1,0x10
80005248:	40 1b       	lddsp	r11,sp[0x4]
8000524a:	ea 00 02 40 	mul	r0,r5,r0
8000524e:	e2 00 00 00 	add	r0,r1,r0
80005252:	e3 d0 c0 10 	bfextu	r1,r0,0x0,0x10
80005256:	02 1b       	sub	r11,r1
80005258:	50 1b       	stdsp	sp[0x4],r11
8000525a:	70 0b       	ld.w	r11,r8[0x0]
8000525c:	e3 db c0 10 	bfextu	r1,r11,0x0,0x10
80005260:	02 09       	add	r9,r1
80005262:	f2 0e 01 0e 	sub	lr,r9,lr
80005266:	b0 1e       	st.h	r8[0x2],lr
80005268:	fc 09 14 10 	asr	r9,lr,0x10
8000526c:	40 1e       	lddsp	lr,sp[0x4]
8000526e:	fc 09 00 09 	add	r9,lr,r9
80005272:	b0 09       	st.h	r8[0x0],r9
80005274:	e0 01 16 10 	lsr	r1,r0,0x10
80005278:	2f c8       	sub	r8,-4
8000527a:	b1 49       	asr	r9,0x10
8000527c:	04 3a       	cp.w	r10,r2
8000527e:	fe 98 ff d8 	brls	8000522e <quorem+0x42>
80005282:	40 0b       	lddsp	r11,sp[0x0]
80005284:	58 0c       	cp.w	r12,0
80005286:	c0 f1       	brne	800052a4 <quorem+0xb8>
80005288:	ec c8 ff fb 	sub	r8,r6,-5
8000528c:	ee 08 00 28 	add	r8,r7,r8<<0x2
80005290:	c0 28       	rjmp	80005294 <quorem+0xa8>
80005292:	20 16       	sub	r6,1
80005294:	20 48       	sub	r8,4
80005296:	08 38       	cp.w	r8,r4
80005298:	e0 88 00 05 	brls	800052a2 <quorem+0xb6>
8000529c:	70 09       	ld.w	r9,r8[0x0]
8000529e:	58 09       	cp.w	r9,0
800052a0:	cf 90       	breq	80005292 <quorem+0xa6>
800052a2:	8f 46       	st.w	r7[0x10],r6
800052a4:	0e 9c       	mov	r12,r7
800052a6:	e0 a0 0c fb 	rcall	80006c9c <__mcmp>
800052aa:	c2 d5       	brlt	80005304 <quorem+0x118>
800052ac:	2f f5       	sub	r5,-1
800052ae:	08 98       	mov	r8,r4
800052b0:	30 09       	mov	r9,0
800052b2:	07 0b       	ld.w	r11,r3++
800052b4:	f6 0a 16 10 	lsr	r10,r11,0x10
800052b8:	70 0c       	ld.w	r12,r8[0x0]
800052ba:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
800052be:	f8 0e 16 10 	lsr	lr,r12,0x10
800052c2:	14 1e       	sub	lr,r10
800052c4:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
800052c8:	16 1a       	sub	r10,r11
800052ca:	12 0a       	add	r10,r9
800052cc:	b0 1a       	st.h	r8[0x2],r10
800052ce:	b1 4a       	asr	r10,0x10
800052d0:	fc 0a 00 09 	add	r9,lr,r10
800052d4:	b0 09       	st.h	r8[0x0],r9
800052d6:	2f c8       	sub	r8,-4
800052d8:	b1 49       	asr	r9,0x10
800052da:	04 33       	cp.w	r3,r2
800052dc:	fe 98 ff eb 	brls	800052b2 <quorem+0xc6>
800052e0:	ec c8 ff fb 	sub	r8,r6,-5
800052e4:	ee 08 03 29 	ld.w	r9,r7[r8<<0x2]
800052e8:	58 09       	cp.w	r9,0
800052ea:	c0 d1       	brne	80005304 <quorem+0x118>
800052ec:	ee 08 00 28 	add	r8,r7,r8<<0x2
800052f0:	c0 28       	rjmp	800052f4 <quorem+0x108>
800052f2:	20 16       	sub	r6,1
800052f4:	20 48       	sub	r8,4
800052f6:	08 38       	cp.w	r8,r4
800052f8:	e0 88 00 05 	brls	80005302 <quorem+0x116>
800052fc:	70 09       	ld.w	r9,r8[0x0]
800052fe:	58 09       	cp.w	r9,0
80005300:	cf 90       	breq	800052f2 <quorem+0x106>
80005302:	8f 46       	st.w	r7[0x10],r6
80005304:	0a 9c       	mov	r12,r5
80005306:	2f ed       	sub	sp,-8
80005308:	d8 32       	popm	r0-r7,pc
8000530a:	d7 03       	nop

8000530c <_dtoa_r>:
8000530c:	d4 31       	pushm	r0-r7,lr
8000530e:	21 ad       	sub	sp,104
80005310:	fa c4 ff 74 	sub	r4,sp,-140
80005314:	18 97       	mov	r7,r12
80005316:	16 95       	mov	r5,r11
80005318:	68 2c       	ld.w	r12,r4[0x8]
8000531a:	50 c9       	stdsp	sp[0x30],r9
8000531c:	68 16       	ld.w	r6,r4[0x4]
8000531e:	68 09       	ld.w	r9,r4[0x0]
80005320:	50 e8       	stdsp	sp[0x38],r8
80005322:	14 94       	mov	r4,r10
80005324:	51 2c       	stdsp	sp[0x48],r12
80005326:	fa e5 00 08 	st.d	sp[8],r4
8000532a:	51 59       	stdsp	sp[0x54],r9
8000532c:	6e 95       	ld.w	r5,r7[0x24]
8000532e:	58 05       	cp.w	r5,0
80005330:	c0 91       	brne	80005342 <_dtoa_r+0x36>
80005332:	31 0c       	mov	r12,16
80005334:	e0 a0 09 ea 	rcall	80006708 <malloc>
80005338:	99 35       	st.w	r12[0xc],r5
8000533a:	8f 9c       	st.w	r7[0x24],r12
8000533c:	99 15       	st.w	r12[0x4],r5
8000533e:	99 25       	st.w	r12[0x8],r5
80005340:	99 05       	st.w	r12[0x0],r5
80005342:	6e 99       	ld.w	r9,r7[0x24]
80005344:	72 08       	ld.w	r8,r9[0x0]
80005346:	58 08       	cp.w	r8,0
80005348:	c0 f0       	breq	80005366 <_dtoa_r+0x5a>
8000534a:	72 1a       	ld.w	r10,r9[0x4]
8000534c:	91 1a       	st.w	r8[0x4],r10
8000534e:	30 1a       	mov	r10,1
80005350:	72 19       	ld.w	r9,r9[0x4]
80005352:	f4 09 09 49 	lsl	r9,r10,r9
80005356:	10 9b       	mov	r11,r8
80005358:	91 29       	st.w	r8[0x8],r9
8000535a:	0e 9c       	mov	r12,r7
8000535c:	e0 a0 0c ba 	rcall	80006cd0 <_Bfree>
80005360:	6e 98       	ld.w	r8,r7[0x24]
80005362:	30 09       	mov	r9,0
80005364:	91 09       	st.w	r8[0x0],r9
80005366:	40 28       	lddsp	r8,sp[0x8]
80005368:	10 94       	mov	r4,r8
8000536a:	58 08       	cp.w	r8,0
8000536c:	c0 64       	brge	80005378 <_dtoa_r+0x6c>
8000536e:	f1 d8 c0 1f 	bfextu	r8,r8,0x0,0x1f
80005372:	50 28       	stdsp	sp[0x8],r8
80005374:	30 18       	mov	r8,1
80005376:	c0 28       	rjmp	8000537a <_dtoa_r+0x6e>
80005378:	30 08       	mov	r8,0
8000537a:	8d 08       	st.w	r6[0x0],r8
8000537c:	fc 1c 7f f0 	movh	r12,0x7ff0
80005380:	40 26       	lddsp	r6,sp[0x8]
80005382:	0c 98       	mov	r8,r6
80005384:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80005388:	18 38       	cp.w	r8,r12
8000538a:	c2 01       	brne	800053ca <_dtoa_r+0xbe>
8000538c:	e0 68 27 0f 	mov	r8,9999
80005390:	41 5b       	lddsp	r11,sp[0x54]
80005392:	97 08       	st.w	r11[0x0],r8
80005394:	40 3a       	lddsp	r10,sp[0xc]
80005396:	58 0a       	cp.w	r10,0
80005398:	c0 71       	brne	800053a6 <_dtoa_r+0x9a>
8000539a:	ed d6 c0 14 	bfextu	r6,r6,0x0,0x14
8000539e:	c0 41       	brne	800053a6 <_dtoa_r+0x9a>
800053a0:	fe cc c4 28 	sub	r12,pc,-15320
800053a4:	c0 38       	rjmp	800053aa <_dtoa_r+0x9e>
800053a6:	fe cc c4 22 	sub	r12,pc,-15326
800053aa:	41 29       	lddsp	r9,sp[0x48]
800053ac:	58 09       	cp.w	r9,0
800053ae:	e0 80 05 9a 	breq	80005ee2 <_dtoa_r+0xbd6>
800053b2:	f8 c8 ff fd 	sub	r8,r12,-3
800053b6:	f8 c9 ff f8 	sub	r9,r12,-8
800053ba:	11 8b       	ld.ub	r11,r8[0x0]
800053bc:	30 0a       	mov	r10,0
800053be:	41 25       	lddsp	r5,sp[0x48]
800053c0:	f4 0b 18 00 	cp.b	r11,r10
800053c4:	f2 08 17 10 	movne	r8,r9
800053c8:	c1 68       	rjmp	800053f4 <_dtoa_r+0xe8>
800053ca:	fa ea 00 08 	ld.d	r10,sp[8]
800053ce:	30 08       	mov	r8,0
800053d0:	fa eb 00 3c 	st.d	sp[60],r10
800053d4:	30 09       	mov	r9,0
800053d6:	e0 a0 14 e6 	rcall	80007da2 <__avr32_f64_cmp_eq>
800053da:	c1 00       	breq	800053fa <_dtoa_r+0xee>
800053dc:	30 18       	mov	r8,1
800053de:	41 5a       	lddsp	r10,sp[0x54]
800053e0:	95 08       	st.w	r10[0x0],r8
800053e2:	fe cc c5 8e 	sub	r12,pc,-14962
800053e6:	41 29       	lddsp	r9,sp[0x48]
800053e8:	f8 08 00 08 	add	r8,r12,r8
800053ec:	58 09       	cp.w	r9,0
800053ee:	e0 80 05 7a 	breq	80005ee2 <_dtoa_r+0xbd6>
800053f2:	12 95       	mov	r5,r9
800053f4:	8b 08       	st.w	r5[0x0],r8
800053f6:	e0 8f 05 76 	bral	80005ee2 <_dtoa_r+0xbd6>
800053fa:	fa c8 ff 9c 	sub	r8,sp,-100
800053fe:	fa c9 ff a0 	sub	r9,sp,-96
80005402:	fa ea 00 3c 	ld.d	r10,sp[60]
80005406:	0e 9c       	mov	r12,r7
80005408:	eb d6 c2 8b 	bfextu	r5,r6,0x14,0xb
8000540c:	e0 a0 0c b4 	rcall	80006d74 <__d2b>
80005410:	18 93       	mov	r3,r12
80005412:	58 05       	cp.w	r5,0
80005414:	c0 d0       	breq	8000542e <_dtoa_r+0x122>
80005416:	fa ea 00 3c 	ld.d	r10,sp[60]
8000541a:	30 04       	mov	r4,0
8000541c:	f1 db c0 14 	bfextu	r8,r11,0x0,0x14
80005420:	ea c5 03 ff 	sub	r5,r5,1023
80005424:	10 9b       	mov	r11,r8
80005426:	51 74       	stdsp	sp[0x5c],r4
80005428:	ea 1b 3f f0 	orh	r11,0x3ff0
8000542c:	c2 58       	rjmp	80005476 <_dtoa_r+0x16a>
8000542e:	41 88       	lddsp	r8,sp[0x60]
80005430:	41 9c       	lddsp	r12,sp[0x64]
80005432:	10 0c       	add	r12,r8
80005434:	f8 c5 fb ce 	sub	r5,r12,-1074
80005438:	e0 45 00 20 	cp.w	r5,32
8000543c:	e0 8a 00 0e 	brle	80005458 <_dtoa_r+0x14c>
80005440:	f8 cc fb ee 	sub	r12,r12,-1042
80005444:	40 3b       	lddsp	r11,sp[0xc]
80005446:	ea 08 11 40 	rsub	r8,r5,64
8000544a:	f6 0c 0a 4c 	lsr	r12,r11,r12
8000544e:	ec 08 09 46 	lsl	r6,r6,r8
80005452:	0c 4c       	or	r12,r6
80005454:	c0 78       	rjmp	80005462 <_dtoa_r+0x156>
80005456:	d7 03       	nop
80005458:	ea 0c 11 20 	rsub	r12,r5,32
8000545c:	40 3a       	lddsp	r10,sp[0xc]
8000545e:	f4 0c 09 4c 	lsl	r12,r10,r12
80005462:	e0 a0 14 2c 	rcall	80007cba <__avr32_u32_to_f64>
80005466:	fc 18 fe 10 	movh	r8,0xfe10
8000546a:	30 19       	mov	r9,1
8000546c:	ea c5 04 33 	sub	r5,r5,1075
80005470:	f0 0b 00 0b 	add	r11,r8,r11
80005474:	51 79       	stdsp	sp[0x5c],r9
80005476:	30 08       	mov	r8,0
80005478:	fc 19 3f f8 	movh	r9,0x3ff8
8000547c:	e0 a0 12 b4 	rcall	800079e4 <__avr32_f64_sub>
80005480:	e0 68 43 61 	mov	r8,17249
80005484:	ea 18 63 6f 	orh	r8,0x636f
80005488:	e0 69 87 a7 	mov	r9,34727
8000548c:	ea 19 3f d2 	orh	r9,0x3fd2
80005490:	e0 a0 11 be 	rcall	8000780c <__avr32_f64_mul>
80005494:	e0 68 c8 b3 	mov	r8,51379
80005498:	ea 18 8b 60 	orh	r8,0x8b60
8000549c:	e0 69 8a 28 	mov	r9,35368
800054a0:	ea 19 3f c6 	orh	r9,0x3fc6
800054a4:	e0 a0 13 6e 	rcall	80007b80 <__avr32_f64_add>
800054a8:	0a 9c       	mov	r12,r5
800054aa:	14 90       	mov	r0,r10
800054ac:	16 91       	mov	r1,r11
800054ae:	e0 a0 14 0a 	rcall	80007cc2 <__avr32_s32_to_f64>
800054b2:	e0 68 79 fb 	mov	r8,31227
800054b6:	ea 18 50 9f 	orh	r8,0x509f
800054ba:	e0 69 44 13 	mov	r9,17427
800054be:	ea 19 3f d3 	orh	r9,0x3fd3
800054c2:	e0 a0 11 a5 	rcall	8000780c <__avr32_f64_mul>
800054c6:	14 98       	mov	r8,r10
800054c8:	16 99       	mov	r9,r11
800054ca:	00 9a       	mov	r10,r0
800054cc:	02 9b       	mov	r11,r1
800054ce:	e0 a0 13 59 	rcall	80007b80 <__avr32_f64_add>
800054d2:	14 90       	mov	r0,r10
800054d4:	16 91       	mov	r1,r11
800054d6:	e0 a0 13 df 	rcall	80007c94 <__avr32_f64_to_s32>
800054da:	30 08       	mov	r8,0
800054dc:	18 96       	mov	r6,r12
800054de:	30 09       	mov	r9,0
800054e0:	00 9a       	mov	r10,r0
800054e2:	02 9b       	mov	r11,r1
800054e4:	e0 a0 14 a6 	rcall	80007e30 <__avr32_f64_cmp_lt>
800054e8:	c0 c0       	breq	80005500 <_dtoa_r+0x1f4>
800054ea:	0c 9c       	mov	r12,r6
800054ec:	e0 a0 13 eb 	rcall	80007cc2 <__avr32_s32_to_f64>
800054f0:	14 98       	mov	r8,r10
800054f2:	16 99       	mov	r9,r11
800054f4:	00 9a       	mov	r10,r0
800054f6:	02 9b       	mov	r11,r1
800054f8:	e0 a0 14 55 	rcall	80007da2 <__avr32_f64_cmp_eq>
800054fc:	f7 b6 00 01 	subeq	r6,1
80005500:	59 66       	cp.w	r6,22
80005502:	e0 88 00 05 	brls	8000550c <_dtoa_r+0x200>
80005506:	30 18       	mov	r8,1
80005508:	51 48       	stdsp	sp[0x50],r8
8000550a:	c1 38       	rjmp	80005530 <_dtoa_r+0x224>
8000550c:	fe c8 c4 d8 	sub	r8,pc,-15144
80005510:	fa ea 00 3c 	ld.d	r10,sp[60]
80005514:	f0 06 02 38 	ld.d	r8,r8[r6<<0x3]
80005518:	e0 a0 14 8c 	rcall	80007e30 <__avr32_f64_cmp_lt>
8000551c:	f9 b4 00 00 	moveq	r4,0
80005520:	fb f4 0a 14 	st.weq	sp[0x50],r4
80005524:	f7 b6 01 01 	subne	r6,1
80005528:	f9 bc 01 00 	movne	r12,0
8000552c:	fb fc 1a 14 	st.wne	sp[0x50],r12
80005530:	41 90       	lddsp	r0,sp[0x64]
80005532:	20 10       	sub	r0,1
80005534:	0a 10       	sub	r0,r5
80005536:	c0 46       	brmi	8000553e <_dtoa_r+0x232>
80005538:	50 40       	stdsp	sp[0x10],r0
8000553a:	30 00       	mov	r0,0
8000553c:	c0 48       	rjmp	80005544 <_dtoa_r+0x238>
8000553e:	30 0b       	mov	r11,0
80005540:	5c 30       	neg	r0
80005542:	50 4b       	stdsp	sp[0x10],r11
80005544:	ec 02 11 00 	rsub	r2,r6,0
80005548:	58 06       	cp.w	r6,0
8000554a:	fb fa 40 04 	ld.wge	r10,sp[0x10]
8000554e:	f5 d6 e4 0a 	addge	r10,r10,r6
80005552:	fb fa 4a 04 	st.wge	sp[0x10],r10
80005556:	fb f6 4a 11 	st.wge	sp[0x44],r6
8000555a:	f9 b2 04 00 	movge	r2,0
8000555e:	e1 d6 e5 10 	sublt	r0,r0,r6
80005562:	f9 b9 05 00 	movlt	r9,0
80005566:	fb f9 5a 11 	st.wlt	sp[0x44],r9
8000556a:	40 c8       	lddsp	r8,sp[0x30]
8000556c:	58 98       	cp.w	r8,9
8000556e:	e0 8b 00 20 	brhi	800055ae <_dtoa_r+0x2a2>
80005572:	58 58       	cp.w	r8,5
80005574:	f9 b4 0a 01 	movle	r4,1
80005578:	fb f5 90 0c 	ld.wgt	r5,sp[0x30]
8000557c:	f7 b5 09 04 	subgt	r5,4
80005580:	fb f5 9a 0c 	st.wgt	sp[0x30],r5
80005584:	f9 b4 09 00 	movgt	r4,0
80005588:	40 cc       	lddsp	r12,sp[0x30]
8000558a:	58 3c       	cp.w	r12,3
8000558c:	c2 d0       	breq	800055e6 <_dtoa_r+0x2da>
8000558e:	e0 89 00 05 	brgt	80005598 <_dtoa_r+0x28c>
80005592:	58 2c       	cp.w	r12,2
80005594:	c1 01       	brne	800055b4 <_dtoa_r+0x2a8>
80005596:	c1 88       	rjmp	800055c6 <_dtoa_r+0x2ba>
80005598:	40 cb       	lddsp	r11,sp[0x30]
8000559a:	58 4b       	cp.w	r11,4
8000559c:	c0 60       	breq	800055a8 <_dtoa_r+0x29c>
8000559e:	58 5b       	cp.w	r11,5
800055a0:	c0 a1       	brne	800055b4 <_dtoa_r+0x2a8>
800055a2:	30 1a       	mov	r10,1
800055a4:	50 da       	stdsp	sp[0x34],r10
800055a6:	c2 28       	rjmp	800055ea <_dtoa_r+0x2de>
800055a8:	30 19       	mov	r9,1
800055aa:	50 d9       	stdsp	sp[0x34],r9
800055ac:	c0 f8       	rjmp	800055ca <_dtoa_r+0x2be>
800055ae:	30 08       	mov	r8,0
800055b0:	30 14       	mov	r4,1
800055b2:	50 c8       	stdsp	sp[0x30],r8
800055b4:	3f f5       	mov	r5,-1
800055b6:	30 1c       	mov	r12,1
800055b8:	30 0b       	mov	r11,0
800055ba:	50 95       	stdsp	sp[0x24],r5
800055bc:	50 dc       	stdsp	sp[0x34],r12
800055be:	0a 91       	mov	r1,r5
800055c0:	31 28       	mov	r8,18
800055c2:	50 eb       	stdsp	sp[0x38],r11
800055c4:	c2 08       	rjmp	80005604 <_dtoa_r+0x2f8>
800055c6:	30 0a       	mov	r10,0
800055c8:	50 da       	stdsp	sp[0x34],r10
800055ca:	40 e9       	lddsp	r9,sp[0x38]
800055cc:	58 09       	cp.w	r9,0
800055ce:	e0 89 00 07 	brgt	800055dc <_dtoa_r+0x2d0>
800055d2:	30 18       	mov	r8,1
800055d4:	50 98       	stdsp	sp[0x24],r8
800055d6:	10 91       	mov	r1,r8
800055d8:	50 e8       	stdsp	sp[0x38],r8
800055da:	c1 58       	rjmp	80005604 <_dtoa_r+0x2f8>
800055dc:	40 e5       	lddsp	r5,sp[0x38]
800055de:	50 95       	stdsp	sp[0x24],r5
800055e0:	0a 91       	mov	r1,r5
800055e2:	0a 98       	mov	r8,r5
800055e4:	c1 08       	rjmp	80005604 <_dtoa_r+0x2f8>
800055e6:	30 0c       	mov	r12,0
800055e8:	50 dc       	stdsp	sp[0x34],r12
800055ea:	40 eb       	lddsp	r11,sp[0x38]
800055ec:	ec 0b 00 0b 	add	r11,r6,r11
800055f0:	50 9b       	stdsp	sp[0x24],r11
800055f2:	16 98       	mov	r8,r11
800055f4:	2f f8       	sub	r8,-1
800055f6:	58 08       	cp.w	r8,0
800055f8:	e0 89 00 05 	brgt	80005602 <_dtoa_r+0x2f6>
800055fc:	10 91       	mov	r1,r8
800055fe:	30 18       	mov	r8,1
80005600:	c0 28       	rjmp	80005604 <_dtoa_r+0x2f8>
80005602:	10 91       	mov	r1,r8
80005604:	30 09       	mov	r9,0
80005606:	6e 9a       	ld.w	r10,r7[0x24]
80005608:	95 19       	st.w	r10[0x4],r9
8000560a:	30 49       	mov	r9,4
8000560c:	c0 68       	rjmp	80005618 <_dtoa_r+0x30c>
8000560e:	d7 03       	nop
80005610:	6a 1a       	ld.w	r10,r5[0x4]
80005612:	a1 79       	lsl	r9,0x1
80005614:	2f fa       	sub	r10,-1
80005616:	8b 1a       	st.w	r5[0x4],r10
80005618:	6e 95       	ld.w	r5,r7[0x24]
8000561a:	f2 ca ff ec 	sub	r10,r9,-20
8000561e:	10 3a       	cp.w	r10,r8
80005620:	fe 98 ff f8 	brls	80005610 <_dtoa_r+0x304>
80005624:	6a 1b       	ld.w	r11,r5[0x4]
80005626:	0e 9c       	mov	r12,r7
80005628:	e0 a0 0b 6e 	rcall	80006d04 <_Balloc>
8000562c:	58 e1       	cp.w	r1,14
8000562e:	5f 88       	srls	r8
80005630:	8b 0c       	st.w	r5[0x0],r12
80005632:	f1 e4 00 04 	and	r4,r8,r4
80005636:	6e 98       	ld.w	r8,r7[0x24]
80005638:	70 08       	ld.w	r8,r8[0x0]
8000563a:	50 88       	stdsp	sp[0x20],r8
8000563c:	e0 80 01 82 	breq	80005940 <_dtoa_r+0x634>
80005640:	58 06       	cp.w	r6,0
80005642:	e0 8a 00 43 	brle	800056c8 <_dtoa_r+0x3bc>
80005646:	f3 d6 c0 04 	bfextu	r9,r6,0x0,0x4
8000564a:	fe c8 c6 16 	sub	r8,pc,-14826
8000564e:	f0 09 02 34 	ld.d	r4,r8[r9<<0x3]
80005652:	fa e5 00 18 	st.d	sp[24],r4
80005656:	ec 04 14 04 	asr	r4,r6,0x4
8000565a:	ed b4 00 04 	bld	r4,0x4
8000565e:	c0 30       	breq	80005664 <_dtoa_r+0x358>
80005660:	30 25       	mov	r5,2
80005662:	c1 08       	rjmp	80005682 <_dtoa_r+0x376>
80005664:	fe c8 c5 68 	sub	r8,pc,-15000
80005668:	f0 e8 00 20 	ld.d	r8,r8[32]
8000566c:	fa ea 00 3c 	ld.d	r10,sp[60]
80005670:	e9 d4 c0 04 	bfextu	r4,r4,0x0,0x4
80005674:	e0 a0 14 12 	rcall	80007e98 <__avr32_f64_div>
80005678:	30 35       	mov	r5,3
8000567a:	14 98       	mov	r8,r10
8000567c:	16 99       	mov	r9,r11
8000567e:	fa e9 00 08 	st.d	sp[8],r8
80005682:	fe cc c5 86 	sub	r12,pc,-14970
80005686:	50 a3       	stdsp	sp[0x28],r3
80005688:	0c 93       	mov	r3,r6
8000568a:	18 96       	mov	r6,r12
8000568c:	c0 f8       	rjmp	800056aa <_dtoa_r+0x39e>
8000568e:	fa ea 00 18 	ld.d	r10,sp[24]
80005692:	ed b4 00 00 	bld	r4,0x0
80005696:	c0 81       	brne	800056a6 <_dtoa_r+0x39a>
80005698:	ec e8 00 00 	ld.d	r8,r6[0]
8000569c:	2f f5       	sub	r5,-1
8000569e:	e0 a0 10 b7 	rcall	8000780c <__avr32_f64_mul>
800056a2:	fa eb 00 18 	st.d	sp[24],r10
800056a6:	a1 54       	asr	r4,0x1
800056a8:	2f 86       	sub	r6,-8
800056aa:	58 04       	cp.w	r4,0
800056ac:	cf 11       	brne	8000568e <_dtoa_r+0x382>
800056ae:	fa e8 00 18 	ld.d	r8,sp[24]
800056b2:	fa ea 00 08 	ld.d	r10,sp[8]
800056b6:	06 96       	mov	r6,r3
800056b8:	e0 a0 13 f0 	rcall	80007e98 <__avr32_f64_div>
800056bc:	40 a3       	lddsp	r3,sp[0x28]
800056be:	14 98       	mov	r8,r10
800056c0:	16 99       	mov	r9,r11
800056c2:	fa e9 00 08 	st.d	sp[8],r8
800056c6:	c2 f8       	rjmp	80005724 <_dtoa_r+0x418>
800056c8:	ec 08 11 00 	rsub	r8,r6,0
800056cc:	c0 31       	brne	800056d2 <_dtoa_r+0x3c6>
800056ce:	30 25       	mov	r5,2
800056d0:	c2 a8       	rjmp	80005724 <_dtoa_r+0x418>
800056d2:	fe cc c5 d6 	sub	r12,pc,-14890
800056d6:	f0 04 14 04 	asr	r4,r8,0x4
800056da:	50 1c       	stdsp	sp[0x4],r12
800056dc:	f1 d8 c0 04 	bfextu	r8,r8,0x0,0x4
800056e0:	fe c9 c6 ac 	sub	r9,pc,-14676
800056e4:	fa ea 00 3c 	ld.d	r10,sp[60]
800056e8:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
800056ec:	e0 a0 10 90 	rcall	8000780c <__avr32_f64_mul>
800056f0:	40 1c       	lddsp	r12,sp[0x4]
800056f2:	50 63       	stdsp	sp[0x18],r3
800056f4:	30 25       	mov	r5,2
800056f6:	0c 93       	mov	r3,r6
800056f8:	fa eb 00 08 	st.d	sp[8],r10
800056fc:	18 96       	mov	r6,r12
800056fe:	c0 f8       	rjmp	8000571c <_dtoa_r+0x410>
80005700:	fa ea 00 08 	ld.d	r10,sp[8]
80005704:	ed b4 00 00 	bld	r4,0x0
80005708:	c0 81       	brne	80005718 <_dtoa_r+0x40c>
8000570a:	ec e8 00 00 	ld.d	r8,r6[0]
8000570e:	2f f5       	sub	r5,-1
80005710:	e0 a0 10 7e 	rcall	8000780c <__avr32_f64_mul>
80005714:	fa eb 00 08 	st.d	sp[8],r10
80005718:	a1 54       	asr	r4,0x1
8000571a:	2f 86       	sub	r6,-8
8000571c:	58 04       	cp.w	r4,0
8000571e:	cf 11       	brne	80005700 <_dtoa_r+0x3f4>
80005720:	06 96       	mov	r6,r3
80005722:	40 63       	lddsp	r3,sp[0x18]
80005724:	41 4a       	lddsp	r10,sp[0x50]
80005726:	58 0a       	cp.w	r10,0
80005728:	c2 a0       	breq	8000577c <_dtoa_r+0x470>
8000572a:	fa e8 00 08 	ld.d	r8,sp[8]
8000572e:	58 01       	cp.w	r1,0
80005730:	5f 94       	srgt	r4
80005732:	fa e9 00 18 	st.d	sp[24],r8
80005736:	30 08       	mov	r8,0
80005738:	fc 19 3f f0 	movh	r9,0x3ff0
8000573c:	fa ea 00 18 	ld.d	r10,sp[24]
80005740:	e0 a0 13 78 	rcall	80007e30 <__avr32_f64_cmp_lt>
80005744:	f9 bc 00 00 	moveq	r12,0
80005748:	f9 bc 01 01 	movne	r12,1
8000574c:	e9 ec 00 0c 	and	r12,r4,r12
80005750:	c1 60       	breq	8000577c <_dtoa_r+0x470>
80005752:	40 98       	lddsp	r8,sp[0x24]
80005754:	58 08       	cp.w	r8,0
80005756:	e0 8a 00 f1 	brle	80005938 <_dtoa_r+0x62c>
8000575a:	30 08       	mov	r8,0
8000575c:	fc 19 40 24 	movh	r9,0x4024
80005760:	ec c4 00 01 	sub	r4,r6,1
80005764:	fa ea 00 18 	ld.d	r10,sp[24]
80005768:	2f f5       	sub	r5,-1
8000576a:	50 64       	stdsp	sp[0x18],r4
8000576c:	e0 a0 10 50 	rcall	8000780c <__avr32_f64_mul>
80005770:	40 94       	lddsp	r4,sp[0x24]
80005772:	14 98       	mov	r8,r10
80005774:	16 99       	mov	r9,r11
80005776:	fa e9 00 08 	st.d	sp[8],r8
8000577a:	c0 38       	rjmp	80005780 <_dtoa_r+0x474>
8000577c:	50 66       	stdsp	sp[0x18],r6
8000577e:	02 94       	mov	r4,r1
80005780:	0a 9c       	mov	r12,r5
80005782:	e0 a0 12 a0 	rcall	80007cc2 <__avr32_s32_to_f64>
80005786:	fa e8 00 08 	ld.d	r8,sp[8]
8000578a:	e0 a0 10 41 	rcall	8000780c <__avr32_f64_mul>
8000578e:	30 08       	mov	r8,0
80005790:	fc 19 40 1c 	movh	r9,0x401c
80005794:	e0 a0 11 f6 	rcall	80007b80 <__avr32_f64_add>
80005798:	14 98       	mov	r8,r10
8000579a:	16 99       	mov	r9,r11
8000579c:	fa e9 00 28 	st.d	sp[40],r8
800057a0:	fc 18 fc c0 	movh	r8,0xfcc0
800057a4:	40 a5       	lddsp	r5,sp[0x28]
800057a6:	10 05       	add	r5,r8
800057a8:	50 a5       	stdsp	sp[0x28],r5
800057aa:	58 04       	cp.w	r4,0
800057ac:	c2 11       	brne	800057ee <_dtoa_r+0x4e2>
800057ae:	fa ea 00 08 	ld.d	r10,sp[8]
800057b2:	30 08       	mov	r8,0
800057b4:	fc 19 40 14 	movh	r9,0x4014
800057b8:	e0 a0 11 16 	rcall	800079e4 <__avr32_f64_sub>
800057bc:	40 bc       	lddsp	r12,sp[0x2c]
800057be:	fa eb 00 08 	st.d	sp[8],r10
800057c2:	14 98       	mov	r8,r10
800057c4:	16 99       	mov	r9,r11
800057c6:	18 9a       	mov	r10,r12
800057c8:	0a 9b       	mov	r11,r5
800057ca:	e0 a0 13 33 	rcall	80007e30 <__avr32_f64_cmp_lt>
800057ce:	e0 81 02 54 	brne	80005c76 <_dtoa_r+0x96a>
800057d2:	0a 98       	mov	r8,r5
800057d4:	40 b9       	lddsp	r9,sp[0x2c]
800057d6:	ee 18 80 00 	eorh	r8,0x8000
800057da:	fa ea 00 08 	ld.d	r10,sp[8]
800057de:	10 95       	mov	r5,r8
800057e0:	12 98       	mov	r8,r9
800057e2:	0a 99       	mov	r9,r5
800057e4:	e0 a0 13 26 	rcall	80007e30 <__avr32_f64_cmp_lt>
800057e8:	e0 81 02 3e 	brne	80005c64 <_dtoa_r+0x958>
800057ec:	ca 68       	rjmp	80005938 <_dtoa_r+0x62c>
800057ee:	fe c9 c7 ba 	sub	r9,pc,-14406
800057f2:	e8 c8 00 01 	sub	r8,r4,1
800057f6:	40 d5       	lddsp	r5,sp[0x34]
800057f8:	58 05       	cp.w	r5,0
800057fa:	c4 f0       	breq	80005898 <_dtoa_r+0x58c>
800057fc:	30 0c       	mov	r12,0
800057fe:	f2 08 02 38 	ld.d	r8,r9[r8<<0x3]
80005802:	51 3c       	stdsp	sp[0x4c],r12
80005804:	30 0a       	mov	r10,0
80005806:	fc 1b 3f e0 	movh	r11,0x3fe0
8000580a:	e0 a0 13 47 	rcall	80007e98 <__avr32_f64_div>
8000580e:	fa e8 00 28 	ld.d	r8,sp[40]
80005812:	40 85       	lddsp	r5,sp[0x20]
80005814:	e0 a0 10 e8 	rcall	800079e4 <__avr32_f64_sub>
80005818:	fa eb 00 28 	st.d	sp[40],r10
8000581c:	fa ea 00 08 	ld.d	r10,sp[8]
80005820:	e0 a0 12 3a 	rcall	80007c94 <__avr32_f64_to_s32>
80005824:	51 6c       	stdsp	sp[0x58],r12
80005826:	e0 a0 12 4e 	rcall	80007cc2 <__avr32_s32_to_f64>
8000582a:	14 98       	mov	r8,r10
8000582c:	16 99       	mov	r9,r11
8000582e:	fa ea 00 08 	ld.d	r10,sp[8]
80005832:	e0 a0 10 d9 	rcall	800079e4 <__avr32_f64_sub>
80005836:	fa eb 00 08 	st.d	sp[8],r10
8000583a:	41 68       	lddsp	r8,sp[0x58]
8000583c:	2d 08       	sub	r8,-48
8000583e:	0a c8       	st.b	r5++,r8
80005840:	41 39       	lddsp	r9,sp[0x4c]
80005842:	2f f9       	sub	r9,-1
80005844:	51 39       	stdsp	sp[0x4c],r9
80005846:	fa e8 00 28 	ld.d	r8,sp[40]
8000584a:	e0 a0 12 f3 	rcall	80007e30 <__avr32_f64_cmp_lt>
8000584e:	e0 81 03 39 	brne	80005ec0 <_dtoa_r+0xbb4>
80005852:	fa e8 00 08 	ld.d	r8,sp[8]
80005856:	30 0a       	mov	r10,0
80005858:	fc 1b 3f f0 	movh	r11,0x3ff0
8000585c:	e0 a0 10 c4 	rcall	800079e4 <__avr32_f64_sub>
80005860:	fa e8 00 28 	ld.d	r8,sp[40]
80005864:	e0 a0 12 e6 	rcall	80007e30 <__avr32_f64_cmp_lt>
80005868:	fa ea 00 28 	ld.d	r10,sp[40]
8000586c:	30 08       	mov	r8,0
8000586e:	fc 19 40 24 	movh	r9,0x4024
80005872:	e0 81 00 da 	brne	80005a26 <_dtoa_r+0x71a>
80005876:	41 3c       	lddsp	r12,sp[0x4c]
80005878:	08 3c       	cp.w	r12,r4
8000587a:	c5 f4       	brge	80005938 <_dtoa_r+0x62c>
8000587c:	e0 a0 0f c8 	rcall	8000780c <__avr32_f64_mul>
80005880:	30 08       	mov	r8,0
80005882:	fa eb 00 28 	st.d	sp[40],r10
80005886:	fc 19 40 24 	movh	r9,0x4024
8000588a:	fa ea 00 08 	ld.d	r10,sp[8]
8000588e:	e0 a0 0f bf 	rcall	8000780c <__avr32_f64_mul>
80005892:	fa eb 00 08 	st.d	sp[8],r10
80005896:	cc 3b       	rjmp	8000581c <_dtoa_r+0x510>
80005898:	40 85       	lddsp	r5,sp[0x20]
8000589a:	08 05       	add	r5,r4
8000589c:	f2 08 02 3a 	ld.d	r10,r9[r8<<0x3]
800058a0:	51 35       	stdsp	sp[0x4c],r5
800058a2:	fa e8 00 28 	ld.d	r8,sp[40]
800058a6:	40 85       	lddsp	r5,sp[0x20]
800058a8:	e0 a0 0f b2 	rcall	8000780c <__avr32_f64_mul>
800058ac:	fa eb 00 28 	st.d	sp[40],r10
800058b0:	fa ea 00 08 	ld.d	r10,sp[8]
800058b4:	e0 a0 11 f0 	rcall	80007c94 <__avr32_f64_to_s32>
800058b8:	51 6c       	stdsp	sp[0x58],r12
800058ba:	e0 a0 12 04 	rcall	80007cc2 <__avr32_s32_to_f64>
800058be:	14 98       	mov	r8,r10
800058c0:	16 99       	mov	r9,r11
800058c2:	fa ea 00 08 	ld.d	r10,sp[8]
800058c6:	e0 a0 10 8f 	rcall	800079e4 <__avr32_f64_sub>
800058ca:	fa eb 00 08 	st.d	sp[8],r10
800058ce:	41 68       	lddsp	r8,sp[0x58]
800058d0:	2d 08       	sub	r8,-48
800058d2:	0a c8       	st.b	r5++,r8
800058d4:	41 3c       	lddsp	r12,sp[0x4c]
800058d6:	18 35       	cp.w	r5,r12
800058d8:	c2 81       	brne	80005928 <_dtoa_r+0x61c>
800058da:	30 08       	mov	r8,0
800058dc:	fc 19 3f e0 	movh	r9,0x3fe0
800058e0:	fa ea 00 28 	ld.d	r10,sp[40]
800058e4:	e0 a0 11 4e 	rcall	80007b80 <__avr32_f64_add>
800058e8:	40 85       	lddsp	r5,sp[0x20]
800058ea:	fa e8 00 08 	ld.d	r8,sp[8]
800058ee:	08 05       	add	r5,r4
800058f0:	e0 a0 12 a0 	rcall	80007e30 <__avr32_f64_cmp_lt>
800058f4:	e0 81 00 99 	brne	80005a26 <_dtoa_r+0x71a>
800058f8:	fa e8 00 28 	ld.d	r8,sp[40]
800058fc:	30 0a       	mov	r10,0
800058fe:	fc 1b 3f e0 	movh	r11,0x3fe0
80005902:	e0 a0 10 71 	rcall	800079e4 <__avr32_f64_sub>
80005906:	14 98       	mov	r8,r10
80005908:	16 99       	mov	r9,r11
8000590a:	fa ea 00 08 	ld.d	r10,sp[8]
8000590e:	e0 a0 12 91 	rcall	80007e30 <__avr32_f64_cmp_lt>
80005912:	c1 30       	breq	80005938 <_dtoa_r+0x62c>
80005914:	33 09       	mov	r9,48
80005916:	0a 98       	mov	r8,r5
80005918:	11 7a       	ld.ub	r10,--r8
8000591a:	f2 0a 18 00 	cp.b	r10,r9
8000591e:	e0 81 02 d1 	brne	80005ec0 <_dtoa_r+0xbb4>
80005922:	10 95       	mov	r5,r8
80005924:	cf 9b       	rjmp	80005916 <_dtoa_r+0x60a>
80005926:	d7 03       	nop
80005928:	30 08       	mov	r8,0
8000592a:	fc 19 40 24 	movh	r9,0x4024
8000592e:	e0 a0 0f 6f 	rcall	8000780c <__avr32_f64_mul>
80005932:	fa eb 00 08 	st.d	sp[8],r10
80005936:	cb db       	rjmp	800058b0 <_dtoa_r+0x5a4>
80005938:	fa ea 00 3c 	ld.d	r10,sp[60]
8000593c:	fa eb 00 08 	st.d	sp[8],r10
80005940:	58 e6       	cp.w	r6,14
80005942:	5f ab       	srle	r11
80005944:	41 8a       	lddsp	r10,sp[0x60]
80005946:	30 08       	mov	r8,0
80005948:	f4 09 11 ff 	rsub	r9,r10,-1
8000594c:	f7 e9 03 f9 	and	r9,r11,r9>>0x1f
80005950:	f0 09 18 00 	cp.b	r9,r8
80005954:	e0 80 00 82 	breq	80005a58 <_dtoa_r+0x74c>
80005958:	40 ea       	lddsp	r10,sp[0x38]
8000595a:	58 01       	cp.w	r1,0
8000595c:	5f a9       	srle	r9
8000595e:	f3 ea 03 f9 	and	r9,r9,r10>>0x1f
80005962:	fe ca c9 2e 	sub	r10,pc,-14034
80005966:	f4 06 02 34 	ld.d	r4,r10[r6<<0x3]
8000596a:	fa e5 00 10 	st.d	sp[16],r4
8000596e:	f0 09 18 00 	cp.b	r9,r8
80005972:	c1 40       	breq	8000599a <_dtoa_r+0x68e>
80005974:	58 01       	cp.w	r1,0
80005976:	e0 81 01 77 	brne	80005c64 <_dtoa_r+0x958>
8000597a:	30 08       	mov	r8,0
8000597c:	fc 19 40 14 	movh	r9,0x4014
80005980:	08 9a       	mov	r10,r4
80005982:	0a 9b       	mov	r11,r5
80005984:	e0 a0 0f 44 	rcall	8000780c <__avr32_f64_mul>
80005988:	fa e8 00 08 	ld.d	r8,sp[8]
8000598c:	e0 a0 12 1e 	rcall	80007dc8 <__avr32_f64_cmp_ge>
80005990:	e0 81 01 6a 	brne	80005c64 <_dtoa_r+0x958>
80005994:	02 92       	mov	r2,r1
80005996:	e0 8f 01 72 	bral	80005c7a <_dtoa_r+0x96e>
8000599a:	40 85       	lddsp	r5,sp[0x20]
8000599c:	30 14       	mov	r4,1
8000599e:	fa e8 00 10 	ld.d	r8,sp[16]
800059a2:	fa ea 00 08 	ld.d	r10,sp[8]
800059a6:	e0 a0 12 79 	rcall	80007e98 <__avr32_f64_div>
800059aa:	e0 a0 11 75 	rcall	80007c94 <__avr32_f64_to_s32>
800059ae:	18 92       	mov	r2,r12
800059b0:	e0 a0 11 89 	rcall	80007cc2 <__avr32_s32_to_f64>
800059b4:	fa e8 00 10 	ld.d	r8,sp[16]
800059b8:	e0 a0 0f 2a 	rcall	8000780c <__avr32_f64_mul>
800059bc:	14 98       	mov	r8,r10
800059be:	16 99       	mov	r9,r11
800059c0:	fa ea 00 08 	ld.d	r10,sp[8]
800059c4:	e0 a0 10 10 	rcall	800079e4 <__avr32_f64_sub>
800059c8:	fa eb 00 08 	st.d	sp[8],r10
800059cc:	e4 c8 ff d0 	sub	r8,r2,-48
800059d0:	0a c8       	st.b	r5++,r8
800059d2:	fc 19 40 24 	movh	r9,0x4024
800059d6:	30 08       	mov	r8,0
800059d8:	02 34       	cp.w	r4,r1
800059da:	c3 31       	brne	80005a40 <_dtoa_r+0x734>
800059dc:	fa e8 00 08 	ld.d	r8,sp[8]
800059e0:	e0 a0 10 d0 	rcall	80007b80 <__avr32_f64_add>
800059e4:	16 91       	mov	r1,r11
800059e6:	14 90       	mov	r0,r10
800059e8:	14 98       	mov	r8,r10
800059ea:	02 99       	mov	r9,r1
800059ec:	fa ea 00 10 	ld.d	r10,sp[16]
800059f0:	e0 a0 12 20 	rcall	80007e30 <__avr32_f64_cmp_lt>
800059f4:	c1 a1       	brne	80005a28 <_dtoa_r+0x71c>
800059f6:	fa e8 00 10 	ld.d	r8,sp[16]
800059fa:	00 9a       	mov	r10,r0
800059fc:	02 9b       	mov	r11,r1
800059fe:	e0 a0 11 d2 	rcall	80007da2 <__avr32_f64_cmp_eq>
80005a02:	e0 80 02 5e 	breq	80005ebe <_dtoa_r+0xbb2>
80005a06:	e5 d2 c0 01 	bfextu	r2,r2,0x0,0x1
80005a0a:	c0 f1       	brne	80005a28 <_dtoa_r+0x71c>
80005a0c:	e0 8f 02 59 	bral	80005ebe <_dtoa_r+0xbb2>
80005a10:	40 8a       	lddsp	r10,sp[0x20]
80005a12:	14 38       	cp.w	r8,r10
80005a14:	c0 30       	breq	80005a1a <_dtoa_r+0x70e>
80005a16:	10 95       	mov	r5,r8
80005a18:	c0 98       	rjmp	80005a2a <_dtoa_r+0x71e>
80005a1a:	33 08       	mov	r8,48
80005a1c:	40 89       	lddsp	r9,sp[0x20]
80005a1e:	2f f6       	sub	r6,-1
80005a20:	b2 88       	st.b	r9[0x0],r8
80005a22:	40 88       	lddsp	r8,sp[0x20]
80005a24:	c0 88       	rjmp	80005a34 <_dtoa_r+0x728>
80005a26:	40 66       	lddsp	r6,sp[0x18]
80005a28:	33 99       	mov	r9,57
80005a2a:	0a 98       	mov	r8,r5
80005a2c:	11 7a       	ld.ub	r10,--r8
80005a2e:	f2 0a 18 00 	cp.b	r10,r9
80005a32:	ce f0       	breq	80005a10 <_dtoa_r+0x704>
80005a34:	50 66       	stdsp	sp[0x18],r6
80005a36:	11 89       	ld.ub	r9,r8[0x0]
80005a38:	2f f9       	sub	r9,-1
80005a3a:	b0 89       	st.b	r8[0x0],r9
80005a3c:	e0 8f 02 42 	bral	80005ec0 <_dtoa_r+0xbb4>
80005a40:	e0 a0 0e e6 	rcall	8000780c <__avr32_f64_mul>
80005a44:	2f f4       	sub	r4,-1
80005a46:	fa eb 00 08 	st.d	sp[8],r10
80005a4a:	30 08       	mov	r8,0
80005a4c:	30 09       	mov	r9,0
80005a4e:	e0 a0 11 aa 	rcall	80007da2 <__avr32_f64_cmp_eq>
80005a52:	ca 60       	breq	8000599e <_dtoa_r+0x692>
80005a54:	e0 8f 02 35 	bral	80005ebe <_dtoa_r+0xbb2>
80005a58:	40 d8       	lddsp	r8,sp[0x34]
80005a5a:	58 08       	cp.w	r8,0
80005a5c:	c0 51       	brne	80005a66 <_dtoa_r+0x75a>
80005a5e:	04 98       	mov	r8,r2
80005a60:	00 95       	mov	r5,r0
80005a62:	40 d4       	lddsp	r4,sp[0x34]
80005a64:	c3 78       	rjmp	80005ad2 <_dtoa_r+0x7c6>
80005a66:	40 c5       	lddsp	r5,sp[0x30]
80005a68:	58 15       	cp.w	r5,1
80005a6a:	e0 89 00 0f 	brgt	80005a88 <_dtoa_r+0x77c>
80005a6e:	41 74       	lddsp	r4,sp[0x5c]
80005a70:	58 04       	cp.w	r4,0
80005a72:	c0 40       	breq	80005a7a <_dtoa_r+0x76e>
80005a74:	f4 c9 fb cd 	sub	r9,r10,-1075
80005a78:	c0 48       	rjmp	80005a80 <_dtoa_r+0x774>
80005a7a:	41 99       	lddsp	r9,sp[0x64]
80005a7c:	f2 09 11 36 	rsub	r9,r9,54
80005a80:	04 98       	mov	r8,r2
80005a82:	00 95       	mov	r5,r0
80005a84:	c1 c8       	rjmp	80005abc <_dtoa_r+0x7b0>
80005a86:	d7 03       	nop
80005a88:	e2 c8 00 01 	sub	r8,r1,1
80005a8c:	58 01       	cp.w	r1,0
80005a8e:	e0 05 17 40 	movge	r5,r0
80005a92:	e2 09 17 40 	movge	r9,r1
80005a96:	e1 d1 e5 15 	sublt	r5,r0,r1
80005a9a:	f9 b9 05 00 	movlt	r9,0
80005a9e:	10 32       	cp.w	r2,r8
80005aa0:	e5 d8 e4 18 	subge	r8,r2,r8
80005aa4:	f1 d2 e5 18 	sublt	r8,r8,r2
80005aa8:	e5 d8 e5 02 	addlt	r2,r2,r8
80005aac:	fb fc 50 11 	ld.wlt	r12,sp[0x44]
80005ab0:	f9 d8 e5 0c 	addlt	r12,r12,r8
80005ab4:	fb fc 5a 11 	st.wlt	sp[0x44],r12
80005ab8:	f9 b8 05 00 	movlt	r8,0
80005abc:	40 4b       	lddsp	r11,sp[0x10]
80005abe:	12 0b       	add	r11,r9
80005ac0:	50 08       	stdsp	sp[0x0],r8
80005ac2:	50 4b       	stdsp	sp[0x10],r11
80005ac4:	12 00       	add	r0,r9
80005ac6:	30 1b       	mov	r11,1
80005ac8:	0e 9c       	mov	r12,r7
80005aca:	e0 a0 0a d1 	rcall	8000706c <__i2b>
80005ace:	40 08       	lddsp	r8,sp[0x0]
80005ad0:	18 94       	mov	r4,r12
80005ad2:	40 4a       	lddsp	r10,sp[0x10]
80005ad4:	58 05       	cp.w	r5,0
80005ad6:	5f 99       	srgt	r9
80005ad8:	58 0a       	cp.w	r10,0
80005ada:	5f 9a       	srgt	r10
80005adc:	f5 e9 00 09 	and	r9,r10,r9
80005ae0:	c0 80       	breq	80005af0 <_dtoa_r+0x7e4>
80005ae2:	40 4c       	lddsp	r12,sp[0x10]
80005ae4:	f8 05 0d 49 	min	r9,r12,r5
80005ae8:	12 1c       	sub	r12,r9
80005aea:	12 10       	sub	r0,r9
80005aec:	50 4c       	stdsp	sp[0x10],r12
80005aee:	12 15       	sub	r5,r9
80005af0:	58 02       	cp.w	r2,0
80005af2:	e0 8a 00 27 	brle	80005b40 <_dtoa_r+0x834>
80005af6:	40 db       	lddsp	r11,sp[0x34]
80005af8:	58 0b       	cp.w	r11,0
80005afa:	c1 d0       	breq	80005b34 <_dtoa_r+0x828>
80005afc:	58 08       	cp.w	r8,0
80005afe:	e0 8a 00 17 	brle	80005b2c <_dtoa_r+0x820>
80005b02:	10 9a       	mov	r10,r8
80005b04:	50 08       	stdsp	sp[0x0],r8
80005b06:	08 9b       	mov	r11,r4
80005b08:	0e 9c       	mov	r12,r7
80005b0a:	e0 a0 0a f7 	rcall	800070f8 <__pow5mult>
80005b0e:	06 9a       	mov	r10,r3
80005b10:	18 9b       	mov	r11,r12
80005b12:	18 94       	mov	r4,r12
80005b14:	0e 9c       	mov	r12,r7
80005b16:	e0 a0 0a 2b 	rcall	80006f6c <__multiply>
80005b1a:	18 99       	mov	r9,r12
80005b1c:	06 9b       	mov	r11,r3
80005b1e:	50 19       	stdsp	sp[0x4],r9
80005b20:	0e 9c       	mov	r12,r7
80005b22:	e0 a0 08 d7 	rcall	80006cd0 <_Bfree>
80005b26:	40 19       	lddsp	r9,sp[0x4]
80005b28:	40 08       	lddsp	r8,sp[0x0]
80005b2a:	12 93       	mov	r3,r9
80005b2c:	e4 08 01 0a 	sub	r10,r2,r8
80005b30:	c0 80       	breq	80005b40 <_dtoa_r+0x834>
80005b32:	c0 28       	rjmp	80005b36 <_dtoa_r+0x82a>
80005b34:	04 9a       	mov	r10,r2
80005b36:	06 9b       	mov	r11,r3
80005b38:	0e 9c       	mov	r12,r7
80005b3a:	e0 a0 0a df 	rcall	800070f8 <__pow5mult>
80005b3e:	18 93       	mov	r3,r12
80005b40:	30 1b       	mov	r11,1
80005b42:	0e 9c       	mov	r12,r7
80005b44:	e0 a0 0a 94 	rcall	8000706c <__i2b>
80005b48:	41 1a       	lddsp	r10,sp[0x44]
80005b4a:	18 92       	mov	r2,r12
80005b4c:	58 0a       	cp.w	r10,0
80005b4e:	e0 8a 00 07 	brle	80005b5c <_dtoa_r+0x850>
80005b52:	18 9b       	mov	r11,r12
80005b54:	0e 9c       	mov	r12,r7
80005b56:	e0 a0 0a d1 	rcall	800070f8 <__pow5mult>
80005b5a:	18 92       	mov	r2,r12
80005b5c:	40 c9       	lddsp	r9,sp[0x30]
80005b5e:	58 19       	cp.w	r9,1
80005b60:	e0 89 00 14 	brgt	80005b88 <_dtoa_r+0x87c>
80005b64:	40 38       	lddsp	r8,sp[0xc]
80005b66:	58 08       	cp.w	r8,0
80005b68:	c1 01       	brne	80005b88 <_dtoa_r+0x87c>
80005b6a:	40 29       	lddsp	r9,sp[0x8]
80005b6c:	f1 d9 c0 14 	bfextu	r8,r9,0x0,0x14
80005b70:	c0 c1       	brne	80005b88 <_dtoa_r+0x87c>
80005b72:	12 98       	mov	r8,r9
80005b74:	e6 18 7f f0 	andh	r8,0x7ff0,COH
80005b78:	c0 80       	breq	80005b88 <_dtoa_r+0x87c>
80005b7a:	40 4c       	lddsp	r12,sp[0x10]
80005b7c:	30 1b       	mov	r11,1
80005b7e:	2f fc       	sub	r12,-1
80005b80:	2f f0       	sub	r0,-1
80005b82:	50 4c       	stdsp	sp[0x10],r12
80005b84:	50 6b       	stdsp	sp[0x18],r11
80005b86:	c0 38       	rjmp	80005b8c <_dtoa_r+0x880>
80005b88:	30 0a       	mov	r10,0
80005b8a:	50 6a       	stdsp	sp[0x18],r10
80005b8c:	41 19       	lddsp	r9,sp[0x44]
80005b8e:	58 09       	cp.w	r9,0
80005b90:	c0 31       	brne	80005b96 <_dtoa_r+0x88a>
80005b92:	30 1c       	mov	r12,1
80005b94:	c0 98       	rjmp	80005ba6 <_dtoa_r+0x89a>
80005b96:	64 48       	ld.w	r8,r2[0x10]
80005b98:	2f c8       	sub	r8,-4
80005b9a:	e4 08 03 2c 	ld.w	r12,r2[r8<<0x2]
80005b9e:	e0 a0 08 08 	rcall	80006bae <__hi0bits>
80005ba2:	f8 0c 11 20 	rsub	r12,r12,32
80005ba6:	40 4b       	lddsp	r11,sp[0x10]
80005ba8:	f8 0b 00 08 	add	r8,r12,r11
80005bac:	f1 d8 c0 05 	bfextu	r8,r8,0x0,0x5
80005bb0:	c0 c0       	breq	80005bc8 <_dtoa_r+0x8bc>
80005bb2:	f0 08 11 20 	rsub	r8,r8,32
80005bb6:	58 48       	cp.w	r8,4
80005bb8:	e0 8a 00 06 	brle	80005bc4 <_dtoa_r+0x8b8>
80005bbc:	20 48       	sub	r8,4
80005bbe:	10 0b       	add	r11,r8
80005bc0:	50 4b       	stdsp	sp[0x10],r11
80005bc2:	c0 78       	rjmp	80005bd0 <_dtoa_r+0x8c4>
80005bc4:	58 48       	cp.w	r8,4
80005bc6:	c0 70       	breq	80005bd4 <_dtoa_r+0x8c8>
80005bc8:	40 4a       	lddsp	r10,sp[0x10]
80005bca:	2e 48       	sub	r8,-28
80005bcc:	10 0a       	add	r10,r8
80005bce:	50 4a       	stdsp	sp[0x10],r10
80005bd0:	10 00       	add	r0,r8
80005bd2:	10 05       	add	r5,r8
80005bd4:	58 00       	cp.w	r0,0
80005bd6:	e0 8a 00 08 	brle	80005be6 <_dtoa_r+0x8da>
80005bda:	06 9b       	mov	r11,r3
80005bdc:	00 9a       	mov	r10,r0
80005bde:	0e 9c       	mov	r12,r7
80005be0:	e0 a0 09 82 	rcall	80006ee4 <__lshift>
80005be4:	18 93       	mov	r3,r12
80005be6:	40 49       	lddsp	r9,sp[0x10]
80005be8:	58 09       	cp.w	r9,0
80005bea:	e0 8a 00 08 	brle	80005bfa <_dtoa_r+0x8ee>
80005bee:	04 9b       	mov	r11,r2
80005bf0:	12 9a       	mov	r10,r9
80005bf2:	0e 9c       	mov	r12,r7
80005bf4:	e0 a0 09 78 	rcall	80006ee4 <__lshift>
80005bf8:	18 92       	mov	r2,r12
80005bfa:	41 48       	lddsp	r8,sp[0x50]
80005bfc:	58 08       	cp.w	r8,0
80005bfe:	c1 b0       	breq	80005c34 <_dtoa_r+0x928>
80005c00:	04 9b       	mov	r11,r2
80005c02:	06 9c       	mov	r12,r3
80005c04:	e0 a0 08 4c 	rcall	80006c9c <__mcmp>
80005c08:	c1 64       	brge	80005c34 <_dtoa_r+0x928>
80005c0a:	06 9b       	mov	r11,r3
80005c0c:	30 09       	mov	r9,0
80005c0e:	30 aa       	mov	r10,10
80005c10:	0e 9c       	mov	r12,r7
80005c12:	e0 a0 0a 35 	rcall	8000707c <__multadd>
80005c16:	20 16       	sub	r6,1
80005c18:	18 93       	mov	r3,r12
80005c1a:	40 dc       	lddsp	r12,sp[0x34]
80005c1c:	58 0c       	cp.w	r12,0
80005c1e:	c0 31       	brne	80005c24 <_dtoa_r+0x918>
80005c20:	40 91       	lddsp	r1,sp[0x24]
80005c22:	c0 98       	rjmp	80005c34 <_dtoa_r+0x928>
80005c24:	08 9b       	mov	r11,r4
80005c26:	40 91       	lddsp	r1,sp[0x24]
80005c28:	30 09       	mov	r9,0
80005c2a:	30 aa       	mov	r10,10
80005c2c:	0e 9c       	mov	r12,r7
80005c2e:	e0 a0 0a 27 	rcall	8000707c <__multadd>
80005c32:	18 94       	mov	r4,r12
80005c34:	58 01       	cp.w	r1,0
80005c36:	5f a9       	srle	r9
80005c38:	40 cb       	lddsp	r11,sp[0x30]
80005c3a:	58 2b       	cp.w	r11,2
80005c3c:	5f 98       	srgt	r8
80005c3e:	f3 e8 00 08 	and	r8,r9,r8
80005c42:	c2 50       	breq	80005c8c <_dtoa_r+0x980>
80005c44:	58 01       	cp.w	r1,0
80005c46:	c1 11       	brne	80005c68 <_dtoa_r+0x95c>
80005c48:	04 9b       	mov	r11,r2
80005c4a:	02 99       	mov	r9,r1
80005c4c:	30 5a       	mov	r10,5
80005c4e:	0e 9c       	mov	r12,r7
80005c50:	e0 a0 0a 16 	rcall	8000707c <__multadd>
80005c54:	18 92       	mov	r2,r12
80005c56:	18 9b       	mov	r11,r12
80005c58:	06 9c       	mov	r12,r3
80005c5a:	e0 a0 08 21 	rcall	80006c9c <__mcmp>
80005c5e:	e0 89 00 0f 	brgt	80005c7c <_dtoa_r+0x970>
80005c62:	c0 38       	rjmp	80005c68 <_dtoa_r+0x95c>
80005c64:	30 02       	mov	r2,0
80005c66:	04 94       	mov	r4,r2
80005c68:	40 ea       	lddsp	r10,sp[0x38]
80005c6a:	30 09       	mov	r9,0
80005c6c:	5c da       	com	r10
80005c6e:	40 85       	lddsp	r5,sp[0x20]
80005c70:	50 6a       	stdsp	sp[0x18],r10
80005c72:	50 49       	stdsp	sp[0x10],r9
80005c74:	c0 f9       	rjmp	80005e92 <_dtoa_r+0xb86>
80005c76:	08 92       	mov	r2,r4
80005c78:	40 66       	lddsp	r6,sp[0x18]
80005c7a:	04 94       	mov	r4,r2
80005c7c:	2f f6       	sub	r6,-1
80005c7e:	50 66       	stdsp	sp[0x18],r6
80005c80:	33 18       	mov	r8,49
80005c82:	40 85       	lddsp	r5,sp[0x20]
80005c84:	0a c8       	st.b	r5++,r8
80005c86:	30 08       	mov	r8,0
80005c88:	50 48       	stdsp	sp[0x10],r8
80005c8a:	c0 49       	rjmp	80005e92 <_dtoa_r+0xb86>
80005c8c:	40 dc       	lddsp	r12,sp[0x34]
80005c8e:	58 0c       	cp.w	r12,0
80005c90:	e0 80 00 b5 	breq	80005dfa <_dtoa_r+0xaee>
80005c94:	58 05       	cp.w	r5,0
80005c96:	e0 8a 00 08 	brle	80005ca6 <_dtoa_r+0x99a>
80005c9a:	08 9b       	mov	r11,r4
80005c9c:	0a 9a       	mov	r10,r5
80005c9e:	0e 9c       	mov	r12,r7
80005ca0:	e0 a0 09 22 	rcall	80006ee4 <__lshift>
80005ca4:	18 94       	mov	r4,r12
80005ca6:	40 6b       	lddsp	r11,sp[0x18]
80005ca8:	58 0b       	cp.w	r11,0
80005caa:	c0 31       	brne	80005cb0 <_dtoa_r+0x9a4>
80005cac:	08 9c       	mov	r12,r4
80005cae:	c1 38       	rjmp	80005cd4 <_dtoa_r+0x9c8>
80005cb0:	68 1b       	ld.w	r11,r4[0x4]
80005cb2:	0e 9c       	mov	r12,r7
80005cb4:	e0 a0 08 28 	rcall	80006d04 <_Balloc>
80005cb8:	68 4a       	ld.w	r10,r4[0x10]
80005cba:	18 95       	mov	r5,r12
80005cbc:	e8 cb ff f4 	sub	r11,r4,-12
80005cc0:	2f ea       	sub	r10,-2
80005cc2:	2f 4c       	sub	r12,-12
80005cc4:	a3 6a       	lsl	r10,0x2
80005cc6:	fe b0 e8 3f 	rcall	80002d44 <memcpy>
80005cca:	0a 9b       	mov	r11,r5
80005ccc:	30 1a       	mov	r10,1
80005cce:	0e 9c       	mov	r12,r7
80005cd0:	e0 a0 09 0a 	rcall	80006ee4 <__lshift>
80005cd4:	50 44       	stdsp	sp[0x10],r4
80005cd6:	40 3a       	lddsp	r10,sp[0xc]
80005cd8:	30 19       	mov	r9,1
80005cda:	f5 da c0 01 	bfextu	r10,r10,0x0,0x1
80005cde:	18 94       	mov	r4,r12
80005ce0:	50 da       	stdsp	sp[0x34],r10
80005ce2:	40 85       	lddsp	r5,sp[0x20]
80005ce4:	50 99       	stdsp	sp[0x24],r9
80005ce6:	50 26       	stdsp	sp[0x8],r6
80005ce8:	50 e1       	stdsp	sp[0x38],r1
80005cea:	04 9b       	mov	r11,r2
80005cec:	06 9c       	mov	r12,r3
80005cee:	fe b0 fa 7f 	rcall	800051ec <quorem>
80005cf2:	40 4b       	lddsp	r11,sp[0x10]
80005cf4:	f8 c0 ff d0 	sub	r0,r12,-48
80005cf8:	06 9c       	mov	r12,r3
80005cfa:	e0 a0 07 d1 	rcall	80006c9c <__mcmp>
80005cfe:	08 9a       	mov	r10,r4
80005d00:	50 6c       	stdsp	sp[0x18],r12
80005d02:	04 9b       	mov	r11,r2
80005d04:	0e 9c       	mov	r12,r7
80005d06:	e0 a0 08 87 	rcall	80006e14 <__mdiff>
80005d0a:	18 91       	mov	r1,r12
80005d0c:	78 38       	ld.w	r8,r12[0xc]
80005d0e:	58 08       	cp.w	r8,0
80005d10:	c0 30       	breq	80005d16 <_dtoa_r+0xa0a>
80005d12:	30 16       	mov	r6,1
80005d14:	c0 68       	rjmp	80005d20 <_dtoa_r+0xa14>
80005d16:	18 9b       	mov	r11,r12
80005d18:	06 9c       	mov	r12,r3
80005d1a:	e0 a0 07 c1 	rcall	80006c9c <__mcmp>
80005d1e:	18 96       	mov	r6,r12
80005d20:	0e 9c       	mov	r12,r7
80005d22:	02 9b       	mov	r11,r1
80005d24:	e0 a0 07 d6 	rcall	80006cd0 <_Bfree>
80005d28:	40 cc       	lddsp	r12,sp[0x30]
80005d2a:	ed ec 10 08 	or	r8,r6,r12
80005d2e:	c0 d1       	brne	80005d48 <_dtoa_r+0xa3c>
80005d30:	40 db       	lddsp	r11,sp[0x34]
80005d32:	58 0b       	cp.w	r11,0
80005d34:	c0 a1       	brne	80005d48 <_dtoa_r+0xa3c>
80005d36:	40 26       	lddsp	r6,sp[0x8]
80005d38:	e0 40 00 39 	cp.w	r0,57
80005d3c:	c3 00       	breq	80005d9c <_dtoa_r+0xa90>
80005d3e:	40 6a       	lddsp	r10,sp[0x18]
80005d40:	58 0a       	cp.w	r10,0
80005d42:	e0 89 00 24 	brgt	80005d8a <_dtoa_r+0xa7e>
80005d46:	c2 f8       	rjmp	80005da4 <_dtoa_r+0xa98>
80005d48:	40 69       	lddsp	r9,sp[0x18]
80005d4a:	58 09       	cp.w	r9,0
80005d4c:	c0 85       	brlt	80005d5c <_dtoa_r+0xa50>
80005d4e:	12 98       	mov	r8,r9
80005d50:	40 cc       	lddsp	r12,sp[0x30]
80005d52:	18 48       	or	r8,r12
80005d54:	c1 d1       	brne	80005d8e <_dtoa_r+0xa82>
80005d56:	40 db       	lddsp	r11,sp[0x34]
80005d58:	58 0b       	cp.w	r11,0
80005d5a:	c1 a1       	brne	80005d8e <_dtoa_r+0xa82>
80005d5c:	0c 99       	mov	r9,r6
80005d5e:	40 26       	lddsp	r6,sp[0x8]
80005d60:	58 09       	cp.w	r9,0
80005d62:	e0 8a 00 21 	brle	80005da4 <_dtoa_r+0xa98>
80005d66:	06 9b       	mov	r11,r3
80005d68:	30 1a       	mov	r10,1
80005d6a:	0e 9c       	mov	r12,r7
80005d6c:	e0 a0 08 bc 	rcall	80006ee4 <__lshift>
80005d70:	04 9b       	mov	r11,r2
80005d72:	18 93       	mov	r3,r12
80005d74:	e0 a0 07 94 	rcall	80006c9c <__mcmp>
80005d78:	e0 89 00 06 	brgt	80005d84 <_dtoa_r+0xa78>
80005d7c:	c1 41       	brne	80005da4 <_dtoa_r+0xa98>
80005d7e:	ed b0 00 00 	bld	r0,0x0
80005d82:	c1 11       	brne	80005da4 <_dtoa_r+0xa98>
80005d84:	e0 40 00 39 	cp.w	r0,57
80005d88:	c0 a0       	breq	80005d9c <_dtoa_r+0xa90>
80005d8a:	2f f0       	sub	r0,-1
80005d8c:	c0 c8       	rjmp	80005da4 <_dtoa_r+0xa98>
80005d8e:	58 06       	cp.w	r6,0
80005d90:	e0 8a 00 0c 	brle	80005da8 <_dtoa_r+0xa9c>
80005d94:	40 26       	lddsp	r6,sp[0x8]
80005d96:	e0 40 00 39 	cp.w	r0,57
80005d9a:	c0 41       	brne	80005da2 <_dtoa_r+0xa96>
80005d9c:	33 98       	mov	r8,57
80005d9e:	0a c8       	st.b	r5++,r8
80005da0:	c6 78       	rjmp	80005e6e <_dtoa_r+0xb62>
80005da2:	2f f0       	sub	r0,-1
80005da4:	0a c0       	st.b	r5++,r0
80005da6:	c7 58       	rjmp	80005e90 <_dtoa_r+0xb84>
80005da8:	0a c0       	st.b	r5++,r0
80005daa:	40 9a       	lddsp	r10,sp[0x24]
80005dac:	40 e9       	lddsp	r9,sp[0x38]
80005dae:	12 3a       	cp.w	r10,r9
80005db0:	c4 30       	breq	80005e36 <_dtoa_r+0xb2a>
80005db2:	06 9b       	mov	r11,r3
80005db4:	30 09       	mov	r9,0
80005db6:	30 aa       	mov	r10,10
80005db8:	0e 9c       	mov	r12,r7
80005dba:	e0 a0 09 61 	rcall	8000707c <__multadd>
80005dbe:	40 48       	lddsp	r8,sp[0x10]
80005dc0:	18 93       	mov	r3,r12
80005dc2:	08 38       	cp.w	r8,r4
80005dc4:	c0 91       	brne	80005dd6 <_dtoa_r+0xaca>
80005dc6:	10 9b       	mov	r11,r8
80005dc8:	30 09       	mov	r9,0
80005dca:	30 aa       	mov	r10,10
80005dcc:	0e 9c       	mov	r12,r7
80005dce:	e0 a0 09 57 	rcall	8000707c <__multadd>
80005dd2:	50 4c       	stdsp	sp[0x10],r12
80005dd4:	c0 e8       	rjmp	80005df0 <_dtoa_r+0xae4>
80005dd6:	40 4b       	lddsp	r11,sp[0x10]
80005dd8:	30 09       	mov	r9,0
80005dda:	30 aa       	mov	r10,10
80005ddc:	0e 9c       	mov	r12,r7
80005dde:	e0 a0 09 4f 	rcall	8000707c <__multadd>
80005de2:	08 9b       	mov	r11,r4
80005de4:	50 4c       	stdsp	sp[0x10],r12
80005de6:	30 09       	mov	r9,0
80005de8:	30 aa       	mov	r10,10
80005dea:	0e 9c       	mov	r12,r7
80005dec:	e0 a0 09 48 	rcall	8000707c <__multadd>
80005df0:	18 94       	mov	r4,r12
80005df2:	40 9c       	lddsp	r12,sp[0x24]
80005df4:	2f fc       	sub	r12,-1
80005df6:	50 9c       	stdsp	sp[0x24],r12
80005df8:	c7 9b       	rjmp	80005cea <_dtoa_r+0x9de>
80005dfa:	30 18       	mov	r8,1
80005dfc:	06 90       	mov	r0,r3
80005dfe:	40 85       	lddsp	r5,sp[0x20]
80005e00:	08 93       	mov	r3,r4
80005e02:	0c 94       	mov	r4,r6
80005e04:	10 96       	mov	r6,r8
80005e06:	04 9b       	mov	r11,r2
80005e08:	00 9c       	mov	r12,r0
80005e0a:	fe b0 f9 f1 	rcall	800051ec <quorem>
80005e0e:	2d 0c       	sub	r12,-48
80005e10:	0a cc       	st.b	r5++,r12
80005e12:	02 36       	cp.w	r6,r1
80005e14:	c0 a4       	brge	80005e28 <_dtoa_r+0xb1c>
80005e16:	00 9b       	mov	r11,r0
80005e18:	30 09       	mov	r9,0
80005e1a:	30 aa       	mov	r10,10
80005e1c:	0e 9c       	mov	r12,r7
80005e1e:	2f f6       	sub	r6,-1
80005e20:	e0 a0 09 2e 	rcall	8000707c <__multadd>
80005e24:	18 90       	mov	r0,r12
80005e26:	cf 0b       	rjmp	80005e06 <_dtoa_r+0xafa>
80005e28:	08 96       	mov	r6,r4
80005e2a:	30 0b       	mov	r11,0
80005e2c:	06 94       	mov	r4,r3
80005e2e:	50 4b       	stdsp	sp[0x10],r11
80005e30:	00 93       	mov	r3,r0
80005e32:	18 90       	mov	r0,r12
80005e34:	c0 28       	rjmp	80005e38 <_dtoa_r+0xb2c>
80005e36:	40 26       	lddsp	r6,sp[0x8]
80005e38:	06 9b       	mov	r11,r3
80005e3a:	30 1a       	mov	r10,1
80005e3c:	0e 9c       	mov	r12,r7
80005e3e:	e0 a0 08 53 	rcall	80006ee4 <__lshift>
80005e42:	04 9b       	mov	r11,r2
80005e44:	18 93       	mov	r3,r12
80005e46:	e0 a0 07 2b 	rcall	80006c9c <__mcmp>
80005e4a:	e0 89 00 12 	brgt	80005e6e <_dtoa_r+0xb62>
80005e4e:	c1 b1       	brne	80005e84 <_dtoa_r+0xb78>
80005e50:	e1 d0 c0 01 	bfextu	r0,r0,0x0,0x1
80005e54:	c0 d1       	brne	80005e6e <_dtoa_r+0xb62>
80005e56:	c1 78       	rjmp	80005e84 <_dtoa_r+0xb78>
80005e58:	40 89       	lddsp	r9,sp[0x20]
80005e5a:	12 38       	cp.w	r8,r9
80005e5c:	c0 30       	breq	80005e62 <_dtoa_r+0xb56>
80005e5e:	10 95       	mov	r5,r8
80005e60:	c0 88       	rjmp	80005e70 <_dtoa_r+0xb64>
80005e62:	2f f6       	sub	r6,-1
80005e64:	50 66       	stdsp	sp[0x18],r6
80005e66:	33 18       	mov	r8,49
80005e68:	40 8c       	lddsp	r12,sp[0x20]
80005e6a:	b8 88       	st.b	r12[0x0],r8
80005e6c:	c1 38       	rjmp	80005e92 <_dtoa_r+0xb86>
80005e6e:	33 9a       	mov	r10,57
80005e70:	0a 98       	mov	r8,r5
80005e72:	11 79       	ld.ub	r9,--r8
80005e74:	f4 09 18 00 	cp.b	r9,r10
80005e78:	cf 00       	breq	80005e58 <_dtoa_r+0xb4c>
80005e7a:	2f f9       	sub	r9,-1
80005e7c:	b0 89       	st.b	r8[0x0],r9
80005e7e:	c0 98       	rjmp	80005e90 <_dtoa_r+0xb84>
80005e80:	10 95       	mov	r5,r8
80005e82:	c0 28       	rjmp	80005e86 <_dtoa_r+0xb7a>
80005e84:	33 09       	mov	r9,48
80005e86:	0a 98       	mov	r8,r5
80005e88:	11 7a       	ld.ub	r10,--r8
80005e8a:	f2 0a 18 00 	cp.b	r10,r9
80005e8e:	cf 90       	breq	80005e80 <_dtoa_r+0xb74>
80005e90:	50 66       	stdsp	sp[0x18],r6
80005e92:	04 9b       	mov	r11,r2
80005e94:	0e 9c       	mov	r12,r7
80005e96:	e0 a0 07 1d 	rcall	80006cd0 <_Bfree>
80005e9a:	58 04       	cp.w	r4,0
80005e9c:	c1 20       	breq	80005ec0 <_dtoa_r+0xbb4>
80005e9e:	40 4b       	lddsp	r11,sp[0x10]
80005ea0:	08 3b       	cp.w	r11,r4
80005ea2:	5f 19       	srne	r9
80005ea4:	58 0b       	cp.w	r11,0
80005ea6:	5f 18       	srne	r8
80005ea8:	f3 e8 00 08 	and	r8,r9,r8
80005eac:	c0 40       	breq	80005eb4 <_dtoa_r+0xba8>
80005eae:	0e 9c       	mov	r12,r7
80005eb0:	e0 a0 07 10 	rcall	80006cd0 <_Bfree>
80005eb4:	08 9b       	mov	r11,r4
80005eb6:	0e 9c       	mov	r12,r7
80005eb8:	e0 a0 07 0c 	rcall	80006cd0 <_Bfree>
80005ebc:	c0 28       	rjmp	80005ec0 <_dtoa_r+0xbb4>
80005ebe:	50 66       	stdsp	sp[0x18],r6
80005ec0:	0e 9c       	mov	r12,r7
80005ec2:	06 9b       	mov	r11,r3
80005ec4:	e0 a0 07 06 	rcall	80006cd0 <_Bfree>
80005ec8:	30 08       	mov	r8,0
80005eca:	aa 88       	st.b	r5[0x0],r8
80005ecc:	40 68       	lddsp	r8,sp[0x18]
80005ece:	41 5a       	lddsp	r10,sp[0x54]
80005ed0:	2f f8       	sub	r8,-1
80005ed2:	41 29       	lddsp	r9,sp[0x48]
80005ed4:	95 08       	st.w	r10[0x0],r8
80005ed6:	40 8c       	lddsp	r12,sp[0x20]
80005ed8:	58 09       	cp.w	r9,0
80005eda:	fb f8 10 12 	ld.wne	r8,sp[0x48]
80005ede:	f1 f5 1a 00 	st.wne	r8[0x0],r5
80005ee2:	2e 6d       	sub	sp,-104
80005ee4:	d8 32       	popm	r0-r7,pc
80005ee6:	d7 03       	nop

80005ee8 <_fflush_r>:
80005ee8:	d4 21       	pushm	r4-r7,lr
80005eea:	16 97       	mov	r7,r11
80005eec:	18 96       	mov	r6,r12
80005eee:	76 48       	ld.w	r8,r11[0x10]
80005ef0:	58 08       	cp.w	r8,0
80005ef2:	c7 f0       	breq	80005ff0 <_fflush_r+0x108>
80005ef4:	58 0c       	cp.w	r12,0
80005ef6:	c0 50       	breq	80005f00 <_fflush_r+0x18>
80005ef8:	78 68       	ld.w	r8,r12[0x18]
80005efa:	58 08       	cp.w	r8,0
80005efc:	c0 21       	brne	80005f00 <_fflush_r+0x18>
80005efe:	cc dc       	rcall	80006098 <__sinit>
80005f00:	fe c8 cf 78 	sub	r8,pc,-12424
80005f04:	10 37       	cp.w	r7,r8
80005f06:	c0 31       	brne	80005f0c <_fflush_r+0x24>
80005f08:	6c 07       	ld.w	r7,r6[0x0]
80005f0a:	c0 c8       	rjmp	80005f22 <_fflush_r+0x3a>
80005f0c:	fe c8 cf 64 	sub	r8,pc,-12444
80005f10:	10 37       	cp.w	r7,r8
80005f12:	c0 31       	brne	80005f18 <_fflush_r+0x30>
80005f14:	6c 17       	ld.w	r7,r6[0x4]
80005f16:	c0 68       	rjmp	80005f22 <_fflush_r+0x3a>
80005f18:	fe c8 cf 50 	sub	r8,pc,-12464
80005f1c:	10 37       	cp.w	r7,r8
80005f1e:	ed f7 00 02 	ld.weq	r7,r6[0x8]
80005f22:	8e 6a       	ld.sh	r10,r7[0xc]
80005f24:	14 98       	mov	r8,r10
80005f26:	ed ba 00 03 	bld	r10,0x3
80005f2a:	c4 20       	breq	80005fae <_fflush_r+0xc6>
80005f2c:	ab ba       	sbr	r10,0xb
80005f2e:	ae 6a       	st.h	r7[0xc],r10
80005f30:	6e 18       	ld.w	r8,r7[0x4]
80005f32:	58 08       	cp.w	r8,0
80005f34:	e0 89 00 06 	brgt	80005f40 <_fflush_r+0x58>
80005f38:	6f 08       	ld.w	r8,r7[0x40]
80005f3a:	58 08       	cp.w	r8,0
80005f3c:	e0 8a 00 5a 	brle	80005ff0 <_fflush_r+0x108>
80005f40:	6e b8       	ld.w	r8,r7[0x2c]
80005f42:	58 08       	cp.w	r8,0
80005f44:	c5 60       	breq	80005ff0 <_fflush_r+0x108>
80005f46:	e2 1a 10 00 	andl	r10,0x1000,COH
80005f4a:	c0 30       	breq	80005f50 <_fflush_r+0x68>
80005f4c:	6f 55       	ld.w	r5,r7[0x54]
80005f4e:	c0 f8       	rjmp	80005f6c <_fflush_r+0x84>
80005f50:	30 19       	mov	r9,1
80005f52:	6e 8b       	ld.w	r11,r7[0x20]
80005f54:	0c 9c       	mov	r12,r6
80005f56:	5d 18       	icall	r8
80005f58:	18 95       	mov	r5,r12
80005f5a:	5b fc       	cp.w	r12,-1
80005f5c:	c0 81       	brne	80005f6c <_fflush_r+0x84>
80005f5e:	6c 38       	ld.w	r8,r6[0xc]
80005f60:	59 d8       	cp.w	r8,29
80005f62:	c4 70       	breq	80005ff0 <_fflush_r+0x108>
80005f64:	8e 68       	ld.sh	r8,r7[0xc]
80005f66:	a7 a8       	sbr	r8,0x6
80005f68:	ae 68       	st.h	r7[0xc],r8
80005f6a:	d8 22       	popm	r4-r7,pc
80005f6c:	8e 68       	ld.sh	r8,r7[0xc]
80005f6e:	ed b8 00 02 	bld	r8,0x2
80005f72:	c0 91       	brne	80005f84 <_fflush_r+0x9c>
80005f74:	6e 18       	ld.w	r8,r7[0x4]
80005f76:	10 15       	sub	r5,r8
80005f78:	6e d8       	ld.w	r8,r7[0x34]
80005f7a:	58 08       	cp.w	r8,0
80005f7c:	ef f8 10 10 	ld.wne	r8,r7[0x40]
80005f80:	eb d8 e1 15 	subne	r5,r5,r8
80005f84:	6e b8       	ld.w	r8,r7[0x2c]
80005f86:	0c 9c       	mov	r12,r6
80005f88:	30 09       	mov	r9,0
80005f8a:	0a 9a       	mov	r10,r5
80005f8c:	6e 8b       	ld.w	r11,r7[0x20]
80005f8e:	5d 18       	icall	r8
80005f90:	8e 68       	ld.sh	r8,r7[0xc]
80005f92:	0a 3c       	cp.w	r12,r5
80005f94:	c2 61       	brne	80005fe0 <_fflush_r+0xf8>
80005f96:	ab d8       	cbr	r8,0xb
80005f98:	30 0c       	mov	r12,0
80005f9a:	6e 49       	ld.w	r9,r7[0x10]
80005f9c:	ae 68       	st.h	r7[0xc],r8
80005f9e:	8f 1c       	st.w	r7[0x4],r12
80005fa0:	8f 09       	st.w	r7[0x0],r9
80005fa2:	ed b8 00 0c 	bld	r8,0xc
80005fa6:	c2 51       	brne	80005ff0 <_fflush_r+0x108>
80005fa8:	ef 45 00 54 	st.w	r7[84],r5
80005fac:	d8 22       	popm	r4-r7,pc
80005fae:	6e 45       	ld.w	r5,r7[0x10]
80005fb0:	58 05       	cp.w	r5,0
80005fb2:	c1 f0       	breq	80005ff0 <_fflush_r+0x108>
80005fb4:	6e 04       	ld.w	r4,r7[0x0]
80005fb6:	f5 da c0 02 	bfextu	r10,r10,0x0,0x2
80005fba:	8f 05       	st.w	r7[0x0],r5
80005fbc:	f9 b8 01 00 	movne	r8,0
80005fc0:	ef f8 00 05 	ld.weq	r8,r7[0x14]
80005fc4:	0a 14       	sub	r4,r5
80005fc6:	8f 28       	st.w	r7[0x8],r8
80005fc8:	c1 18       	rjmp	80005fea <_fflush_r+0x102>
80005fca:	08 99       	mov	r9,r4
80005fcc:	0a 9a       	mov	r10,r5
80005fce:	6e a8       	ld.w	r8,r7[0x28]
80005fd0:	6e 8b       	ld.w	r11,r7[0x20]
80005fd2:	0c 9c       	mov	r12,r6
80005fd4:	5d 18       	icall	r8
80005fd6:	18 14       	sub	r4,r12
80005fd8:	58 0c       	cp.w	r12,0
80005fda:	e0 89 00 07 	brgt	80005fe8 <_fflush_r+0x100>
80005fde:	8e 68       	ld.sh	r8,r7[0xc]
80005fe0:	a7 a8       	sbr	r8,0x6
80005fe2:	3f fc       	mov	r12,-1
80005fe4:	ae 68       	st.h	r7[0xc],r8
80005fe6:	d8 22       	popm	r4-r7,pc
80005fe8:	18 05       	add	r5,r12
80005fea:	58 04       	cp.w	r4,0
80005fec:	fe 99 ff ef 	brgt	80005fca <_fflush_r+0xe2>
80005ff0:	d8 2a       	popm	r4-r7,pc,r12=0
80005ff2:	d7 03       	nop

80005ff4 <__sfp_lock_acquire>:
80005ff4:	5e fc       	retal	r12

80005ff6 <__sfp_lock_release>:
80005ff6:	5e fc       	retal	r12

80005ff8 <_cleanup_r>:
80005ff8:	d4 01       	pushm	lr
80005ffa:	fe cb e8 6a 	sub	r11,pc,-6038
80005ffe:	e0 a0 02 fd 	rcall	800065f8 <_fwalk>
80006002:	d8 02       	popm	pc

80006004 <__sfmoreglue>:
80006004:	d4 21       	pushm	r4-r7,lr
80006006:	16 95       	mov	r5,r11
80006008:	f6 06 10 5c 	mul	r6,r11,92
8000600c:	ec cb ff f4 	sub	r11,r6,-12
80006010:	e0 a0 03 84 	rcall	80006718 <_malloc_r>
80006014:	18 97       	mov	r7,r12
80006016:	c0 90       	breq	80006028 <__sfmoreglue+0x24>
80006018:	99 15       	st.w	r12[0x4],r5
8000601a:	30 0b       	mov	r11,0
8000601c:	2f 4c       	sub	r12,-12
8000601e:	0c 9a       	mov	r10,r6
80006020:	8f 2c       	st.w	r7[0x8],r12
80006022:	8f 0b       	st.w	r7[0x0],r11
80006024:	e0 a0 05 bc 	rcall	80006b9c <memset>
80006028:	0e 9c       	mov	r12,r7
8000602a:	d8 22       	popm	r4-r7,pc

8000602c <__sfp>:
8000602c:	d4 21       	pushm	r4-r7,lr
8000602e:	fe c8 d4 8e 	sub	r8,pc,-11122
80006032:	18 96       	mov	r6,r12
80006034:	70 07       	ld.w	r7,r8[0x0]
80006036:	6e 68       	ld.w	r8,r7[0x18]
80006038:	58 08       	cp.w	r8,0
8000603a:	c0 31       	brne	80006040 <__sfp+0x14>
8000603c:	0e 9c       	mov	r12,r7
8000603e:	c2 dc       	rcall	80006098 <__sinit>
80006040:	ee c7 ff 28 	sub	r7,r7,-216
80006044:	30 05       	mov	r5,0
80006046:	6e 2c       	ld.w	r12,r7[0x8]
80006048:	6e 18       	ld.w	r8,r7[0x4]
8000604a:	c0 68       	rjmp	80006056 <__sfp+0x2a>
8000604c:	98 69       	ld.sh	r9,r12[0xc]
8000604e:	ea 09 19 00 	cp.h	r9,r5
80006052:	c1 10       	breq	80006074 <__sfp+0x48>
80006054:	2a 4c       	sub	r12,-92
80006056:	20 18       	sub	r8,1
80006058:	cf a7       	brpl	8000604c <__sfp+0x20>
8000605a:	6e 08       	ld.w	r8,r7[0x0]
8000605c:	58 08       	cp.w	r8,0
8000605e:	c0 61       	brne	8000606a <__sfp+0x3e>
80006060:	30 4b       	mov	r11,4
80006062:	0c 9c       	mov	r12,r6
80006064:	cd 0f       	rcall	80006004 <__sfmoreglue>
80006066:	8f 0c       	st.w	r7[0x0],r12
80006068:	c0 30       	breq	8000606e <__sfp+0x42>
8000606a:	6e 07       	ld.w	r7,r7[0x0]
8000606c:	ce db       	rjmp	80006046 <__sfp+0x1a>
8000606e:	30 c8       	mov	r8,12
80006070:	8d 38       	st.w	r6[0xc],r8
80006072:	d8 22       	popm	r4-r7,pc
80006074:	30 08       	mov	r8,0
80006076:	f9 48 00 4c 	st.w	r12[76],r8
8000607a:	99 08       	st.w	r12[0x0],r8
8000607c:	99 28       	st.w	r12[0x8],r8
8000607e:	99 18       	st.w	r12[0x4],r8
80006080:	99 48       	st.w	r12[0x10],r8
80006082:	99 58       	st.w	r12[0x14],r8
80006084:	99 68       	st.w	r12[0x18],r8
80006086:	99 d8       	st.w	r12[0x34],r8
80006088:	99 e8       	st.w	r12[0x38],r8
8000608a:	f9 48 00 48 	st.w	r12[72],r8
8000608e:	3f f8       	mov	r8,-1
80006090:	b8 78       	st.h	r12[0xe],r8
80006092:	30 18       	mov	r8,1
80006094:	b8 68       	st.h	r12[0xc],r8
80006096:	d8 22       	popm	r4-r7,pc

80006098 <__sinit>:
80006098:	d4 21       	pushm	r4-r7,lr
8000609a:	18 96       	mov	r6,r12
8000609c:	78 67       	ld.w	r7,r12[0x18]
8000609e:	58 07       	cp.w	r7,0
800060a0:	c4 91       	brne	80006132 <__sinit+0x9a>
800060a2:	fe c8 00 aa 	sub	r8,pc,170
800060a6:	30 15       	mov	r5,1
800060a8:	99 a8       	st.w	r12[0x28],r8
800060aa:	f9 47 00 d8 	st.w	r12[216],r7
800060ae:	f9 47 00 dc 	st.w	r12[220],r7
800060b2:	f9 47 00 e0 	st.w	r12[224],r7
800060b6:	99 65       	st.w	r12[0x18],r5
800060b8:	cb af       	rcall	8000602c <__sfp>
800060ba:	8d 0c       	st.w	r6[0x0],r12
800060bc:	0c 9c       	mov	r12,r6
800060be:	cb 7f       	rcall	8000602c <__sfp>
800060c0:	8d 1c       	st.w	r6[0x4],r12
800060c2:	0c 9c       	mov	r12,r6
800060c4:	cb 4f       	rcall	8000602c <__sfp>
800060c6:	6c 09       	ld.w	r9,r6[0x0]
800060c8:	30 48       	mov	r8,4
800060ca:	93 07       	st.w	r9[0x0],r7
800060cc:	b2 68       	st.h	r9[0xc],r8
800060ce:	93 17       	st.w	r9[0x4],r7
800060d0:	93 27       	st.w	r9[0x8],r7
800060d2:	6c 18       	ld.w	r8,r6[0x4]
800060d4:	b2 77       	st.h	r9[0xe],r7
800060d6:	93 47       	st.w	r9[0x10],r7
800060d8:	93 57       	st.w	r9[0x14],r7
800060da:	93 67       	st.w	r9[0x18],r7
800060dc:	93 89       	st.w	r9[0x20],r9
800060de:	91 07       	st.w	r8[0x0],r7
800060e0:	91 17       	st.w	r8[0x4],r7
800060e2:	91 27       	st.w	r8[0x8],r7
800060e4:	fe ce eb e4 	sub	lr,pc,-5148
800060e8:	fe cb ec 14 	sub	r11,pc,-5100
800060ec:	93 9e       	st.w	r9[0x24],lr
800060ee:	93 ab       	st.w	r9[0x28],r11
800060f0:	fe ca ec 3c 	sub	r10,pc,-5060
800060f4:	fe c4 ec 48 	sub	r4,pc,-5048
800060f8:	93 ba       	st.w	r9[0x2c],r10
800060fa:	93 c4       	st.w	r9[0x30],r4
800060fc:	30 99       	mov	r9,9
800060fe:	b0 69       	st.h	r8[0xc],r9
80006100:	b0 75       	st.h	r8[0xe],r5
80006102:	91 c4       	st.w	r8[0x30],r4
80006104:	91 47       	st.w	r8[0x10],r7
80006106:	91 57       	st.w	r8[0x14],r7
80006108:	91 67       	st.w	r8[0x18],r7
8000610a:	91 88       	st.w	r8[0x20],r8
8000610c:	91 9e       	st.w	r8[0x24],lr
8000610e:	91 ab       	st.w	r8[0x28],r11
80006110:	91 ba       	st.w	r8[0x2c],r10
80006112:	8d 2c       	st.w	r6[0x8],r12
80006114:	31 28       	mov	r8,18
80006116:	99 07       	st.w	r12[0x0],r7
80006118:	b8 68       	st.h	r12[0xc],r8
8000611a:	99 17       	st.w	r12[0x4],r7
8000611c:	99 27       	st.w	r12[0x8],r7
8000611e:	30 28       	mov	r8,2
80006120:	b8 78       	st.h	r12[0xe],r8
80006122:	99 c4       	st.w	r12[0x30],r4
80006124:	99 67       	st.w	r12[0x18],r7
80006126:	99 9e       	st.w	r12[0x24],lr
80006128:	99 ab       	st.w	r12[0x28],r11
8000612a:	99 ba       	st.w	r12[0x2c],r10
8000612c:	99 47       	st.w	r12[0x10],r7
8000612e:	99 57       	st.w	r12[0x14],r7
80006130:	99 8c       	st.w	r12[0x20],r12
80006132:	d8 22       	popm	r4-r7,pc

80006134 <_malloc_trim_r>:
80006134:	d4 21       	pushm	r4-r7,lr
80006136:	16 95       	mov	r5,r11
80006138:	18 97       	mov	r7,r12
8000613a:	e0 a0 05 38 	rcall	80006baa <__malloc_lock>
8000613e:	e0 64 01 04 	mov	r4,260
80006142:	68 28       	ld.w	r8,r4[0x8]
80006144:	70 16       	ld.w	r6,r8[0x4]
80006146:	e0 16 ff fc 	andl	r6,0xfffc
8000614a:	ec c8 ff 91 	sub	r8,r6,-111
8000614e:	f0 05 01 05 	sub	r5,r8,r5
80006152:	e0 15 ff 80 	andl	r5,0xff80
80006156:	ea c5 00 80 	sub	r5,r5,128
8000615a:	e0 45 00 7f 	cp.w	r5,127
8000615e:	e0 8a 00 25 	brle	800061a8 <_malloc_trim_r+0x74>
80006162:	30 0b       	mov	r11,0
80006164:	0e 9c       	mov	r12,r7
80006166:	e0 a0 09 93 	rcall	8000748c <_sbrk_r>
8000616a:	68 28       	ld.w	r8,r4[0x8]
8000616c:	0c 08       	add	r8,r6
8000616e:	10 3c       	cp.w	r12,r8
80006170:	c1 c1       	brne	800061a8 <_malloc_trim_r+0x74>
80006172:	ea 0b 11 00 	rsub	r11,r5,0
80006176:	0e 9c       	mov	r12,r7
80006178:	e0 a0 09 8a 	rcall	8000748c <_sbrk_r>
8000617c:	5b fc       	cp.w	r12,-1
8000617e:	c1 91       	brne	800061b0 <_malloc_trim_r+0x7c>
80006180:	30 0b       	mov	r11,0
80006182:	0e 9c       	mov	r12,r7
80006184:	e0 a0 09 84 	rcall	8000748c <_sbrk_r>
80006188:	68 28       	ld.w	r8,r4[0x8]
8000618a:	f8 08 01 09 	sub	r9,r12,r8
8000618e:	58 f9       	cp.w	r9,15
80006190:	e0 8a 00 0c 	brle	800061a8 <_malloc_trim_r+0x74>
80006194:	a1 a9       	sbr	r9,0x0
80006196:	91 19       	st.w	r8[0x4],r9
80006198:	e0 68 05 10 	mov	r8,1296
8000619c:	70 09       	ld.w	r9,r8[0x0]
8000619e:	e0 68 06 14 	mov	r8,1556
800061a2:	f8 09 01 09 	sub	r9,r12,r9
800061a6:	91 09       	st.w	r8[0x0],r9
800061a8:	0e 9c       	mov	r12,r7
800061aa:	e0 a0 05 01 	rcall	80006bac <__malloc_unlock>
800061ae:	d8 2a       	popm	r4-r7,pc,r12=0
800061b0:	68 28       	ld.w	r8,r4[0x8]
800061b2:	0a 16       	sub	r6,r5
800061b4:	a1 a6       	sbr	r6,0x0
800061b6:	91 16       	st.w	r8[0x4],r6
800061b8:	e0 68 06 14 	mov	r8,1556
800061bc:	70 09       	ld.w	r9,r8[0x0]
800061be:	0a 19       	sub	r9,r5
800061c0:	0e 9c       	mov	r12,r7
800061c2:	91 09       	st.w	r8[0x0],r9
800061c4:	e0 a0 04 f4 	rcall	80006bac <__malloc_unlock>
800061c8:	da 2a       	popm	r4-r7,pc,r12=1
800061ca:	d7 03       	nop

800061cc <_free_r>:
800061cc:	d4 21       	pushm	r4-r7,lr
800061ce:	16 96       	mov	r6,r11
800061d0:	18 97       	mov	r7,r12
800061d2:	58 0b       	cp.w	r11,0
800061d4:	e0 80 00 c0 	breq	80006354 <_free_r+0x188>
800061d8:	e0 a0 04 e9 	rcall	80006baa <__malloc_lock>
800061dc:	20 86       	sub	r6,8
800061de:	e0 6a 01 04 	mov	r10,260
800061e2:	6c 18       	ld.w	r8,r6[0x4]
800061e4:	74 2e       	ld.w	lr,r10[0x8]
800061e6:	f9 d8 c0 01 	bfextu	r12,r8,0x0,0x1
800061ea:	a1 c8       	cbr	r8,0x0
800061ec:	ec 08 00 09 	add	r9,r6,r8
800061f0:	72 1b       	ld.w	r11,r9[0x4]
800061f2:	e0 1b ff fc 	andl	r11,0xfffc
800061f6:	1c 39       	cp.w	r9,lr
800061f8:	c1 e1       	brne	80006234 <_free_r+0x68>
800061fa:	f6 08 00 08 	add	r8,r11,r8
800061fe:	58 0c       	cp.w	r12,0
80006200:	c0 81       	brne	80006210 <_free_r+0x44>
80006202:	6c 09       	ld.w	r9,r6[0x0]
80006204:	12 16       	sub	r6,r9
80006206:	12 08       	add	r8,r9
80006208:	6c 3b       	ld.w	r11,r6[0xc]
8000620a:	6c 29       	ld.w	r9,r6[0x8]
8000620c:	97 29       	st.w	r11[0x8],r9
8000620e:	93 3b       	st.w	r9[0xc],r11
80006210:	10 99       	mov	r9,r8
80006212:	95 26       	st.w	r10[0x8],r6
80006214:	a1 a9       	sbr	r9,0x0
80006216:	8d 19       	st.w	r6[0x4],r9
80006218:	e0 69 05 0c 	mov	r9,1292
8000621c:	72 09       	ld.w	r9,r9[0x0]
8000621e:	12 38       	cp.w	r8,r9
80006220:	c0 63       	brcs	8000622c <_free_r+0x60>
80006222:	e0 68 06 10 	mov	r8,1552
80006226:	0e 9c       	mov	r12,r7
80006228:	70 0b       	ld.w	r11,r8[0x0]
8000622a:	c8 5f       	rcall	80006134 <_malloc_trim_r>
8000622c:	0e 9c       	mov	r12,r7
8000622e:	e0 a0 04 bf 	rcall	80006bac <__malloc_unlock>
80006232:	d8 22       	popm	r4-r7,pc
80006234:	93 1b       	st.w	r9[0x4],r11
80006236:	58 0c       	cp.w	r12,0
80006238:	c0 30       	breq	8000623e <_free_r+0x72>
8000623a:	30 0c       	mov	r12,0
8000623c:	c1 08       	rjmp	8000625c <_free_r+0x90>
8000623e:	6c 0e       	ld.w	lr,r6[0x0]
80006240:	f4 c5 ff f8 	sub	r5,r10,-8
80006244:	1c 16       	sub	r6,lr
80006246:	1c 08       	add	r8,lr
80006248:	6c 2e       	ld.w	lr,r6[0x8]
8000624a:	0a 3e       	cp.w	lr,r5
8000624c:	f9 bc 00 01 	moveq	r12,1
80006250:	ed f5 10 03 	ld.wne	r5,r6[0xc]
80006254:	eb fe 1a 02 	st.wne	r5[0x8],lr
80006258:	fd f5 1a 03 	st.wne	lr[0xc],r5
8000625c:	f2 0b 00 0e 	add	lr,r9,r11
80006260:	7c 1e       	ld.w	lr,lr[0x4]
80006262:	ed be 00 00 	bld	lr,0x0
80006266:	c1 40       	breq	8000628e <_free_r+0xc2>
80006268:	16 08       	add	r8,r11
8000626a:	58 0c       	cp.w	r12,0
8000626c:	c0 d1       	brne	80006286 <_free_r+0xba>
8000626e:	e0 6e 01 04 	mov	lr,260
80006272:	72 2b       	ld.w	r11,r9[0x8]
80006274:	2f 8e       	sub	lr,-8
80006276:	1c 3b       	cp.w	r11,lr
80006278:	c0 71       	brne	80006286 <_free_r+0xba>
8000627a:	97 36       	st.w	r11[0xc],r6
8000627c:	97 26       	st.w	r11[0x8],r6
8000627e:	8d 2b       	st.w	r6[0x8],r11
80006280:	8d 3b       	st.w	r6[0xc],r11
80006282:	30 1c       	mov	r12,1
80006284:	c0 58       	rjmp	8000628e <_free_r+0xc2>
80006286:	72 2b       	ld.w	r11,r9[0x8]
80006288:	72 39       	ld.w	r9,r9[0xc]
8000628a:	93 2b       	st.w	r9[0x8],r11
8000628c:	97 39       	st.w	r11[0xc],r9
8000628e:	10 99       	mov	r9,r8
80006290:	ec 08 09 08 	st.w	r6[r8],r8
80006294:	a1 a9       	sbr	r9,0x0
80006296:	8d 19       	st.w	r6[0x4],r9
80006298:	58 0c       	cp.w	r12,0
8000629a:	c5 a1       	brne	8000634e <_free_r+0x182>
8000629c:	e0 48 01 ff 	cp.w	r8,511
800062a0:	e0 8b 00 13 	brhi	800062c6 <_free_r+0xfa>
800062a4:	a3 98       	lsr	r8,0x3
800062a6:	f4 08 00 39 	add	r9,r10,r8<<0x3
800062aa:	72 2b       	ld.w	r11,r9[0x8]
800062ac:	8d 39       	st.w	r6[0xc],r9
800062ae:	8d 2b       	st.w	r6[0x8],r11
800062b0:	97 36       	st.w	r11[0xc],r6
800062b2:	93 26       	st.w	r9[0x8],r6
800062b4:	a3 48       	asr	r8,0x2
800062b6:	74 19       	ld.w	r9,r10[0x4]
800062b8:	30 1b       	mov	r11,1
800062ba:	f6 08 09 48 	lsl	r8,r11,r8
800062be:	f3 e8 10 08 	or	r8,r9,r8
800062c2:	95 18       	st.w	r10[0x4],r8
800062c4:	c4 58       	rjmp	8000634e <_free_r+0x182>
800062c6:	f0 0b 16 09 	lsr	r11,r8,0x9
800062ca:	58 4b       	cp.w	r11,4
800062cc:	e0 8b 00 06 	brhi	800062d8 <_free_r+0x10c>
800062d0:	f0 0b 16 06 	lsr	r11,r8,0x6
800062d4:	2c 8b       	sub	r11,-56
800062d6:	c2 08       	rjmp	80006316 <_free_r+0x14a>
800062d8:	59 4b       	cp.w	r11,20
800062da:	e0 8b 00 04 	brhi	800062e2 <_free_r+0x116>
800062de:	2a 5b       	sub	r11,-91
800062e0:	c1 b8       	rjmp	80006316 <_free_r+0x14a>
800062e2:	e0 4b 00 54 	cp.w	r11,84
800062e6:	e0 8b 00 06 	brhi	800062f2 <_free_r+0x126>
800062ea:	f0 0b 16 0c 	lsr	r11,r8,0xc
800062ee:	29 2b       	sub	r11,-110
800062f0:	c1 38       	rjmp	80006316 <_free_r+0x14a>
800062f2:	e0 4b 01 54 	cp.w	r11,340
800062f6:	e0 8b 00 06 	brhi	80006302 <_free_r+0x136>
800062fa:	f0 0b 16 0f 	lsr	r11,r8,0xf
800062fe:	28 9b       	sub	r11,-119
80006300:	c0 b8       	rjmp	80006316 <_free_r+0x14a>
80006302:	e0 4b 05 54 	cp.w	r11,1364
80006306:	e0 88 00 05 	brls	80006310 <_free_r+0x144>
8000630a:	37 eb       	mov	r11,126
8000630c:	c0 58       	rjmp	80006316 <_free_r+0x14a>
8000630e:	d7 03       	nop
80006310:	f0 0b 16 12 	lsr	r11,r8,0x12
80006314:	28 4b       	sub	r11,-124
80006316:	f4 0b 00 3c 	add	r12,r10,r11<<0x3
8000631a:	78 29       	ld.w	r9,r12[0x8]
8000631c:	18 39       	cp.w	r9,r12
8000631e:	c0 e1       	brne	8000633a <_free_r+0x16e>
80006320:	74 18       	ld.w	r8,r10[0x4]
80006322:	a3 4b       	asr	r11,0x2
80006324:	30 1c       	mov	r12,1
80006326:	f8 0b 09 4b 	lsl	r11,r12,r11
8000632a:	f1 eb 10 0b 	or	r11,r8,r11
8000632e:	12 98       	mov	r8,r9
80006330:	95 1b       	st.w	r10[0x4],r11
80006332:	c0 a8       	rjmp	80006346 <_free_r+0x17a>
80006334:	72 29       	ld.w	r9,r9[0x8]
80006336:	18 39       	cp.w	r9,r12
80006338:	c0 60       	breq	80006344 <_free_r+0x178>
8000633a:	72 1a       	ld.w	r10,r9[0x4]
8000633c:	e0 1a ff fc 	andl	r10,0xfffc
80006340:	14 38       	cp.w	r8,r10
80006342:	cf 93       	brcs	80006334 <_free_r+0x168>
80006344:	72 38       	ld.w	r8,r9[0xc]
80006346:	8d 38       	st.w	r6[0xc],r8
80006348:	8d 29       	st.w	r6[0x8],r9
8000634a:	93 36       	st.w	r9[0xc],r6
8000634c:	91 26       	st.w	r8[0x8],r6
8000634e:	0e 9c       	mov	r12,r7
80006350:	e0 a0 04 2e 	rcall	80006bac <__malloc_unlock>
80006354:	d8 22       	popm	r4-r7,pc
80006356:	d7 03       	nop

80006358 <__sfvwrite_r>:
80006358:	d4 31       	pushm	r0-r7,lr
8000635a:	20 3d       	sub	sp,12
8000635c:	14 94       	mov	r4,r10
8000635e:	18 95       	mov	r5,r12
80006360:	16 97       	mov	r7,r11
80006362:	74 28       	ld.w	r8,r10[0x8]
80006364:	58 08       	cp.w	r8,0
80006366:	e0 80 01 45 	breq	800065f0 <__sfvwrite_r+0x298>
8000636a:	96 68       	ld.sh	r8,r11[0xc]
8000636c:	ed b8 00 03 	bld	r8,0x3
80006370:	c0 41       	brne	80006378 <__sfvwrite_r+0x20>
80006372:	76 48       	ld.w	r8,r11[0x10]
80006374:	58 08       	cp.w	r8,0
80006376:	c0 c1       	brne	8000638e <__sfvwrite_r+0x36>
80006378:	0e 9b       	mov	r11,r7
8000637a:	0a 9c       	mov	r12,r5
8000637c:	fe b0 f6 ca 	rcall	80005110 <__swsetup_r>
80006380:	c0 70       	breq	8000638e <__sfvwrite_r+0x36>
80006382:	8e 68       	ld.sh	r8,r7[0xc]
80006384:	a7 a8       	sbr	r8,0x6
80006386:	ae 68       	st.h	r7[0xc],r8
80006388:	30 98       	mov	r8,9
8000638a:	8b 38       	st.w	r5[0xc],r8
8000638c:	c3 09       	rjmp	800065ec <__sfvwrite_r+0x294>
8000638e:	8e 63       	ld.sh	r3,r7[0xc]
80006390:	68 00       	ld.w	r0,r4[0x0]
80006392:	06 96       	mov	r6,r3
80006394:	e2 16 00 02 	andl	r6,0x2,COH
80006398:	c2 10       	breq	800063da <__sfvwrite_r+0x82>
8000639a:	30 03       	mov	r3,0
8000639c:	e0 62 04 00 	mov	r2,1024
800063a0:	06 96       	mov	r6,r3
800063a2:	c0 48       	rjmp	800063aa <__sfvwrite_r+0x52>
800063a4:	60 03       	ld.w	r3,r0[0x0]
800063a6:	60 16       	ld.w	r6,r0[0x4]
800063a8:	2f 80       	sub	r0,-8
800063aa:	58 06       	cp.w	r6,0
800063ac:	cf c0       	breq	800063a4 <__sfvwrite_r+0x4c>
800063ae:	e0 46 04 00 	cp.w	r6,1024
800063b2:	ec 09 17 80 	movls	r9,r6
800063b6:	e4 09 17 b0 	movhi	r9,r2
800063ba:	06 9a       	mov	r10,r3
800063bc:	6e a8       	ld.w	r8,r7[0x28]
800063be:	6e 8b       	ld.w	r11,r7[0x20]
800063c0:	0a 9c       	mov	r12,r5
800063c2:	5d 18       	icall	r8
800063c4:	18 16       	sub	r6,r12
800063c6:	58 0c       	cp.w	r12,0
800063c8:	e0 8a 01 0f 	brle	800065e6 <__sfvwrite_r+0x28e>
800063cc:	68 28       	ld.w	r8,r4[0x8]
800063ce:	18 18       	sub	r8,r12
800063d0:	89 28       	st.w	r4[0x8],r8
800063d2:	e0 80 01 0f 	breq	800065f0 <__sfvwrite_r+0x298>
800063d6:	18 03       	add	r3,r12
800063d8:	ce 9b       	rjmp	800063aa <__sfvwrite_r+0x52>
800063da:	e7 d3 c0 01 	bfextu	r3,r3,0x0,0x1
800063de:	c0 70       	breq	800063ec <__sfvwrite_r+0x94>
800063e0:	50 06       	stdsp	sp[0x0],r6
800063e2:	0c 93       	mov	r3,r6
800063e4:	0c 91       	mov	r1,r6
800063e6:	50 15       	stdsp	sp[0x4],r5
800063e8:	08 92       	mov	r2,r4
800063ea:	c9 e8       	rjmp	80006526 <__sfvwrite_r+0x1ce>
800063ec:	06 96       	mov	r6,r3
800063ee:	08 91       	mov	r1,r4
800063f0:	c0 48       	rjmp	800063f8 <__sfvwrite_r+0xa0>
800063f2:	60 03       	ld.w	r3,r0[0x0]
800063f4:	60 16       	ld.w	r6,r0[0x4]
800063f6:	2f 80       	sub	r0,-8
800063f8:	58 06       	cp.w	r6,0
800063fa:	cf c0       	breq	800063f2 <__sfvwrite_r+0x9a>
800063fc:	8e 68       	ld.sh	r8,r7[0xc]
800063fe:	6e 24       	ld.w	r4,r7[0x8]
80006400:	10 99       	mov	r9,r8
80006402:	e2 19 02 00 	andl	r9,0x200,COH
80006406:	c5 50       	breq	800064b0 <__sfvwrite_r+0x158>
80006408:	08 36       	cp.w	r6,r4
8000640a:	c4 33       	brcs	80006490 <__sfvwrite_r+0x138>
8000640c:	10 99       	mov	r9,r8
8000640e:	e2 19 04 80 	andl	r9,0x480,COH
80006412:	c3 f0       	breq	80006490 <__sfvwrite_r+0x138>
80006414:	6e 4b       	ld.w	r11,r7[0x10]
80006416:	6e 09       	ld.w	r9,r7[0x0]
80006418:	16 19       	sub	r9,r11
8000641a:	50 09       	stdsp	sp[0x0],r9
8000641c:	6e 59       	ld.w	r9,r7[0x14]
8000641e:	10 9c       	mov	r12,r8
80006420:	f2 09 00 1a 	add	r10,r9,r9<<0x1
80006424:	30 28       	mov	r8,2
80006426:	f4 08 0c 08 	divs	r8,r10,r8
8000642a:	fa e9 00 04 	st.d	sp[4],r8
8000642e:	10 94       	mov	r4,r8
80006430:	40 09       	lddsp	r9,sp[0x0]
80006432:	e2 1c 04 00 	andl	r12,0x400,COH
80006436:	2f f9       	sub	r9,-1
80006438:	0c 09       	add	r9,r6
8000643a:	12 38       	cp.w	r8,r9
8000643c:	f2 04 17 30 	movlo	r4,r9
80006440:	58 0c       	cp.w	r12,0
80006442:	c1 00       	breq	80006462 <__sfvwrite_r+0x10a>
80006444:	08 9b       	mov	r11,r4
80006446:	0a 9c       	mov	r12,r5
80006448:	c6 8d       	rcall	80006718 <_malloc_r>
8000644a:	18 92       	mov	r2,r12
8000644c:	c1 40       	breq	80006474 <__sfvwrite_r+0x11c>
8000644e:	40 0a       	lddsp	r10,sp[0x0]
80006450:	6e 4b       	ld.w	r11,r7[0x10]
80006452:	fe b0 e4 79 	rcall	80002d44 <memcpy>
80006456:	8e 68       	ld.sh	r8,r7[0xc]
80006458:	e0 18 fb 7f 	andl	r8,0xfb7f
8000645c:	a7 b8       	sbr	r8,0x7
8000645e:	ae 68       	st.h	r7[0xc],r8
80006460:	c0 d8       	rjmp	8000647a <__sfvwrite_r+0x122>
80006462:	08 9a       	mov	r10,r4
80006464:	0a 9c       	mov	r12,r5
80006466:	e0 a0 06 8f 	rcall	80007184 <_realloc_r>
8000646a:	18 92       	mov	r2,r12
8000646c:	c0 71       	brne	8000647a <__sfvwrite_r+0x122>
8000646e:	6e 4b       	ld.w	r11,r7[0x10]
80006470:	0a 9c       	mov	r12,r5
80006472:	ca de       	rcall	800061cc <_free_r>
80006474:	30 c8       	mov	r8,12
80006476:	8b 38       	st.w	r5[0xc],r8
80006478:	cb 78       	rjmp	800065e6 <__sfvwrite_r+0x28e>
8000647a:	40 0a       	lddsp	r10,sp[0x0]
8000647c:	40 09       	lddsp	r9,sp[0x0]
8000647e:	e8 0a 01 0a 	sub	r10,r4,r10
80006482:	e4 09 00 08 	add	r8,r2,r9
80006486:	8f 54       	st.w	r7[0x14],r4
80006488:	8f 2a       	st.w	r7[0x8],r10
8000648a:	8f 08       	st.w	r7[0x0],r8
8000648c:	8f 42       	st.w	r7[0x10],r2
8000648e:	0c 94       	mov	r4,r6
80006490:	08 36       	cp.w	r6,r4
80006492:	ec 04 17 30 	movlo	r4,r6
80006496:	06 9b       	mov	r11,r3
80006498:	08 9a       	mov	r10,r4
8000649a:	6e 0c       	ld.w	r12,r7[0x0]
8000649c:	e0 a0 03 61 	rcall	80006b5e <memmove>
800064a0:	6e 08       	ld.w	r8,r7[0x0]
800064a2:	08 08       	add	r8,r4
800064a4:	8f 08       	st.w	r7[0x0],r8
800064a6:	6e 28       	ld.w	r8,r7[0x8]
800064a8:	08 18       	sub	r8,r4
800064aa:	0c 94       	mov	r4,r6
800064ac:	8f 28       	st.w	r7[0x8],r8
800064ae:	c3 08       	rjmp	8000650e <__sfvwrite_r+0x1b6>
800064b0:	08 36       	cp.w	r6,r4
800064b2:	5f ba       	srhi	r10
800064b4:	6e 0c       	ld.w	r12,r7[0x0]
800064b6:	6e 48       	ld.w	r8,r7[0x10]
800064b8:	10 3c       	cp.w	r12,r8
800064ba:	5f b8       	srhi	r8
800064bc:	f5 e8 00 08 	and	r8,r10,r8
800064c0:	f2 08 18 00 	cp.b	r8,r9
800064c4:	c0 e0       	breq	800064e0 <__sfvwrite_r+0x188>
800064c6:	06 9b       	mov	r11,r3
800064c8:	08 9a       	mov	r10,r4
800064ca:	e0 a0 03 4a 	rcall	80006b5e <memmove>
800064ce:	6e 08       	ld.w	r8,r7[0x0]
800064d0:	08 08       	add	r8,r4
800064d2:	0e 9b       	mov	r11,r7
800064d4:	8f 08       	st.w	r7[0x0],r8
800064d6:	0a 9c       	mov	r12,r5
800064d8:	fe b0 fd 08 	rcall	80005ee8 <_fflush_r>
800064dc:	c1 90       	breq	8000650e <__sfvwrite_r+0x1b6>
800064de:	c8 48       	rjmp	800065e6 <__sfvwrite_r+0x28e>
800064e0:	6e 59       	ld.w	r9,r7[0x14]
800064e2:	12 36       	cp.w	r6,r9
800064e4:	c0 a3       	brcs	800064f8 <__sfvwrite_r+0x1a0>
800064e6:	6e a8       	ld.w	r8,r7[0x28]
800064e8:	06 9a       	mov	r10,r3
800064ea:	6e 8b       	ld.w	r11,r7[0x20]
800064ec:	0a 9c       	mov	r12,r5
800064ee:	5d 18       	icall	r8
800064f0:	18 94       	mov	r4,r12
800064f2:	e0 89 00 0e 	brgt	8000650e <__sfvwrite_r+0x1b6>
800064f6:	c7 88       	rjmp	800065e6 <__sfvwrite_r+0x28e>
800064f8:	0c 9a       	mov	r10,r6
800064fa:	06 9b       	mov	r11,r3
800064fc:	e0 a0 03 31 	rcall	80006b5e <memmove>
80006500:	6e 08       	ld.w	r8,r7[0x0]
80006502:	0c 08       	add	r8,r6
80006504:	0c 94       	mov	r4,r6
80006506:	8f 08       	st.w	r7[0x0],r8
80006508:	6e 28       	ld.w	r8,r7[0x8]
8000650a:	0c 18       	sub	r8,r6
8000650c:	8f 28       	st.w	r7[0x8],r8
8000650e:	62 28       	ld.w	r8,r1[0x8]
80006510:	08 18       	sub	r8,r4
80006512:	83 28       	st.w	r1[0x8],r8
80006514:	c6 e0       	breq	800065f0 <__sfvwrite_r+0x298>
80006516:	08 16       	sub	r6,r4
80006518:	08 03       	add	r3,r4
8000651a:	c6 fb       	rjmp	800063f8 <__sfvwrite_r+0xa0>
8000651c:	60 03       	ld.w	r3,r0[0x0]
8000651e:	60 11       	ld.w	r1,r0[0x4]
80006520:	30 08       	mov	r8,0
80006522:	2f 80       	sub	r0,-8
80006524:	50 08       	stdsp	sp[0x0],r8
80006526:	58 01       	cp.w	r1,0
80006528:	cf a0       	breq	8000651c <__sfvwrite_r+0x1c4>
8000652a:	40 0a       	lddsp	r10,sp[0x0]
8000652c:	58 0a       	cp.w	r10,0
8000652e:	c1 51       	brne	80006558 <__sfvwrite_r+0x200>
80006530:	e2 c6 ff ff 	sub	r6,r1,-1
80006534:	02 9a       	mov	r10,r1
80006536:	30 ab       	mov	r11,10
80006538:	06 9c       	mov	r12,r3
8000653a:	e0 a0 03 07 	rcall	80006b48 <memchr>
8000653e:	f8 c8 ff ff 	sub	r8,r12,-1
80006542:	58 0c       	cp.w	r12,0
80006544:	f1 d3 e1 16 	subne	r6,r8,r3
80006548:	f9 b9 01 01 	movne	r9,1
8000654c:	fb f9 1a 00 	st.wne	sp[0x0],r9
80006550:	f9 b8 00 01 	moveq	r8,1
80006554:	fb f8 0a 00 	st.weq	sp[0x0],r8
80006558:	02 36       	cp.w	r6,r1
8000655a:	ec 04 17 80 	movls	r4,r6
8000655e:	e2 04 17 b0 	movhi	r4,r1
80006562:	6e 59       	ld.w	r9,r7[0x14]
80006564:	6e 25       	ld.w	r5,r7[0x8]
80006566:	f2 05 00 05 	add	r5,r9,r5
8000656a:	0a 34       	cp.w	r4,r5
8000656c:	5f 9a       	srgt	r10
8000656e:	6e 0c       	ld.w	r12,r7[0x0]
80006570:	6e 48       	ld.w	r8,r7[0x10]
80006572:	10 3c       	cp.w	r12,r8
80006574:	5f b8       	srhi	r8
80006576:	f5 e8 00 08 	and	r8,r10,r8
8000657a:	30 0a       	mov	r10,0
8000657c:	f4 08 18 00 	cp.b	r8,r10
80006580:	c0 e0       	breq	8000659c <__sfvwrite_r+0x244>
80006582:	06 9b       	mov	r11,r3
80006584:	0a 9a       	mov	r10,r5
80006586:	e0 a0 02 ec 	rcall	80006b5e <memmove>
8000658a:	6e 08       	ld.w	r8,r7[0x0]
8000658c:	0a 08       	add	r8,r5
8000658e:	0e 9b       	mov	r11,r7
80006590:	8f 08       	st.w	r7[0x0],r8
80006592:	40 1c       	lddsp	r12,sp[0x4]
80006594:	fe b0 fc aa 	rcall	80005ee8 <_fflush_r>
80006598:	c1 80       	breq	800065c8 <__sfvwrite_r+0x270>
8000659a:	c2 68       	rjmp	800065e6 <__sfvwrite_r+0x28e>
8000659c:	12 34       	cp.w	r4,r9
8000659e:	c0 a5       	brlt	800065b2 <__sfvwrite_r+0x25a>
800065a0:	6e a8       	ld.w	r8,r7[0x28]
800065a2:	06 9a       	mov	r10,r3
800065a4:	6e 8b       	ld.w	r11,r7[0x20]
800065a6:	40 1c       	lddsp	r12,sp[0x4]
800065a8:	5d 18       	icall	r8
800065aa:	18 95       	mov	r5,r12
800065ac:	e0 89 00 0e 	brgt	800065c8 <__sfvwrite_r+0x270>
800065b0:	c1 b8       	rjmp	800065e6 <__sfvwrite_r+0x28e>
800065b2:	08 9a       	mov	r10,r4
800065b4:	06 9b       	mov	r11,r3
800065b6:	e0 a0 02 d4 	rcall	80006b5e <memmove>
800065ba:	6e 08       	ld.w	r8,r7[0x0]
800065bc:	08 08       	add	r8,r4
800065be:	08 95       	mov	r5,r4
800065c0:	8f 08       	st.w	r7[0x0],r8
800065c2:	6e 28       	ld.w	r8,r7[0x8]
800065c4:	08 18       	sub	r8,r4
800065c6:	8f 28       	st.w	r7[0x8],r8
800065c8:	0a 16       	sub	r6,r5
800065ca:	c0 71       	brne	800065d8 <__sfvwrite_r+0x280>
800065cc:	0e 9b       	mov	r11,r7
800065ce:	40 1c       	lddsp	r12,sp[0x4]
800065d0:	fe b0 fc 8c 	rcall	80005ee8 <_fflush_r>
800065d4:	c0 91       	brne	800065e6 <__sfvwrite_r+0x28e>
800065d6:	50 06       	stdsp	sp[0x0],r6
800065d8:	64 28       	ld.w	r8,r2[0x8]
800065da:	0a 18       	sub	r8,r5
800065dc:	85 28       	st.w	r2[0x8],r8
800065de:	c0 90       	breq	800065f0 <__sfvwrite_r+0x298>
800065e0:	0a 11       	sub	r1,r5
800065e2:	0a 03       	add	r3,r5
800065e4:	ca 1b       	rjmp	80006526 <__sfvwrite_r+0x1ce>
800065e6:	8e 68       	ld.sh	r8,r7[0xc]
800065e8:	a7 a8       	sbr	r8,0x6
800065ea:	ae 68       	st.h	r7[0xc],r8
800065ec:	3f fc       	mov	r12,-1
800065ee:	c0 28       	rjmp	800065f2 <__sfvwrite_r+0x29a>
800065f0:	30 0c       	mov	r12,0
800065f2:	2f dd       	sub	sp,-12
800065f4:	d8 32       	popm	r0-r7,pc
800065f6:	d7 03       	nop

800065f8 <_fwalk>:
800065f8:	d4 31       	pushm	r0-r7,lr
800065fa:	30 05       	mov	r5,0
800065fc:	16 91       	mov	r1,r11
800065fe:	f8 c7 ff 28 	sub	r7,r12,-216
80006602:	0a 92       	mov	r2,r5
80006604:	fe b0 fc f8 	rcall	80005ff4 <__sfp_lock_acquire>
80006608:	3f f3       	mov	r3,-1
8000660a:	c1 68       	rjmp	80006636 <_fwalk+0x3e>
8000660c:	6e 26       	ld.w	r6,r7[0x8]
8000660e:	6e 14       	ld.w	r4,r7[0x4]
80006610:	2f 46       	sub	r6,-12
80006612:	c0 c8       	rjmp	8000662a <_fwalk+0x32>
80006614:	8c 08       	ld.sh	r8,r6[0x0]
80006616:	e4 08 19 00 	cp.h	r8,r2
8000661a:	c0 70       	breq	80006628 <_fwalk+0x30>
8000661c:	8c 18       	ld.sh	r8,r6[0x2]
8000661e:	e6 08 19 00 	cp.h	r8,r3
80006622:	c0 30       	breq	80006628 <_fwalk+0x30>
80006624:	5d 11       	icall	r1
80006626:	18 45       	or	r5,r12
80006628:	2a 46       	sub	r6,-92
8000662a:	20 14       	sub	r4,1
8000662c:	ec cc 00 0c 	sub	r12,r6,12
80006630:	58 04       	cp.w	r4,0
80006632:	cf 14       	brge	80006614 <_fwalk+0x1c>
80006634:	6e 07       	ld.w	r7,r7[0x0]
80006636:	58 07       	cp.w	r7,0
80006638:	ce a1       	brne	8000660c <_fwalk+0x14>
8000663a:	fe b0 fc de 	rcall	80005ff6 <__sfp_lock_release>
8000663e:	0a 9c       	mov	r12,r5
80006640:	d8 32       	popm	r0-r7,pc
80006642:	d7 03       	nop

80006644 <_localeconv_r>:
80006644:	fe cc d6 5c 	sub	r12,pc,-10660
80006648:	5e fc       	retal	r12
8000664a:	d7 03       	nop

8000664c <__smakebuf_r>:
8000664c:	d4 21       	pushm	r4-r7,lr
8000664e:	20 fd       	sub	sp,60
80006650:	96 68       	ld.sh	r8,r11[0xc]
80006652:	16 97       	mov	r7,r11
80006654:	18 96       	mov	r6,r12
80006656:	e2 18 00 02 	andl	r8,0x2,COH
8000665a:	c3 c1       	brne	800066d2 <__smakebuf_r+0x86>
8000665c:	96 7b       	ld.sh	r11,r11[0xe]
8000665e:	f0 0b 19 00 	cp.h	r11,r8
80006662:	c0 55       	brlt	8000666c <__smakebuf_r+0x20>
80006664:	1a 9a       	mov	r10,sp
80006666:	e0 a0 08 9d 	rcall	800077a0 <_fstat_r>
8000666a:	c0 f4       	brge	80006688 <__smakebuf_r+0x3c>
8000666c:	8e 65       	ld.sh	r5,r7[0xc]
8000666e:	0a 98       	mov	r8,r5
80006670:	ab b8       	sbr	r8,0xb
80006672:	e2 15 00 80 	andl	r5,0x80,COH
80006676:	ae 68       	st.h	r7[0xc],r8
80006678:	30 04       	mov	r4,0
8000667a:	e0 68 04 00 	mov	r8,1024
8000667e:	f9 b5 01 40 	movne	r5,64
80006682:	f0 05 17 00 	moveq	r5,r8
80006686:	c1 c8       	rjmp	800066be <__smakebuf_r+0x72>
80006688:	40 18       	lddsp	r8,sp[0x4]
8000668a:	e2 18 f0 00 	andl	r8,0xf000,COH
8000668e:	e0 48 20 00 	cp.w	r8,8192
80006692:	5f 04       	sreq	r4
80006694:	e0 48 80 00 	cp.w	r8,32768
80006698:	c0 e1       	brne	800066b4 <__smakebuf_r+0x68>
8000669a:	6e b9       	ld.w	r9,r7[0x2c]
8000669c:	fe c8 f1 e8 	sub	r8,pc,-3608
800066a0:	10 39       	cp.w	r9,r8
800066a2:	c0 91       	brne	800066b4 <__smakebuf_r+0x68>
800066a4:	8e 68       	ld.sh	r8,r7[0xc]
800066a6:	e0 65 04 00 	mov	r5,1024
800066aa:	ab a8       	sbr	r8,0xa
800066ac:	ef 45 00 50 	st.w	r7[80],r5
800066b0:	ae 68       	st.h	r7[0xc],r8
800066b2:	c0 68       	rjmp	800066be <__smakebuf_r+0x72>
800066b4:	8e 68       	ld.sh	r8,r7[0xc]
800066b6:	e0 65 04 00 	mov	r5,1024
800066ba:	ab b8       	sbr	r8,0xb
800066bc:	ae 68       	st.h	r7[0xc],r8
800066be:	0a 9b       	mov	r11,r5
800066c0:	0c 9c       	mov	r12,r6
800066c2:	c2 bc       	rcall	80006718 <_malloc_r>
800066c4:	8e 68       	ld.sh	r8,r7[0xc]
800066c6:	c0 d1       	brne	800066e0 <__smakebuf_r+0x94>
800066c8:	ed b8 00 09 	bld	r8,0x9
800066cc:	c1 b0       	breq	80006702 <__smakebuf_r+0xb6>
800066ce:	a1 b8       	sbr	r8,0x1
800066d0:	ae 68       	st.h	r7[0xc],r8
800066d2:	ee c8 ff b9 	sub	r8,r7,-71
800066d6:	8f 48       	st.w	r7[0x10],r8
800066d8:	8f 08       	st.w	r7[0x0],r8
800066da:	30 18       	mov	r8,1
800066dc:	8f 58       	st.w	r7[0x14],r8
800066de:	c1 28       	rjmp	80006702 <__smakebuf_r+0xb6>
800066e0:	a7 b8       	sbr	r8,0x7
800066e2:	8f 4c       	st.w	r7[0x10],r12
800066e4:	ae 68       	st.h	r7[0xc],r8
800066e6:	8f 55       	st.w	r7[0x14],r5
800066e8:	fe c8 06 f0 	sub	r8,pc,1776
800066ec:	8f 0c       	st.w	r7[0x0],r12
800066ee:	8d a8       	st.w	r6[0x28],r8
800066f0:	58 04       	cp.w	r4,0
800066f2:	c0 80       	breq	80006702 <__smakebuf_r+0xb6>
800066f4:	8e 7c       	ld.sh	r12,r7[0xe]
800066f6:	e0 a0 07 47 	rcall	80007584 <isatty>
800066fa:	c0 40       	breq	80006702 <__smakebuf_r+0xb6>
800066fc:	8e 68       	ld.sh	r8,r7[0xc]
800066fe:	a1 a8       	sbr	r8,0x0
80006700:	ae 68       	st.h	r7[0xc],r8
80006702:	2f 1d       	sub	sp,-60
80006704:	d8 22       	popm	r4-r7,pc
80006706:	d7 03       	nop

80006708 <malloc>:
80006708:	d4 01       	pushm	lr
8000670a:	e0 68 01 00 	mov	r8,256
8000670e:	18 9b       	mov	r11,r12
80006710:	70 0c       	ld.w	r12,r8[0x0]
80006712:	c0 3c       	rcall	80006718 <_malloc_r>
80006714:	d8 02       	popm	pc
80006716:	d7 03       	nop

80006718 <_malloc_r>:
80006718:	d4 31       	pushm	r0-r7,lr
8000671a:	f6 c8 ff f5 	sub	r8,r11,-11
8000671e:	18 95       	mov	r5,r12
80006720:	10 97       	mov	r7,r8
80006722:	e0 17 ff f8 	andl	r7,0xfff8
80006726:	59 68       	cp.w	r8,22
80006728:	f9 b7 08 10 	movls	r7,16
8000672c:	16 37       	cp.w	r7,r11
8000672e:	5f 38       	srlo	r8
80006730:	f1 e7 13 f8 	or	r8,r8,r7>>0x1f
80006734:	c0 50       	breq	8000673e <_malloc_r+0x26>
80006736:	30 c8       	mov	r8,12
80006738:	99 38       	st.w	r12[0xc],r8
8000673a:	e0 8f 01 f7 	bral	80006b28 <_malloc_r+0x410>
8000673e:	e0 a0 02 36 	rcall	80006baa <__malloc_lock>
80006742:	e0 47 01 f7 	cp.w	r7,503
80006746:	e0 8b 00 1d 	brhi	80006780 <_malloc_r+0x68>
8000674a:	ee 03 16 03 	lsr	r3,r7,0x3
8000674e:	e0 68 01 04 	mov	r8,260
80006752:	f0 03 00 38 	add	r8,r8,r3<<0x3
80006756:	70 36       	ld.w	r6,r8[0xc]
80006758:	10 36       	cp.w	r6,r8
8000675a:	c0 61       	brne	80006766 <_malloc_r+0x4e>
8000675c:	ec c8 ff f8 	sub	r8,r6,-8
80006760:	70 36       	ld.w	r6,r8[0xc]
80006762:	10 36       	cp.w	r6,r8
80006764:	c0 c0       	breq	8000677c <_malloc_r+0x64>
80006766:	6c 18       	ld.w	r8,r6[0x4]
80006768:	e0 18 ff fc 	andl	r8,0xfffc
8000676c:	6c 3a       	ld.w	r10,r6[0xc]
8000676e:	ec 08 00 09 	add	r9,r6,r8
80006772:	0a 9c       	mov	r12,r5
80006774:	6c 28       	ld.w	r8,r6[0x8]
80006776:	95 28       	st.w	r10[0x8],r8
80006778:	91 3a       	st.w	r8[0xc],r10
8000677a:	c4 78       	rjmp	80006808 <_malloc_r+0xf0>
8000677c:	2f e3       	sub	r3,-2
8000677e:	c4 d8       	rjmp	80006818 <_malloc_r+0x100>
80006780:	ee 03 16 09 	lsr	r3,r7,0x9
80006784:	c0 41       	brne	8000678c <_malloc_r+0x74>
80006786:	ee 03 16 03 	lsr	r3,r7,0x3
8000678a:	c2 68       	rjmp	800067d6 <_malloc_r+0xbe>
8000678c:	58 43       	cp.w	r3,4
8000678e:	e0 8b 00 06 	brhi	8000679a <_malloc_r+0x82>
80006792:	ee 03 16 06 	lsr	r3,r7,0x6
80006796:	2c 83       	sub	r3,-56
80006798:	c1 f8       	rjmp	800067d6 <_malloc_r+0xbe>
8000679a:	59 43       	cp.w	r3,20
8000679c:	e0 8b 00 04 	brhi	800067a4 <_malloc_r+0x8c>
800067a0:	2a 53       	sub	r3,-91
800067a2:	c1 a8       	rjmp	800067d6 <_malloc_r+0xbe>
800067a4:	e0 43 00 54 	cp.w	r3,84
800067a8:	e0 8b 00 06 	brhi	800067b4 <_malloc_r+0x9c>
800067ac:	ee 03 16 0c 	lsr	r3,r7,0xc
800067b0:	29 23       	sub	r3,-110
800067b2:	c1 28       	rjmp	800067d6 <_malloc_r+0xbe>
800067b4:	e0 43 01 54 	cp.w	r3,340
800067b8:	e0 8b 00 06 	brhi	800067c4 <_malloc_r+0xac>
800067bc:	ee 03 16 0f 	lsr	r3,r7,0xf
800067c0:	28 93       	sub	r3,-119
800067c2:	c0 a8       	rjmp	800067d6 <_malloc_r+0xbe>
800067c4:	e0 43 05 54 	cp.w	r3,1364
800067c8:	e0 88 00 04 	brls	800067d0 <_malloc_r+0xb8>
800067cc:	37 e3       	mov	r3,126
800067ce:	c0 48       	rjmp	800067d6 <_malloc_r+0xbe>
800067d0:	ee 03 16 12 	lsr	r3,r7,0x12
800067d4:	28 43       	sub	r3,-124
800067d6:	e0 6a 01 04 	mov	r10,260
800067da:	f4 03 00 3a 	add	r10,r10,r3<<0x3
800067de:	74 36       	ld.w	r6,r10[0xc]
800067e0:	c1 98       	rjmp	80006812 <_malloc_r+0xfa>
800067e2:	6c 19       	ld.w	r9,r6[0x4]
800067e4:	e0 19 ff fc 	andl	r9,0xfffc
800067e8:	f2 07 01 0b 	sub	r11,r9,r7
800067ec:	58 fb       	cp.w	r11,15
800067ee:	e0 8a 00 04 	brle	800067f6 <_malloc_r+0xde>
800067f2:	20 13       	sub	r3,1
800067f4:	c1 18       	rjmp	80006816 <_malloc_r+0xfe>
800067f6:	6c 38       	ld.w	r8,r6[0xc]
800067f8:	58 0b       	cp.w	r11,0
800067fa:	c0 b5       	brlt	80006810 <_malloc_r+0xf8>
800067fc:	6c 2a       	ld.w	r10,r6[0x8]
800067fe:	ec 09 00 09 	add	r9,r6,r9
80006802:	0a 9c       	mov	r12,r5
80006804:	91 2a       	st.w	r8[0x8],r10
80006806:	95 38       	st.w	r10[0xc],r8
80006808:	72 18       	ld.w	r8,r9[0x4]
8000680a:	a1 a8       	sbr	r8,0x0
8000680c:	93 18       	st.w	r9[0x4],r8
8000680e:	cb c8       	rjmp	80006986 <_malloc_r+0x26e>
80006810:	10 96       	mov	r6,r8
80006812:	14 36       	cp.w	r6,r10
80006814:	ce 71       	brne	800067e2 <_malloc_r+0xca>
80006816:	2f f3       	sub	r3,-1
80006818:	e0 6a 01 04 	mov	r10,260
8000681c:	f4 cc ff f8 	sub	r12,r10,-8
80006820:	78 26       	ld.w	r6,r12[0x8]
80006822:	18 36       	cp.w	r6,r12
80006824:	c6 c0       	breq	800068fc <_malloc_r+0x1e4>
80006826:	6c 19       	ld.w	r9,r6[0x4]
80006828:	e0 19 ff fc 	andl	r9,0xfffc
8000682c:	f2 07 01 08 	sub	r8,r9,r7
80006830:	58 f8       	cp.w	r8,15
80006832:	e0 89 00 8f 	brgt	80006950 <_malloc_r+0x238>
80006836:	99 3c       	st.w	r12[0xc],r12
80006838:	99 2c       	st.w	r12[0x8],r12
8000683a:	58 08       	cp.w	r8,0
8000683c:	c0 55       	brlt	80006846 <_malloc_r+0x12e>
8000683e:	ec 09 00 09 	add	r9,r6,r9
80006842:	0a 9c       	mov	r12,r5
80006844:	ce 2b       	rjmp	80006808 <_malloc_r+0xf0>
80006846:	e0 49 01 ff 	cp.w	r9,511
8000684a:	e0 8b 00 13 	brhi	80006870 <_malloc_r+0x158>
8000684e:	a3 99       	lsr	r9,0x3
80006850:	f4 09 00 38 	add	r8,r10,r9<<0x3
80006854:	70 2b       	ld.w	r11,r8[0x8]
80006856:	8d 38       	st.w	r6[0xc],r8
80006858:	8d 2b       	st.w	r6[0x8],r11
8000685a:	97 36       	st.w	r11[0xc],r6
8000685c:	91 26       	st.w	r8[0x8],r6
8000685e:	a3 49       	asr	r9,0x2
80006860:	74 18       	ld.w	r8,r10[0x4]
80006862:	30 1b       	mov	r11,1
80006864:	f6 09 09 49 	lsl	r9,r11,r9
80006868:	f1 e9 10 09 	or	r9,r8,r9
8000686c:	95 19       	st.w	r10[0x4],r9
8000686e:	c4 78       	rjmp	800068fc <_malloc_r+0x1e4>
80006870:	f2 0a 16 09 	lsr	r10,r9,0x9
80006874:	58 4a       	cp.w	r10,4
80006876:	e0 8b 00 07 	brhi	80006884 <_malloc_r+0x16c>
8000687a:	f2 0a 16 06 	lsr	r10,r9,0x6
8000687e:	2c 8a       	sub	r10,-56
80006880:	c2 08       	rjmp	800068c0 <_malloc_r+0x1a8>
80006882:	d7 03       	nop
80006884:	59 4a       	cp.w	r10,20
80006886:	e0 8b 00 04 	brhi	8000688e <_malloc_r+0x176>
8000688a:	2a 5a       	sub	r10,-91
8000688c:	c1 a8       	rjmp	800068c0 <_malloc_r+0x1a8>
8000688e:	e0 4a 00 54 	cp.w	r10,84
80006892:	e0 8b 00 06 	brhi	8000689e <_malloc_r+0x186>
80006896:	f2 0a 16 0c 	lsr	r10,r9,0xc
8000689a:	29 2a       	sub	r10,-110
8000689c:	c1 28       	rjmp	800068c0 <_malloc_r+0x1a8>
8000689e:	e0 4a 01 54 	cp.w	r10,340
800068a2:	e0 8b 00 06 	brhi	800068ae <_malloc_r+0x196>
800068a6:	f2 0a 16 0f 	lsr	r10,r9,0xf
800068aa:	28 9a       	sub	r10,-119
800068ac:	c0 a8       	rjmp	800068c0 <_malloc_r+0x1a8>
800068ae:	e0 4a 05 54 	cp.w	r10,1364
800068b2:	e0 88 00 04 	brls	800068ba <_malloc_r+0x1a2>
800068b6:	37 ea       	mov	r10,126
800068b8:	c0 48       	rjmp	800068c0 <_malloc_r+0x1a8>
800068ba:	f2 0a 16 12 	lsr	r10,r9,0x12
800068be:	28 4a       	sub	r10,-124
800068c0:	e0 6b 01 04 	mov	r11,260
800068c4:	f6 0a 00 34 	add	r4,r11,r10<<0x3
800068c8:	68 28       	ld.w	r8,r4[0x8]
800068ca:	08 38       	cp.w	r8,r4
800068cc:	c0 e1       	brne	800068e8 <_malloc_r+0x1d0>
800068ce:	76 19       	ld.w	r9,r11[0x4]
800068d0:	a3 4a       	asr	r10,0x2
800068d2:	30 1e       	mov	lr,1
800068d4:	fc 0a 09 4a 	lsl	r10,lr,r10
800068d8:	f3 ea 10 0a 	or	r10,r9,r10
800068dc:	10 99       	mov	r9,r8
800068de:	97 1a       	st.w	r11[0x4],r10
800068e0:	c0 a8       	rjmp	800068f4 <_malloc_r+0x1dc>
800068e2:	70 28       	ld.w	r8,r8[0x8]
800068e4:	08 38       	cp.w	r8,r4
800068e6:	c0 60       	breq	800068f2 <_malloc_r+0x1da>
800068e8:	70 1a       	ld.w	r10,r8[0x4]
800068ea:	e0 1a ff fc 	andl	r10,0xfffc
800068ee:	14 39       	cp.w	r9,r10
800068f0:	cf 93       	brcs	800068e2 <_malloc_r+0x1ca>
800068f2:	70 39       	ld.w	r9,r8[0xc]
800068f4:	8d 39       	st.w	r6[0xc],r9
800068f6:	8d 28       	st.w	r6[0x8],r8
800068f8:	91 36       	st.w	r8[0xc],r6
800068fa:	93 26       	st.w	r9[0x8],r6
800068fc:	e6 08 14 02 	asr	r8,r3,0x2
80006900:	30 1b       	mov	r11,1
80006902:	e0 64 01 04 	mov	r4,260
80006906:	f6 08 09 4b 	lsl	r11,r11,r8
8000690a:	68 18       	ld.w	r8,r4[0x4]
8000690c:	10 3b       	cp.w	r11,r8
8000690e:	e0 8b 00 69 	brhi	800069e0 <_malloc_r+0x2c8>
80006912:	f7 e8 00 09 	and	r9,r11,r8
80006916:	c0 b1       	brne	8000692c <_malloc_r+0x214>
80006918:	e0 13 ff fc 	andl	r3,0xfffc
8000691c:	a1 7b       	lsl	r11,0x1
8000691e:	2f c3       	sub	r3,-4
80006920:	c0 38       	rjmp	80006926 <_malloc_r+0x20e>
80006922:	2f c3       	sub	r3,-4
80006924:	a1 7b       	lsl	r11,0x1
80006926:	f7 e8 00 09 	and	r9,r11,r8
8000692a:	cf c0       	breq	80006922 <_malloc_r+0x20a>
8000692c:	e8 03 00 3e 	add	lr,r4,r3<<0x3
80006930:	06 92       	mov	r2,r3
80006932:	1c 91       	mov	r1,lr
80006934:	62 36       	ld.w	r6,r1[0xc]
80006936:	c2 d8       	rjmp	80006990 <_malloc_r+0x278>
80006938:	6c 1a       	ld.w	r10,r6[0x4]
8000693a:	e0 1a ff fc 	andl	r10,0xfffc
8000693e:	f4 07 01 08 	sub	r8,r10,r7
80006942:	58 f8       	cp.w	r8,15
80006944:	e0 8a 00 15 	brle	8000696e <_malloc_r+0x256>
80006948:	6c 3a       	ld.w	r10,r6[0xc]
8000694a:	6c 29       	ld.w	r9,r6[0x8]
8000694c:	95 29       	st.w	r10[0x8],r9
8000694e:	93 3a       	st.w	r9[0xc],r10
80006950:	0e 99       	mov	r9,r7
80006952:	ec 07 00 07 	add	r7,r6,r7
80006956:	a1 a9       	sbr	r9,0x0
80006958:	99 37       	st.w	r12[0xc],r7
8000695a:	99 27       	st.w	r12[0x8],r7
8000695c:	8d 19       	st.w	r6[0x4],r9
8000695e:	ee 08 09 08 	st.w	r7[r8],r8
80006962:	8f 2c       	st.w	r7[0x8],r12
80006964:	8f 3c       	st.w	r7[0xc],r12
80006966:	a1 a8       	sbr	r8,0x0
80006968:	0a 9c       	mov	r12,r5
8000696a:	8f 18       	st.w	r7[0x4],r8
8000696c:	c0 d8       	rjmp	80006986 <_malloc_r+0x26e>
8000696e:	6c 39       	ld.w	r9,r6[0xc]
80006970:	58 08       	cp.w	r8,0
80006972:	c0 e5       	brlt	8000698e <_malloc_r+0x276>
80006974:	ec 0a 00 0a 	add	r10,r6,r10
80006978:	74 18       	ld.w	r8,r10[0x4]
8000697a:	a1 a8       	sbr	r8,0x0
8000697c:	0a 9c       	mov	r12,r5
8000697e:	95 18       	st.w	r10[0x4],r8
80006980:	6c 28       	ld.w	r8,r6[0x8]
80006982:	93 28       	st.w	r9[0x8],r8
80006984:	91 39       	st.w	r8[0xc],r9
80006986:	c1 3d       	rcall	80006bac <__malloc_unlock>
80006988:	ec cc ff f8 	sub	r12,r6,-8
8000698c:	d8 32       	popm	r0-r7,pc
8000698e:	12 96       	mov	r6,r9
80006990:	02 36       	cp.w	r6,r1
80006992:	cd 31       	brne	80006938 <_malloc_r+0x220>
80006994:	2f f2       	sub	r2,-1
80006996:	f1 d2 c0 02 	bfextu	r8,r2,0x0,0x2
8000699a:	c0 30       	breq	800069a0 <_malloc_r+0x288>
8000699c:	2f 81       	sub	r1,-8
8000699e:	cc bb       	rjmp	80006934 <_malloc_r+0x21c>
800069a0:	1c 98       	mov	r8,lr
800069a2:	f3 d3 c0 02 	bfextu	r9,r3,0x0,0x2
800069a6:	c0 81       	brne	800069b6 <_malloc_r+0x29e>
800069a8:	68 19       	ld.w	r9,r4[0x4]
800069aa:	f6 08 11 ff 	rsub	r8,r11,-1
800069ae:	f3 e8 00 08 	and	r8,r9,r8
800069b2:	89 18       	st.w	r4[0x4],r8
800069b4:	c0 78       	rjmp	800069c2 <_malloc_r+0x2aa>
800069b6:	f0 c9 00 08 	sub	r9,r8,8
800069ba:	20 13       	sub	r3,1
800069bc:	70 08       	ld.w	r8,r8[0x0]
800069be:	12 38       	cp.w	r8,r9
800069c0:	cf 10       	breq	800069a2 <_malloc_r+0x28a>
800069c2:	a1 7b       	lsl	r11,0x1
800069c4:	68 18       	ld.w	r8,r4[0x4]
800069c6:	10 3b       	cp.w	r11,r8
800069c8:	e0 8b 00 0c 	brhi	800069e0 <_malloc_r+0x2c8>
800069cc:	58 0b       	cp.w	r11,0
800069ce:	c0 90       	breq	800069e0 <_malloc_r+0x2c8>
800069d0:	04 93       	mov	r3,r2
800069d2:	c0 38       	rjmp	800069d8 <_malloc_r+0x2c0>
800069d4:	2f c3       	sub	r3,-4
800069d6:	a1 7b       	lsl	r11,0x1
800069d8:	f7 e8 00 09 	and	r9,r11,r8
800069dc:	ca 81       	brne	8000692c <_malloc_r+0x214>
800069de:	cf bb       	rjmp	800069d4 <_malloc_r+0x2bc>
800069e0:	68 23       	ld.w	r3,r4[0x8]
800069e2:	66 12       	ld.w	r2,r3[0x4]
800069e4:	e0 12 ff fc 	andl	r2,0xfffc
800069e8:	0e 32       	cp.w	r2,r7
800069ea:	5f 39       	srlo	r9
800069ec:	e4 07 01 08 	sub	r8,r2,r7
800069f0:	58 f8       	cp.w	r8,15
800069f2:	5f aa       	srle	r10
800069f4:	f5 e9 10 09 	or	r9,r10,r9
800069f8:	e0 80 00 9a 	breq	80006b2c <_malloc_r+0x414>
800069fc:	e0 68 06 10 	mov	r8,1552
80006a00:	70 01       	ld.w	r1,r8[0x0]
80006a02:	e0 68 05 10 	mov	r8,1296
80006a06:	2f 01       	sub	r1,-16
80006a08:	70 08       	ld.w	r8,r8[0x0]
80006a0a:	0e 01       	add	r1,r7
80006a0c:	5b f8       	cp.w	r8,-1
80006a0e:	c0 40       	breq	80006a16 <_malloc_r+0x2fe>
80006a10:	28 11       	sub	r1,-127
80006a12:	e0 11 ff 80 	andl	r1,0xff80
80006a16:	02 9b       	mov	r11,r1
80006a18:	0a 9c       	mov	r12,r5
80006a1a:	e0 a0 05 39 	rcall	8000748c <_sbrk_r>
80006a1e:	18 96       	mov	r6,r12
80006a20:	5b fc       	cp.w	r12,-1
80006a22:	c7 50       	breq	80006b0c <_malloc_r+0x3f4>
80006a24:	e6 02 00 08 	add	r8,r3,r2
80006a28:	10 3c       	cp.w	r12,r8
80006a2a:	c0 32       	brcc	80006a30 <_malloc_r+0x318>
80006a2c:	08 33       	cp.w	r3,r4
80006a2e:	c6 f1       	brne	80006b0c <_malloc_r+0x3f4>
80006a30:	e0 6a 06 14 	mov	r10,1556
80006a34:	74 09       	ld.w	r9,r10[0x0]
80006a36:	e2 09 00 09 	add	r9,r1,r9
80006a3a:	95 09       	st.w	r10[0x0],r9
80006a3c:	10 36       	cp.w	r6,r8
80006a3e:	c0 a1       	brne	80006a52 <_malloc_r+0x33a>
80006a40:	f5 d6 c0 07 	bfextu	r10,r6,0x0,0x7
80006a44:	c0 71       	brne	80006a52 <_malloc_r+0x33a>
80006a46:	e2 02 00 02 	add	r2,r1,r2
80006a4a:	68 28       	ld.w	r8,r4[0x8]
80006a4c:	a1 a2       	sbr	r2,0x0
80006a4e:	91 12       	st.w	r8[0x4],r2
80006a50:	c4 f8       	rjmp	80006aee <_malloc_r+0x3d6>
80006a52:	e0 6a 05 10 	mov	r10,1296
80006a56:	74 0b       	ld.w	r11,r10[0x0]
80006a58:	5b fb       	cp.w	r11,-1
80006a5a:	c0 31       	brne	80006a60 <_malloc_r+0x348>
80006a5c:	95 06       	st.w	r10[0x0],r6
80006a5e:	c0 78       	rjmp	80006a6c <_malloc_r+0x354>
80006a60:	ec 09 00 09 	add	r9,r6,r9
80006a64:	e0 6a 06 14 	mov	r10,1556
80006a68:	10 19       	sub	r9,r8
80006a6a:	95 09       	st.w	r10[0x0],r9
80006a6c:	f1 d6 c0 03 	bfextu	r8,r6,0x0,0x3
80006a70:	f0 09 11 08 	rsub	r9,r8,8
80006a74:	58 08       	cp.w	r8,0
80006a76:	f2 08 17 10 	movne	r8,r9
80006a7a:	ed d8 e1 06 	addne	r6,r6,r8
80006a7e:	28 08       	sub	r8,-128
80006a80:	ec 01 00 01 	add	r1,r6,r1
80006a84:	0a 9c       	mov	r12,r5
80006a86:	e3 d1 c0 07 	bfextu	r1,r1,0x0,0x7
80006a8a:	f0 01 01 01 	sub	r1,r8,r1
80006a8e:	02 9b       	mov	r11,r1
80006a90:	e0 a0 04 fe 	rcall	8000748c <_sbrk_r>
80006a94:	e0 68 06 14 	mov	r8,1556
80006a98:	5b fc       	cp.w	r12,-1
80006a9a:	ec 0c 17 00 	moveq	r12,r6
80006a9e:	f9 b1 00 00 	moveq	r1,0
80006aa2:	70 09       	ld.w	r9,r8[0x0]
80006aa4:	0c 1c       	sub	r12,r6
80006aa6:	89 26       	st.w	r4[0x8],r6
80006aa8:	02 0c       	add	r12,r1
80006aaa:	12 01       	add	r1,r9
80006aac:	a1 ac       	sbr	r12,0x0
80006aae:	91 01       	st.w	r8[0x0],r1
80006ab0:	8d 1c       	st.w	r6[0x4],r12
80006ab2:	08 33       	cp.w	r3,r4
80006ab4:	c1 d0       	breq	80006aee <_malloc_r+0x3d6>
80006ab6:	58 f2       	cp.w	r2,15
80006ab8:	e0 8b 00 05 	brhi	80006ac2 <_malloc_r+0x3aa>
80006abc:	30 18       	mov	r8,1
80006abe:	8d 18       	st.w	r6[0x4],r8
80006ac0:	c2 68       	rjmp	80006b0c <_malloc_r+0x3f4>
80006ac2:	30 59       	mov	r9,5
80006ac4:	20 c2       	sub	r2,12
80006ac6:	e0 12 ff f8 	andl	r2,0xfff8
80006aca:	e6 02 00 08 	add	r8,r3,r2
80006ace:	91 29       	st.w	r8[0x8],r9
80006ad0:	91 19       	st.w	r8[0x4],r9
80006ad2:	66 18       	ld.w	r8,r3[0x4]
80006ad4:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80006ad8:	e5 e8 10 08 	or	r8,r2,r8
80006adc:	87 18       	st.w	r3[0x4],r8
80006ade:	58 f2       	cp.w	r2,15
80006ae0:	e0 88 00 07 	brls	80006aee <_malloc_r+0x3d6>
80006ae4:	e6 cb ff f8 	sub	r11,r3,-8
80006ae8:	0a 9c       	mov	r12,r5
80006aea:	fe b0 fb 71 	rcall	800061cc <_free_r>
80006aee:	e0 69 06 0c 	mov	r9,1548
80006af2:	72 0a       	ld.w	r10,r9[0x0]
80006af4:	e0 68 06 14 	mov	r8,1556
80006af8:	70 08       	ld.w	r8,r8[0x0]
80006afa:	14 38       	cp.w	r8,r10
80006afc:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80006b00:	e0 69 06 08 	mov	r9,1544
80006b04:	72 0a       	ld.w	r10,r9[0x0]
80006b06:	14 38       	cp.w	r8,r10
80006b08:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80006b0c:	68 28       	ld.w	r8,r4[0x8]
80006b0e:	70 18       	ld.w	r8,r8[0x4]
80006b10:	e0 18 ff fc 	andl	r8,0xfffc
80006b14:	0e 38       	cp.w	r8,r7
80006b16:	5f 39       	srlo	r9
80006b18:	0e 18       	sub	r8,r7
80006b1a:	58 f8       	cp.w	r8,15
80006b1c:	5f aa       	srle	r10
80006b1e:	f5 e9 10 09 	or	r9,r10,r9
80006b22:	c0 50       	breq	80006b2c <_malloc_r+0x414>
80006b24:	0a 9c       	mov	r12,r5
80006b26:	c4 3c       	rcall	80006bac <__malloc_unlock>
80006b28:	d8 3a       	popm	r0-r7,pc,r12=0
80006b2a:	d7 03       	nop
80006b2c:	68 26       	ld.w	r6,r4[0x8]
80006b2e:	a1 a8       	sbr	r8,0x0
80006b30:	0e 99       	mov	r9,r7
80006b32:	a1 a9       	sbr	r9,0x0
80006b34:	8d 19       	st.w	r6[0x4],r9
80006b36:	ec 07 00 07 	add	r7,r6,r7
80006b3a:	0a 9c       	mov	r12,r5
80006b3c:	89 27       	st.w	r4[0x8],r7
80006b3e:	8f 18       	st.w	r7[0x4],r8
80006b40:	c3 6c       	rcall	80006bac <__malloc_unlock>
80006b42:	ec cc ff f8 	sub	r12,r6,-8
80006b46:	d8 32       	popm	r0-r7,pc

80006b48 <memchr>:
80006b48:	f7 db c0 08 	bfextu	r11,r11,0x0,0x8
80006b4c:	c0 68       	rjmp	80006b58 <memchr+0x10>
80006b4e:	20 1a       	sub	r10,1
80006b50:	19 88       	ld.ub	r8,r12[0x0]
80006b52:	16 38       	cp.w	r8,r11
80006b54:	5e 0c       	reteq	r12
80006b56:	2f fc       	sub	r12,-1
80006b58:	58 0a       	cp.w	r10,0
80006b5a:	cf a1       	brne	80006b4e <memchr+0x6>
80006b5c:	5e fa       	retal	r10

80006b5e <memmove>:
80006b5e:	d4 01       	pushm	lr
80006b60:	18 3b       	cp.w	r11,r12
80006b62:	c1 92       	brcc	80006b94 <memmove+0x36>
80006b64:	f6 0a 00 09 	add	r9,r11,r10
80006b68:	12 3c       	cp.w	r12,r9
80006b6a:	c1 52       	brcc	80006b94 <memmove+0x36>
80006b6c:	f8 0a 00 0b 	add	r11,r12,r10
80006b70:	30 08       	mov	r8,0
80006b72:	c0 68       	rjmp	80006b7e <memmove+0x20>
80006b74:	f2 08 07 0e 	ld.ub	lr,r9[r8]
80006b78:	20 1a       	sub	r10,1
80006b7a:	f6 08 0b 0e 	st.b	r11[r8],lr
80006b7e:	20 18       	sub	r8,1
80006b80:	58 0a       	cp.w	r10,0
80006b82:	cf 91       	brne	80006b74 <memmove+0x16>
80006b84:	d8 02       	popm	pc
80006b86:	f6 08 07 09 	ld.ub	r9,r11[r8]
80006b8a:	20 1a       	sub	r10,1
80006b8c:	f8 08 0b 09 	st.b	r12[r8],r9
80006b90:	2f f8       	sub	r8,-1
80006b92:	c0 28       	rjmp	80006b96 <memmove+0x38>
80006b94:	30 08       	mov	r8,0
80006b96:	58 0a       	cp.w	r10,0
80006b98:	cf 71       	brne	80006b86 <memmove+0x28>
80006b9a:	d8 02       	popm	pc

80006b9c <memset>:
80006b9c:	18 98       	mov	r8,r12
80006b9e:	c0 38       	rjmp	80006ba4 <memset+0x8>
80006ba0:	10 cb       	st.b	r8++,r11
80006ba2:	20 1a       	sub	r10,1
80006ba4:	58 0a       	cp.w	r10,0
80006ba6:	cf d1       	brne	80006ba0 <memset+0x4>
80006ba8:	5e fc       	retal	r12

80006baa <__malloc_lock>:
80006baa:	5e fc       	retal	r12

80006bac <__malloc_unlock>:
80006bac:	5e fc       	retal	r12

80006bae <__hi0bits>:
80006bae:	18 98       	mov	r8,r12
80006bb0:	e0 1c 00 00 	andl	r12,0x0
80006bb4:	f0 09 15 10 	lsl	r9,r8,0x10
80006bb8:	58 0c       	cp.w	r12,0
80006bba:	f2 08 17 00 	moveq	r8,r9
80006bbe:	f9 bc 00 10 	moveq	r12,16
80006bc2:	f9 bc 01 00 	movne	r12,0
80006bc6:	10 9a       	mov	r10,r8
80006bc8:	f0 09 15 08 	lsl	r9,r8,0x8
80006bcc:	e6 1a ff 00 	andh	r10,0xff00,COH
80006bd0:	f7 bc 00 f8 	subeq	r12,-8
80006bd4:	f2 08 17 00 	moveq	r8,r9
80006bd8:	10 9a       	mov	r10,r8
80006bda:	f0 09 15 04 	lsl	r9,r8,0x4
80006bde:	e6 1a f0 00 	andh	r10,0xf000,COH
80006be2:	f7 bc 00 fc 	subeq	r12,-4
80006be6:	f2 08 17 00 	moveq	r8,r9
80006bea:	10 9a       	mov	r10,r8
80006bec:	f0 09 15 02 	lsl	r9,r8,0x2
80006bf0:	e6 1a c0 00 	andh	r10,0xc000,COH
80006bf4:	f7 bc 00 fe 	subeq	r12,-2
80006bf8:	f2 08 17 00 	moveq	r8,r9
80006bfc:	58 08       	cp.w	r8,0
80006bfe:	5e 5c       	retlt	r12
80006c00:	ed b8 00 1e 	bld	r8,0x1e
80006c04:	f9 bc 01 20 	movne	r12,32
80006c08:	f7 bc 00 ff 	subeq	r12,-1
80006c0c:	5e fc       	retal	r12

80006c0e <__lo0bits>:
80006c0e:	18 99       	mov	r9,r12
80006c10:	78 08       	ld.w	r8,r12[0x0]
80006c12:	f9 d8 c0 03 	bfextu	r12,r8,0x0,0x3
80006c16:	c1 50       	breq	80006c40 <__lo0bits+0x32>
80006c18:	ed b8 00 00 	bld	r8,0x0
80006c1c:	c0 21       	brne	80006c20 <__lo0bits+0x12>
80006c1e:	5e fd       	retal	0
80006c20:	10 9b       	mov	r11,r8
80006c22:	f0 0a 16 01 	lsr	r10,r8,0x1
80006c26:	e2 1b 00 02 	andl	r11,0x2,COH
80006c2a:	a3 88       	lsr	r8,0x2
80006c2c:	58 0b       	cp.w	r11,0
80006c2e:	f3 fa 1a 00 	st.wne	r9[0x0],r10
80006c32:	f9 bc 01 01 	movne	r12,1
80006c36:	f3 f8 0a 00 	st.weq	r9[0x0],r8
80006c3a:	f9 bc 00 02 	moveq	r12,2
80006c3e:	5e fc       	retal	r12
80006c40:	f5 d8 c0 10 	bfextu	r10,r8,0x0,0x10
80006c44:	f0 0b 16 10 	lsr	r11,r8,0x10
80006c48:	58 0a       	cp.w	r10,0
80006c4a:	f6 08 17 00 	moveq	r8,r11
80006c4e:	f9 bc 00 10 	moveq	r12,16
80006c52:	f7 d8 c0 08 	bfextu	r11,r8,0x0,0x8
80006c56:	f0 0a 16 08 	lsr	r10,r8,0x8
80006c5a:	58 0b       	cp.w	r11,0
80006c5c:	f7 bc 00 f8 	subeq	r12,-8
80006c60:	f4 08 17 00 	moveq	r8,r10
80006c64:	f7 d8 c0 04 	bfextu	r11,r8,0x0,0x4
80006c68:	f0 0a 16 04 	lsr	r10,r8,0x4
80006c6c:	58 0b       	cp.w	r11,0
80006c6e:	f7 bc 00 fc 	subeq	r12,-4
80006c72:	f4 08 17 00 	moveq	r8,r10
80006c76:	f7 d8 c0 02 	bfextu	r11,r8,0x0,0x2
80006c7a:	f0 0a 16 02 	lsr	r10,r8,0x2
80006c7e:	58 0b       	cp.w	r11,0
80006c80:	f7 bc 00 fe 	subeq	r12,-2
80006c84:	f4 08 17 00 	moveq	r8,r10
80006c88:	ed b8 00 00 	bld	r8,0x0
80006c8c:	c0 60       	breq	80006c98 <__lo0bits+0x8a>
80006c8e:	a1 98       	lsr	r8,0x1
80006c90:	c0 31       	brne	80006c96 <__lo0bits+0x88>
80006c92:	32 0c       	mov	r12,32
80006c94:	5e fc       	retal	r12
80006c96:	2f fc       	sub	r12,-1
80006c98:	93 08       	st.w	r9[0x0],r8
80006c9a:	5e fc       	retal	r12

80006c9c <__mcmp>:
80006c9c:	d4 01       	pushm	lr
80006c9e:	18 98       	mov	r8,r12
80006ca0:	76 49       	ld.w	r9,r11[0x10]
80006ca2:	78 4c       	ld.w	r12,r12[0x10]
80006ca4:	12 1c       	sub	r12,r9
80006ca6:	c1 31       	brne	80006ccc <__mcmp+0x30>
80006ca8:	2f b9       	sub	r9,-5
80006caa:	a3 69       	lsl	r9,0x2
80006cac:	12 0b       	add	r11,r9
80006cae:	f0 09 00 09 	add	r9,r8,r9
80006cb2:	2e c8       	sub	r8,-20
80006cb4:	13 4e       	ld.w	lr,--r9
80006cb6:	17 4a       	ld.w	r10,--r11
80006cb8:	14 3e       	cp.w	lr,r10
80006cba:	c0 60       	breq	80006cc6 <__mcmp+0x2a>
80006cbc:	f9 bc 03 ff 	movlo	r12,-1
80006cc0:	f9 bc 02 01 	movhs	r12,1
80006cc4:	d8 02       	popm	pc
80006cc6:	10 39       	cp.w	r9,r8
80006cc8:	fe 9b ff f6 	brhi	80006cb4 <__mcmp+0x18>
80006ccc:	d8 02       	popm	pc
80006cce:	d7 03       	nop

80006cd0 <_Bfree>:
80006cd0:	d4 21       	pushm	r4-r7,lr
80006cd2:	18 97       	mov	r7,r12
80006cd4:	16 95       	mov	r5,r11
80006cd6:	78 96       	ld.w	r6,r12[0x24]
80006cd8:	58 06       	cp.w	r6,0
80006cda:	c0 91       	brne	80006cec <_Bfree+0x1c>
80006cdc:	31 0c       	mov	r12,16
80006cde:	fe b0 fd 15 	rcall	80006708 <malloc>
80006ce2:	99 36       	st.w	r12[0xc],r6
80006ce4:	8f 9c       	st.w	r7[0x24],r12
80006ce6:	99 16       	st.w	r12[0x4],r6
80006ce8:	99 26       	st.w	r12[0x8],r6
80006cea:	99 06       	st.w	r12[0x0],r6
80006cec:	58 05       	cp.w	r5,0
80006cee:	c0 90       	breq	80006d00 <_Bfree+0x30>
80006cf0:	6a 19       	ld.w	r9,r5[0x4]
80006cf2:	6e 98       	ld.w	r8,r7[0x24]
80006cf4:	70 38       	ld.w	r8,r8[0xc]
80006cf6:	f0 09 03 2a 	ld.w	r10,r8[r9<<0x2]
80006cfa:	8b 0a       	st.w	r5[0x0],r10
80006cfc:	f0 09 09 25 	st.w	r8[r9<<0x2],r5
80006d00:	d8 22       	popm	r4-r7,pc
80006d02:	d7 03       	nop

80006d04 <_Balloc>:
80006d04:	d4 21       	pushm	r4-r7,lr
80006d06:	18 97       	mov	r7,r12
80006d08:	16 96       	mov	r6,r11
80006d0a:	78 95       	ld.w	r5,r12[0x24]
80006d0c:	58 05       	cp.w	r5,0
80006d0e:	c0 91       	brne	80006d20 <_Balloc+0x1c>
80006d10:	31 0c       	mov	r12,16
80006d12:	fe b0 fc fb 	rcall	80006708 <malloc>
80006d16:	99 35       	st.w	r12[0xc],r5
80006d18:	8f 9c       	st.w	r7[0x24],r12
80006d1a:	99 15       	st.w	r12[0x4],r5
80006d1c:	99 25       	st.w	r12[0x8],r5
80006d1e:	99 05       	st.w	r12[0x0],r5
80006d20:	6e 95       	ld.w	r5,r7[0x24]
80006d22:	6a 38       	ld.w	r8,r5[0xc]
80006d24:	58 08       	cp.w	r8,0
80006d26:	c0 b1       	brne	80006d3c <_Balloc+0x38>
80006d28:	31 0a       	mov	r10,16
80006d2a:	30 4b       	mov	r11,4
80006d2c:	0e 9c       	mov	r12,r7
80006d2e:	e0 a0 04 93 	rcall	80007654 <_calloc_r>
80006d32:	8b 3c       	st.w	r5[0xc],r12
80006d34:	6e 98       	ld.w	r8,r7[0x24]
80006d36:	70 3c       	ld.w	r12,r8[0xc]
80006d38:	58 0c       	cp.w	r12,0
80006d3a:	c1 b0       	breq	80006d70 <_Balloc+0x6c>
80006d3c:	6e 98       	ld.w	r8,r7[0x24]
80006d3e:	70 38       	ld.w	r8,r8[0xc]
80006d40:	f0 06 00 28 	add	r8,r8,r6<<0x2
80006d44:	70 0c       	ld.w	r12,r8[0x0]
80006d46:	58 0c       	cp.w	r12,0
80006d48:	c0 40       	breq	80006d50 <_Balloc+0x4c>
80006d4a:	78 09       	ld.w	r9,r12[0x0]
80006d4c:	91 09       	st.w	r8[0x0],r9
80006d4e:	c0 e8       	rjmp	80006d6a <_Balloc+0x66>
80006d50:	0e 9c       	mov	r12,r7
80006d52:	30 17       	mov	r7,1
80006d54:	0e 9b       	mov	r11,r7
80006d56:	ee 06 09 47 	lsl	r7,r7,r6
80006d5a:	ee ca ff fb 	sub	r10,r7,-5
80006d5e:	a3 6a       	lsl	r10,0x2
80006d60:	e0 a0 04 7a 	rcall	80007654 <_calloc_r>
80006d64:	c0 60       	breq	80006d70 <_Balloc+0x6c>
80006d66:	99 16       	st.w	r12[0x4],r6
80006d68:	99 27       	st.w	r12[0x8],r7
80006d6a:	30 08       	mov	r8,0
80006d6c:	99 38       	st.w	r12[0xc],r8
80006d6e:	99 48       	st.w	r12[0x10],r8
80006d70:	d8 22       	popm	r4-r7,pc
80006d72:	d7 03       	nop

80006d74 <__d2b>:
80006d74:	d4 31       	pushm	r0-r7,lr
80006d76:	20 2d       	sub	sp,8
80006d78:	16 93       	mov	r3,r11
80006d7a:	12 96       	mov	r6,r9
80006d7c:	10 95       	mov	r5,r8
80006d7e:	14 92       	mov	r2,r10
80006d80:	30 1b       	mov	r11,1
80006d82:	cc 1f       	rcall	80006d04 <_Balloc>
80006d84:	f3 d3 c0 14 	bfextu	r9,r3,0x0,0x14
80006d88:	50 09       	stdsp	sp[0x0],r9
80006d8a:	f1 d3 c0 1f 	bfextu	r8,r3,0x0,0x1f
80006d8e:	b5 a9       	sbr	r9,0x14
80006d90:	f0 01 16 14 	lsr	r1,r8,0x14
80006d94:	fb f9 1a 00 	st.wne	sp[0x0],r9
80006d98:	18 94       	mov	r4,r12
80006d9a:	58 02       	cp.w	r2,0
80006d9c:	c1 d0       	breq	80006dd6 <__d2b+0x62>
80006d9e:	fa cc ff f8 	sub	r12,sp,-8
80006da2:	18 d2       	st.w	--r12,r2
80006da4:	c3 5f       	rcall	80006c0e <__lo0bits>
80006da6:	40 18       	lddsp	r8,sp[0x4]
80006da8:	c0 d0       	breq	80006dc2 <__d2b+0x4e>
80006daa:	40 09       	lddsp	r9,sp[0x0]
80006dac:	f8 0a 11 20 	rsub	r10,r12,32
80006db0:	f2 0a 09 4a 	lsl	r10,r9,r10
80006db4:	f5 e8 10 08 	or	r8,r10,r8
80006db8:	89 58       	st.w	r4[0x14],r8
80006dba:	f2 0c 0a 49 	lsr	r9,r9,r12
80006dbe:	50 09       	stdsp	sp[0x0],r9
80006dc0:	c0 28       	rjmp	80006dc4 <__d2b+0x50>
80006dc2:	89 58       	st.w	r4[0x14],r8
80006dc4:	40 08       	lddsp	r8,sp[0x0]
80006dc6:	58 08       	cp.w	r8,0
80006dc8:	f9 b3 01 02 	movne	r3,2
80006dcc:	f9 b3 00 01 	moveq	r3,1
80006dd0:	89 68       	st.w	r4[0x18],r8
80006dd2:	89 43       	st.w	r4[0x10],r3
80006dd4:	c0 88       	rjmp	80006de4 <__d2b+0x70>
80006dd6:	1a 9c       	mov	r12,sp
80006dd8:	c1 bf       	rcall	80006c0e <__lo0bits>
80006dda:	30 13       	mov	r3,1
80006ddc:	40 08       	lddsp	r8,sp[0x0]
80006dde:	2e 0c       	sub	r12,-32
80006de0:	89 43       	st.w	r4[0x10],r3
80006de2:	89 58       	st.w	r4[0x14],r8
80006de4:	58 01       	cp.w	r1,0
80006de6:	c0 90       	breq	80006df8 <__d2b+0x84>
80006de8:	e2 c1 04 33 	sub	r1,r1,1075
80006dec:	18 01       	add	r1,r12
80006dee:	8d 01       	st.w	r6[0x0],r1
80006df0:	f8 0c 11 35 	rsub	r12,r12,53
80006df4:	8b 0c       	st.w	r5[0x0],r12
80006df6:	c0 c8       	rjmp	80006e0e <__d2b+0x9a>
80006df8:	e6 c8 ff fc 	sub	r8,r3,-4
80006dfc:	f8 cc 04 32 	sub	r12,r12,1074
80006e00:	a5 73       	lsl	r3,0x5
80006e02:	8d 0c       	st.w	r6[0x0],r12
80006e04:	e8 08 03 2c 	ld.w	r12,r4[r8<<0x2]
80006e08:	cd 3e       	rcall	80006bae <__hi0bits>
80006e0a:	18 13       	sub	r3,r12
80006e0c:	8b 03       	st.w	r5[0x0],r3
80006e0e:	08 9c       	mov	r12,r4
80006e10:	2f ed       	sub	sp,-8
80006e12:	d8 32       	popm	r0-r7,pc

80006e14 <__mdiff>:
80006e14:	d4 31       	pushm	r0-r7,lr
80006e16:	74 48       	ld.w	r8,r10[0x10]
80006e18:	76 45       	ld.w	r5,r11[0x10]
80006e1a:	16 97       	mov	r7,r11
80006e1c:	14 96       	mov	r6,r10
80006e1e:	10 15       	sub	r5,r8
80006e20:	c1 31       	brne	80006e46 <__mdiff+0x32>
80006e22:	2f b8       	sub	r8,-5
80006e24:	ee ce ff ec 	sub	lr,r7,-20
80006e28:	a3 68       	lsl	r8,0x2
80006e2a:	f4 08 00 0b 	add	r11,r10,r8
80006e2e:	ee 08 00 08 	add	r8,r7,r8
80006e32:	11 4a       	ld.w	r10,--r8
80006e34:	17 49       	ld.w	r9,--r11
80006e36:	12 3a       	cp.w	r10,r9
80006e38:	c0 30       	breq	80006e3e <__mdiff+0x2a>
80006e3a:	c0 e2       	brcc	80006e56 <__mdiff+0x42>
80006e3c:	c0 78       	rjmp	80006e4a <__mdiff+0x36>
80006e3e:	1c 38       	cp.w	r8,lr
80006e40:	fe 9b ff f9 	brhi	80006e32 <__mdiff+0x1e>
80006e44:	c4 98       	rjmp	80006ed6 <__mdiff+0xc2>
80006e46:	58 05       	cp.w	r5,0
80006e48:	c0 64       	brge	80006e54 <__mdiff+0x40>
80006e4a:	0e 98       	mov	r8,r7
80006e4c:	30 15       	mov	r5,1
80006e4e:	0c 97       	mov	r7,r6
80006e50:	10 96       	mov	r6,r8
80006e52:	c0 28       	rjmp	80006e56 <__mdiff+0x42>
80006e54:	30 05       	mov	r5,0
80006e56:	6e 1b       	ld.w	r11,r7[0x4]
80006e58:	c5 6f       	rcall	80006d04 <_Balloc>
80006e5a:	6e 49       	ld.w	r9,r7[0x10]
80006e5c:	6c 44       	ld.w	r4,r6[0x10]
80006e5e:	99 35       	st.w	r12[0xc],r5
80006e60:	2f b4       	sub	r4,-5
80006e62:	f2 c5 ff fb 	sub	r5,r9,-5
80006e66:	ec 04 00 24 	add	r4,r6,r4<<0x2
80006e6a:	ee 05 00 25 	add	r5,r7,r5<<0x2
80006e6e:	2e c6       	sub	r6,-20
80006e70:	2e c7       	sub	r7,-20
80006e72:	f8 c8 ff ec 	sub	r8,r12,-20
80006e76:	30 0a       	mov	r10,0
80006e78:	0f 0e       	ld.w	lr,r7++
80006e7a:	0d 0b       	ld.w	r11,r6++
80006e7c:	fc 02 16 10 	lsr	r2,lr,0x10
80006e80:	f6 03 16 10 	lsr	r3,r11,0x10
80006e84:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80006e88:	e4 03 01 03 	sub	r3,r2,r3
80006e8c:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80006e90:	fc 0b 01 0b 	sub	r11,lr,r11
80006e94:	f6 0a 00 0a 	add	r10,r11,r10
80006e98:	b0 1a       	st.h	r8[0x2],r10
80006e9a:	b1 4a       	asr	r10,0x10
80006e9c:	e6 0a 00 0a 	add	r10,r3,r10
80006ea0:	b0 0a       	st.h	r8[0x0],r10
80006ea2:	2f c8       	sub	r8,-4
80006ea4:	b1 4a       	asr	r10,0x10
80006ea6:	08 36       	cp.w	r6,r4
80006ea8:	ce 83       	brcs	80006e78 <__mdiff+0x64>
80006eaa:	c0 d8       	rjmp	80006ec4 <__mdiff+0xb0>
80006eac:	0f 0b       	ld.w	r11,r7++
80006eae:	f6 0e 16 10 	lsr	lr,r11,0x10
80006eb2:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80006eb6:	16 0a       	add	r10,r11
80006eb8:	b0 1a       	st.h	r8[0x2],r10
80006eba:	b1 4a       	asr	r10,0x10
80006ebc:	1c 0a       	add	r10,lr
80006ebe:	b0 0a       	st.h	r8[0x0],r10
80006ec0:	2f c8       	sub	r8,-4
80006ec2:	b1 4a       	asr	r10,0x10
80006ec4:	0a 37       	cp.w	r7,r5
80006ec6:	cf 33       	brcs	80006eac <__mdiff+0x98>
80006ec8:	c0 28       	rjmp	80006ecc <__mdiff+0xb8>
80006eca:	20 19       	sub	r9,1
80006ecc:	11 4a       	ld.w	r10,--r8
80006ece:	58 0a       	cp.w	r10,0
80006ed0:	cf d0       	breq	80006eca <__mdiff+0xb6>
80006ed2:	99 49       	st.w	r12[0x10],r9
80006ed4:	d8 32       	popm	r0-r7,pc
80006ed6:	30 0b       	mov	r11,0
80006ed8:	c1 6f       	rcall	80006d04 <_Balloc>
80006eda:	30 18       	mov	r8,1
80006edc:	99 48       	st.w	r12[0x10],r8
80006ede:	30 08       	mov	r8,0
80006ee0:	99 58       	st.w	r12[0x14],r8
80006ee2:	d8 32       	popm	r0-r7,pc

80006ee4 <__lshift>:
80006ee4:	d4 31       	pushm	r0-r7,lr
80006ee6:	16 97       	mov	r7,r11
80006ee8:	76 46       	ld.w	r6,r11[0x10]
80006eea:	f4 02 14 05 	asr	r2,r10,0x5
80006eee:	2f f6       	sub	r6,-1
80006ef0:	14 93       	mov	r3,r10
80006ef2:	18 94       	mov	r4,r12
80006ef4:	04 06       	add	r6,r2
80006ef6:	76 1b       	ld.w	r11,r11[0x4]
80006ef8:	6e 28       	ld.w	r8,r7[0x8]
80006efa:	c0 38       	rjmp	80006f00 <__lshift+0x1c>
80006efc:	2f fb       	sub	r11,-1
80006efe:	a1 78       	lsl	r8,0x1
80006f00:	10 36       	cp.w	r6,r8
80006f02:	fe 99 ff fd 	brgt	80006efc <__lshift+0x18>
80006f06:	08 9c       	mov	r12,r4
80006f08:	cf ee       	rcall	80006d04 <_Balloc>
80006f0a:	30 09       	mov	r9,0
80006f0c:	18 95       	mov	r5,r12
80006f0e:	f8 c8 ff ec 	sub	r8,r12,-20
80006f12:	12 9a       	mov	r10,r9
80006f14:	c0 38       	rjmp	80006f1a <__lshift+0x36>
80006f16:	10 aa       	st.w	r8++,r10
80006f18:	2f f9       	sub	r9,-1
80006f1a:	04 39       	cp.w	r9,r2
80006f1c:	cf d5       	brlt	80006f16 <__lshift+0x32>
80006f1e:	6e 4b       	ld.w	r11,r7[0x10]
80006f20:	e7 d3 c0 05 	bfextu	r3,r3,0x0,0x5
80006f24:	2f bb       	sub	r11,-5
80006f26:	ee c9 ff ec 	sub	r9,r7,-20
80006f2a:	ee 0b 00 2b 	add	r11,r7,r11<<0x2
80006f2e:	58 03       	cp.w	r3,0
80006f30:	c1 30       	breq	80006f56 <__lshift+0x72>
80006f32:	e6 0c 11 20 	rsub	r12,r3,32
80006f36:	30 0a       	mov	r10,0
80006f38:	72 02       	ld.w	r2,r9[0x0]
80006f3a:	e4 03 09 42 	lsl	r2,r2,r3
80006f3e:	04 4a       	or	r10,r2
80006f40:	10 aa       	st.w	r8++,r10
80006f42:	13 0a       	ld.w	r10,r9++
80006f44:	f4 0c 0a 4a 	lsr	r10,r10,r12
80006f48:	16 39       	cp.w	r9,r11
80006f4a:	cf 73       	brcs	80006f38 <__lshift+0x54>
80006f4c:	91 0a       	st.w	r8[0x0],r10
80006f4e:	58 0a       	cp.w	r10,0
80006f50:	c0 70       	breq	80006f5e <__lshift+0x7a>
80006f52:	2f f6       	sub	r6,-1
80006f54:	c0 58       	rjmp	80006f5e <__lshift+0x7a>
80006f56:	13 0a       	ld.w	r10,r9++
80006f58:	10 aa       	st.w	r8++,r10
80006f5a:	16 39       	cp.w	r9,r11
80006f5c:	cf d3       	brcs	80006f56 <__lshift+0x72>
80006f5e:	08 9c       	mov	r12,r4
80006f60:	20 16       	sub	r6,1
80006f62:	0e 9b       	mov	r11,r7
80006f64:	8b 46       	st.w	r5[0x10],r6
80006f66:	cb 5e       	rcall	80006cd0 <_Bfree>
80006f68:	0a 9c       	mov	r12,r5
80006f6a:	d8 32       	popm	r0-r7,pc

80006f6c <__multiply>:
80006f6c:	d4 31       	pushm	r0-r7,lr
80006f6e:	20 2d       	sub	sp,8
80006f70:	76 49       	ld.w	r9,r11[0x10]
80006f72:	74 48       	ld.w	r8,r10[0x10]
80006f74:	16 96       	mov	r6,r11
80006f76:	14 95       	mov	r5,r10
80006f78:	10 39       	cp.w	r9,r8
80006f7a:	ec 08 17 50 	movlt	r8,r6
80006f7e:	ea 06 17 50 	movlt	r6,r5
80006f82:	f0 05 17 50 	movlt	r5,r8
80006f86:	6c 28       	ld.w	r8,r6[0x8]
80006f88:	76 43       	ld.w	r3,r11[0x10]
80006f8a:	74 42       	ld.w	r2,r10[0x10]
80006f8c:	76 1b       	ld.w	r11,r11[0x4]
80006f8e:	e4 03 00 07 	add	r7,r2,r3
80006f92:	10 37       	cp.w	r7,r8
80006f94:	f7 bb 09 ff 	subgt	r11,-1
80006f98:	cb 6e       	rcall	80006d04 <_Balloc>
80006f9a:	ee c4 ff fb 	sub	r4,r7,-5
80006f9e:	f8 c9 ff ec 	sub	r9,r12,-20
80006fa2:	f8 04 00 24 	add	r4,r12,r4<<0x2
80006fa6:	30 0a       	mov	r10,0
80006fa8:	12 98       	mov	r8,r9
80006faa:	c0 28       	rjmp	80006fae <__multiply+0x42>
80006fac:	10 aa       	st.w	r8++,r10
80006fae:	08 38       	cp.w	r8,r4
80006fb0:	cf e3       	brcs	80006fac <__multiply+0x40>
80006fb2:	2f b3       	sub	r3,-5
80006fb4:	2f b2       	sub	r2,-5
80006fb6:	ec 03 00 23 	add	r3,r6,r3<<0x2
80006fba:	ea 02 00 22 	add	r2,r5,r2<<0x2
80006fbe:	ec cb ff ec 	sub	r11,r6,-20
80006fc2:	50 12       	stdsp	sp[0x4],r2
80006fc4:	ea ca ff ec 	sub	r10,r5,-20
80006fc8:	c4 48       	rjmp	80007050 <__multiply+0xe4>
80006fca:	94 95       	ld.uh	r5,r10[0x2]
80006fcc:	58 05       	cp.w	r5,0
80006fce:	c2 00       	breq	8000700e <__multiply+0xa2>
80006fd0:	12 98       	mov	r8,r9
80006fd2:	16 96       	mov	r6,r11
80006fd4:	30 0e       	mov	lr,0
80006fd6:	50 09       	stdsp	sp[0x0],r9
80006fd8:	0d 02       	ld.w	r2,r6++
80006fda:	e4 00 16 10 	lsr	r0,r2,0x10
80006fde:	70 01       	ld.w	r1,r8[0x0]
80006fe0:	70 09       	ld.w	r9,r8[0x0]
80006fe2:	b1 81       	lsr	r1,0x10
80006fe4:	e5 d2 c0 10 	bfextu	r2,r2,0x0,0x10
80006fe8:	e0 05 03 41 	mac	r1,r0,r5
80006fec:	ab 32       	mul	r2,r5
80006fee:	e1 d9 c0 10 	bfextu	r0,r9,0x0,0x10
80006ff2:	00 02       	add	r2,r0
80006ff4:	e4 0e 00 0e 	add	lr,r2,lr
80006ff8:	b0 1e       	st.h	r8[0x2],lr
80006ffa:	b1 8e       	lsr	lr,0x10
80006ffc:	1c 01       	add	r1,lr
80006ffe:	b0 01       	st.h	r8[0x0],r1
80007000:	e2 0e 16 10 	lsr	lr,r1,0x10
80007004:	2f c8       	sub	r8,-4
80007006:	06 36       	cp.w	r6,r3
80007008:	ce 83       	brcs	80006fd8 <__multiply+0x6c>
8000700a:	40 09       	lddsp	r9,sp[0x0]
8000700c:	91 0e       	st.w	r8[0x0],lr
8000700e:	94 86       	ld.uh	r6,r10[0x0]
80007010:	58 06       	cp.w	r6,0
80007012:	c1 d0       	breq	8000704c <__multiply+0xe0>
80007014:	72 02       	ld.w	r2,r9[0x0]
80007016:	12 98       	mov	r8,r9
80007018:	16 9e       	mov	lr,r11
8000701a:	30 05       	mov	r5,0
8000701c:	b0 12       	st.h	r8[0x2],r2
8000701e:	1d 01       	ld.w	r1,lr++
80007020:	90 82       	ld.uh	r2,r8[0x0]
80007022:	e1 d1 c0 10 	bfextu	r0,r1,0x0,0x10
80007026:	ad 30       	mul	r0,r6
80007028:	e0 02 00 02 	add	r2,r0,r2
8000702c:	e4 05 00 05 	add	r5,r2,r5
80007030:	b0 05       	st.h	r8[0x0],r5
80007032:	b1 85       	lsr	r5,0x10
80007034:	b1 81       	lsr	r1,0x10
80007036:	2f c8       	sub	r8,-4
80007038:	ad 31       	mul	r1,r6
8000703a:	90 92       	ld.uh	r2,r8[0x2]
8000703c:	e2 02 00 02 	add	r2,r1,r2
80007040:	0a 02       	add	r2,r5
80007042:	e4 05 16 10 	lsr	r5,r2,0x10
80007046:	06 3e       	cp.w	lr,r3
80007048:	ce a3       	brcs	8000701c <__multiply+0xb0>
8000704a:	91 02       	st.w	r8[0x0],r2
8000704c:	2f ca       	sub	r10,-4
8000704e:	2f c9       	sub	r9,-4
80007050:	40 18       	lddsp	r8,sp[0x4]
80007052:	10 3a       	cp.w	r10,r8
80007054:	cb b3       	brcs	80006fca <__multiply+0x5e>
80007056:	c0 28       	rjmp	8000705a <__multiply+0xee>
80007058:	20 17       	sub	r7,1
8000705a:	58 07       	cp.w	r7,0
8000705c:	e0 8a 00 05 	brle	80007066 <__multiply+0xfa>
80007060:	09 48       	ld.w	r8,--r4
80007062:	58 08       	cp.w	r8,0
80007064:	cf a0       	breq	80007058 <__multiply+0xec>
80007066:	99 47       	st.w	r12[0x10],r7
80007068:	2f ed       	sub	sp,-8
8000706a:	d8 32       	popm	r0-r7,pc

8000706c <__i2b>:
8000706c:	d4 21       	pushm	r4-r7,lr
8000706e:	16 97       	mov	r7,r11
80007070:	30 1b       	mov	r11,1
80007072:	c4 9e       	rcall	80006d04 <_Balloc>
80007074:	30 19       	mov	r9,1
80007076:	99 57       	st.w	r12[0x14],r7
80007078:	99 49       	st.w	r12[0x10],r9
8000707a:	d8 22       	popm	r4-r7,pc

8000707c <__multadd>:
8000707c:	d4 31       	pushm	r0-r7,lr
8000707e:	30 08       	mov	r8,0
80007080:	12 95       	mov	r5,r9
80007082:	16 97       	mov	r7,r11
80007084:	18 96       	mov	r6,r12
80007086:	76 44       	ld.w	r4,r11[0x10]
80007088:	f6 c9 ff ec 	sub	r9,r11,-20
8000708c:	72 0b       	ld.w	r11,r9[0x0]
8000708e:	f6 0c 16 10 	lsr	r12,r11,0x10
80007092:	f7 db c0 10 	bfextu	r11,r11,0x0,0x10
80007096:	f4 0c 02 4c 	mul	r12,r10,r12
8000709a:	f4 0b 03 45 	mac	r5,r10,r11
8000709e:	f7 d5 c0 10 	bfextu	r11,r5,0x0,0x10
800070a2:	b1 85       	lsr	r5,0x10
800070a4:	18 05       	add	r5,r12
800070a6:	ea 0c 15 10 	lsl	r12,r5,0x10
800070aa:	f8 0b 00 0b 	add	r11,r12,r11
800070ae:	12 ab       	st.w	r9++,r11
800070b0:	2f f8       	sub	r8,-1
800070b2:	b1 85       	lsr	r5,0x10
800070b4:	08 38       	cp.w	r8,r4
800070b6:	ce b5       	brlt	8000708c <__multadd+0x10>
800070b8:	58 05       	cp.w	r5,0
800070ba:	c1 c0       	breq	800070f2 <__multadd+0x76>
800070bc:	6e 28       	ld.w	r8,r7[0x8]
800070be:	10 34       	cp.w	r4,r8
800070c0:	c1 35       	brlt	800070e6 <__multadd+0x6a>
800070c2:	6e 1b       	ld.w	r11,r7[0x4]
800070c4:	0c 9c       	mov	r12,r6
800070c6:	2f fb       	sub	r11,-1
800070c8:	c1 ee       	rcall	80006d04 <_Balloc>
800070ca:	6e 4a       	ld.w	r10,r7[0x10]
800070cc:	ee cb ff f4 	sub	r11,r7,-12
800070d0:	18 93       	mov	r3,r12
800070d2:	2f ea       	sub	r10,-2
800070d4:	2f 4c       	sub	r12,-12
800070d6:	a3 6a       	lsl	r10,0x2
800070d8:	fe b0 de 36 	rcall	80002d44 <memcpy>
800070dc:	0e 9b       	mov	r11,r7
800070de:	0c 9c       	mov	r12,r6
800070e0:	fe b0 fd f8 	rcall	80006cd0 <_Bfree>
800070e4:	06 97       	mov	r7,r3
800070e6:	e8 c8 ff ff 	sub	r8,r4,-1
800070ea:	2f b4       	sub	r4,-5
800070ec:	8f 48       	st.w	r7[0x10],r8
800070ee:	ee 04 09 25 	st.w	r7[r4<<0x2],r5
800070f2:	0e 9c       	mov	r12,r7
800070f4:	d8 32       	popm	r0-r7,pc
800070f6:	d7 03       	nop

800070f8 <__pow5mult>:
800070f8:	d4 31       	pushm	r0-r7,lr
800070fa:	14 96       	mov	r6,r10
800070fc:	18 97       	mov	r7,r12
800070fe:	16 94       	mov	r4,r11
80007100:	f1 da c0 02 	bfextu	r8,r10,0x0,0x2
80007104:	c0 90       	breq	80007116 <__pow5mult+0x1e>
80007106:	20 18       	sub	r8,1
80007108:	fe c9 e0 e0 	sub	r9,pc,-7968
8000710c:	f2 08 03 2a 	ld.w	r10,r9[r8<<0x2]
80007110:	30 09       	mov	r9,0
80007112:	cb 5f       	rcall	8000707c <__multadd>
80007114:	18 94       	mov	r4,r12
80007116:	a3 46       	asr	r6,0x2
80007118:	c3 40       	breq	80007180 <__pow5mult+0x88>
8000711a:	6e 95       	ld.w	r5,r7[0x24]
8000711c:	58 05       	cp.w	r5,0
8000711e:	c0 91       	brne	80007130 <__pow5mult+0x38>
80007120:	31 0c       	mov	r12,16
80007122:	fe b0 fa f3 	rcall	80006708 <malloc>
80007126:	99 35       	st.w	r12[0xc],r5
80007128:	8f 9c       	st.w	r7[0x24],r12
8000712a:	99 15       	st.w	r12[0x4],r5
8000712c:	99 25       	st.w	r12[0x8],r5
8000712e:	99 05       	st.w	r12[0x0],r5
80007130:	6e 93       	ld.w	r3,r7[0x24]
80007132:	66 25       	ld.w	r5,r3[0x8]
80007134:	58 05       	cp.w	r5,0
80007136:	c0 c1       	brne	8000714e <__pow5mult+0x56>
80007138:	e0 6b 02 71 	mov	r11,625
8000713c:	0e 9c       	mov	r12,r7
8000713e:	c9 7f       	rcall	8000706c <__i2b>
80007140:	87 2c       	st.w	r3[0x8],r12
80007142:	30 08       	mov	r8,0
80007144:	18 95       	mov	r5,r12
80007146:	99 08       	st.w	r12[0x0],r8
80007148:	c0 38       	rjmp	8000714e <__pow5mult+0x56>
8000714a:	06 9c       	mov	r12,r3
8000714c:	18 95       	mov	r5,r12
8000714e:	ed b6 00 00 	bld	r6,0x0
80007152:	c0 b1       	brne	80007168 <__pow5mult+0x70>
80007154:	08 9b       	mov	r11,r4
80007156:	0a 9a       	mov	r10,r5
80007158:	0e 9c       	mov	r12,r7
8000715a:	c0 9f       	rcall	80006f6c <__multiply>
8000715c:	08 9b       	mov	r11,r4
8000715e:	18 93       	mov	r3,r12
80007160:	0e 9c       	mov	r12,r7
80007162:	06 94       	mov	r4,r3
80007164:	fe b0 fd b6 	rcall	80006cd0 <_Bfree>
80007168:	a1 56       	asr	r6,0x1
8000716a:	c0 b0       	breq	80007180 <__pow5mult+0x88>
8000716c:	6a 03       	ld.w	r3,r5[0x0]
8000716e:	58 03       	cp.w	r3,0
80007170:	ce d1       	brne	8000714a <__pow5mult+0x52>
80007172:	0a 9a       	mov	r10,r5
80007174:	0a 9b       	mov	r11,r5
80007176:	0e 9c       	mov	r12,r7
80007178:	cf ae       	rcall	80006f6c <__multiply>
8000717a:	8b 0c       	st.w	r5[0x0],r12
8000717c:	99 03       	st.w	r12[0x0],r3
8000717e:	ce 7b       	rjmp	8000714c <__pow5mult+0x54>
80007180:	08 9c       	mov	r12,r4
80007182:	d8 32       	popm	r0-r7,pc

80007184 <_realloc_r>:
80007184:	d4 31       	pushm	r0-r7,lr
80007186:	20 1d       	sub	sp,4
80007188:	16 94       	mov	r4,r11
8000718a:	18 92       	mov	r2,r12
8000718c:	14 9b       	mov	r11,r10
8000718e:	58 04       	cp.w	r4,0
80007190:	c0 51       	brne	8000719a <_realloc_r+0x16>
80007192:	fe b0 fa c3 	rcall	80006718 <_malloc_r>
80007196:	18 95       	mov	r5,r12
80007198:	c5 39       	rjmp	8000743e <_realloc_r+0x2ba>
8000719a:	50 0a       	stdsp	sp[0x0],r10
8000719c:	fe b0 fd 07 	rcall	80006baa <__malloc_lock>
800071a0:	40 0b       	lddsp	r11,sp[0x0]
800071a2:	f6 c8 ff f5 	sub	r8,r11,-11
800071a6:	e8 c1 00 08 	sub	r1,r4,8
800071aa:	10 96       	mov	r6,r8
800071ac:	62 1c       	ld.w	r12,r1[0x4]
800071ae:	e0 16 ff f8 	andl	r6,0xfff8
800071b2:	59 68       	cp.w	r8,22
800071b4:	f9 b6 08 10 	movls	r6,16
800071b8:	16 36       	cp.w	r6,r11
800071ba:	5f 38       	srlo	r8
800071bc:	f1 e6 13 f8 	or	r8,r8,r6>>0x1f
800071c0:	c0 50       	breq	800071ca <_realloc_r+0x46>
800071c2:	30 c8       	mov	r8,12
800071c4:	30 05       	mov	r5,0
800071c6:	85 38       	st.w	r2[0xc],r8
800071c8:	c3 b9       	rjmp	8000743e <_realloc_r+0x2ba>
800071ca:	18 90       	mov	r0,r12
800071cc:	e0 10 ff fc 	andl	r0,0xfffc
800071d0:	0c 30       	cp.w	r0,r6
800071d2:	e0 84 01 0b 	brge	800073e8 <_realloc_r+0x264>
800071d6:	e0 68 01 04 	mov	r8,260
800071da:	e2 00 00 09 	add	r9,r1,r0
800071de:	70 25       	ld.w	r5,r8[0x8]
800071e0:	0a 39       	cp.w	r9,r5
800071e2:	c0 90       	breq	800071f4 <_realloc_r+0x70>
800071e4:	72 1a       	ld.w	r10,r9[0x4]
800071e6:	a1 ca       	cbr	r10,0x0
800071e8:	f2 0a 00 0a 	add	r10,r9,r10
800071ec:	74 1a       	ld.w	r10,r10[0x4]
800071ee:	ed ba 00 00 	bld	r10,0x0
800071f2:	c2 20       	breq	80007236 <_realloc_r+0xb2>
800071f4:	72 1a       	ld.w	r10,r9[0x4]
800071f6:	e0 1a ff fc 	andl	r10,0xfffc
800071fa:	f4 00 00 03 	add	r3,r10,r0
800071fe:	0a 39       	cp.w	r9,r5
80007200:	c1 31       	brne	80007226 <_realloc_r+0xa2>
80007202:	ec c7 ff f0 	sub	r7,r6,-16
80007206:	0e 33       	cp.w	r3,r7
80007208:	c1 95       	brlt	8000723a <_realloc_r+0xb6>
8000720a:	e2 06 00 09 	add	r9,r1,r6
8000720e:	0c 13       	sub	r3,r6
80007210:	a1 a3       	sbr	r3,0x0
80007212:	93 13       	st.w	r9[0x4],r3
80007214:	91 29       	st.w	r8[0x8],r9
80007216:	04 9c       	mov	r12,r2
80007218:	62 18       	ld.w	r8,r1[0x4]
8000721a:	08 95       	mov	r5,r4
8000721c:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007220:	10 46       	or	r6,r8
80007222:	83 16       	st.w	r1[0x4],r6
80007224:	c0 b9       	rjmp	8000743a <_realloc_r+0x2b6>
80007226:	0c 33       	cp.w	r3,r6
80007228:	c0 95       	brlt	8000723a <_realloc_r+0xb6>
8000722a:	72 28       	ld.w	r8,r9[0x8]
8000722c:	02 97       	mov	r7,r1
8000722e:	72 39       	ld.w	r9,r9[0xc]
80007230:	93 28       	st.w	r9[0x8],r8
80007232:	91 39       	st.w	r8[0xc],r9
80007234:	cd c8       	rjmp	800073ec <_realloc_r+0x268>
80007236:	30 0a       	mov	r10,0
80007238:	14 99       	mov	r9,r10
8000723a:	ed bc 00 00 	bld	r12,0x0
8000723e:	e0 80 00 95 	breq	80007368 <_realloc_r+0x1e4>
80007242:	62 07       	ld.w	r7,r1[0x0]
80007244:	e2 07 01 07 	sub	r7,r1,r7
80007248:	6e 1c       	ld.w	r12,r7[0x4]
8000724a:	e0 1c ff fc 	andl	r12,0xfffc
8000724e:	58 09       	cp.w	r9,0
80007250:	c5 60       	breq	800072fc <_realloc_r+0x178>
80007252:	f8 00 00 03 	add	r3,r12,r0
80007256:	0a 39       	cp.w	r9,r5
80007258:	c4 81       	brne	800072e8 <_realloc_r+0x164>
8000725a:	14 03       	add	r3,r10
8000725c:	ec c9 ff f0 	sub	r9,r6,-16
80007260:	12 33       	cp.w	r3,r9
80007262:	c4 d5       	brlt	800072fc <_realloc_r+0x178>
80007264:	6e 3a       	ld.w	r10,r7[0xc]
80007266:	6e 29       	ld.w	r9,r7[0x8]
80007268:	95 29       	st.w	r10[0x8],r9
8000726a:	93 3a       	st.w	r9[0xc],r10
8000726c:	ee c5 ff f8 	sub	r5,r7,-8
80007270:	e0 ca 00 04 	sub	r10,r0,4
80007274:	e0 4a 00 24 	cp.w	r10,36
80007278:	e0 8b 00 25 	brhi	800072c2 <_realloc_r+0x13e>
8000727c:	0a 99       	mov	r9,r5
8000727e:	59 3a       	cp.w	r10,19
80007280:	e0 88 00 1a 	brls	800072b4 <_realloc_r+0x130>
80007284:	09 09       	ld.w	r9,r4++
80007286:	8b 09       	st.w	r5[0x0],r9
80007288:	09 09       	ld.w	r9,r4++
8000728a:	8f 39       	st.w	r7[0xc],r9
8000728c:	ee c9 ff f0 	sub	r9,r7,-16
80007290:	59 ba       	cp.w	r10,27
80007292:	e0 88 00 11 	brls	800072b4 <_realloc_r+0x130>
80007296:	09 0b       	ld.w	r11,r4++
80007298:	93 0b       	st.w	r9[0x0],r11
8000729a:	09 09       	ld.w	r9,r4++
8000729c:	8f 59       	st.w	r7[0x14],r9
8000729e:	ee c9 ff e8 	sub	r9,r7,-24
800072a2:	e0 4a 00 24 	cp.w	r10,36
800072a6:	c0 71       	brne	800072b4 <_realloc_r+0x130>
800072a8:	09 0a       	ld.w	r10,r4++
800072aa:	93 0a       	st.w	r9[0x0],r10
800072ac:	ee c9 ff e0 	sub	r9,r7,-32
800072b0:	09 0a       	ld.w	r10,r4++
800072b2:	8f 7a       	st.w	r7[0x1c],r10
800072b4:	09 0a       	ld.w	r10,r4++
800072b6:	12 aa       	st.w	r9++,r10
800072b8:	68 0a       	ld.w	r10,r4[0x0]
800072ba:	93 0a       	st.w	r9[0x0],r10
800072bc:	68 1a       	ld.w	r10,r4[0x4]
800072be:	93 1a       	st.w	r9[0x4],r10
800072c0:	c0 78       	rjmp	800072ce <_realloc_r+0x14a>
800072c2:	50 08       	stdsp	sp[0x0],r8
800072c4:	08 9b       	mov	r11,r4
800072c6:	0a 9c       	mov	r12,r5
800072c8:	fe b0 fc 4b 	rcall	80006b5e <memmove>
800072cc:	40 08       	lddsp	r8,sp[0x0]
800072ce:	ee 06 00 09 	add	r9,r7,r6
800072d2:	0c 13       	sub	r3,r6
800072d4:	a1 a3       	sbr	r3,0x0
800072d6:	93 13       	st.w	r9[0x4],r3
800072d8:	91 29       	st.w	r8[0x8],r9
800072da:	04 9c       	mov	r12,r2
800072dc:	6e 18       	ld.w	r8,r7[0x4]
800072de:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800072e2:	10 46       	or	r6,r8
800072e4:	8f 16       	st.w	r7[0x4],r6
800072e6:	ca a8       	rjmp	8000743a <_realloc_r+0x2b6>
800072e8:	14 03       	add	r3,r10
800072ea:	0c 33       	cp.w	r3,r6
800072ec:	c0 85       	brlt	800072fc <_realloc_r+0x178>
800072ee:	72 28       	ld.w	r8,r9[0x8]
800072f0:	72 39       	ld.w	r9,r9[0xc]
800072f2:	93 28       	st.w	r9[0x8],r8
800072f4:	91 39       	st.w	r8[0xc],r9
800072f6:	6e 28       	ld.w	r8,r7[0x8]
800072f8:	6e 39       	ld.w	r9,r7[0xc]
800072fa:	c0 78       	rjmp	80007308 <_realloc_r+0x184>
800072fc:	f8 00 00 03 	add	r3,r12,r0
80007300:	0c 33       	cp.w	r3,r6
80007302:	c3 35       	brlt	80007368 <_realloc_r+0x1e4>
80007304:	6e 39       	ld.w	r9,r7[0xc]
80007306:	6e 28       	ld.w	r8,r7[0x8]
80007308:	93 28       	st.w	r9[0x8],r8
8000730a:	91 39       	st.w	r8[0xc],r9
8000730c:	e0 ca 00 04 	sub	r10,r0,4
80007310:	ee cc ff f8 	sub	r12,r7,-8
80007314:	e0 4a 00 24 	cp.w	r10,36
80007318:	e0 8b 00 24 	brhi	80007360 <_realloc_r+0x1dc>
8000731c:	59 3a       	cp.w	r10,19
8000731e:	e0 88 00 1a 	brls	80007352 <_realloc_r+0x1ce>
80007322:	09 08       	ld.w	r8,r4++
80007324:	99 08       	st.w	r12[0x0],r8
80007326:	09 08       	ld.w	r8,r4++
80007328:	8f 38       	st.w	r7[0xc],r8
8000732a:	ee cc ff f0 	sub	r12,r7,-16
8000732e:	59 ba       	cp.w	r10,27
80007330:	e0 88 00 11 	brls	80007352 <_realloc_r+0x1ce>
80007334:	09 08       	ld.w	r8,r4++
80007336:	99 08       	st.w	r12[0x0],r8
80007338:	09 08       	ld.w	r8,r4++
8000733a:	8f 58       	st.w	r7[0x14],r8
8000733c:	ee cc ff e8 	sub	r12,r7,-24
80007340:	e0 4a 00 24 	cp.w	r10,36
80007344:	c0 71       	brne	80007352 <_realloc_r+0x1ce>
80007346:	09 08       	ld.w	r8,r4++
80007348:	99 08       	st.w	r12[0x0],r8
8000734a:	ee cc ff e0 	sub	r12,r7,-32
8000734e:	09 08       	ld.w	r8,r4++
80007350:	8f 78       	st.w	r7[0x1c],r8
80007352:	09 08       	ld.w	r8,r4++
80007354:	18 a8       	st.w	r12++,r8
80007356:	68 08       	ld.w	r8,r4[0x0]
80007358:	99 08       	st.w	r12[0x0],r8
8000735a:	68 18       	ld.w	r8,r4[0x4]
8000735c:	99 18       	st.w	r12[0x4],r8
8000735e:	c4 78       	rjmp	800073ec <_realloc_r+0x268>
80007360:	08 9b       	mov	r11,r4
80007362:	fe b0 fb fe 	rcall	80006b5e <memmove>
80007366:	c4 38       	rjmp	800073ec <_realloc_r+0x268>
80007368:	04 9c       	mov	r12,r2
8000736a:	fe b0 f9 d7 	rcall	80006718 <_malloc_r>
8000736e:	18 95       	mov	r5,r12
80007370:	c3 a0       	breq	800073e4 <_realloc_r+0x260>
80007372:	62 18       	ld.w	r8,r1[0x4]
80007374:	f8 c9 00 08 	sub	r9,r12,8
80007378:	a1 c8       	cbr	r8,0x0
8000737a:	e2 08 00 08 	add	r8,r1,r8
8000737e:	10 39       	cp.w	r9,r8
80007380:	c0 71       	brne	8000738e <_realloc_r+0x20a>
80007382:	72 13       	ld.w	r3,r9[0x4]
80007384:	02 97       	mov	r7,r1
80007386:	e0 13 ff fc 	andl	r3,0xfffc
8000738a:	00 03       	add	r3,r0
8000738c:	c3 08       	rjmp	800073ec <_realloc_r+0x268>
8000738e:	e0 ca 00 04 	sub	r10,r0,4
80007392:	e0 4a 00 24 	cp.w	r10,36
80007396:	e0 8b 00 20 	brhi	800073d6 <_realloc_r+0x252>
8000739a:	08 99       	mov	r9,r4
8000739c:	18 98       	mov	r8,r12
8000739e:	59 3a       	cp.w	r10,19
800073a0:	e0 88 00 14 	brls	800073c8 <_realloc_r+0x244>
800073a4:	13 0b       	ld.w	r11,r9++
800073a6:	10 ab       	st.w	r8++,r11
800073a8:	13 0b       	ld.w	r11,r9++
800073aa:	10 ab       	st.w	r8++,r11
800073ac:	59 ba       	cp.w	r10,27
800073ae:	e0 88 00 0d 	brls	800073c8 <_realloc_r+0x244>
800073b2:	13 0b       	ld.w	r11,r9++
800073b4:	10 ab       	st.w	r8++,r11
800073b6:	13 0b       	ld.w	r11,r9++
800073b8:	10 ab       	st.w	r8++,r11
800073ba:	e0 4a 00 24 	cp.w	r10,36
800073be:	c0 51       	brne	800073c8 <_realloc_r+0x244>
800073c0:	13 0a       	ld.w	r10,r9++
800073c2:	10 aa       	st.w	r8++,r10
800073c4:	13 0a       	ld.w	r10,r9++
800073c6:	10 aa       	st.w	r8++,r10
800073c8:	13 0a       	ld.w	r10,r9++
800073ca:	10 aa       	st.w	r8++,r10
800073cc:	72 0a       	ld.w	r10,r9[0x0]
800073ce:	91 0a       	st.w	r8[0x0],r10
800073d0:	72 19       	ld.w	r9,r9[0x4]
800073d2:	91 19       	st.w	r8[0x4],r9
800073d4:	c0 48       	rjmp	800073dc <_realloc_r+0x258>
800073d6:	08 9b       	mov	r11,r4
800073d8:	fe b0 fb c3 	rcall	80006b5e <memmove>
800073dc:	08 9b       	mov	r11,r4
800073de:	04 9c       	mov	r12,r2
800073e0:	fe b0 f6 f6 	rcall	800061cc <_free_r>
800073e4:	04 9c       	mov	r12,r2
800073e6:	c2 a8       	rjmp	8000743a <_realloc_r+0x2b6>
800073e8:	00 93       	mov	r3,r0
800073ea:	02 97       	mov	r7,r1
800073ec:	e6 06 01 09 	sub	r9,r3,r6
800073f0:	6e 18       	ld.w	r8,r7[0x4]
800073f2:	58 f9       	cp.w	r9,15
800073f4:	e0 88 00 16 	brls	80007420 <_realloc_r+0x29c>
800073f8:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800073fc:	ed e8 10 08 	or	r8,r6,r8
80007400:	8f 18       	st.w	r7[0x4],r8
80007402:	12 98       	mov	r8,r9
80007404:	a1 a8       	sbr	r8,0x0
80007406:	ee 06 00 0b 	add	r11,r7,r6
8000740a:	f6 09 00 09 	add	r9,r11,r9
8000740e:	97 18       	st.w	r11[0x4],r8
80007410:	72 18       	ld.w	r8,r9[0x4]
80007412:	a1 a8       	sbr	r8,0x0
80007414:	2f 8b       	sub	r11,-8
80007416:	93 18       	st.w	r9[0x4],r8
80007418:	04 9c       	mov	r12,r2
8000741a:	fe b0 f6 d9 	rcall	800061cc <_free_r>
8000741e:	c0 b8       	rjmp	80007434 <_realloc_r+0x2b0>
80007420:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80007424:	e7 e8 10 08 	or	r8,r3,r8
80007428:	8f 18       	st.w	r7[0x4],r8
8000742a:	ee 03 00 03 	add	r3,r7,r3
8000742e:	66 18       	ld.w	r8,r3[0x4]
80007430:	a1 a8       	sbr	r8,0x0
80007432:	87 18       	st.w	r3[0x4],r8
80007434:	04 9c       	mov	r12,r2
80007436:	ee c5 ff f8 	sub	r5,r7,-8
8000743a:	fe b0 fb b9 	rcall	80006bac <__malloc_unlock>
8000743e:	0a 9c       	mov	r12,r5
80007440:	2f fd       	sub	sp,-4
80007442:	d8 32       	popm	r0-r7,pc

80007444 <__isinfd>:
80007444:	14 98       	mov	r8,r10
80007446:	fc 19 7f f0 	movh	r9,0x7ff0
8000744a:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
8000744e:	f0 0b 11 00 	rsub	r11,r8,0
80007452:	f7 e8 10 08 	or	r8,r11,r8
80007456:	f5 e8 13 f8 	or	r8,r10,r8>>0x1f
8000745a:	f2 08 01 08 	sub	r8,r9,r8
8000745e:	f0 0c 11 00 	rsub	r12,r8,0
80007462:	f9 e8 10 08 	or	r8,r12,r8
80007466:	f0 0c 14 1f 	asr	r12,r8,0x1f
8000746a:	2f fc       	sub	r12,-1
8000746c:	5e fc       	retal	r12

8000746e <__isnand>:
8000746e:	14 98       	mov	r8,r10
80007470:	f5 db c0 1f 	bfextu	r10,r11,0x0,0x1f
80007474:	f0 0c 11 00 	rsub	r12,r8,0
80007478:	10 4c       	or	r12,r8
8000747a:	fc 18 7f f0 	movh	r8,0x7ff0
8000747e:	f5 ec 13 fc 	or	r12,r10,r12>>0x1f
80007482:	f0 0c 01 0c 	sub	r12,r8,r12
80007486:	bf 9c       	lsr	r12,0x1f
80007488:	5e fc       	retal	r12
8000748a:	d7 03       	nop

8000748c <_sbrk_r>:
8000748c:	d4 21       	pushm	r4-r7,lr
8000748e:	30 08       	mov	r8,0
80007490:	18 97       	mov	r7,r12
80007492:	e0 66 06 40 	mov	r6,1600
80007496:	16 9c       	mov	r12,r11
80007498:	8d 08       	st.w	r6[0x0],r8
8000749a:	ca fc       	rcall	800075f8 <_sbrk>
8000749c:	5b fc       	cp.w	r12,-1
8000749e:	c0 51       	brne	800074a8 <_sbrk_r+0x1c>
800074a0:	6c 08       	ld.w	r8,r6[0x0]
800074a2:	58 08       	cp.w	r8,0
800074a4:	ef f8 1a 03 	st.wne	r7[0xc],r8
800074a8:	d8 22       	popm	r4-r7,pc
800074aa:	d7 03       	nop

800074ac <__sclose>:
800074ac:	d4 01       	pushm	lr
800074ae:	96 7b       	ld.sh	r11,r11[0xe]
800074b0:	cf ec       	rcall	800076ac <_close_r>
800074b2:	d8 02       	popm	pc

800074b4 <__sseek>:
800074b4:	d4 21       	pushm	r4-r7,lr
800074b6:	16 97       	mov	r7,r11
800074b8:	96 7b       	ld.sh	r11,r11[0xe]
800074ba:	c8 5d       	rcall	800077c4 <_lseek_r>
800074bc:	8e 68       	ld.sh	r8,r7[0xc]
800074be:	10 99       	mov	r9,r8
800074c0:	ad c8       	cbr	r8,0xc
800074c2:	ad a9       	sbr	r9,0xc
800074c4:	5b fc       	cp.w	r12,-1
800074c6:	ef f8 0c 06 	st.heq	r7[0xc],r8
800074ca:	ef f9 1c 06 	st.hne	r7[0xc],r9
800074ce:	ef fc 1a 15 	st.wne	r7[0x54],r12
800074d2:	d8 22       	popm	r4-r7,pc

800074d4 <__swrite>:
800074d4:	d4 21       	pushm	r4-r7,lr
800074d6:	96 68       	ld.sh	r8,r11[0xc]
800074d8:	16 97       	mov	r7,r11
800074da:	14 95       	mov	r5,r10
800074dc:	12 94       	mov	r4,r9
800074de:	e2 18 01 00 	andl	r8,0x100,COH
800074e2:	18 96       	mov	r6,r12
800074e4:	c0 50       	breq	800074ee <__swrite+0x1a>
800074e6:	30 29       	mov	r9,2
800074e8:	30 0a       	mov	r10,0
800074ea:	96 7b       	ld.sh	r11,r11[0xe]
800074ec:	c6 cd       	rcall	800077c4 <_lseek_r>
800074ee:	8e 68       	ld.sh	r8,r7[0xc]
800074f0:	ad c8       	cbr	r8,0xc
800074f2:	08 99       	mov	r9,r4
800074f4:	0a 9a       	mov	r10,r5
800074f6:	8e 7b       	ld.sh	r11,r7[0xe]
800074f8:	0c 9c       	mov	r12,r6
800074fa:	ae 68       	st.h	r7[0xc],r8
800074fc:	c9 ac       	rcall	80007630 <_write_r>
800074fe:	d8 22       	popm	r4-r7,pc

80007500 <__sread>:
80007500:	d4 21       	pushm	r4-r7,lr
80007502:	16 97       	mov	r7,r11
80007504:	96 7b       	ld.sh	r11,r11[0xe]
80007506:	c7 1d       	rcall	800077e8 <_read_r>
80007508:	c0 65       	brlt	80007514 <__sread+0x14>
8000750a:	6f 58       	ld.w	r8,r7[0x54]
8000750c:	18 08       	add	r8,r12
8000750e:	ef 48 00 54 	st.w	r7[84],r8
80007512:	d8 22       	popm	r4-r7,pc
80007514:	8e 68       	ld.sh	r8,r7[0xc]
80007516:	ad c8       	cbr	r8,0xc
80007518:	ae 68       	st.h	r7[0xc],r8
8000751a:	d8 22       	popm	r4-r7,pc

8000751c <strlen>:
8000751c:	30 09       	mov	r9,0
8000751e:	18 98       	mov	r8,r12
80007520:	c0 28       	rjmp	80007524 <strlen+0x8>
80007522:	2f f8       	sub	r8,-1
80007524:	11 8a       	ld.ub	r10,r8[0x0]
80007526:	f2 0a 18 00 	cp.b	r10,r9
8000752a:	cf c1       	brne	80007522 <strlen+0x6>
8000752c:	f0 0c 01 0c 	sub	r12,r8,r12
80007530:	5e fc       	retal	r12
80007532:	d7 03       	nop

80007534 <_close>:
80007534:	30 28       	mov	r8,2
80007536:	d6 73       	breakpoint
80007538:	3f fc       	mov	r12,-1
8000753a:	35 8b       	mov	r11,88
8000753c:	58 0c       	cp.w	r12,0
8000753e:	5e 4c       	retge	r12
80007540:	e0 6a 06 40 	mov	r10,1600
80007544:	95 0b       	st.w	r10[0x0],r11
80007546:	5e fc       	retal	r12

80007548 <_lseek>:
80007548:	30 58       	mov	r8,5
8000754a:	d6 73       	breakpoint
8000754c:	3f fc       	mov	r12,-1
8000754e:	35 8b       	mov	r11,88
80007550:	58 0c       	cp.w	r12,0
80007552:	5e 4c       	retge	r12
80007554:	e0 6a 06 40 	mov	r10,1600
80007558:	95 0b       	st.w	r10[0x0],r11
8000755a:	5e fc       	retal	r12

8000755c <_read>:
8000755c:	30 38       	mov	r8,3
8000755e:	d6 73       	breakpoint
80007560:	3f fc       	mov	r12,-1
80007562:	35 8b       	mov	r11,88
80007564:	58 0c       	cp.w	r12,0
80007566:	5e 4c       	retge	r12
80007568:	e0 6a 06 40 	mov	r10,1600
8000756c:	95 0b       	st.w	r10[0x0],r11
8000756e:	5e fc       	retal	r12

80007570 <_write>:
80007570:	30 48       	mov	r8,4
80007572:	d6 73       	breakpoint
80007574:	3f fc       	mov	r12,-1
80007576:	35 8b       	mov	r11,88
80007578:	58 0c       	cp.w	r12,0
8000757a:	5e 4c       	retge	r12
8000757c:	e0 6a 06 40 	mov	r10,1600
80007580:	95 0b       	st.w	r10[0x0],r11
80007582:	5e fc       	retal	r12

80007584 <isatty>:
80007584:	30 b8       	mov	r8,11
80007586:	d6 73       	breakpoint
80007588:	3f fc       	mov	r12,-1
8000758a:	35 8b       	mov	r11,88
8000758c:	58 0c       	cp.w	r12,0
8000758e:	5e 4c       	retge	r12
80007590:	e0 6a 06 40 	mov	r10,1600
80007594:	95 0b       	st.w	r10[0x0],r11
80007596:	5e fc       	retal	r12

80007598 <_fstat_host>:
80007598:	30 98       	mov	r8,9
8000759a:	d6 73       	breakpoint
8000759c:	3f fc       	mov	r12,-1
8000759e:	35 8b       	mov	r11,88
800075a0:	58 0c       	cp.w	r12,0
800075a2:	5e 4c       	retge	r12
800075a4:	e0 6a 06 40 	mov	r10,1600
800075a8:	95 0b       	st.w	r10[0x0],r11
800075aa:	5e fc       	retal	r12

800075ac <_fstat>:
800075ac:	d4 21       	pushm	r4-r7,lr
800075ae:	21 0d       	sub	sp,64
800075b0:	16 97       	mov	r7,r11
800075b2:	1a 9b       	mov	r11,sp
800075b4:	cf 2f       	rcall	80007598 <_fstat_host>
800075b6:	c0 34       	brge	800075bc <_fstat+0x10>
800075b8:	3f fc       	mov	r12,-1
800075ba:	c1 c8       	rjmp	800075f2 <_fstat+0x46>
800075bc:	40 08       	lddsp	r8,sp[0x0]
800075be:	ae 08       	st.h	r7[0x0],r8
800075c0:	40 18       	lddsp	r8,sp[0x4]
800075c2:	ae 18       	st.h	r7[0x2],r8
800075c4:	40 28       	lddsp	r8,sp[0x8]
800075c6:	8f 18       	st.w	r7[0x4],r8
800075c8:	40 38       	lddsp	r8,sp[0xc]
800075ca:	ae 48       	st.h	r7[0x8],r8
800075cc:	40 48       	lddsp	r8,sp[0x10]
800075ce:	ae 58       	st.h	r7[0xa],r8
800075d0:	40 58       	lddsp	r8,sp[0x14]
800075d2:	ae 68       	st.h	r7[0xc],r8
800075d4:	40 68       	lddsp	r8,sp[0x18]
800075d6:	ae 78       	st.h	r7[0xe],r8
800075d8:	40 88       	lddsp	r8,sp[0x20]
800075da:	8f 48       	st.w	r7[0x10],r8
800075dc:	40 a8       	lddsp	r8,sp[0x28]
800075de:	8f b8       	st.w	r7[0x2c],r8
800075e0:	40 c8       	lddsp	r8,sp[0x30]
800075e2:	8f c8       	st.w	r7[0x30],r8
800075e4:	40 d8       	lddsp	r8,sp[0x34]
800075e6:	8f 58       	st.w	r7[0x14],r8
800075e8:	40 e8       	lddsp	r8,sp[0x38]
800075ea:	30 0c       	mov	r12,0
800075ec:	8f 78       	st.w	r7[0x1c],r8
800075ee:	40 f8       	lddsp	r8,sp[0x3c]
800075f0:	8f 98       	st.w	r7[0x24],r8
800075f2:	2f 0d       	sub	sp,-64
800075f4:	d8 22       	popm	r4-r7,pc
800075f6:	d7 03       	nop

800075f8 <_sbrk>:
800075f8:	d4 01       	pushm	lr
800075fa:	e0 68 06 3c 	mov	r8,1596
800075fe:	70 09       	ld.w	r9,r8[0x0]
80007600:	58 09       	cp.w	r9,0
80007602:	c0 41       	brne	8000760a <_sbrk+0x12>
80007604:	e0 69 06 48 	mov	r9,1608
80007608:	91 09       	st.w	r8[0x0],r9
8000760a:	e0 69 06 3c 	mov	r9,1596
8000760e:	e0 6a f0 00 	mov	r10,61440
80007612:	72 08       	ld.w	r8,r9[0x0]
80007614:	f0 0c 00 0c 	add	r12,r8,r12
80007618:	14 3c       	cp.w	r12,r10
8000761a:	e0 8b 00 04 	brhi	80007622 <_sbrk+0x2a>
8000761e:	93 0c       	st.w	r9[0x0],r12
80007620:	c0 58       	rjmp	8000762a <_sbrk+0x32>
80007622:	c5 5c       	rcall	800076cc <__errno>
80007624:	30 c8       	mov	r8,12
80007626:	99 08       	st.w	r12[0x0],r8
80007628:	3f f8       	mov	r8,-1
8000762a:	10 9c       	mov	r12,r8
8000762c:	d8 02       	popm	pc
8000762e:	d7 03       	nop

80007630 <_write_r>:
80007630:	d4 21       	pushm	r4-r7,lr
80007632:	16 98       	mov	r8,r11
80007634:	18 97       	mov	r7,r12
80007636:	10 9c       	mov	r12,r8
80007638:	30 08       	mov	r8,0
8000763a:	14 9b       	mov	r11,r10
8000763c:	e0 66 06 40 	mov	r6,1600
80007640:	12 9a       	mov	r10,r9
80007642:	8d 08       	st.w	r6[0x0],r8
80007644:	c9 6f       	rcall	80007570 <_write>
80007646:	5b fc       	cp.w	r12,-1
80007648:	c0 51       	brne	80007652 <_write_r+0x22>
8000764a:	6c 08       	ld.w	r8,r6[0x0]
8000764c:	58 08       	cp.w	r8,0
8000764e:	ef f8 1a 03 	st.wne	r7[0xc],r8
80007652:	d8 22       	popm	r4-r7,pc

80007654 <_calloc_r>:
80007654:	d4 21       	pushm	r4-r7,lr
80007656:	f4 0b 02 4b 	mul	r11,r10,r11
8000765a:	fe b0 f8 5f 	rcall	80006718 <_malloc_r>
8000765e:	18 97       	mov	r7,r12
80007660:	c2 30       	breq	800076a6 <_calloc_r+0x52>
80007662:	f8 fa ff fc 	ld.w	r10,r12[-4]
80007666:	e0 1a ff fc 	andl	r10,0xfffc
8000766a:	20 4a       	sub	r10,4
8000766c:	e0 4a 00 24 	cp.w	r10,36
80007670:	e0 8b 00 18 	brhi	800076a0 <_calloc_r+0x4c>
80007674:	18 98       	mov	r8,r12
80007676:	59 3a       	cp.w	r10,19
80007678:	e0 88 00 0f 	brls	80007696 <_calloc_r+0x42>
8000767c:	30 09       	mov	r9,0
8000767e:	10 a9       	st.w	r8++,r9
80007680:	10 a9       	st.w	r8++,r9
80007682:	59 ba       	cp.w	r10,27
80007684:	e0 88 00 09 	brls	80007696 <_calloc_r+0x42>
80007688:	10 a9       	st.w	r8++,r9
8000768a:	10 a9       	st.w	r8++,r9
8000768c:	e0 4a 00 24 	cp.w	r10,36
80007690:	c0 31       	brne	80007696 <_calloc_r+0x42>
80007692:	10 a9       	st.w	r8++,r9
80007694:	10 a9       	st.w	r8++,r9
80007696:	30 09       	mov	r9,0
80007698:	10 a9       	st.w	r8++,r9
8000769a:	91 19       	st.w	r8[0x4],r9
8000769c:	91 09       	st.w	r8[0x0],r9
8000769e:	c0 48       	rjmp	800076a6 <_calloc_r+0x52>
800076a0:	30 0b       	mov	r11,0
800076a2:	fe b0 fa 7d 	rcall	80006b9c <memset>
800076a6:	0e 9c       	mov	r12,r7
800076a8:	d8 22       	popm	r4-r7,pc
800076aa:	d7 03       	nop

800076ac <_close_r>:
800076ac:	d4 21       	pushm	r4-r7,lr
800076ae:	30 08       	mov	r8,0
800076b0:	18 97       	mov	r7,r12
800076b2:	e0 66 06 40 	mov	r6,1600
800076b6:	16 9c       	mov	r12,r11
800076b8:	8d 08       	st.w	r6[0x0],r8
800076ba:	c3 df       	rcall	80007534 <_close>
800076bc:	5b fc       	cp.w	r12,-1
800076be:	c0 51       	brne	800076c8 <_close_r+0x1c>
800076c0:	6c 08       	ld.w	r8,r6[0x0]
800076c2:	58 08       	cp.w	r8,0
800076c4:	ef f8 1a 03 	st.wne	r7[0xc],r8
800076c8:	d8 22       	popm	r4-r7,pc
800076ca:	d7 03       	nop

800076cc <__errno>:
800076cc:	e0 68 01 00 	mov	r8,256
800076d0:	70 0c       	ld.w	r12,r8[0x0]
800076d2:	2f 4c       	sub	r12,-12
800076d4:	5e fc       	retal	r12
800076d6:	d7 03       	nop

800076d8 <_fclose_r>:
800076d8:	d4 21       	pushm	r4-r7,lr
800076da:	18 96       	mov	r6,r12
800076dc:	16 97       	mov	r7,r11
800076de:	58 0b       	cp.w	r11,0
800076e0:	c0 31       	brne	800076e6 <_fclose_r+0xe>
800076e2:	16 95       	mov	r5,r11
800076e4:	c5 38       	rjmp	8000778a <_fclose_r+0xb2>
800076e6:	fe b0 f4 87 	rcall	80005ff4 <__sfp_lock_acquire>
800076ea:	58 06       	cp.w	r6,0
800076ec:	c0 70       	breq	800076fa <_fclose_r+0x22>
800076ee:	6c 68       	ld.w	r8,r6[0x18]
800076f0:	58 08       	cp.w	r8,0
800076f2:	c0 41       	brne	800076fa <_fclose_r+0x22>
800076f4:	0c 9c       	mov	r12,r6
800076f6:	fe b0 f4 d1 	rcall	80006098 <__sinit>
800076fa:	fe c8 e7 72 	sub	r8,pc,-6286
800076fe:	10 37       	cp.w	r7,r8
80007700:	c0 31       	brne	80007706 <_fclose_r+0x2e>
80007702:	6c 07       	ld.w	r7,r6[0x0]
80007704:	c0 c8       	rjmp	8000771c <_fclose_r+0x44>
80007706:	fe c8 e7 5e 	sub	r8,pc,-6306
8000770a:	10 37       	cp.w	r7,r8
8000770c:	c0 31       	brne	80007712 <_fclose_r+0x3a>
8000770e:	6c 17       	ld.w	r7,r6[0x4]
80007710:	c0 68       	rjmp	8000771c <_fclose_r+0x44>
80007712:	fe c8 e7 4a 	sub	r8,pc,-6326
80007716:	10 37       	cp.w	r7,r8
80007718:	ed f7 00 02 	ld.weq	r7,r6[0x8]
8000771c:	8e 69       	ld.sh	r9,r7[0xc]
8000771e:	30 08       	mov	r8,0
80007720:	f0 09 19 00 	cp.h	r9,r8
80007724:	c0 51       	brne	8000772e <_fclose_r+0x56>
80007726:	fe b0 f4 68 	rcall	80005ff6 <__sfp_lock_release>
8000772a:	30 05       	mov	r5,0
8000772c:	c2 f8       	rjmp	8000778a <_fclose_r+0xb2>
8000772e:	0e 9b       	mov	r11,r7
80007730:	0c 9c       	mov	r12,r6
80007732:	fe b0 f3 db 	rcall	80005ee8 <_fflush_r>
80007736:	6e c8       	ld.w	r8,r7[0x30]
80007738:	18 95       	mov	r5,r12
8000773a:	58 08       	cp.w	r8,0
8000773c:	c0 60       	breq	80007748 <_fclose_r+0x70>
8000773e:	6e 8b       	ld.w	r11,r7[0x20]
80007740:	0c 9c       	mov	r12,r6
80007742:	5d 18       	icall	r8
80007744:	f9 b5 05 ff 	movlt	r5,-1
80007748:	8e 68       	ld.sh	r8,r7[0xc]
8000774a:	ed b8 00 07 	bld	r8,0x7
8000774e:	c0 51       	brne	80007758 <_fclose_r+0x80>
80007750:	6e 4b       	ld.w	r11,r7[0x10]
80007752:	0c 9c       	mov	r12,r6
80007754:	fe b0 f5 3c 	rcall	800061cc <_free_r>
80007758:	6e db       	ld.w	r11,r7[0x34]
8000775a:	58 0b       	cp.w	r11,0
8000775c:	c0 a0       	breq	80007770 <_fclose_r+0x98>
8000775e:	ee c8 ff bc 	sub	r8,r7,-68
80007762:	10 3b       	cp.w	r11,r8
80007764:	c0 40       	breq	8000776c <_fclose_r+0x94>
80007766:	0c 9c       	mov	r12,r6
80007768:	fe b0 f5 32 	rcall	800061cc <_free_r>
8000776c:	30 08       	mov	r8,0
8000776e:	8f d8       	st.w	r7[0x34],r8
80007770:	6f 2b       	ld.w	r11,r7[0x48]
80007772:	58 0b       	cp.w	r11,0
80007774:	c0 70       	breq	80007782 <_fclose_r+0xaa>
80007776:	0c 9c       	mov	r12,r6
80007778:	fe b0 f5 2a 	rcall	800061cc <_free_r>
8000777c:	30 08       	mov	r8,0
8000777e:	ef 48 00 48 	st.w	r7[72],r8
80007782:	30 08       	mov	r8,0
80007784:	ae 68       	st.h	r7[0xc],r8
80007786:	fe b0 f4 38 	rcall	80005ff6 <__sfp_lock_release>
8000778a:	0a 9c       	mov	r12,r5
8000778c:	d8 22       	popm	r4-r7,pc
8000778e:	d7 03       	nop

80007790 <fclose>:
80007790:	d4 01       	pushm	lr
80007792:	e0 68 01 00 	mov	r8,256
80007796:	18 9b       	mov	r11,r12
80007798:	70 0c       	ld.w	r12,r8[0x0]
8000779a:	c9 ff       	rcall	800076d8 <_fclose_r>
8000779c:	d8 02       	popm	pc
8000779e:	d7 03       	nop

800077a0 <_fstat_r>:
800077a0:	d4 21       	pushm	r4-r7,lr
800077a2:	16 98       	mov	r8,r11
800077a4:	18 97       	mov	r7,r12
800077a6:	10 9c       	mov	r12,r8
800077a8:	30 08       	mov	r8,0
800077aa:	e0 66 06 40 	mov	r6,1600
800077ae:	14 9b       	mov	r11,r10
800077b0:	8d 08       	st.w	r6[0x0],r8
800077b2:	cf de       	rcall	800075ac <_fstat>
800077b4:	5b fc       	cp.w	r12,-1
800077b6:	c0 51       	brne	800077c0 <_fstat_r+0x20>
800077b8:	6c 08       	ld.w	r8,r6[0x0]
800077ba:	58 08       	cp.w	r8,0
800077bc:	ef f8 1a 03 	st.wne	r7[0xc],r8
800077c0:	d8 22       	popm	r4-r7,pc
800077c2:	d7 03       	nop

800077c4 <_lseek_r>:
800077c4:	d4 21       	pushm	r4-r7,lr
800077c6:	16 98       	mov	r8,r11
800077c8:	18 97       	mov	r7,r12
800077ca:	10 9c       	mov	r12,r8
800077cc:	30 08       	mov	r8,0
800077ce:	14 9b       	mov	r11,r10
800077d0:	e0 66 06 40 	mov	r6,1600
800077d4:	12 9a       	mov	r10,r9
800077d6:	8d 08       	st.w	r6[0x0],r8
800077d8:	cb 8e       	rcall	80007548 <_lseek>
800077da:	5b fc       	cp.w	r12,-1
800077dc:	c0 51       	brne	800077e6 <_lseek_r+0x22>
800077de:	6c 08       	ld.w	r8,r6[0x0]
800077e0:	58 08       	cp.w	r8,0
800077e2:	ef f8 1a 03 	st.wne	r7[0xc],r8
800077e6:	d8 22       	popm	r4-r7,pc

800077e8 <_read_r>:
800077e8:	d4 21       	pushm	r4-r7,lr
800077ea:	16 98       	mov	r8,r11
800077ec:	18 97       	mov	r7,r12
800077ee:	10 9c       	mov	r12,r8
800077f0:	30 08       	mov	r8,0
800077f2:	14 9b       	mov	r11,r10
800077f4:	e0 66 06 40 	mov	r6,1600
800077f8:	12 9a       	mov	r10,r9
800077fa:	8d 08       	st.w	r6[0x0],r8
800077fc:	cb 0e       	rcall	8000755c <_read>
800077fe:	5b fc       	cp.w	r12,-1
80007800:	c0 51       	brne	8000780a <_read_r+0x22>
80007802:	6c 08       	ld.w	r8,r6[0x0]
80007804:	58 08       	cp.w	r8,0
80007806:	ef f8 1a 03 	st.wne	r7[0xc],r8
8000780a:	d8 22       	popm	r4-r7,pc

8000780c <__avr32_f64_mul>:
8000780c:	f5 eb 10 1c 	or	r12,r10,r11<<0x1
80007810:	e0 80 00 dc 	breq	800079c8 <__avr32_f64_mul_op1_zero>
80007814:	d4 21       	pushm	r4-r7,lr
80007816:	f7 e9 20 0e 	eor	lr,r11,r9
8000781a:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
8000781e:	30 15       	mov	r5,1
80007820:	c4 30       	breq	800078a6 <__avr32_f64_mul_op1_subnormal>
80007822:	ab 6b       	lsl	r11,0xa
80007824:	f7 ea 13 6b 	or	r11,r11,r10>>0x16
80007828:	ab 6a       	lsl	r10,0xa
8000782a:	f7 d5 d3 c2 	bfins	r11,r5,0x1e,0x2
8000782e:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80007832:	c5 c0       	breq	800078ea <__avr32_f64_mul_op2_subnormal>
80007834:	a1 78       	lsl	r8,0x1
80007836:	5c f9       	rol	r9
80007838:	f3 d5 d2 ab 	bfins	r9,r5,0x15,0xb
8000783c:	e0 47 07 ff 	cp.w	r7,2047
80007840:	c7 70       	breq	8000792e <__avr32_f64_mul_op_nan_or_inf>
80007842:	e0 46 07 ff 	cp.w	r6,2047
80007846:	c7 40       	breq	8000792e <__avr32_f64_mul_op_nan_or_inf>
80007848:	ee 06 00 0c 	add	r12,r7,r6
8000784c:	e0 2c 03 fe 	sub	r12,1022
80007850:	f6 08 06 44 	mulu.d	r4,r11,r8
80007854:	f4 09 07 44 	macu.d	r4,r10,r9
80007858:	f4 08 06 46 	mulu.d	r6,r10,r8
8000785c:	f6 09 06 4a 	mulu.d	r10,r11,r9
80007860:	08 07       	add	r7,r4
80007862:	f4 05 00 4a 	adc	r10,r10,r5
80007866:	5c 0b       	acr	r11
80007868:	ed bb 00 14 	bld	r11,0x14
8000786c:	c0 50       	breq	80007876 <__avr32_f64_mul+0x6a>
8000786e:	a1 77       	lsl	r7,0x1
80007870:	5c fa       	rol	r10
80007872:	5c fb       	rol	r11
80007874:	20 1c       	sub	r12,1
80007876:	58 0c       	cp.w	r12,0
80007878:	e0 8a 00 6f 	brle	80007956 <__avr32_f64_mul_res_subnormal>
8000787c:	e0 4c 07 ff 	cp.w	r12,2047
80007880:	e0 84 00 9c 	brge	800079b8 <__avr32_f64_mul_res_inf>
80007884:	f7 dc d2 8b 	bfins	r11,r12,0x14,0xb
80007888:	ed ea 11 f6 	or	r6,r6,r10<<0x1f
8000788c:	ef e6 12 17 	or	r7,r7,r6>>0x1
80007890:	ee 17 80 00 	eorh	r7,0x8000
80007894:	f1 b7 04 20 	satu	r7,0x1
80007898:	0e 0a       	add	r10,r7
8000789a:	5c 0b       	acr	r11
8000789c:	ed be 00 1f 	bld	lr,0x1f
800078a0:	ef bb 00 1f 	bst	r11,0x1f
800078a4:	d8 22       	popm	r4-r7,pc

800078a6 <__avr32_f64_mul_op1_subnormal>:
800078a6:	e4 1b 00 0f 	andh	r11,0xf
800078aa:	f4 0c 12 00 	clz	r12,r10
800078ae:	f6 06 12 00 	clz	r6,r11
800078b2:	f7 bc 03 e1 	sublo	r12,-31
800078b6:	f8 06 17 30 	movlo	r6,r12
800078ba:	f7 b6 02 01 	subhs	r6,1
800078be:	e0 46 00 20 	cp.w	r6,32
800078c2:	c0 d4       	brge	800078dc <__avr32_f64_mul_op1_subnormal+0x36>
800078c4:	ec 0c 11 20 	rsub	r12,r6,32
800078c8:	f6 06 09 4b 	lsl	r11,r11,r6
800078cc:	f4 0c 0a 4c 	lsr	r12,r10,r12
800078d0:	18 4b       	or	r11,r12
800078d2:	f4 06 09 4a 	lsl	r10,r10,r6
800078d6:	20 b6       	sub	r6,11
800078d8:	0c 17       	sub	r7,r6
800078da:	ca ab       	rjmp	8000782e <__avr32_f64_mul+0x22>
800078dc:	f4 06 09 4b 	lsl	r11,r10,r6
800078e0:	c6 40       	breq	800079a8 <__avr32_f64_mul_res_zero>
800078e2:	30 0a       	mov	r10,0
800078e4:	20 b6       	sub	r6,11
800078e6:	0c 17       	sub	r7,r6
800078e8:	ca 3b       	rjmp	8000782e <__avr32_f64_mul+0x22>

800078ea <__avr32_f64_mul_op2_subnormal>:
800078ea:	e4 19 00 0f 	andh	r9,0xf
800078ee:	f0 0c 12 00 	clz	r12,r8
800078f2:	f2 05 12 00 	clz	r5,r9
800078f6:	f7 bc 03 ea 	sublo	r12,-22
800078fa:	f8 05 17 30 	movlo	r5,r12
800078fe:	f7 b5 02 0a 	subhs	r5,10
80007902:	e0 45 00 20 	cp.w	r5,32
80007906:	c0 d4       	brge	80007920 <__avr32_f64_mul_op2_subnormal+0x36>
80007908:	ea 0c 11 20 	rsub	r12,r5,32
8000790c:	f2 05 09 49 	lsl	r9,r9,r5
80007910:	f0 0c 0a 4c 	lsr	r12,r8,r12
80007914:	18 49       	or	r9,r12
80007916:	f0 05 09 48 	lsl	r8,r8,r5
8000791a:	20 25       	sub	r5,2
8000791c:	0a 16       	sub	r6,r5
8000791e:	c8 fb       	rjmp	8000783c <__avr32_f64_mul+0x30>
80007920:	f0 05 09 49 	lsl	r9,r8,r5
80007924:	c4 20       	breq	800079a8 <__avr32_f64_mul_res_zero>
80007926:	30 08       	mov	r8,0
80007928:	20 25       	sub	r5,2
8000792a:	0a 16       	sub	r6,r5
8000792c:	c8 8b       	rjmp	8000783c <__avr32_f64_mul+0x30>

8000792e <__avr32_f64_mul_op_nan_or_inf>:
8000792e:	e4 19 00 0f 	andh	r9,0xf
80007932:	e4 1b 00 0f 	andh	r11,0xf
80007936:	14 4b       	or	r11,r10
80007938:	10 49       	or	r9,r8
8000793a:	e0 47 07 ff 	cp.w	r7,2047
8000793e:	c0 91       	brne	80007950 <__avr32_f64_mul_op1_not_naninf>
80007940:	58 0b       	cp.w	r11,0
80007942:	c3 81       	brne	800079b2 <__avr32_f64_mul_res_nan>
80007944:	e0 46 07 ff 	cp.w	r6,2047
80007948:	c3 81       	brne	800079b8 <__avr32_f64_mul_res_inf>
8000794a:	58 09       	cp.w	r9,0
8000794c:	c3 60       	breq	800079b8 <__avr32_f64_mul_res_inf>
8000794e:	c3 28       	rjmp	800079b2 <__avr32_f64_mul_res_nan>

80007950 <__avr32_f64_mul_op1_not_naninf>:
80007950:	58 09       	cp.w	r9,0
80007952:	c3 30       	breq	800079b8 <__avr32_f64_mul_res_inf>
80007954:	c2 f8       	rjmp	800079b2 <__avr32_f64_mul_res_nan>

80007956 <__avr32_f64_mul_res_subnormal>:
80007956:	5c 3c       	neg	r12
80007958:	2f fc       	sub	r12,-1
8000795a:	f1 bc 04 c0 	satu	r12,0x6
8000795e:	e0 4c 00 20 	cp.w	r12,32
80007962:	c1 14       	brge	80007984 <__avr32_f64_mul_res_subnormal+0x2e>
80007964:	f8 08 11 20 	rsub	r8,r12,32
80007968:	0e 46       	or	r6,r7
8000796a:	ee 0c 0a 47 	lsr	r7,r7,r12
8000796e:	f4 08 09 49 	lsl	r9,r10,r8
80007972:	12 47       	or	r7,r9
80007974:	f4 0c 0a 4a 	lsr	r10,r10,r12
80007978:	f6 08 09 49 	lsl	r9,r11,r8
8000797c:	12 4a       	or	r10,r9
8000797e:	f6 0c 0a 4b 	lsr	r11,r11,r12
80007982:	c8 3b       	rjmp	80007888 <__avr32_f64_mul+0x7c>
80007984:	f8 08 11 20 	rsub	r8,r12,32
80007988:	f9 b9 00 00 	moveq	r9,0
8000798c:	c0 30       	breq	80007992 <__avr32_f64_mul_res_subnormal+0x3c>
8000798e:	f6 08 09 49 	lsl	r9,r11,r8
80007992:	0e 46       	or	r6,r7
80007994:	ed ea 10 16 	or	r6,r6,r10<<0x1
80007998:	f4 0c 0a 4a 	lsr	r10,r10,r12
8000799c:	f3 ea 10 07 	or	r7,r9,r10
800079a0:	f6 0c 0a 4a 	lsr	r10,r11,r12
800079a4:	30 0b       	mov	r11,0
800079a6:	c7 1b       	rjmp	80007888 <__avr32_f64_mul+0x7c>

800079a8 <__avr32_f64_mul_res_zero>:
800079a8:	1c 9b       	mov	r11,lr
800079aa:	e6 1b 80 00 	andh	r11,0x8000,COH
800079ae:	30 0a       	mov	r10,0
800079b0:	d8 22       	popm	r4-r7,pc

800079b2 <__avr32_f64_mul_res_nan>:
800079b2:	3f fb       	mov	r11,-1
800079b4:	3f fa       	mov	r10,-1
800079b6:	d8 22       	popm	r4-r7,pc

800079b8 <__avr32_f64_mul_res_inf>:
800079b8:	f0 6b 00 00 	mov	r11,-1048576
800079bc:	ed be 00 1f 	bld	lr,0x1f
800079c0:	ef bb 00 1f 	bst	r11,0x1f
800079c4:	30 0a       	mov	r10,0
800079c6:	d8 22       	popm	r4-r7,pc

800079c8 <__avr32_f64_mul_op1_zero>:
800079c8:	f7 e9 20 0b 	eor	r11,r11,r9
800079cc:	e6 1b 80 00 	andh	r11,0x8000,COH
800079d0:	f9 d9 c2 8b 	bfextu	r12,r9,0x14,0xb
800079d4:	e0 4c 07 ff 	cp.w	r12,2047
800079d8:	5e 1c       	retne	r12
800079da:	3f fa       	mov	r10,-1
800079dc:	3f fb       	mov	r11,-1
800079de:	5e fc       	retal	r12

800079e0 <__avr32_f64_sub_from_add>:
800079e0:	ee 19 80 00 	eorh	r9,0x8000

800079e4 <__avr32_f64_sub>:
800079e4:	f7 e9 20 0c 	eor	r12,r11,r9
800079e8:	e0 86 00 ca 	brmi	80007b7c <__avr32_f64_add_from_sub>
800079ec:	eb cd 40 e0 	pushm	r5-r7,lr
800079f0:	16 9c       	mov	r12,r11
800079f2:	e6 1c 80 00 	andh	r12,0x8000,COH
800079f6:	bf db       	cbr	r11,0x1f
800079f8:	bf d9       	cbr	r9,0x1f
800079fa:	10 3a       	cp.w	r10,r8
800079fc:	f2 0b 13 00 	cpc	r11,r9
80007a00:	c0 92       	brcc	80007a12 <__avr32_f64_sub+0x2e>
80007a02:	16 97       	mov	r7,r11
80007a04:	12 9b       	mov	r11,r9
80007a06:	0e 99       	mov	r9,r7
80007a08:	14 97       	mov	r7,r10
80007a0a:	10 9a       	mov	r10,r8
80007a0c:	0e 98       	mov	r8,r7
80007a0e:	ee 1c 80 00 	eorh	r12,0x8000
80007a12:	f6 07 16 14 	lsr	r7,r11,0x14
80007a16:	ab 7b       	lsl	r11,0xb
80007a18:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
80007a1c:	ab 7a       	lsl	r10,0xb
80007a1e:	bf bb       	sbr	r11,0x1f
80007a20:	f2 06 16 14 	lsr	r6,r9,0x14
80007a24:	c4 40       	breq	80007aac <__avr32_f64_sub_opL_subnormal>
80007a26:	ab 79       	lsl	r9,0xb
80007a28:	f3 e8 13 59 	or	r9,r9,r8>>0x15
80007a2c:	ab 78       	lsl	r8,0xb
80007a2e:	bf b9       	sbr	r9,0x1f

80007a30 <__avr32_f64_sub_opL_subnormal_done>:
80007a30:	e0 47 07 ff 	cp.w	r7,2047
80007a34:	c4 f0       	breq	80007ad2 <__avr32_f64_sub_opH_nan_or_inf>
80007a36:	0e 26       	rsub	r6,r7
80007a38:	c1 20       	breq	80007a5c <__avr32_f64_sub_shift_done>
80007a3a:	ec 05 11 20 	rsub	r5,r6,32
80007a3e:	e0 46 00 20 	cp.w	r6,32
80007a42:	c7 c2       	brcc	80007b3a <__avr32_f64_sub_longshift>
80007a44:	f0 05 09 4e 	lsl	lr,r8,r5
80007a48:	f2 05 09 45 	lsl	r5,r9,r5
80007a4c:	f0 06 0a 48 	lsr	r8,r8,r6
80007a50:	f2 06 0a 49 	lsr	r9,r9,r6
80007a54:	0a 48       	or	r8,r5
80007a56:	58 0e       	cp.w	lr,0
80007a58:	5f 1e       	srne	lr
80007a5a:	1c 48       	or	r8,lr

80007a5c <__avr32_f64_sub_shift_done>:
80007a5c:	10 1a       	sub	r10,r8
80007a5e:	f6 09 01 4b 	sbc	r11,r11,r9
80007a62:	f6 06 12 00 	clz	r6,r11
80007a66:	c0 e0       	breq	80007a82 <__avr32_f64_sub_longnormalize_done>
80007a68:	c7 83       	brcs	80007b58 <__avr32_f64_sub_longnormalize>
80007a6a:	ec 0e 11 20 	rsub	lr,r6,32
80007a6e:	f6 06 09 4b 	lsl	r11,r11,r6
80007a72:	f4 0e 0a 4e 	lsr	lr,r10,lr
80007a76:	1c 4b       	or	r11,lr
80007a78:	f4 06 09 4a 	lsl	r10,r10,r6
80007a7c:	0c 17       	sub	r7,r6
80007a7e:	e0 8a 00 39 	brle	80007af0 <__avr32_f64_sub_subnormal_result>

80007a82 <__avr32_f64_sub_longnormalize_done>:
80007a82:	f4 09 15 15 	lsl	r9,r10,0x15
80007a86:	ab 9a       	lsr	r10,0xb
80007a88:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80007a8c:	ab 9b       	lsr	r11,0xb
80007a8e:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80007a92:	18 4b       	or	r11,r12

80007a94 <__avr32_f64_sub_round>:
80007a94:	fc 17 80 00 	movh	r7,0x8000
80007a98:	ed ba 00 00 	bld	r10,0x0
80007a9c:	f7 b7 01 ff 	subne	r7,-1
80007aa0:	0e 39       	cp.w	r9,r7
80007aa2:	5f 29       	srhs	r9
80007aa4:	12 0a       	add	r10,r9
80007aa6:	5c 0b       	acr	r11
80007aa8:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007aac <__avr32_f64_sub_opL_subnormal>:
80007aac:	ab 79       	lsl	r9,0xb
80007aae:	f3 e8 13 59 	or	r9,r9,r8>>0x15
80007ab2:	ab 78       	lsl	r8,0xb
80007ab4:	f3 e8 10 0e 	or	lr,r9,r8
80007ab8:	f9 b6 01 01 	movne	r6,1
80007abc:	ee 0e 11 00 	rsub	lr,r7,0
80007ac0:	f9 b7 00 01 	moveq	r7,1
80007ac4:	ef bb 00 1f 	bst	r11,0x1f
80007ac8:	f7 ea 10 0e 	or	lr,r11,r10
80007acc:	f9 b7 00 00 	moveq	r7,0
80007ad0:	cb 0b       	rjmp	80007a30 <__avr32_f64_sub_opL_subnormal_done>

80007ad2 <__avr32_f64_sub_opH_nan_or_inf>:
80007ad2:	bf db       	cbr	r11,0x1f
80007ad4:	f7 ea 10 0e 	or	lr,r11,r10
80007ad8:	c0 81       	brne	80007ae8 <__avr32_f64_sub_return_nan>
80007ada:	e0 46 07 ff 	cp.w	r6,2047
80007ade:	c0 50       	breq	80007ae8 <__avr32_f64_sub_return_nan>
80007ae0:	f9 e7 11 4b 	or	r11,r12,r7<<0x14
80007ae4:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007ae8 <__avr32_f64_sub_return_nan>:
80007ae8:	3f fa       	mov	r10,-1
80007aea:	3f fb       	mov	r11,-1
80007aec:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007af0 <__avr32_f64_sub_subnormal_result>:
80007af0:	5c 37       	neg	r7
80007af2:	2f f7       	sub	r7,-1
80007af4:	f1 b7 04 c0 	satu	r7,0x6
80007af8:	e0 47 00 20 	cp.w	r7,32
80007afc:	c1 14       	brge	80007b1e <__avr32_f64_sub_subnormal_result+0x2e>
80007afe:	ee 08 11 20 	rsub	r8,r7,32
80007b02:	f4 08 09 49 	lsl	r9,r10,r8
80007b06:	5f 16       	srne	r6
80007b08:	f4 07 0a 4a 	lsr	r10,r10,r7
80007b0c:	0c 4a       	or	r10,r6
80007b0e:	f6 08 09 49 	lsl	r9,r11,r8
80007b12:	f5 e9 10 0a 	or	r10,r10,r9
80007b16:	f4 07 0a 4b 	lsr	r11,r10,r7
80007b1a:	30 07       	mov	r7,0
80007b1c:	cb 3b       	rjmp	80007a82 <__avr32_f64_sub_longnormalize_done>
80007b1e:	ee 08 11 40 	rsub	r8,r7,64
80007b22:	f6 08 09 49 	lsl	r9,r11,r8
80007b26:	14 49       	or	r9,r10
80007b28:	5f 16       	srne	r6
80007b2a:	f6 07 0a 4a 	lsr	r10,r11,r7
80007b2e:	0c 4a       	or	r10,r6
80007b30:	30 0b       	mov	r11,0
80007b32:	30 07       	mov	r7,0
80007b34:	ca 7b       	rjmp	80007a82 <__avr32_f64_sub_longnormalize_done>
80007b36:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007b3a <__avr32_f64_sub_longshift>:
80007b3a:	f1 b6 04 c0 	satu	r6,0x6
80007b3e:	f0 0e 17 00 	moveq	lr,r8
80007b42:	c0 40       	breq	80007b4a <__avr32_f64_sub_longshift+0x10>
80007b44:	f2 05 09 4e 	lsl	lr,r9,r5
80007b48:	10 4e       	or	lr,r8
80007b4a:	f2 06 0a 48 	lsr	r8,r9,r6
80007b4e:	30 09       	mov	r9,0
80007b50:	58 0e       	cp.w	lr,0
80007b52:	5f 1e       	srne	lr
80007b54:	1c 48       	or	r8,lr
80007b56:	c8 3b       	rjmp	80007a5c <__avr32_f64_sub_shift_done>

80007b58 <__avr32_f64_sub_longnormalize>:
80007b58:	f4 06 12 00 	clz	r6,r10
80007b5c:	f9 b7 03 00 	movlo	r7,0
80007b60:	f9 b6 03 00 	movlo	r6,0
80007b64:	f9 bc 03 00 	movlo	r12,0
80007b68:	f7 b6 02 e0 	subhs	r6,-32
80007b6c:	f4 06 09 4b 	lsl	r11,r10,r6
80007b70:	30 0a       	mov	r10,0
80007b72:	0c 17       	sub	r7,r6
80007b74:	fe 9a ff be 	brle	80007af0 <__avr32_f64_sub_subnormal_result>
80007b78:	c8 5b       	rjmp	80007a82 <__avr32_f64_sub_longnormalize_done>
80007b7a:	d7 03       	nop

80007b7c <__avr32_f64_add_from_sub>:
80007b7c:	ee 19 80 00 	eorh	r9,0x8000

80007b80 <__avr32_f64_add>:
80007b80:	f7 e9 20 0c 	eor	r12,r11,r9
80007b84:	fe 96 ff 2e 	brmi	800079e0 <__avr32_f64_sub_from_add>
80007b88:	eb cd 40 e0 	pushm	r5-r7,lr
80007b8c:	16 9c       	mov	r12,r11
80007b8e:	e6 1c 80 00 	andh	r12,0x8000,COH
80007b92:	bf db       	cbr	r11,0x1f
80007b94:	bf d9       	cbr	r9,0x1f
80007b96:	12 3b       	cp.w	r11,r9
80007b98:	c0 72       	brcc	80007ba6 <__avr32_f64_add+0x26>
80007b9a:	16 97       	mov	r7,r11
80007b9c:	12 9b       	mov	r11,r9
80007b9e:	0e 99       	mov	r9,r7
80007ba0:	14 97       	mov	r7,r10
80007ba2:	10 9a       	mov	r10,r8
80007ba4:	0e 98       	mov	r8,r7
80007ba6:	30 0e       	mov	lr,0
80007ba8:	ef db c2 8b 	bfextu	r7,r11,0x14,0xb
80007bac:	f7 db c0 14 	bfextu	r11,r11,0x0,0x14
80007bb0:	b5 ab       	sbr	r11,0x14
80007bb2:	ed d9 c2 8b 	bfextu	r6,r9,0x14,0xb
80007bb6:	c6 20       	breq	80007c7a <__avr32_f64_add_op2_subnormal>
80007bb8:	f3 d9 c0 14 	bfextu	r9,r9,0x0,0x14
80007bbc:	b5 a9       	sbr	r9,0x14
80007bbe:	e0 47 07 ff 	cp.w	r7,2047
80007bc2:	c2 80       	breq	80007c12 <__avr32_f64_add_opH_nan_or_inf>
80007bc4:	0e 26       	rsub	r6,r7
80007bc6:	c1 20       	breq	80007bea <__avr32_f64_add_shift_done>
80007bc8:	e0 46 00 36 	cp.w	r6,54
80007bcc:	c1 52       	brcc	80007bf6 <__avr32_f64_add_res_of_done>
80007bce:	ec 05 11 20 	rsub	r5,r6,32
80007bd2:	e0 46 00 20 	cp.w	r6,32
80007bd6:	c3 52       	brcc	80007c40 <__avr32_f64_add_longshift>
80007bd8:	f0 05 09 4e 	lsl	lr,r8,r5
80007bdc:	f2 05 09 45 	lsl	r5,r9,r5
80007be0:	f0 06 0a 48 	lsr	r8,r8,r6
80007be4:	f2 06 0a 49 	lsr	r9,r9,r6
80007be8:	0a 48       	or	r8,r5

80007bea <__avr32_f64_add_shift_done>:
80007bea:	10 0a       	add	r10,r8
80007bec:	f6 09 00 4b 	adc	r11,r11,r9
80007bf0:	ed bb 00 15 	bld	r11,0x15
80007bf4:	c3 40       	breq	80007c5c <__avr32_f64_add_res_of>

80007bf6 <__avr32_f64_add_res_of_done>:
80007bf6:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80007bfa:	18 4b       	or	r11,r12

80007bfc <__avr32_f64_add_round>:
80007bfc:	f9 da c0 01 	bfextu	r12,r10,0x0,0x1
80007c00:	18 4e       	or	lr,r12
80007c02:	ee 1e 80 00 	eorh	lr,0x8000
80007c06:	f1 be 04 20 	satu	lr,0x1
80007c0a:	1c 0a       	add	r10,lr
80007c0c:	5c 0b       	acr	r11
80007c0e:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007c12 <__avr32_f64_add_opH_nan_or_inf>:
80007c12:	b5 cb       	cbr	r11,0x14
80007c14:	f7 ea 10 0e 	or	lr,r11,r10
80007c18:	c1 01       	brne	80007c38 <__avr32_f64_add_return_nan>
80007c1a:	e0 46 07 ff 	cp.w	r6,2047
80007c1e:	c0 30       	breq	80007c24 <__avr32_f64_add_opL_nan_or_inf>
80007c20:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007c24 <__avr32_f64_add_opL_nan_or_inf>:
80007c24:	b5 c9       	cbr	r9,0x14
80007c26:	f3 e8 10 0e 	or	lr,r9,r8
80007c2a:	c0 71       	brne	80007c38 <__avr32_f64_add_return_nan>
80007c2c:	30 0a       	mov	r10,0
80007c2e:	fc 1b 7f f0 	movh	r11,0x7ff0
80007c32:	18 4b       	or	r11,r12
80007c34:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007c38 <__avr32_f64_add_return_nan>:
80007c38:	3f fa       	mov	r10,-1
80007c3a:	3f fb       	mov	r11,-1
80007c3c:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc

80007c40 <__avr32_f64_add_longshift>:
80007c40:	f1 b6 04 c0 	satu	r6,0x6
80007c44:	f0 0e 17 00 	moveq	lr,r8
80007c48:	c0 60       	breq	80007c54 <__avr32_f64_add_longshift+0x14>
80007c4a:	f2 05 09 4e 	lsl	lr,r9,r5
80007c4e:	58 08       	cp.w	r8,0
80007c50:	5f 18       	srne	r8
80007c52:	10 4e       	or	lr,r8
80007c54:	f2 06 0a 48 	lsr	r8,r9,r6
80007c58:	30 09       	mov	r9,0
80007c5a:	cc 8b       	rjmp	80007bea <__avr32_f64_add_shift_done>

80007c5c <__avr32_f64_add_res_of>:
80007c5c:	fd ee 10 1e 	or	lr,lr,lr<<0x1
80007c60:	a1 9b       	lsr	r11,0x1
80007c62:	5d 0a       	ror	r10
80007c64:	5d 0e       	ror	lr
80007c66:	2f f7       	sub	r7,-1
80007c68:	e0 47 07 ff 	cp.w	r7,2047
80007c6c:	f9 ba 00 00 	moveq	r10,0
80007c70:	f9 bb 00 00 	moveq	r11,0
80007c74:	f9 be 00 00 	moveq	lr,0
80007c78:	cb fb       	rjmp	80007bf6 <__avr32_f64_add_res_of_done>

80007c7a <__avr32_f64_add_op2_subnormal>:
80007c7a:	30 16       	mov	r6,1
80007c7c:	58 07       	cp.w	r7,0
80007c7e:	ca 01       	brne	80007bbe <__avr32_f64_add+0x3e>
80007c80:	b5 cb       	cbr	r11,0x14
80007c82:	10 0a       	add	r10,r8
80007c84:	f6 09 00 4b 	adc	r11,r11,r9
80007c88:	18 4b       	or	r11,r12
80007c8a:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80007c8e:	d7 03       	nop

80007c90 <__avr32_f64_to_u32>:
80007c90:	58 0b       	cp.w	r11,0
80007c92:	5e 6d       	retmi	0

80007c94 <__avr32_f64_to_s32>:
80007c94:	f6 0c 15 01 	lsl	r12,r11,0x1
80007c98:	b5 9c       	lsr	r12,0x15
80007c9a:	e0 2c 03 ff 	sub	r12,1023
80007c9e:	5e 3d       	retlo	0
80007ca0:	f8 0c 11 1f 	rsub	r12,r12,31
80007ca4:	16 99       	mov	r9,r11
80007ca6:	ab 7b       	lsl	r11,0xb
80007ca8:	bf bb       	sbr	r11,0x1f
80007caa:	f7 ea 13 5b 	or	r11,r11,r10>>0x15
80007cae:	f6 0c 0a 4b 	lsr	r11,r11,r12
80007cb2:	a1 79       	lsl	r9,0x1
80007cb4:	5e 2b       	reths	r11
80007cb6:	5c 3b       	neg	r11
80007cb8:	5e fb       	retal	r11

80007cba <__avr32_u32_to_f64>:
80007cba:	f8 cb 00 00 	sub	r11,r12,0
80007cbe:	30 0c       	mov	r12,0
80007cc0:	c0 38       	rjmp	80007cc6 <__avr32_s32_to_f64+0x4>

80007cc2 <__avr32_s32_to_f64>:
80007cc2:	18 9b       	mov	r11,r12
80007cc4:	5c 4b       	abs	r11
80007cc6:	30 0a       	mov	r10,0
80007cc8:	5e 0b       	reteq	r11
80007cca:	d4 01       	pushm	lr
80007ccc:	e0 69 04 1e 	mov	r9,1054
80007cd0:	f6 08 12 00 	clz	r8,r11
80007cd4:	c1 70       	breq	80007d02 <__avr32_s32_to_f64+0x40>
80007cd6:	c0 c3       	brcs	80007cee <__avr32_s32_to_f64+0x2c>
80007cd8:	f0 0e 11 20 	rsub	lr,r8,32
80007cdc:	f6 08 09 4b 	lsl	r11,r11,r8
80007ce0:	f4 0e 0a 4e 	lsr	lr,r10,lr
80007ce4:	1c 4b       	or	r11,lr
80007ce6:	f4 08 09 4a 	lsl	r10,r10,r8
80007cea:	10 19       	sub	r9,r8
80007cec:	c0 b8       	rjmp	80007d02 <__avr32_s32_to_f64+0x40>
80007cee:	f4 08 12 00 	clz	r8,r10
80007cf2:	f9 b8 03 00 	movlo	r8,0
80007cf6:	f7 b8 02 e0 	subhs	r8,-32
80007cfa:	f4 08 09 4b 	lsl	r11,r10,r8
80007cfe:	30 0a       	mov	r10,0
80007d00:	10 19       	sub	r9,r8
80007d02:	58 09       	cp.w	r9,0
80007d04:	e0 89 00 30 	brgt	80007d64 <__avr32_s32_to_f64+0xa2>
80007d08:	5c 39       	neg	r9
80007d0a:	2f f9       	sub	r9,-1
80007d0c:	e0 49 00 36 	cp.w	r9,54
80007d10:	c0 43       	brcs	80007d18 <__avr32_s32_to_f64+0x56>
80007d12:	30 0b       	mov	r11,0
80007d14:	30 0a       	mov	r10,0
80007d16:	c2 68       	rjmp	80007d62 <__avr32_s32_to_f64+0xa0>
80007d18:	2f 69       	sub	r9,-10
80007d1a:	f2 08 11 20 	rsub	r8,r9,32
80007d1e:	e0 49 00 20 	cp.w	r9,32
80007d22:	c0 b2       	brcc	80007d38 <__avr32_s32_to_f64+0x76>
80007d24:	f4 08 09 4e 	lsl	lr,r10,r8
80007d28:	f6 08 09 48 	lsl	r8,r11,r8
80007d2c:	f4 09 0a 4a 	lsr	r10,r10,r9
80007d30:	f6 09 0a 4b 	lsr	r11,r11,r9
80007d34:	10 4b       	or	r11,r8
80007d36:	c0 88       	rjmp	80007d46 <__avr32_s32_to_f64+0x84>
80007d38:	f6 08 09 4e 	lsl	lr,r11,r8
80007d3c:	14 4e       	or	lr,r10
80007d3e:	16 9a       	mov	r10,r11
80007d40:	30 0b       	mov	r11,0
80007d42:	f4 09 0a 4a 	lsr	r10,r10,r9
80007d46:	ed ba 00 00 	bld	r10,0x0
80007d4a:	c0 92       	brcc	80007d5c <__avr32_s32_to_f64+0x9a>
80007d4c:	1c 7e       	tst	lr,lr
80007d4e:	c0 41       	brne	80007d56 <__avr32_s32_to_f64+0x94>
80007d50:	ed ba 00 01 	bld	r10,0x1
80007d54:	c0 42       	brcc	80007d5c <__avr32_s32_to_f64+0x9a>
80007d56:	2f fa       	sub	r10,-1
80007d58:	f7 bb 02 ff 	subhs	r11,-1
80007d5c:	5c fc       	rol	r12
80007d5e:	5d 0b       	ror	r11
80007d60:	5d 0a       	ror	r10
80007d62:	d8 02       	popm	pc
80007d64:	e0 68 03 ff 	mov	r8,1023
80007d68:	ed ba 00 0b 	bld	r10,0xb
80007d6c:	f7 b8 00 ff 	subeq	r8,-1
80007d70:	10 0a       	add	r10,r8
80007d72:	5c 0b       	acr	r11
80007d74:	f7 b9 03 fe 	sublo	r9,-2
80007d78:	e0 49 07 ff 	cp.w	r9,2047
80007d7c:	c0 55       	brlt	80007d86 <__avr32_s32_to_f64+0xc4>
80007d7e:	30 0a       	mov	r10,0
80007d80:	fc 1b ff e0 	movh	r11,0xffe0
80007d84:	c0 c8       	rjmp	80007d9c <__floatsidf_return_op1>
80007d86:	ed bb 00 1f 	bld	r11,0x1f
80007d8a:	f7 b9 01 01 	subne	r9,1
80007d8e:	ab 9a       	lsr	r10,0xb
80007d90:	f5 eb 11 5a 	or	r10,r10,r11<<0x15
80007d94:	a1 7b       	lsl	r11,0x1
80007d96:	ab 9b       	lsr	r11,0xb
80007d98:	f7 e9 11 5b 	or	r11,r11,r9<<0x15

80007d9c <__floatsidf_return_op1>:
80007d9c:	a1 7c       	lsl	r12,0x1
80007d9e:	5d 0b       	ror	r11
80007da0:	d8 02       	popm	pc

80007da2 <__avr32_f64_cmp_eq>:
80007da2:	10 3a       	cp.w	r10,r8
80007da4:	f2 0b 13 00 	cpc	r11,r9
80007da8:	c0 80       	breq	80007db8 <__avr32_f64_cmp_eq+0x16>
80007daa:	a1 7b       	lsl	r11,0x1
80007dac:	a1 79       	lsl	r9,0x1
80007dae:	14 4b       	or	r11,r10
80007db0:	12 4b       	or	r11,r9
80007db2:	10 4b       	or	r11,r8
80007db4:	5e 0f       	reteq	1
80007db6:	5e fd       	retal	0
80007db8:	a1 7b       	lsl	r11,0x1
80007dba:	fc 1c ff e0 	movh	r12,0xffe0
80007dbe:	58 0a       	cp.w	r10,0
80007dc0:	f8 0b 13 00 	cpc	r11,r12
80007dc4:	5e 8f       	retls	1
80007dc6:	5e fd       	retal	0

80007dc8 <__avr32_f64_cmp_ge>:
80007dc8:	1a de       	st.w	--sp,lr
80007dca:	1a d7       	st.w	--sp,r7
80007dcc:	a1 7b       	lsl	r11,0x1
80007dce:	5f 3c       	srlo	r12
80007dd0:	a1 79       	lsl	r9,0x1
80007dd2:	5f 37       	srlo	r7
80007dd4:	5c fc       	rol	r12
80007dd6:	fc 1e ff e0 	movh	lr,0xffe0
80007dda:	58 0a       	cp.w	r10,0
80007ddc:	fc 0b 13 00 	cpc	r11,lr
80007de0:	e0 8b 00 1d 	brhi	80007e1a <__avr32_f64_cmp_ge+0x52>
80007de4:	58 08       	cp.w	r8,0
80007de6:	fc 09 13 00 	cpc	r9,lr
80007dea:	e0 8b 00 18 	brhi	80007e1a <__avr32_f64_cmp_ge+0x52>
80007dee:	58 0b       	cp.w	r11,0
80007df0:	f5 ba 00 00 	subfeq	r10,0
80007df4:	c1 50       	breq	80007e1e <__avr32_f64_cmp_ge+0x56>
80007df6:	1b 07       	ld.w	r7,sp++
80007df8:	1b 0e       	ld.w	lr,sp++
80007dfa:	58 3c       	cp.w	r12,3
80007dfc:	c0 a0       	breq	80007e10 <__avr32_f64_cmp_ge+0x48>
80007dfe:	58 1c       	cp.w	r12,1
80007e00:	c0 33       	brcs	80007e06 <__avr32_f64_cmp_ge+0x3e>
80007e02:	5e 0f       	reteq	1
80007e04:	5e 1d       	retne	0
80007e06:	10 3a       	cp.w	r10,r8
80007e08:	f2 0b 13 00 	cpc	r11,r9
80007e0c:	5e 2f       	reths	1
80007e0e:	5e 3d       	retlo	0
80007e10:	14 38       	cp.w	r8,r10
80007e12:	f6 09 13 00 	cpc	r9,r11
80007e16:	5e 2f       	reths	1
80007e18:	5e 3d       	retlo	0
80007e1a:	1b 07       	ld.w	r7,sp++
80007e1c:	d8 0a       	popm	pc,r12=0
80007e1e:	58 17       	cp.w	r7,1
80007e20:	5f 0c       	sreq	r12
80007e22:	58 09       	cp.w	r9,0
80007e24:	f5 b8 00 00 	subfeq	r8,0
80007e28:	1b 07       	ld.w	r7,sp++
80007e2a:	1b 0e       	ld.w	lr,sp++
80007e2c:	5e 0f       	reteq	1
80007e2e:	5e fc       	retal	r12

80007e30 <__avr32_f64_cmp_lt>:
80007e30:	1a de       	st.w	--sp,lr
80007e32:	1a d7       	st.w	--sp,r7
80007e34:	a1 7b       	lsl	r11,0x1
80007e36:	5f 3c       	srlo	r12
80007e38:	a1 79       	lsl	r9,0x1
80007e3a:	5f 37       	srlo	r7
80007e3c:	5c fc       	rol	r12
80007e3e:	fc 1e ff e0 	movh	lr,0xffe0
80007e42:	58 0a       	cp.w	r10,0
80007e44:	fc 0b 13 00 	cpc	r11,lr
80007e48:	e0 8b 00 1d 	brhi	80007e82 <__avr32_f64_cmp_lt+0x52>
80007e4c:	58 08       	cp.w	r8,0
80007e4e:	fc 09 13 00 	cpc	r9,lr
80007e52:	e0 8b 00 18 	brhi	80007e82 <__avr32_f64_cmp_lt+0x52>
80007e56:	58 0b       	cp.w	r11,0
80007e58:	f5 ba 00 00 	subfeq	r10,0
80007e5c:	c1 50       	breq	80007e86 <__avr32_f64_cmp_lt+0x56>
80007e5e:	1b 07       	ld.w	r7,sp++
80007e60:	1b 0e       	ld.w	lr,sp++
80007e62:	58 3c       	cp.w	r12,3
80007e64:	c0 a0       	breq	80007e78 <__avr32_f64_cmp_lt+0x48>
80007e66:	58 1c       	cp.w	r12,1
80007e68:	c0 33       	brcs	80007e6e <__avr32_f64_cmp_lt+0x3e>
80007e6a:	5e 0d       	reteq	0
80007e6c:	5e 1f       	retne	1
80007e6e:	10 3a       	cp.w	r10,r8
80007e70:	f2 0b 13 00 	cpc	r11,r9
80007e74:	5e 2d       	reths	0
80007e76:	5e 3f       	retlo	1
80007e78:	14 38       	cp.w	r8,r10
80007e7a:	f6 09 13 00 	cpc	r9,r11
80007e7e:	5e 2d       	reths	0
80007e80:	5e 3f       	retlo	1
80007e82:	1b 07       	ld.w	r7,sp++
80007e84:	d8 0a       	popm	pc,r12=0
80007e86:	58 17       	cp.w	r7,1
80007e88:	5f 1c       	srne	r12
80007e8a:	58 09       	cp.w	r9,0
80007e8c:	f5 b8 00 00 	subfeq	r8,0
80007e90:	1b 07       	ld.w	r7,sp++
80007e92:	1b 0e       	ld.w	lr,sp++
80007e94:	5e 0d       	reteq	0
80007e96:	5e fc       	retal	r12

80007e98 <__avr32_f64_div>:
80007e98:	eb cd 40 ff 	pushm	r0-r7,lr
80007e9c:	f7 e9 20 0e 	eor	lr,r11,r9
80007ea0:	f6 07 16 14 	lsr	r7,r11,0x14
80007ea4:	a9 7b       	lsl	r11,0x9
80007ea6:	f7 ea 13 7b 	or	r11,r11,r10>>0x17
80007eaa:	a9 7a       	lsl	r10,0x9
80007eac:	bd bb       	sbr	r11,0x1d
80007eae:	e4 1b 3f ff 	andh	r11,0x3fff
80007eb2:	ab d7       	cbr	r7,0xb
80007eb4:	e0 80 00 cc 	breq	8000804c <__avr32_f64_div_round_subnormal+0x54>
80007eb8:	e0 47 07 ff 	cp.w	r7,2047
80007ebc:	e0 84 00 b5 	brge	80008026 <__avr32_f64_div_round_subnormal+0x2e>
80007ec0:	f2 06 16 14 	lsr	r6,r9,0x14
80007ec4:	a9 79       	lsl	r9,0x9
80007ec6:	f3 e8 13 79 	or	r9,r9,r8>>0x17
80007eca:	a9 78       	lsl	r8,0x9
80007ecc:	bd b9       	sbr	r9,0x1d
80007ece:	e4 19 3f ff 	andh	r9,0x3fff
80007ed2:	ab d6       	cbr	r6,0xb
80007ed4:	e0 80 00 e2 	breq	80008098 <__avr32_f64_div_round_subnormal+0xa0>
80007ed8:	e0 46 07 ff 	cp.w	r6,2047
80007edc:	e0 84 00 b2 	brge	80008040 <__avr32_f64_div_round_subnormal+0x48>
80007ee0:	0c 17       	sub	r7,r6
80007ee2:	fe 37 fc 01 	sub	r7,-1023
80007ee6:	fc 1c 80 00 	movh	r12,0x8000
80007eea:	f8 03 16 01 	lsr	r3,r12,0x1
80007eee:	e9 d9 c3 62 	bfextu	r4,r9,0x1b,0x2
80007ef2:	5c d4       	com	r4
80007ef4:	e7 d4 d3 82 	bfins	r3,r4,0x1c,0x2
80007ef8:	e6 09 06 44 	mulu.d	r4,r3,r9
80007efc:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80007f00:	e6 05 06 44 	mulu.d	r4,r3,r5
80007f04:	ea 03 15 02 	lsl	r3,r5,0x2
80007f08:	e6 09 06 44 	mulu.d	r4,r3,r9
80007f0c:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80007f10:	e6 05 06 44 	mulu.d	r4,r3,r5
80007f14:	ea 03 15 02 	lsl	r3,r5,0x2
80007f18:	e6 09 06 44 	mulu.d	r4,r3,r9
80007f1c:	f8 05 01 25 	sub	r5,r12,r5<<0x2
80007f20:	e6 05 06 44 	mulu.d	r4,r3,r5
80007f24:	ea 03 15 02 	lsl	r3,r5,0x2
80007f28:	e6 08 06 40 	mulu.d	r0,r3,r8
80007f2c:	e4 09 07 40 	macu.d	r0,r2,r9
80007f30:	e6 09 06 44 	mulu.d	r4,r3,r9
80007f34:	02 04       	add	r4,r1
80007f36:	5c 05       	acr	r5
80007f38:	a3 65       	lsl	r5,0x2
80007f3a:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80007f3e:	a3 64       	lsl	r4,0x2
80007f40:	5c 34       	neg	r4
80007f42:	f8 05 01 45 	sbc	r5,r12,r5
80007f46:	e6 04 06 40 	mulu.d	r0,r3,r4
80007f4a:	e4 05 07 40 	macu.d	r0,r2,r5
80007f4e:	e6 05 06 44 	mulu.d	r4,r3,r5
80007f52:	02 04       	add	r4,r1
80007f54:	5c 05       	acr	r5
80007f56:	ea 03 15 02 	lsl	r3,r5,0x2
80007f5a:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80007f5e:	e8 02 15 02 	lsl	r2,r4,0x2
80007f62:	e6 08 06 40 	mulu.d	r0,r3,r8
80007f66:	e4 09 07 40 	macu.d	r0,r2,r9
80007f6a:	e6 09 06 44 	mulu.d	r4,r3,r9
80007f6e:	02 04       	add	r4,r1
80007f70:	5c 05       	acr	r5
80007f72:	a3 65       	lsl	r5,0x2
80007f74:	eb e4 13 e5 	or	r5,r5,r4>>0x1e
80007f78:	a3 64       	lsl	r4,0x2
80007f7a:	5c 34       	neg	r4
80007f7c:	f8 05 01 45 	sbc	r5,r12,r5
80007f80:	e6 04 06 40 	mulu.d	r0,r3,r4
80007f84:	e4 05 07 40 	macu.d	r0,r2,r5
80007f88:	e6 05 06 44 	mulu.d	r4,r3,r5
80007f8c:	02 04       	add	r4,r1
80007f8e:	5c 05       	acr	r5
80007f90:	ea 03 15 02 	lsl	r3,r5,0x2
80007f94:	e7 e4 13 e3 	or	r3,r3,r4>>0x1e
80007f98:	e8 02 15 02 	lsl	r2,r4,0x2
80007f9c:	e6 0a 06 40 	mulu.d	r0,r3,r10
80007fa0:	e4 0b 07 40 	macu.d	r0,r2,r11
80007fa4:	e6 0b 06 42 	mulu.d	r2,r3,r11
80007fa8:	02 02       	add	r2,r1
80007faa:	5c 03       	acr	r3
80007fac:	ed b3 00 1c 	bld	r3,0x1c
80007fb0:	c0 90       	breq	80007fc2 <__avr32_f64_div+0x12a>
80007fb2:	a1 72       	lsl	r2,0x1
80007fb4:	5c f3       	rol	r3
80007fb6:	20 17       	sub	r7,1
80007fb8:	a3 9a       	lsr	r10,0x3
80007fba:	f5 eb 11 da 	or	r10,r10,r11<<0x1d
80007fbe:	a3 9b       	lsr	r11,0x3
80007fc0:	c0 58       	rjmp	80007fca <__avr32_f64_div+0x132>
80007fc2:	a5 8a       	lsr	r10,0x4
80007fc4:	f5 eb 11 ca 	or	r10,r10,r11<<0x1c
80007fc8:	a5 8b       	lsr	r11,0x4
80007fca:	58 07       	cp.w	r7,0
80007fcc:	e0 8a 00 8b 	brle	800080e2 <__avr32_f64_div_res_subnormal>
80007fd0:	e0 12 ff 00 	andl	r2,0xff00
80007fd4:	e8 12 00 80 	orl	r2,0x80
80007fd8:	e6 08 06 40 	mulu.d	r0,r3,r8
80007fdc:	e4 09 07 40 	macu.d	r0,r2,r9
80007fe0:	e4 08 06 44 	mulu.d	r4,r2,r8
80007fe4:	e6 09 06 48 	mulu.d	r8,r3,r9
80007fe8:	00 05       	add	r5,r0
80007fea:	f0 01 00 48 	adc	r8,r8,r1
80007fee:	5c 09       	acr	r9
80007ff0:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80007ff4:	58 04       	cp.w	r4,0
80007ff6:	5c 25       	cpc	r5

80007ff8 <__avr32_f64_div_round_subnormal>:
80007ff8:	f4 08 13 00 	cpc	r8,r10
80007ffc:	f6 09 13 00 	cpc	r9,r11
80008000:	5f 36       	srlo	r6
80008002:	f8 06 17 00 	moveq	r6,r12
80008006:	e4 0a 16 08 	lsr	r10,r2,0x8
8000800a:	f5 e3 11 8a 	or	r10,r10,r3<<0x18
8000800e:	e6 0b 16 08 	lsr	r11,r3,0x8
80008012:	f7 d7 d2 8b 	bfins	r11,r7,0x14,0xb
80008016:	ed be 00 1f 	bld	lr,0x1f
8000801a:	ef bb 00 1f 	bst	r11,0x1f
8000801e:	0c 0a       	add	r10,r6
80008020:	5c 0b       	acr	r11
80008022:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008026:	e4 1b 00 0f 	andh	r11,0xf
8000802a:	14 4b       	or	r11,r10
8000802c:	e0 81 00 a7 	brne	8000817a <__avr32_f64_div_res_subnormal+0x98>
80008030:	f2 06 16 14 	lsr	r6,r9,0x14
80008034:	ab d6       	cbr	r6,0xb
80008036:	e0 46 07 ff 	cp.w	r6,2047
8000803a:	e0 81 00 a4 	brne	80008182 <__avr32_f64_div_res_subnormal+0xa0>
8000803e:	c9 e8       	rjmp	8000817a <__avr32_f64_div_res_subnormal+0x98>
80008040:	e4 19 00 0f 	andh	r9,0xf
80008044:	10 49       	or	r9,r8
80008046:	e0 81 00 9a 	brne	8000817a <__avr32_f64_div_res_subnormal+0x98>
8000804a:	c9 28       	rjmp	8000816e <__avr32_f64_div_res_subnormal+0x8c>
8000804c:	a3 7b       	lsl	r11,0x3
8000804e:	f7 ea 13 db 	or	r11,r11,r10>>0x1d
80008052:	a3 7a       	lsl	r10,0x3
80008054:	f5 eb 10 04 	or	r4,r10,r11
80008058:	e0 80 00 a0 	breq	80008198 <__avr32_f64_div_op1_zero>
8000805c:	f6 04 12 00 	clz	r4,r11
80008060:	c1 70       	breq	8000808e <__avr32_f64_div_round_subnormal+0x96>
80008062:	c0 c3       	brcs	8000807a <__avr32_f64_div_round_subnormal+0x82>
80008064:	e8 05 11 20 	rsub	r5,r4,32
80008068:	f6 04 09 4b 	lsl	r11,r11,r4
8000806c:	f4 05 0a 45 	lsr	r5,r10,r5
80008070:	0a 4b       	or	r11,r5
80008072:	f4 04 09 4a 	lsl	r10,r10,r4
80008076:	08 17       	sub	r7,r4
80008078:	c0 b8       	rjmp	8000808e <__avr32_f64_div_round_subnormal+0x96>
8000807a:	f4 04 12 00 	clz	r4,r10
8000807e:	f9 b4 03 00 	movlo	r4,0
80008082:	f7 b4 02 e0 	subhs	r4,-32
80008086:	f4 04 09 4b 	lsl	r11,r10,r4
8000808a:	30 0a       	mov	r10,0
8000808c:	08 17       	sub	r7,r4
8000808e:	a3 8a       	lsr	r10,0x2
80008090:	f5 eb 11 ea 	or	r10,r10,r11<<0x1e
80008094:	a3 8b       	lsr	r11,0x2
80008096:	c1 1b       	rjmp	80007eb8 <__avr32_f64_div+0x20>
80008098:	a3 79       	lsl	r9,0x3
8000809a:	f3 e8 13 d9 	or	r9,r9,r8>>0x1d
8000809e:	a3 78       	lsl	r8,0x3
800080a0:	f3 e8 10 04 	or	r4,r9,r8
800080a4:	c6 f0       	breq	80008182 <__avr32_f64_div_res_subnormal+0xa0>
800080a6:	f2 04 12 00 	clz	r4,r9
800080aa:	c1 70       	breq	800080d8 <__avr32_f64_div_round_subnormal+0xe0>
800080ac:	c0 c3       	brcs	800080c4 <__avr32_f64_div_round_subnormal+0xcc>
800080ae:	e8 05 11 20 	rsub	r5,r4,32
800080b2:	f2 04 09 49 	lsl	r9,r9,r4
800080b6:	f0 05 0a 45 	lsr	r5,r8,r5
800080ba:	0a 49       	or	r9,r5
800080bc:	f0 04 09 48 	lsl	r8,r8,r4
800080c0:	08 16       	sub	r6,r4
800080c2:	c0 b8       	rjmp	800080d8 <__avr32_f64_div_round_subnormal+0xe0>
800080c4:	f0 04 12 00 	clz	r4,r8
800080c8:	f9 b4 03 00 	movlo	r4,0
800080cc:	f7 b4 02 e0 	subhs	r4,-32
800080d0:	f0 04 09 49 	lsl	r9,r8,r4
800080d4:	30 08       	mov	r8,0
800080d6:	08 16       	sub	r6,r4
800080d8:	a3 88       	lsr	r8,0x2
800080da:	f1 e9 11 e8 	or	r8,r8,r9<<0x1e
800080de:	a3 89       	lsr	r9,0x2
800080e0:	cf ca       	rjmp	80007ed8 <__avr32_f64_div+0x40>

800080e2 <__avr32_f64_div_res_subnormal>:
800080e2:	5c 37       	neg	r7
800080e4:	2f f7       	sub	r7,-1
800080e6:	f1 b7 04 c0 	satu	r7,0x6
800080ea:	e0 47 00 20 	cp.w	r7,32
800080ee:	c1 54       	brge	80008118 <__avr32_f64_div_res_subnormal+0x36>
800080f0:	ee 06 11 20 	rsub	r6,r7,32
800080f4:	e4 07 0a 42 	lsr	r2,r2,r7
800080f8:	e6 06 09 4c 	lsl	r12,r3,r6
800080fc:	18 42       	or	r2,r12
800080fe:	e6 07 0a 43 	lsr	r3,r3,r7
80008102:	f4 06 09 41 	lsl	r1,r10,r6
80008106:	f4 07 0a 4a 	lsr	r10,r10,r7
8000810a:	f6 06 09 4c 	lsl	r12,r11,r6
8000810e:	18 4a       	or	r10,r12
80008110:	f6 07 0a 4b 	lsr	r11,r11,r7
80008114:	30 00       	mov	r0,0
80008116:	c1 58       	rjmp	80008140 <__avr32_f64_div_res_subnormal+0x5e>
80008118:	ee 06 11 20 	rsub	r6,r7,32
8000811c:	f9 b0 00 00 	moveq	r0,0
80008120:	f9 bc 00 00 	moveq	r12,0
80008124:	c0 50       	breq	8000812e <__avr32_f64_div_res_subnormal+0x4c>
80008126:	f4 06 09 40 	lsl	r0,r10,r6
8000812a:	f6 06 09 4c 	lsl	r12,r11,r6
8000812e:	e6 07 0a 42 	lsr	r2,r3,r7
80008132:	30 03       	mov	r3,0
80008134:	f4 07 0a 41 	lsr	r1,r10,r7
80008138:	18 41       	or	r1,r12
8000813a:	f6 07 0a 4a 	lsr	r10,r11,r7
8000813e:	30 0b       	mov	r11,0
80008140:	e0 12 ff 00 	andl	r2,0xff00
80008144:	e8 12 00 80 	orl	r2,0x80
80008148:	e6 08 06 46 	mulu.d	r6,r3,r8
8000814c:	e4 09 07 46 	macu.d	r6,r2,r9
80008150:	e4 08 06 44 	mulu.d	r4,r2,r8
80008154:	e6 09 06 48 	mulu.d	r8,r3,r9
80008158:	0c 05       	add	r5,r6
8000815a:	f0 07 00 48 	adc	r8,r8,r7
8000815e:	5c 09       	acr	r9
80008160:	30 07       	mov	r7,0
80008162:	f9 d2 c1 01 	bfextu	r12,r2,0x8,0x1
80008166:	00 34       	cp.w	r4,r0
80008168:	e2 05 13 00 	cpc	r5,r1
8000816c:	c4 6b       	rjmp	80007ff8 <__avr32_f64_div_round_subnormal>
8000816e:	1c 9b       	mov	r11,lr
80008170:	e6 1b 80 00 	andh	r11,0x8000,COH
80008174:	30 0a       	mov	r10,0
80008176:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
8000817a:	3f fb       	mov	r11,-1
8000817c:	30 0a       	mov	r10,0
8000817e:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc
80008182:	f5 eb 10 04 	or	r4,r10,r11
80008186:	c0 90       	breq	80008198 <__avr32_f64_div_op1_zero>
80008188:	1c 9b       	mov	r11,lr
8000818a:	e6 1b 80 00 	andh	r11,0x8000,COH
8000818e:	ea 1b 7f f0 	orh	r11,0x7ff0
80008192:	30 0a       	mov	r10,0
80008194:	e3 cd 80 ff 	ldm	sp++,r0-r7,pc

80008198 <__avr32_f64_div_op1_zero>:
80008198:	f1 e9 10 15 	or	r5,r8,r9<<0x1
8000819c:	ce f0       	breq	8000817a <__avr32_f64_div_res_subnormal+0x98>
8000819e:	e9 d9 c2 8b 	bfextu	r4,r9,0x14,0xb
800081a2:	e0 44 07 ff 	cp.w	r4,2047
800081a6:	ce 41       	brne	8000816e <__avr32_f64_div_res_subnormal+0x8c>
800081a8:	f1 e9 10 c5 	or	r5,r8,r9<<0xc
800081ac:	ce 10       	breq	8000816e <__avr32_f64_div_res_subnormal+0x8c>
800081ae:	ce 6b       	rjmp	8000817a <__avr32_f64_div_res_subnormal+0x98>

800081b0 <__avr32_udiv64>:
800081b0:	d4 31       	pushm	r0-r7,lr
800081b2:	1a 97       	mov	r7,sp
800081b4:	20 3d       	sub	sp,12
800081b6:	10 9c       	mov	r12,r8
800081b8:	12 9e       	mov	lr,r9
800081ba:	14 93       	mov	r3,r10
800081bc:	58 09       	cp.w	r9,0
800081be:	e0 81 00 bd 	brne	80008338 <__avr32_udiv64+0x188>
800081c2:	16 38       	cp.w	r8,r11
800081c4:	e0 88 00 40 	brls	80008244 <__avr32_udiv64+0x94>
800081c8:	f0 08 12 00 	clz	r8,r8
800081cc:	c0 d0       	breq	800081e6 <__avr32_udiv64+0x36>
800081ce:	f6 08 09 4b 	lsl	r11,r11,r8
800081d2:	f0 09 11 20 	rsub	r9,r8,32
800081d6:	f8 08 09 4c 	lsl	r12,r12,r8
800081da:	f4 09 0a 49 	lsr	r9,r10,r9
800081de:	f4 08 09 43 	lsl	r3,r10,r8
800081e2:	f3 eb 10 0b 	or	r11,r9,r11
800081e6:	f8 0e 16 10 	lsr	lr,r12,0x10
800081ea:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
800081ee:	f6 0e 0d 00 	divu	r0,r11,lr
800081f2:	e6 0b 16 10 	lsr	r11,r3,0x10
800081f6:	00 99       	mov	r9,r0
800081f8:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
800081fc:	e0 0a 02 48 	mul	r8,r0,r10
80008200:	10 3b       	cp.w	r11,r8
80008202:	c0 a2       	brcc	80008216 <__avr32_udiv64+0x66>
80008204:	20 19       	sub	r9,1
80008206:	18 0b       	add	r11,r12
80008208:	18 3b       	cp.w	r11,r12
8000820a:	c0 63       	brcs	80008216 <__avr32_udiv64+0x66>
8000820c:	10 3b       	cp.w	r11,r8
8000820e:	f7 b9 03 01 	sublo	r9,1
80008212:	f7 dc e3 0b 	addcs	r11,r11,r12
80008216:	f6 08 01 01 	sub	r1,r11,r8
8000821a:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
8000821e:	e2 0e 0d 00 	divu	r0,r1,lr
80008222:	e7 e1 11 03 	or	r3,r3,r1<<0x10
80008226:	00 98       	mov	r8,r0
80008228:	e0 0a 02 4a 	mul	r10,r0,r10
8000822c:	14 33       	cp.w	r3,r10
8000822e:	c0 82       	brcc	8000823e <__avr32_udiv64+0x8e>
80008230:	20 18       	sub	r8,1
80008232:	18 03       	add	r3,r12
80008234:	18 33       	cp.w	r3,r12
80008236:	c0 43       	brcs	8000823e <__avr32_udiv64+0x8e>
80008238:	14 33       	cp.w	r3,r10
8000823a:	f7 b8 03 01 	sublo	r8,1
8000823e:	f1 e9 11 08 	or	r8,r8,r9<<0x10
80008242:	cd f8       	rjmp	80008400 <__avr32_udiv64+0x250>
80008244:	58 08       	cp.w	r8,0
80008246:	c0 51       	brne	80008250 <__avr32_udiv64+0xa0>
80008248:	30 19       	mov	r9,1
8000824a:	f2 08 0d 08 	divu	r8,r9,r8
8000824e:	10 9c       	mov	r12,r8
80008250:	f8 06 12 00 	clz	r6,r12
80008254:	c0 41       	brne	8000825c <__avr32_udiv64+0xac>
80008256:	18 1b       	sub	r11,r12
80008258:	30 19       	mov	r9,1
8000825a:	c4 08       	rjmp	800082da <__avr32_udiv64+0x12a>
8000825c:	ec 01 11 20 	rsub	r1,r6,32
80008260:	f4 01 0a 49 	lsr	r9,r10,r1
80008264:	f8 06 09 4c 	lsl	r12,r12,r6
80008268:	f6 06 09 48 	lsl	r8,r11,r6
8000826c:	f6 01 0a 41 	lsr	r1,r11,r1
80008270:	f3 e8 10 08 	or	r8,r9,r8
80008274:	f8 03 16 10 	lsr	r3,r12,0x10
80008278:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
8000827c:	e2 03 0d 00 	divu	r0,r1,r3
80008280:	f0 0b 16 10 	lsr	r11,r8,0x10
80008284:	00 9e       	mov	lr,r0
80008286:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
8000828a:	e0 05 02 49 	mul	r9,r0,r5
8000828e:	12 3b       	cp.w	r11,r9
80008290:	c0 a2       	brcc	800082a4 <__avr32_udiv64+0xf4>
80008292:	20 1e       	sub	lr,1
80008294:	18 0b       	add	r11,r12
80008296:	18 3b       	cp.w	r11,r12
80008298:	c0 63       	brcs	800082a4 <__avr32_udiv64+0xf4>
8000829a:	12 3b       	cp.w	r11,r9
8000829c:	f7 be 03 01 	sublo	lr,1
800082a0:	f7 dc e3 0b 	addcs	r11,r11,r12
800082a4:	12 1b       	sub	r11,r9
800082a6:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
800082aa:	f6 03 0d 02 	divu	r2,r11,r3
800082ae:	f1 e3 11 08 	or	r8,r8,r3<<0x10
800082b2:	04 99       	mov	r9,r2
800082b4:	e4 05 02 4b 	mul	r11,r2,r5
800082b8:	16 38       	cp.w	r8,r11
800082ba:	c0 a2       	brcc	800082ce <__avr32_udiv64+0x11e>
800082bc:	20 19       	sub	r9,1
800082be:	18 08       	add	r8,r12
800082c0:	18 38       	cp.w	r8,r12
800082c2:	c0 63       	brcs	800082ce <__avr32_udiv64+0x11e>
800082c4:	16 38       	cp.w	r8,r11
800082c6:	f7 b9 03 01 	sublo	r9,1
800082ca:	f1 dc e3 08 	addcs	r8,r8,r12
800082ce:	f4 06 09 43 	lsl	r3,r10,r6
800082d2:	f0 0b 01 0b 	sub	r11,r8,r11
800082d6:	f3 ee 11 09 	or	r9,r9,lr<<0x10
800082da:	f8 06 16 10 	lsr	r6,r12,0x10
800082de:	fd dc c0 10 	bfextu	lr,r12,0x0,0x10
800082e2:	f6 06 0d 00 	divu	r0,r11,r6
800082e6:	e6 0b 16 10 	lsr	r11,r3,0x10
800082ea:	00 9a       	mov	r10,r0
800082ec:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
800082f0:	e0 0e 02 48 	mul	r8,r0,lr
800082f4:	10 3b       	cp.w	r11,r8
800082f6:	c0 a2       	brcc	8000830a <__avr32_udiv64+0x15a>
800082f8:	20 1a       	sub	r10,1
800082fa:	18 0b       	add	r11,r12
800082fc:	18 3b       	cp.w	r11,r12
800082fe:	c0 63       	brcs	8000830a <__avr32_udiv64+0x15a>
80008300:	10 3b       	cp.w	r11,r8
80008302:	f7 ba 03 01 	sublo	r10,1
80008306:	f7 dc e3 0b 	addcs	r11,r11,r12
8000830a:	f6 08 01 01 	sub	r1,r11,r8
8000830e:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
80008312:	e2 06 0d 00 	divu	r0,r1,r6
80008316:	e7 e1 11 03 	or	r3,r3,r1<<0x10
8000831a:	00 98       	mov	r8,r0
8000831c:	e0 0e 02 4b 	mul	r11,r0,lr
80008320:	16 33       	cp.w	r3,r11
80008322:	c0 82       	brcc	80008332 <__avr32_udiv64+0x182>
80008324:	20 18       	sub	r8,1
80008326:	18 03       	add	r3,r12
80008328:	18 33       	cp.w	r3,r12
8000832a:	c0 43       	brcs	80008332 <__avr32_udiv64+0x182>
8000832c:	16 33       	cp.w	r3,r11
8000832e:	f7 b8 03 01 	sublo	r8,1
80008332:	f1 ea 11 08 	or	r8,r8,r10<<0x10
80008336:	c6 98       	rjmp	80008408 <__avr32_udiv64+0x258>
80008338:	16 39       	cp.w	r9,r11
8000833a:	e0 8b 00 65 	brhi	80008404 <__avr32_udiv64+0x254>
8000833e:	f2 09 12 00 	clz	r9,r9
80008342:	c0 b1       	brne	80008358 <__avr32_udiv64+0x1a8>
80008344:	10 3a       	cp.w	r10,r8
80008346:	5f 2a       	srhs	r10
80008348:	1c 3b       	cp.w	r11,lr
8000834a:	5f b8       	srhi	r8
8000834c:	10 4a       	or	r10,r8
8000834e:	f2 0a 18 00 	cp.b	r10,r9
80008352:	c5 90       	breq	80008404 <__avr32_udiv64+0x254>
80008354:	30 18       	mov	r8,1
80008356:	c5 98       	rjmp	80008408 <__avr32_udiv64+0x258>
80008358:	f0 09 09 46 	lsl	r6,r8,r9
8000835c:	f2 03 11 20 	rsub	r3,r9,32
80008360:	fc 09 09 4e 	lsl	lr,lr,r9
80008364:	f0 03 0a 48 	lsr	r8,r8,r3
80008368:	f6 09 09 4c 	lsl	r12,r11,r9
8000836c:	f4 03 0a 42 	lsr	r2,r10,r3
80008370:	ef 46 ff f4 	st.w	r7[-12],r6
80008374:	f6 03 0a 43 	lsr	r3,r11,r3
80008378:	18 42       	or	r2,r12
8000837a:	f1 ee 10 0c 	or	r12,r8,lr
8000837e:	f8 01 16 10 	lsr	r1,r12,0x10
80008382:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
80008386:	e6 01 0d 04 	divu	r4,r3,r1
8000838a:	e4 03 16 10 	lsr	r3,r2,0x10
8000838e:	08 9e       	mov	lr,r4
80008390:	e7 e5 11 03 	or	r3,r3,r5<<0x10
80008394:	e8 06 02 48 	mul	r8,r4,r6
80008398:	10 33       	cp.w	r3,r8
8000839a:	c0 a2       	brcc	800083ae <__avr32_udiv64+0x1fe>
8000839c:	20 1e       	sub	lr,1
8000839e:	18 03       	add	r3,r12
800083a0:	18 33       	cp.w	r3,r12
800083a2:	c0 63       	brcs	800083ae <__avr32_udiv64+0x1fe>
800083a4:	10 33       	cp.w	r3,r8
800083a6:	f7 be 03 01 	sublo	lr,1
800083aa:	e7 dc e3 03 	addcs	r3,r3,r12
800083ae:	10 13       	sub	r3,r8
800083b0:	f7 d2 c0 10 	bfextu	r11,r2,0x0,0x10
800083b4:	e6 01 0d 00 	divu	r0,r3,r1
800083b8:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
800083bc:	00 98       	mov	r8,r0
800083be:	e0 06 02 46 	mul	r6,r0,r6
800083c2:	0c 3b       	cp.w	r11,r6
800083c4:	c0 a2       	brcc	800083d8 <__avr32_udiv64+0x228>
800083c6:	20 18       	sub	r8,1
800083c8:	18 0b       	add	r11,r12
800083ca:	18 3b       	cp.w	r11,r12
800083cc:	c0 63       	brcs	800083d8 <__avr32_udiv64+0x228>
800083ce:	0c 3b       	cp.w	r11,r6
800083d0:	f7 dc e3 0b 	addcs	r11,r11,r12
800083d4:	f7 b8 03 01 	sublo	r8,1
800083d8:	f1 ee 11 08 	or	r8,r8,lr<<0x10
800083dc:	ee f4 ff f4 	ld.w	r4,r7[-12]
800083e0:	0c 1b       	sub	r11,r6
800083e2:	f0 04 06 42 	mulu.d	r2,r8,r4
800083e6:	06 95       	mov	r5,r3
800083e8:	16 35       	cp.w	r5,r11
800083ea:	e0 8b 00 0a 	brhi	800083fe <__avr32_udiv64+0x24e>
800083ee:	5f 0b       	sreq	r11
800083f0:	f4 09 09 49 	lsl	r9,r10,r9
800083f4:	12 32       	cp.w	r2,r9
800083f6:	5f b9       	srhi	r9
800083f8:	f7 e9 00 09 	and	r9,r11,r9
800083fc:	c0 60       	breq	80008408 <__avr32_udiv64+0x258>
800083fe:	20 18       	sub	r8,1
80008400:	30 09       	mov	r9,0
80008402:	c0 38       	rjmp	80008408 <__avr32_udiv64+0x258>
80008404:	30 09       	mov	r9,0
80008406:	12 98       	mov	r8,r9
80008408:	10 9a       	mov	r10,r8
8000840a:	12 93       	mov	r3,r9
8000840c:	10 92       	mov	r2,r8
8000840e:	12 9b       	mov	r11,r9
80008410:	2f dd       	sub	sp,-12
80008412:	d8 32       	popm	r0-r7,pc

80008414 <__avr32_umod64>:
80008414:	d4 31       	pushm	r0-r7,lr
80008416:	1a 97       	mov	r7,sp
80008418:	20 3d       	sub	sp,12
8000841a:	10 9c       	mov	r12,r8
8000841c:	12 95       	mov	r5,r9
8000841e:	14 9e       	mov	lr,r10
80008420:	16 91       	mov	r1,r11
80008422:	16 96       	mov	r6,r11
80008424:	58 09       	cp.w	r9,0
80008426:	e0 81 00 81 	brne	80008528 <__avr32_umod64+0x114>
8000842a:	16 38       	cp.w	r8,r11
8000842c:	e0 88 00 12 	brls	80008450 <__avr32_umod64+0x3c>
80008430:	f0 08 12 00 	clz	r8,r8
80008434:	c4 e0       	breq	800084d0 <__avr32_umod64+0xbc>
80008436:	f6 08 09 46 	lsl	r6,r11,r8
8000843a:	f8 08 09 4c 	lsl	r12,r12,r8
8000843e:	f0 0b 11 20 	rsub	r11,r8,32
80008442:	f4 08 09 4e 	lsl	lr,r10,r8
80008446:	f4 0b 0a 4b 	lsr	r11,r10,r11
8000844a:	f7 e6 10 06 	or	r6,r11,r6
8000844e:	c4 18       	rjmp	800084d0 <__avr32_umod64+0xbc>
80008450:	58 08       	cp.w	r8,0
80008452:	c0 51       	brne	8000845c <__avr32_umod64+0x48>
80008454:	30 19       	mov	r9,1
80008456:	f2 08 0d 08 	divu	r8,r9,r8
8000845a:	10 9c       	mov	r12,r8
8000845c:	f8 08 12 00 	clz	r8,r12
80008460:	c0 31       	brne	80008466 <__avr32_umod64+0x52>
80008462:	18 16       	sub	r6,r12
80008464:	c3 68       	rjmp	800084d0 <__avr32_umod64+0xbc>
80008466:	f0 03 11 20 	rsub	r3,r8,32
8000846a:	f4 03 0a 4b 	lsr	r11,r10,r3
8000846e:	f8 08 09 4c 	lsl	r12,r12,r8
80008472:	ec 08 09 49 	lsl	r9,r6,r8
80008476:	ec 03 0a 43 	lsr	r3,r6,r3
8000847a:	f7 e9 10 09 	or	r9,r11,r9
8000847e:	f8 05 16 10 	lsr	r5,r12,0x10
80008482:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
80008486:	e6 05 0d 02 	divu	r2,r3,r5
8000848a:	f2 0e 16 10 	lsr	lr,r9,0x10
8000848e:	ec 02 02 4b 	mul	r11,r6,r2
80008492:	fd e3 11 0e 	or	lr,lr,r3<<0x10
80008496:	16 3e       	cp.w	lr,r11
80008498:	c0 72       	brcc	800084a6 <__avr32_umod64+0x92>
8000849a:	18 0e       	add	lr,r12
8000849c:	18 3e       	cp.w	lr,r12
8000849e:	c0 43       	brcs	800084a6 <__avr32_umod64+0x92>
800084a0:	16 3e       	cp.w	lr,r11
800084a2:	fd dc e3 0e 	addcs	lr,lr,r12
800084a6:	fc 0b 01 03 	sub	r3,lr,r11
800084aa:	f3 d9 c0 10 	bfextu	r9,r9,0x0,0x10
800084ae:	e6 05 0d 02 	divu	r2,r3,r5
800084b2:	f3 e3 11 09 	or	r9,r9,r3<<0x10
800084b6:	a5 36       	mul	r6,r2
800084b8:	0c 39       	cp.w	r9,r6
800084ba:	c0 72       	brcc	800084c8 <__avr32_umod64+0xb4>
800084bc:	18 09       	add	r9,r12
800084be:	18 39       	cp.w	r9,r12
800084c0:	c0 43       	brcs	800084c8 <__avr32_umod64+0xb4>
800084c2:	0c 39       	cp.w	r9,r6
800084c4:	f3 dc e3 09 	addcs	r9,r9,r12
800084c8:	f2 06 01 06 	sub	r6,r9,r6
800084cc:	f4 08 09 4e 	lsl	lr,r10,r8
800084d0:	f8 0a 16 10 	lsr	r10,r12,0x10
800084d4:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
800084d8:	ec 0a 0d 02 	divu	r2,r6,r10
800084dc:	fc 09 16 10 	lsr	r9,lr,0x10
800084e0:	ea 02 02 4b 	mul	r11,r5,r2
800084e4:	f3 e3 11 09 	or	r9,r9,r3<<0x10
800084e8:	16 39       	cp.w	r9,r11
800084ea:	c0 72       	brcc	800084f8 <__avr32_umod64+0xe4>
800084ec:	18 09       	add	r9,r12
800084ee:	18 39       	cp.w	r9,r12
800084f0:	c0 43       	brcs	800084f8 <__avr32_umod64+0xe4>
800084f2:	16 39       	cp.w	r9,r11
800084f4:	f3 dc e3 09 	addcs	r9,r9,r12
800084f8:	f2 0b 01 0b 	sub	r11,r9,r11
800084fc:	fd de c0 10 	bfextu	lr,lr,0x0,0x10
80008500:	f6 0a 0d 0a 	divu	r10,r11,r10
80008504:	fd eb 11 0e 	or	lr,lr,r11<<0x10
80008508:	ea 0a 02 4a 	mul	r10,r5,r10
8000850c:	14 3e       	cp.w	lr,r10
8000850e:	c0 72       	brcc	8000851c <__avr32_umod64+0x108>
80008510:	18 0e       	add	lr,r12
80008512:	18 3e       	cp.w	lr,r12
80008514:	c0 43       	brcs	8000851c <__avr32_umod64+0x108>
80008516:	14 3e       	cp.w	lr,r10
80008518:	fd dc e3 0e 	addcs	lr,lr,r12
8000851c:	fc 0a 01 0a 	sub	r10,lr,r10
80008520:	30 0b       	mov	r11,0
80008522:	f4 08 0a 4a 	lsr	r10,r10,r8
80008526:	c7 b8       	rjmp	8000861c <__avr32_umod64+0x208>
80008528:	16 39       	cp.w	r9,r11
8000852a:	e0 8b 00 79 	brhi	8000861c <__avr32_umod64+0x208>
8000852e:	f2 09 12 00 	clz	r9,r9
80008532:	c1 21       	brne	80008556 <__avr32_umod64+0x142>
80008534:	10 3a       	cp.w	r10,r8
80008536:	5f 2b       	srhs	r11
80008538:	0a 31       	cp.w	r1,r5
8000853a:	5f ba       	srhi	r10
8000853c:	f7 ea 10 0a 	or	r10,r11,r10
80008540:	f2 0a 18 00 	cp.b	r10,r9
80008544:	c0 60       	breq	80008550 <__avr32_umod64+0x13c>
80008546:	fc 08 01 0c 	sub	r12,lr,r8
8000854a:	e2 05 01 46 	sbc	r6,r1,r5
8000854e:	18 9e       	mov	lr,r12
80008550:	0c 9b       	mov	r11,r6
80008552:	1c 9a       	mov	r10,lr
80008554:	c6 48       	rjmp	8000861c <__avr32_umod64+0x208>
80008556:	ea 09 09 4c 	lsl	r12,r5,r9
8000855a:	f2 06 11 20 	rsub	r6,r9,32
8000855e:	f6 09 09 4b 	lsl	r11,r11,r9
80008562:	f0 09 09 42 	lsl	r2,r8,r9
80008566:	ef 46 ff f4 	st.w	r7[-12],r6
8000856a:	f0 06 0a 48 	lsr	r8,r8,r6
8000856e:	18 48       	or	r8,r12
80008570:	e2 06 0a 4c 	lsr	r12,r1,r6
80008574:	f4 09 09 43 	lsl	r3,r10,r9
80008578:	fd d8 c0 10 	bfextu	lr,r8,0x0,0x10
8000857c:	f4 06 0a 4a 	lsr	r10,r10,r6
80008580:	16 4a       	or	r10,r11
80008582:	f0 0b 16 10 	lsr	r11,r8,0x10
80008586:	f8 0b 0d 04 	divu	r4,r12,r11
8000858a:	f4 0c 16 10 	lsr	r12,r10,0x10
8000858e:	08 91       	mov	r1,r4
80008590:	f9 e5 11 0c 	or	r12,r12,r5<<0x10
80008594:	e8 0e 02 46 	mul	r6,r4,lr
80008598:	0c 3c       	cp.w	r12,r6
8000859a:	c0 a2       	brcc	800085ae <__avr32_umod64+0x19a>
8000859c:	20 11       	sub	r1,1
8000859e:	10 0c       	add	r12,r8
800085a0:	10 3c       	cp.w	r12,r8
800085a2:	c0 63       	brcs	800085ae <__avr32_umod64+0x19a>
800085a4:	0c 3c       	cp.w	r12,r6
800085a6:	f7 b1 03 01 	sublo	r1,1
800085aa:	f9 d8 e3 0c 	addcs	r12,r12,r8
800085ae:	0c 1c       	sub	r12,r6
800085b0:	f5 da c0 10 	bfextu	r10,r10,0x0,0x10
800085b4:	f8 0b 0d 04 	divu	r4,r12,r11
800085b8:	f5 e5 11 0b 	or	r11,r10,r5<<0x10
800085bc:	08 96       	mov	r6,r4
800085be:	e8 0e 02 4e 	mul	lr,r4,lr
800085c2:	1c 3b       	cp.w	r11,lr
800085c4:	c0 a2       	brcc	800085d8 <__avr32_umod64+0x1c4>
800085c6:	20 16       	sub	r6,1
800085c8:	10 0b       	add	r11,r8
800085ca:	10 3b       	cp.w	r11,r8
800085cc:	c0 63       	brcs	800085d8 <__avr32_umod64+0x1c4>
800085ce:	1c 3b       	cp.w	r11,lr
800085d0:	f7 b6 03 01 	sublo	r6,1
800085d4:	f7 d8 e3 0b 	addcs	r11,r11,r8
800085d8:	ed e1 11 01 	or	r1,r6,r1<<0x10
800085dc:	1c 1b       	sub	r11,lr
800085de:	e2 02 06 40 	mulu.d	r0,r1,r2
800085e2:	00 9e       	mov	lr,r0
800085e4:	02 9c       	mov	r12,r1
800085e6:	16 3c       	cp.w	r12,r11
800085e8:	e0 8b 00 08 	brhi	800085f8 <__avr32_umod64+0x1e4>
800085ec:	5f 06       	sreq	r6
800085ee:	06 30       	cp.w	r0,r3
800085f0:	5f ba       	srhi	r10
800085f2:	ed ea 00 0a 	and	r10,r6,r10
800085f6:	c0 60       	breq	80008602 <__avr32_umod64+0x1ee>
800085f8:	fc 02 01 04 	sub	r4,lr,r2
800085fc:	f8 08 01 4c 	sbc	r12,r12,r8
80008600:	08 9e       	mov	lr,r4
80008602:	e6 0e 01 0a 	sub	r10,r3,lr
80008606:	f6 0c 01 4c 	sbc	r12,r11,r12
8000860a:	ee f1 ff f4 	ld.w	r1,r7[-12]
8000860e:	f8 09 0a 4b 	lsr	r11,r12,r9
80008612:	f4 09 0a 4a 	lsr	r10,r10,r9
80008616:	f8 01 09 4c 	lsl	r12,r12,r1
8000861a:	18 4a       	or	r10,r12
8000861c:	2f dd       	sub	sp,-12
8000861e:	d8 32       	popm	r0-r7,pc

Disassembly of section .exception:

80008800 <_evba>:
_evba:

	.org  0x000
	// Unrecoverable Exception.
_handle_Unrecoverable_Exception:
	rjmp $
80008800:	c0 08       	rjmp	80008800 <_evba>
	...

80008804 <_handle_TLB_Multiple_Hit>:

	.org  0x004
	// TLB Multiple Hit.
_handle_TLB_Multiple_Hit:
	rjmp $
80008804:	c0 08       	rjmp	80008804 <_handle_TLB_Multiple_Hit>
	...

80008808 <_handle_Bus_Error_Data_Fetch>:

	.org  0x008
	// Bus Error Data Fetch.
_handle_Bus_Error_Data_Fetch:
	rjmp $
80008808:	c0 08       	rjmp	80008808 <_handle_Bus_Error_Data_Fetch>
	...

8000880c <_handle_Bus_Error_Instruction_Fetch>:

	.org  0x00C
	// Bus Error Instruction Fetch.
_handle_Bus_Error_Instruction_Fetch:
	rjmp $
8000880c:	c0 08       	rjmp	8000880c <_handle_Bus_Error_Instruction_Fetch>
	...

80008810 <_handle_NMI>:

	.org  0x010
	// NMI.
_handle_NMI:
	rjmp $
80008810:	c0 08       	rjmp	80008810 <_handle_NMI>
	...

80008814 <_handle_Instruction_Address>:

	.org  0x014
	// Instruction Address.
_handle_Instruction_Address:
	rjmp $
80008814:	c0 08       	rjmp	80008814 <_handle_Instruction_Address>
	...

80008818 <_handle_ITLB_Protection>:

	.org  0x018
	// ITLB Protection.
_handle_ITLB_Protection:
	rjmp $
80008818:	c0 08       	rjmp	80008818 <_handle_ITLB_Protection>
	...

8000881c <_handle_Breakpoint>:

	.org  0x01C
	// Breakpoint.
_handle_Breakpoint:
	rjmp $
8000881c:	c0 08       	rjmp	8000881c <_handle_Breakpoint>
	...

80008820 <_handle_Illegal_Opcode>:

	.org  0x020
	// Illegal Opcode.
_handle_Illegal_Opcode:
	rjmp $
80008820:	c0 08       	rjmp	80008820 <_handle_Illegal_Opcode>
	...

80008824 <_handle_Unimplemented_Instruction>:

	.org  0x024
	// Unimplemented Instruction.
_handle_Unimplemented_Instruction:
	rjmp $
80008824:	c0 08       	rjmp	80008824 <_handle_Unimplemented_Instruction>
	...

80008828 <_handle_Privilege_Violation>:

	.org  0x028
	// Privilege Violation.
_handle_Privilege_Violation:
	rjmp $
80008828:	c0 08       	rjmp	80008828 <_handle_Privilege_Violation>
	...

8000882c <_handle_Floating_Point>:

	.org  0x02C
	// Floating-Point: UNUSED IN AVR32UC and AVR32AP.
_handle_Floating_Point:
	rjmp $
8000882c:	c0 08       	rjmp	8000882c <_handle_Floating_Point>
	...

80008830 <_handle_Coprocessor_Absent>:

	.org  0x030
	// Coprocessor Absent: UNUSED IN AVR32UC.
_handle_Coprocessor_Absent:
	rjmp $
80008830:	c0 08       	rjmp	80008830 <_handle_Coprocessor_Absent>
	...

80008834 <_handle_Data_Address_Read>:

	.org  0x034
	// Data Address (Read).
_handle_Data_Address_Read:
	rjmp $
80008834:	c0 08       	rjmp	80008834 <_handle_Data_Address_Read>
	...

80008838 <_handle_Data_Address_Write>:

	.org  0x038
	// Data Address (Write).
_handle_Data_Address_Write:
	rjmp $
80008838:	c0 08       	rjmp	80008838 <_handle_Data_Address_Write>
	...

8000883c <_handle_DTLB_Protection_Read>:

	.org  0x03C
	// DTLB Protection (Read).
_handle_DTLB_Protection_Read:
	rjmp $
8000883c:	c0 08       	rjmp	8000883c <_handle_DTLB_Protection_Read>
	...

80008840 <_handle_DTLB_Protection_Write>:

	.org  0x040
	// DTLB Protection (Write).
_handle_DTLB_Protection_Write:
	rjmp $
80008840:	c0 08       	rjmp	80008840 <_handle_DTLB_Protection_Write>
	...

80008844 <_handle_DTLB_Modified>:

	.org  0x044
	// DTLB Modified: UNUSED IN AVR32UC.
_handle_DTLB_Modified:
	rjmp $
80008844:	c0 08       	rjmp	80008844 <_handle_DTLB_Modified>
	...

80008850 <_handle_ITLB_Miss>:

	.org  0x050
	// ITLB Miss.
_handle_ITLB_Miss:
	rjmp $
80008850:	c0 08       	rjmp	80008850 <_handle_ITLB_Miss>
	...

80008860 <_handle_DTLB_Miss_Read>:

	.org  0x060
	// DTLB Miss (Read).
_handle_DTLB_Miss_Read:
	rjmp $
80008860:	c0 08       	rjmp	80008860 <_handle_DTLB_Miss_Read>
	...

80008870 <_handle_DTLB_Miss_Write>:

	.org  0x070
	// DTLB Miss (Write).
_handle_DTLB_Miss_Write:
	rjmp $
80008870:	c0 08       	rjmp	80008870 <_handle_DTLB_Miss_Write>
	...

80008900 <_handle_Supervisor_Call>:

	.org  0x100
	// Supervisor Call.
_handle_Supervisor_Call:
	rjmp $
80008900:	c0 08       	rjmp	80008900 <_handle_Supervisor_Call>
80008902:	d7 03       	nop

80008904 <_int0>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80008904:	30 0c       	mov	r12,0
80008906:	fe b0 d0 c3 	rcall	80002a8c <_get_interrupt_handler>
8000890a:	58 0c       	cp.w	r12,0
8000890c:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
80008910:	d6 03       	rete

80008912 <_int1>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80008912:	30 1c       	mov	r12,1
80008914:	fe b0 d0 bc 	rcall	80002a8c <_get_interrupt_handler>
80008918:	58 0c       	cp.w	r12,0
8000891a:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000891e:	d6 03       	rete

80008920 <_int2>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
80008920:	30 2c       	mov	r12,2
80008922:	fe b0 d0 b5 	rcall	80002a8c <_get_interrupt_handler>
80008926:	58 0c       	cp.w	r12,0
80008928:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000892c:	d6 03       	rete

8000892e <_int3>:
	 * RSR_INTx by the CPU upon interrupt entry. No other register is saved
	 * by hardware.
	 */
	pushm   r8-r12, lr
#endif
	// Pass the int_level parameter to the _get_interrupt_handler function.
8000892e:	30 3c       	mov	r12,3
80008930:	fe b0 d0 ae 	rcall	80002a8c <_get_interrupt_handler>
80008934:	58 0c       	cp.w	r12,0
80008936:	f8 0f 17 10 	movne	pc,r12
	popm    r8-r12, lr
#endif
	/*
	 * If this was a spurious interrupt (R12 == NULL), return from event
	 * handler.
	 */
8000893a:	d6 03       	rete
8000893c:	d7 03       	nop
8000893e:	d7 03       	nop
80008940:	d7 03       	nop
80008942:	d7 03       	nop
80008944:	d7 03       	nop
80008946:	d7 03       	nop
80008948:	d7 03       	nop
8000894a:	d7 03       	nop
8000894c:	d7 03       	nop
8000894e:	d7 03       	nop
80008950:	d7 03       	nop
80008952:	d7 03       	nop
80008954:	d7 03       	nop
80008956:	d7 03       	nop
80008958:	d7 03       	nop
8000895a:	d7 03       	nop
8000895c:	d7 03       	nop
8000895e:	d7 03       	nop
80008960:	d7 03       	nop
80008962:	d7 03       	nop
80008964:	d7 03       	nop
80008966:	d7 03       	nop
80008968:	d7 03       	nop
8000896a:	d7 03       	nop
8000896c:	d7 03       	nop
8000896e:	d7 03       	nop
80008970:	d7 03       	nop
80008972:	d7 03       	nop
80008974:	d7 03       	nop
80008976:	d7 03       	nop
80008978:	d7 03       	nop
8000897a:	d7 03       	nop
8000897c:	d7 03       	nop
8000897e:	d7 03       	nop
80008980:	d7 03       	nop
80008982:	d7 03       	nop
80008984:	d7 03       	nop
80008986:	d7 03       	nop
80008988:	d7 03       	nop
8000898a:	d7 03       	nop
8000898c:	d7 03       	nop
8000898e:	d7 03       	nop
80008990:	d7 03       	nop
80008992:	d7 03       	nop
80008994:	d7 03       	nop
80008996:	d7 03       	nop
80008998:	d7 03       	nop
8000899a:	d7 03       	nop
8000899c:	d7 03       	nop
8000899e:	d7 03       	nop
800089a0:	d7 03       	nop
800089a2:	d7 03       	nop
800089a4:	d7 03       	nop
800089a6:	d7 03       	nop
800089a8:	d7 03       	nop
800089aa:	d7 03       	nop
800089ac:	d7 03       	nop
800089ae:	d7 03       	nop
800089b0:	d7 03       	nop
800089b2:	d7 03       	nop
800089b4:	d7 03       	nop
800089b6:	d7 03       	nop
800089b8:	d7 03       	nop
800089ba:	d7 03       	nop
800089bc:	d7 03       	nop
800089be:	d7 03       	nop
800089c0:	d7 03       	nop
800089c2:	d7 03       	nop
800089c4:	d7 03       	nop
800089c6:	d7 03       	nop
800089c8:	d7 03       	nop
800089ca:	d7 03       	nop
800089cc:	d7 03       	nop
800089ce:	d7 03       	nop
800089d0:	d7 03       	nop
800089d2:	d7 03       	nop
800089d4:	d7 03       	nop
800089d6:	d7 03       	nop
800089d8:	d7 03       	nop
800089da:	d7 03       	nop
800089dc:	d7 03       	nop
800089de:	d7 03       	nop
800089e0:	d7 03       	nop
800089e2:	d7 03       	nop
800089e4:	d7 03       	nop
800089e6:	d7 03       	nop
800089e8:	d7 03       	nop
800089ea:	d7 03       	nop
800089ec:	d7 03       	nop
800089ee:	d7 03       	nop
800089f0:	d7 03       	nop
800089f2:	d7 03       	nop
800089f4:	d7 03       	nop
800089f6:	d7 03       	nop
800089f8:	d7 03       	nop
800089fa:	d7 03       	nop
800089fc:	d7 03       	nop
800089fe:	d7 03       	nop
